// The PayPal SDK is released under the following license:
// 
//     Copyright (c) <2018> PAYPAL, INC.
// 
//     SDK LICENSE
// 
//     NOTICE TO USER:  PayPal, Inc. is providing the Software and Documentation for use under the terms of 
//     this Agreement. Any use, reproduction, modification or distribution of the Software or Documentation, 
//     or any derivatives or portions hereof, constitutes your acceptance of this Agreement.
// 
//     As used in this Agreement, "PayPal" means PayPal, Inc.  "Software" means the software code accompanying
//     this agreement. "Documentation" means the documents, specifications and all other items accompanying 
//     this Agreement other than the Software.   
// 
//     1.  LICENSE GRANT Subject to the terms of this Agreement, PayPal hereby grants you a non-exclusive, 
//     worldwide, royalty free license to use, reproduce, prepare derivative works from, publicly display, 
//     publicly perform, distribute and sublicense the Software for any purpose, provided the copyright notice
//     below appears in a conspicuous location within the source code of the distributed Software and this 
//     license is distributed in the supporting documentation of the Software you distribute. Furthermore, 
//     you must comply with all third party licenses in order to use the third party software contained in the 
//     Software.
// 
//     Subject to the terms of this Agreement, PayPal hereby grants you a non-exclusive, worldwide, royalty free
//     license to use, reproduce, publicly display, publicly perform, distribute and sublicense the Documentation 
//     for any purpose.  You may not modify the Documentation.
// 
//     No title to the intellectual property in the Software or Documentation is transferred to you under the 
//     terms of this Agreement. You do not acquire any rights to the Software or the Documentation except as 
//     expressly set forth in this Agreement.
// 
//     If you choose to distribute the Software in a commercial product, you do so with the understanding that 
//     you agree to defend, indemnify and hold harmless PayPal and its suppliers against any losses, damages and 
//     costs arising from the claims, lawsuits or other legal actions arising out of such distribution.  You may 
//     distribute the Software in object code form under your own license, provided that your license agreement:
// 
//     (a)     complies with the terms and conditions of this license agreement; 
// 
//     (b)     effectively disclaims all warranties and conditions, express or implied, on behalf of PayPal;
// 
//     (c)     effectively excludes all liability for damages on behalf of PayPal;
// 
//     (d)     states that any provisions that differ from this Agreement are offered by you alone and not PayPal; and
// 
//     (e)     states that the Software is available from you or PayPal and informs licensees how to obtain it in a 
//     reasonable manner on or through a medium customarily used for software exchange.  
// 
//     2.  DISCLAIMER OF WARRANTY
//     PAYPAL LICENSES THE SOFTWARE AND DOCUMENTATION TO YOU ONLY ON AN "AS IS" BASIS WITHOUT WARRANTIES OR CONDITIONS 
//     OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY WARRANTIES OR CONDITIONS OF TITLE, 
//     NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  PAYPAL MAKES NO WARRANTY THAT THE 
//     SOFTWARE OR DOCUMENTATION WILL BE ERROR-FREE. Each user of the Software or Documentation is solely responsible 
//     for determining the appropriateness of using and distributing the Software and Documentation and assumes all 
//     risks associated with its exercise of rights under this Agreement, including but not limited to the risks and 
//     costs of program errors, compliance with applicable laws, damage to or loss of data, programs, or equipment, 
//     and unavailability or interruption of operations.  Use of the Software and Documentation is made with the 
//     understanding that PayPal will not provide you with any technical or customer support or maintenance.  Some 
//     states or jurisdictions do not allow the exclusion of implied warranties or limitations on how long an implied 
//     warranty may last, so the above limitations may not apply to you.  To the extent permissible, any implied 
//     warranties are limited to ninety (90) days.
// 
// 
//     3.  LIMITATION OF LIABILITY
//     PAYPAL AND ITS SUPPLIERS SHALL NOT BE LIABLE FOR LOSS OR DAMAGE ARISING OUT OF THIS AGREEMENT OR FROM THE USE 
//     OF THE SOFTWARE OR DOCUMENTATION.  IN NO EVENT WILL PAYPAL OR ITS SUPPLIERS BE LIABLE TO YOU OR ANY THIRD PARTY 
//     FOR ANY DIRECT, INDIRECT, CONSEQUENTIAL, INCIDENTAL, OR SPECIAL DAMAGES INCLUDING LOST PROFITS, LOST SAVINGS, 
//     COSTS, FEES, OR EXPENSES OF ANY KIND ARISING OUT OF ANY PROVISION OF THIS AGREEMENT OR THE USE OR THE INABILITY 
//     TO USE THE SOFTWARE OR DOCUMENTATION, HOWEVER CAUSED AND UNDER ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
//     STRICT LIABILITY OR TORT INCLUDING NEGLIGENCE OR OTHERWISE), EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. 
//     PAYPAL'S AGGREGATE LIABILITY AND THAT OF ITS SUPPLIERS UNDER OR IN CONNECTION WITH THIS AGREEMENT SHALL BE 
//     LIMITED TO THE AMOUNT PAID BY YOU FOR THE SOFTWARE AND DOCUMENTATION. 
// 
//     4.  TRADEMARK USAGE
//     PayPal is a trademark of PayPal, Inc. in the United States and other countries.  Such trademarks may not be used 
//     to endorse or promote any product unless expressly permitted under separate agreement with PayPal.  
// 
// 	5.	CERTIFICATIONS
// 	Please note that if you modify the source code and redistribute these modifications for commercial purposes, you agree and understand you may need to certify or comply with any relevant certification or compliance entities to process payments. 
// 
// 	6.  TERM
//     Your rights under this Agreement shall terminate if you fail to comply with any of the material terms or 
//     conditions of this Agreement and do not cure such failure in a reasonable period of time after becoming 
//     aware of such noncompliance.  If all your rights under this Agreement terminate, you agree to cease use 
//     and distribution of the Software and Documentation as soon as reasonably practicable. 
// 
//     7. GOVERNING LAW AND JURISDICTION. This Agreement is governed by the statutes and laws of the State of 
//     California, without regard to the conflicts of law principles thereof.  If any part of this Agreement is 
//     found void and unenforceable, it will not affect the validity of the balance of the Agreement, which shall 
//     remain valid and enforceable according to its terms.  Any dispute arising out of or related to this Agreement 
//     shall be brought in the courts of Santa Clara County, California, USA.
// 
(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";function _interopRequireWildcard(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _manticore=require("manticore"),_manticore2=_interopRequireDefault(_manticore),_manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_retailSDKUtil=require("../common/retailSDKUtil"),retailSDKUtil=_interopRequireWildcard(_retailSDKUtil),Log=(0,_manticoreLog2.default)("cachedServerFile"),CachedServerFile=function(){function e(t,r){_classCallCheck(this,e),this.url=r,this.fileId=t,this.storageType=retailSDKUtil.StorageType.Secure}return e.prototype.get=function(e){var t=this;this._retrieveCachedFile(function(r,i){var o={url:t.url,format:"json",headers:{}};if(i&&i.headers){var n=i.headers["Last-Modified"],a=i.headers.ETag;n&&(o.headers["If-Modified-Since"]=n),a&&(o.headers["If-None-Match"]=a)}Log.debug(function(){return"GET File "+t.fileId+"\nRequest: "+JSON.stringify(o)}),_manticore2.default.http(o,function(r,o){r||o&&o.statusCode>=300?(Log[o&&304===o.statusCode?"debug":"error"](function(){return"Remote file load did not return new file. statusCode: "+o.statusCode+", "+(r?r.message:"undefined")}),e(null,i?i.body:null)):o.body?_manticore2.default.setItem(t.fileId,t.storageType,JSON.stringify(o),function(){Log.debug(function(){return"Using server version of "+t.fileId}),e(null,o.body)}):(Log.debug(function(){return"Using CACHED version of "+t.fileId}),e(null,i?i.body:null))})})},e.prototype._retrieveCachedFile=function(e){var t=this;_manticore2.default.getItem(this.fileId,this.storageType,function(r,i){r&&(Log.warn("Failed to get cached file with Id "+t.fileId+" from storage Type: '"+t.storageType+"'. Error: "+r),e(r,null));try{e(null,i?JSON.parse(i):null)}catch(t){Log.warn("Unable to parse cached file "+i+" to json. Error : "+t),e(t,null)}})},e}();exports.default=CachedServerFile;

},{"../common/retailSDKUtil":17,"manticore":213,"manticore-log":208}],2:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}var _manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_CachedServerFile=require("./CachedServerFile"),_CachedServerFile2=_interopRequireDefault(_CachedServerFile),FeatureMapJson=require("../../resources/feature-map.json"),Log=(0,_manticoreLog2.default)("features"),Features=function(){function e(){_classCallCheck(this,e),this.map=FeatureMapJson}return e.prototype.loadRemoteFeatureMap=function(){var r=this;new _CachedServerFile2.default(e.FileId,"https://www.paypalobjects.com/webstatic/mobile/retail-sdk/feature-map.json").get(function(e,a){if(e||!a)return void Log.error("Could not retrieve remote feature. Error: "+e);Log.info("Version of local feature map: "+r.map.VERSION+" remote/cached: "+a.VERSION),parseFloat(r.map.VERSION)<parseFloat(a.VERSION)&&(Log.debug("Replacing local feature map with remote"),r.map=a)})},e}();Features.FileId="FeatureMapStoreKey",module.exports=new Features;

},{"../../resources/feature-map.json":373,"./CachedServerFile":1,"manticore-log":208}],3:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}function simpleUrl(e,t,r){return"retail"===t?"https://"+e+".paypal.com/v1/retail/"+r:"auth"===t?"https://"+e+".paypal.com/v1/identity/openidconnect/"+r:"payments"===t?"https://"+e+".paypal.com/v1/payments/"+r:"activities"===t?"https://"+e+".paypal.com/v1/activities/"+r:"devices"===t?"https://"+e+".paypal.com/v2/devices/"+r:null}exports.__esModule=!0;var _createClass=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),_manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_paypalrestManticore=require("paypalrest-manticore"),_paypalInvoicing=require("paypal-invoicing"),_retailPageTracker=require("retail-page-tracker"),_events=require("events"),_async=require("async"),_async2=_interopRequireDefault(_async),_sdkErrors=require("./sdkErrors"),_Features=require("./Features"),_Features2=_interopRequireDefault(_Features),Log=(0,_manticoreLog2.default)("merchant"),BN=require("bignumber.js"),$$=function(e){return void 0===e||null===e?null:new BN(e)},Merchant=function(e){function t(r){_classCallCheck(this,t);var n=_possibleConstructorReturn(this,e.call(this));return n.api=null,n.userInfo={},n.status={},n.cbs=[],n.environment="live",r&&(n._validateAndSetCompositeToken(r),n._buildObjectWithData(r)),n}return _inherits(t,e),t.prototype.initialize=function(e,t,r){return this._setToken(e,t),this._fetchMerchantInfo(r),!0},t.prototype._validateAndSetCompositeToken=function(e){if(e&&e.compositeToken&&e.compositeToken.length>0&&e.repository)return void this._setToken(e.compositeToken,e.repository);throw _sdkErrors.merchant.invalidToken},t.prototype._makeInvoiceResolver=function(e){var r=this,n=e.env;return function(e,i){return i.headers=i.headers||{},i.headers["X-PAYPAL-REQUEST-SOURCE"]="MPA-DEVICE",t.apiUserAgent&&(i.headers["User-Agent"]=t.apiUserAgent),r.referrerCode&&(i.headers["PayPal-Partner-Attribution-Id"]=r.referrerCode),"live"===n?"https://api.paypal.com/v1/invoicing/"+i.op:"sandbox"===n?"https://api.sandbox.paypal.com/v1/invoicing/"+i.op:"https://api."+n+".stage.paypal.com:12326/v1/invoicing/"+i.op}},t._resolver=function(e,r){var n=e.env,i=r.service,a=r.op;if(r.headers=r.headers||{},t.apiUserAgent&&(r.headers["User-Agent"]=t.apiUserAgent),!n||"live"===n)return simpleUrl("api",i,a);if(0===n.indexOf("stage2")){if("retail"===i)return"https://www."+n+".stage.paypal.com:12326/v1/retail/"+a;if("auth"===i)return"https://www."+n+".stage.paypal.com/webapps/auth/protocol/openidconnect/v1/"+a;if("payments"===i)return"https://api."+n+".stage.paypal.com:12326/v1/payments/"+a;if("activities"===i)return"https://api."+n+".stage.paypal.com:12326/v1/activities/"+a;if("devices"===i)return"https://api."+n+".stage.paypal.com:12326/v2/devices/"+a}else if("sandbox"===n)return simpleUrl("api.sandbox",i,a);return null},t.prototype._setToken=function(e,r){var n=this;require("paypal-invoicing").InvoicingRequester.api=this.api=_paypalrestManticore.PayPalREST.fromToken(e),this.environment=this.api.env,this.repository=r,this.api.addResolver("retail",t._resolver),this.api.addResolver("auth",t._resolver),this.api.addResolver("invoicing",this._makeInvoiceResolver(this.api)),this.api.addResolver("payments",t._resolver),this.api.addResolver("activities",t._resolver),this.api.addResolver("devices",t._resolver),this.api.app&&Log.warn("Using debug-only SDK token with embedded app secret. DO NOT USE IN LIVE APPS."),Log.debug(function(){return"Set environment: '"+n.environment+"' repository: '"+n.repository+"' at: '"+n.api.at+"'"})},t.prototype._fetchMerchantInfo=function(e){var t=this;_async2.default.parallel([this._loadMerchantUserInfo.bind(this),this._loadMerchantStatus.bind(this)],function(r){t._merchantInitialized(r,e)})},t.prototype._loadMerchantUserInfo=function(e){var t=this;Log.debug("Loading merchant user info..."),this.api.request({service:"auth",op:"userinfo?schema=openid",format:"json"},function(r,n){return r&&400===r.code&&!t._retriedUserInfo?(t._retriedUserInfo=!0,void t.api.refresh(function(r){if(r)return void e(r,t);t._loadMerchantUserInfo(e)})):(delete t._retriedUserInfo,t.userInfo=n?n.body:null,r?void e(r,t):t.userInfo?t._validateUserInfo(t.userInfo)?(_paypalInvoicing.Invoice.DefaultMerchant={emailAddress:t.emailAddress,businessName:t.businessName,address:t.address},Log.info("Successfully loaded merchant user info!"),Log.debug(function(){return"Merchant Info: \n"+JSON.stringify(n.body,null,4)}),Log.debug(function(){return"DefaultMerchant : \n"+JSON.stringify(_paypalInvoicing.Invoice.DefaultMerchant,null,4)}),void e(r,t)):(Log.error("Failed to load required merchant information like address, country code, email or name. May be the scope used to generate token was not right?"),void e(_sdkErrors.merchant.requiredInfoNotLoaded,null)):(Log.error("Failed to load merchant information. Empty response."),void e(_sdkErrors.merchant.failedToLoad,null)))})},t.prototype._loadMerchantStatus=function(e){var t=this;Log.debug("Loading merchant status..."),this.api.request({service:"retail",op:"status",format:"json"},function(r,n){if(r)return void e(r,t);var i=n.body;if(!t._validateStatus(i))return Log.error("Failed to load required merchant status information like currency code, status, payment types."),void e(_sdkErrors.merchant.requiredInfoNotLoaded,null);t.status=i,_paypalInvoicing.Invoice.DefaultCurrency=t.currency,Log.debug(function(){return"Successfully loaded merchant status "+JSON.stringify(i,null,4)}),e(r,t)})},t.prototype._validateUserInfo=function(e){return e&&e.address&&e.address.country&&e.email&&e.name},t.prototype._validateStatus=function(e){return e&&e.status&&e.currencyCode&&e.businessCategoryExists&&e.paymentTypes},t.prototype._buildObjectWithData=function(e){if(Log.debug("Building the merchant object"),!e)throw _sdkErrors.merchant.merchantDataNotProvided;if(!this._validateUserInfo(e.userInfo))throw _sdkErrors.merchant.merchantUserInfoNotProvided;if(!this._validateStatus(e.status))throw _sdkErrors.merchant.merchantStatusNotProvided;this.userInfo=e.userInfo,this.status=e.status,_paypalInvoicing.Invoice.DefaultMerchant={emailAddress:this.emailAddress,businessName:this.businessName,address:this.address},_paypalInvoicing.Invoice.DefaultCurrency=this.currency,Log.debug(function(){return"Successfully created Default merchant : \n"+JSON.stringify(_paypalInvoicing.Invoice.DefaultMerchant,null,4)}),this._merchantInitialized()},t.prototype._merchantInitialized=function(e,r){e?Log.error("Merchant initialize failed: "+e):t.active=this,t.events.emit("initialized",e),r&&r(e,this)},t.prototype.request=function(e,t){return this.api.request(e,t)},t.prototype.forwardReceipt=function(e,r,n,i,a,o,s){Log.debug(function(){return"Inside Forward Receipt"});var u={invoiceId:e.payPalId,transactionType:i};r.indexOf("@")>0?(u.email=r,_retailPageTracker.Tracker.publishPageView(null,_retailPageTracker.pages.paymentReceiptEmail)):(u.phoneNumber=r,_retailPageTracker.Tracker.publishPageView(null,_retailPageTracker.pages.paymentReceiptSms)),u.customerId=a,u.receiptPreferenceToken=o;var c=void 0;c=n?"checkouts/"+n+"/sendReceipt":"checkouts/sendReceipt",Log.debug(function(){return"SendReceipt op: "+c+"\n"+JSON.stringify(u)}),t.active.request({service:"retail",op:c,format:"json",method:"POST",debug:!0,headers:{"Content-Type":"application/json"},body:JSON.stringify(u)},s)},_createClass(t,[{key:"signatureRequiredAbove",get:function(){return $$(this._signatureRequiredAbove)||$$(this.cardSettings.signatureRequiredAbove)||$$(0)},set:function(e){this._signatureRequiredAbove=e}},{key:"featureMap",get:function(){return _Features2.default.map[this.country]}},{key:"emailAddress",get:function(){return this.userInfo?this.userInfo.email:null}},{key:"businessName",get:function(){return this.userInfo?this.userInfo.businessName||this.userInfo.name:null}},{key:"currency",get:function(){return this.status.currencyCode}},{key:"country",get:function(){return this.address.country}},{key:"cardSettings",get:function(){var e=this.status.cardSettings;if("string"==typeof e||e instanceof String){return JSON.parse(e)}return e}},{key:"address",get:function(){if(this._address)return this._address;var e=this.userInfo,t=this._address=new _paypalInvoicing.InvoiceAddress;return e&&e.address&&(e=e.address,t.country=e.country,t.postalCode=e.postal_code,t.city=e.locality,t.line1=e.street_address,t.state=e.region),t}}]),t}(_events.EventEmitter);exports.default=Merchant,Merchant.events=new _events.EventEmitter;

},{"./Features":2,"./sdkErrors":18,"async":92,"bignumber.js":95,"events":200,"manticore-log":208,"paypal-invoicing":279,"paypalrest-manticore":317,"retail-page-tracker":324}],4:[function(require,module,exports){
"use strict";function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var NetworkRequest=function(){function t(e){_classCallCheck(this,t),this.callback=e}return t.prototype.continueWithResponse=function(t,e,s){this.callback(t,e,s)},t}();exports.default=NetworkRequest;

},{}],5:[function(require,module,exports){
"use strict";function _classCallCheck(s,e){if(!(s instanceof e))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var NetworkResponse=function s(){_classCallCheck(this,s)};exports.default=NetworkResponse;

},{}],6:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function setNetworkHandler(e){var r=_manticore2.default.http;_manticore2.default.http=function(t,o){var n=new _NetworkRequest2.default(function(e,n,u){if(!n)return void r(t,o);if(Log.debug(function(){return"Request "+t.url+" was handled by custom handler"}),"json"===u.format)try{u.body=JSON.parse(u.body)}catch(e){throw Log.error("Error parsing provided JSON body "+u.body+"\n"+e),e}o(e,u)});n.url=t.url,n.method=t.method,n.headers=t.headers,n.body=t.body;try{e(n)}catch(e){Log.error("Error invoking custom network interceptor... Will fallback to default\n"+e),r(t,o)}}}exports.__esModule=!0,exports.default=setNetworkHandler;var _manticore=require("manticore"),_manticore2=_interopRequireDefault(_manticore),_manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_NetworkRequest=require("./NetworkRequest"),_NetworkRequest2=_interopRequireDefault(_NetworkRequest),Log=(0,_manticoreLog2.default)("NetworkInterceptor");

},{"./NetworkRequest":4,"manticore":213,"manticore-log":208}],7:[function(require,module,exports){
"use strict";function _interopRequireDefault(t){return t&&t.__esModule?t:{default:t}}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function _inherits(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}exports.__esModule=!0,exports.RetailInvoicePayment=exports.RetailInvoice=void 0;var _paypalInvoicing=require("paypal-invoicing"),_manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),Log=(0,_manticoreLog2.default)("retail.invoice"),RetailInvoice=exports.RetailInvoice=function(t){function e(r){return _classCallCheck(this,e),_possibleConstructorReturn(this,t.call(this,r))}return _inherits(e,t),e.prototype.toJSON=function(){var e=t.prototype.toJSON.call(this);return this._buildAdditionalDataObject(e),e},e.prototype.readJSON=function(e,r){t.prototype.readJSON.call(this,e,r),this._parseJSONResponse(e)},e.prototype._buildAdditionalDataObject=function(t){var e={};if(t.additional_data)try{e=JSON.parse(t.additional_data)}catch(t){return void Log.warn('Error parsing JSON for "additional data object".. ')}e.dname=this.deviceName,e.footer=e.footer||{},e.footer.customText=this.footer||e.footer.customText,e.merchant=e.merchant||{},e.merchant.sellerId=this.sellerId||e.merchant.sellerId,e.merchant.storeId=this.storeId||e.merchant.storeId,e.merchant.terminalId=this.terminalId||e.merchant.terminalId,t.additional_data=JSON.stringify(e)},e.prototype._parseJSONResponse=function(t){var e=void 0;if(t.additional_data){try{e=JSON.parse(t.additional_data)}catch(t){return void Log.warn('Error parsing JSON for "additional data object" from server.. ')}this.deviceName=e.dname,e.footer&&(this.footer=e.footer.customText),e.merchant&&(e.merchant.seller&&(this.sellerId=e.merchant.seller.sellerId),this.terminalId=e.merchant.terminalId,this.storeId=e.merchant.storeId)}},e}(_paypalInvoicing.Invoice),RetailInvoicePayment=exports.RetailInvoicePayment=function(t){function e(){return _classCallCheck(this,e),_possibleConstructorReturn(this,t.apply(this,arguments))}return _inherits(e,t),e}(_paypalInvoicing.InvoicePayment);

},{"manticore-log":208,"paypal-invoicing":279}],8:[function(require,module,exports){
"use strict";function _classCallCheck(t,n){if(!(t instanceof n))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var SdkEnvironmentInfo=exports.SdkEnvironmentInfo=function(){function t(){_classCallCheck(this,t)}return t.prototype.toString=function(){return JSON.stringify(this.toJSON())},t.prototype.toJSON=function(){return{merchantId:this.merchantId,os:"v"+this.osName+"-"+this.osVersion,app:this.appName+"_v"+this.appVersion+"-"+this.appBuild}},t}();

},{}],9:[function(require,module,exports){
"use strict";function _interopRequireDefault(n){return n&&n.__esModule?n:{default:n}}function _classCallCheck(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),Log=(0,_manticoreLog2.default)("tokenExpiration.handler"),TokenExpirationHandler=function(){function n(t){_classCallCheck(this,n),this._cb=t}return n.prototype.quit=function(){Log.debug("Quitting current action"),this._cb(n.action.end)},n.prototype.continueWithNewToken=function(t){Log.debug(function(){return"Continuing transaction with "+t}),this._cb(n.action.resume,t)},n}();exports.default=TokenExpirationHandler,TokenExpirationHandler.action={end:0,resume:1};

},{"manticore-log":208}],10:[function(require,module,exports){
"use strict";function _interopRequireWildcard(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o]);return t.default=e,t}function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function generateGroupId(){return Date.now()+"-"+Math.random()}function saveLogStore(e){if(savingLogStore)return void overlappedSaves.push(e);_manticore2.default.setItem(CAL_LOG_STORE_KEY,retailSDKUtil.StorageType.SecureBlob,JSON.stringify(queueDetails),function(t){if(savingLogStore=!1,overlappedSaves.length){var o=overlappedSaves;overlappedSaves=[],saveLogStore(function(e){for(var t=o,n=Array.isArray(t),a=0,t=n?t:t[Symbol.iterator]();;){var r;if(n){if(a>=t.length)break;r=t[a++]}else{if(a=t.next(),a.done)break;r=a.value}var i=r;i&&i(e)}})}e&&e(t)})}function setDefaultCalLogData(e,t){if(e.actionId||(e.actionId="message"),!e.status)switch(t.toLowerCase()){case"debug":case"info":e.status=CAL_LOG_SUCCESS;break;case"error":case"warn":default:e.status=CAL_LOG_FAIL}messageRunCounter+=1,queueDetails.msgCounter+=1,e.msgId=queueDetails.runCounter+"."+queueDetails.msgCounter+"."+messageRunCounter}function buildCalConfigMapping(e){for(var t=e.name.split("."),o=RootCalConfig,n=RootCalConfig,a=0;a<t.length;a++)o.children[t[a]]||(o.children[t[a]]={children:{},parent:n}),o=o.children[t[a]],n=o;e.calConfig=o}function addCalEvent(e){var t=function(){return MAX_CAL_EVENT_LENGTH<=queueDetails.events.length};for(t()&&Log.warn("CAL log overflow. Max messages: "+MAX_CAL_EVENT_LENGTH);t();)queueDetails.events.shift(),queueDetails.saving&&(queueDetails.saving-=1);queueDetails.events.push(e),saveLogStore()}function calLog(e,t,o,n){if("cal"!==t.name&&(t.calConfig||buildCalConfigMapping(t),!(_manticoreLog2.default.Ranks[e]<_manticoreLog2.default.levelFor(t.calConfig)))){n||(n={actionId:"Message"}),setDefaultCalLogData(n,e,o);var a={status:n.status,type:"BIZ",name:n.actionId+".CLIENT"};n.result=n.status,delete n.status,n.details="function"==typeof o?o().toString():o.toString(),n.logGroup=logGroup,n.invoiceId=logInvoiceId,n.component=t&&t.name,a.data=(0,_stringify2.default)(n,{encode:!1}),_manticore2.default.setTimeout(function(){return addCalEvent(a)},0)}}function removePostedLogs(e){queueDetails.events.splice(0,queueDetails.saving),Log.debug(function(){return"Removed "+queueDetails.saving+" posted logs. New queue size: "+queueDetails.events.length}),queueDetails.saving=0,saveLogStore(e)}function doHttpPost(e,t){var o=require("../common/Merchant").default,n=queueDetails.saving;o.active?o.active.request({service:"retail",op:"secure-terminal-config/cal",method:"POST",headers:{"X-PAYPAL-REQUEST-SOURCE":requestSource,"Content-Type":"application/json"},body:e},function(e,o){!e&&o&&200===o.statusCode?removePostedLogs(function(e){t&&t(e,n)}):(queueDetails.saving=0,t&&t(e))}):t&&t(new Error("No merchant available, cannot post CAL logs"))}function attach(e){_manticore2.default.getItem(CAL_LOG_STORE_KEY,retailSDKUtil.StorageType.Secure,function(t,o){t&&Log.error("Failed to get persisted CAL queue "+t.message),o?(queueDetails=JSON.parse(o),queueDetails.runCounter+=1):queueDetails={events:[],saving:0,runCounter:1,msgCounter:0},_manticoreLog2.default.addLogger(calLog),e(t)})}function configure(e){_manticoreLog2.default.configure(e,RootCalConfig)}function detach(e){saveLogStore(function(t){_manticoreLog2.default.removeLogger(calLog),e&&e(t)})}function flush(e){if(queueDetails.saving)return void(e&&e(new Error("Save already in progress.")));if(queueDetails.events.length){var t=queueDetails.events.slice(0,MAX_HTTP_CAL_LENGTH),o=JSON.stringify({events:t});queueDetails.saving=t.length,Log.debug(function(){return"Flushing "+queueDetails.saving+" logs to CAL server."}),doHttpPost(o,e)}else e&&e(null,0)}function newGroup(e){return logGroup=e||generateGroupId(),logInvoiceId="",Log.debug(function(){return"Set group Id to "+logGroup}),logGroup}function setInvoiceId(e){logInvoiceId=e}function setRequestSourceId(e){e&&(requestSource="RetailSDK."+e.substr(0,150))}exports.__esModule=!0,exports.attach=attach,exports.configure=configure,exports.detach=detach,exports.flush=flush,exports.newGroup=newGroup,exports.setInvoiceId=setInvoiceId,exports.setRequestSourceId=setRequestSourceId;var _manticore=require("manticore"),_manticore2=_interopRequireDefault(_manticore),_manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_stringify=require("qs/lib/stringify"),_stringify2=_interopRequireDefault(_stringify),_retailSDKUtil=require("../common/retailSDKUtil"),retailSDKUtil=_interopRequireWildcard(_retailSDKUtil),Log=(0,_manticoreLog2.default)("cal"),MAX_CAL_EVENT_LENGTH=50,MAX_HTTP_CAL_LENGTH=20,CAL_LOG_SUCCESS=0,CAL_LOG_FAIL=-1,CAL_LOG_STORE_KEY="CalLogStore",RootCalConfig={level:"INFO",children:{}},queueDetails=void 0,logGroup=generateGroupId(),logInvoiceId="",requestSource="RetailSDK",savingLogStore=!1,overlappedSaves=[],messageRunCounter=0;

},{"../common/Merchant":3,"../common/retailSDKUtil":17,"manticore":213,"manticore-log":208,"qs/lib/stringify":322}],11:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}exports.__esModule=!0;var _createClass=function(){function e(e,t){for(var o=0;o<t.length;o++){var r=t[o];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,o,r){return o&&e(t.prototype,o),r&&e(t,r),t}}(),_manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_events=require("events"),Log=(0,_manticoreLog2.default)("flow"),FACADE=Symbol("flow"),FlowFacade=function(e){function t(o){_classCallCheck(this,t);var r=_possibleConstructorReturn(this,e.call(this));return r.active=!0,r.flow=o,r}return _inherits(t,e),t.prototype._prepareForChange=function(e){var o=this.flow;e||o.previousSteps.push(o.stepIndex),o[FACADE]&&(o[FACADE].active=!1),o[FACADE]=new t(o)},t.prototype._check=function(){return!!this.active||(Log.error("Flow step completion function called by inactive step "+this.stepName+"!"),this.flow.emit("flowError",new Error("Flow step completion function called by inactive step!")),!1)},t.prototype._executeStep=function(e){var t=this,o=e<this.flow.stepIndex?"regressing":"advancing";this.flow.stepIndex=e;var r=this.flow.steps[e];Log.debug(function(){return"Flow "+o+" to "+t.stepName});try{r.call(this.flow.owner,this.flow[FACADE])}catch(e){Log.error(this.stepName+" execution returned an error: "+e),this.flow[FACADE].abortFlow(e)}},t.prototype.next=function(){if(!this._check())return void Log.debug("Flow::next called out of turn!");var e=this.flow;if(e.stepIndex+1>=e.steps.length)return void this.completeFlow();e.emit("next",e.stepIndex),this._prepareForChange(),this._executeStep(e.stepIndex+1)},t.prototype.back=function(){if(!this._check())return void Log.debug("Flow::back called out of turn!");var e=this.flow;if(0===e.previousSteps.length)return void this.abortFlow();e.emit("back",e.steps[e.stepIndex],e.steps[e.stepIndex-1]),this._prepareForChange(!0),this._executeStep(e.previousSteps.pop())},t.prototype.completeFlow=function(){var e=this;if(!this._check())return void Log.debug("Flow::complete called out of turn!");Log.debug(function(){return(e.flow.name||"Anonymous")+" Flow completed."});var t=this.flow;this._prepareForChange(),t.stepIndex=null,t[FACADE]=null,t.emit("completed",t.data),t.emit("ended",t.data)},t.prototype.abortFlow=function(e){if(!this._check())return void Log.debug("Flow::abortFlow called out of order!");Log.debug((this.flow.name||"Anonymous")+" Flow aborted");var t=this.flow;e&&(t.data.error=e),t[FACADE].emit("aborted"),this._prepareForChange(),t.stepIndex=null,t[FACADE]=null,t.emit("aborted",t.data),t.emit("ended",t.data)},t.prototype.nextOrAbort=function(e){e?this.abortFlow(e):this.next()},_createClass(t,[{key:"stepName",get:function(){var e=this.flow.steps[this.flow.stepIndex];return e?e.fnName||e.name:void 0}},{key:"data",get:function(){return this.flow.data}},{key:"stepIndex",get:function(){return this.flow.stepIndex}},{key:"previousSteps",get:function(){return this.flow.previousSteps}}]),t}(_events.EventEmitter),Flow=function(e){function t(o,r){_classCallCheck(this,t);var n=_possibleConstructorReturn(this,e.call(this));return n.owner=o,Array.isArray(r)?n.steps=r:n.steps=Array.prototype.slice.call(arguments,1),n.data={},n[FACADE]=null,n.stepIndex=0,n.previousSteps=[],n}return _inherits(t,e),t.prototype.start=function(){return this[FACADE]=new FlowFacade(this),this[FACADE]._executeStep(0),this},t.prototype.abortFlow=function(e){if(!this[FACADE])return void Log.error("Abort called on an inactive flow!");this[FACADE].abortFlow(e)},t}(_events.EventEmitter);exports.default=Flow;

},{"events":200,"manticore-log":208}],12:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}exports.__esModule=!0;var _createClass=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),_manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_events=require("events"),Log=(0,_manticoreLog2.default)("flowAsync"),FACADE=Symbol("flowAsync"),FlowFacadeAsync=function(e){function t(r){_classCallCheck(this,t);var n=_possibleConstructorReturn(this,e.call(this));return n.active=!0,n.flow=r,n}return _inherits(t,e),t.prototype.toJSON=function(){return{stepName:this.stepName,active:this.active,flow:this.flow}},t.prototype._prepareForChange=function(e){var r;return regeneratorRuntime.async(function(n){for(;;)switch(n.prev=n.next){case 0:r=this.flow,e||r.previousSteps.push(r.stepIndex),r[FACADE]&&(r[FACADE].active=!1),r[FACADE]=new t(r);case 4:case"end":return n.stop()}},null,this)},t.prototype._check=function(){return!!this.active||(Log.error("Flow step completion function called by inactive step "+this.stepName+"!"),this.flow.emit("flowError",new Error("Flow step completion function called by inactive step!")),!1)},t.prototype._executeStep=function(e){var t,r,n=this;return regeneratorRuntime.async(function(o){for(;;)switch(o.prev=o.next){case 0:return t=e<this.flow.stepIndex?"regressing":"advancing",this.flow.stepIndex=e,r=this.flow.steps[e],Log.debug(function(){return"Flow "+t+" to "+n.stepName}),o.prev=4,o.next=7,regeneratorRuntime.awrap(r.call(this.flow.owner,this.flow[FACADE]));case 7:o.next=14;break;case 9:return o.prev=9,o.t0=o.catch(4),Log.error(this.stepName+" execution returned an error: "+o.t0),o.next=14,regeneratorRuntime.awrap(this.flow[FACADE].abortFlow(o.t0));case 14:case"end":return o.stop()}},null,this,[[4,9]])},t.prototype.next=function(){var e;return regeneratorRuntime.async(function(t){for(;;)switch(t.prev=t.next){case 0:if(this._check()){t.next=3;break}return Log.debug(function(){return"Flow::next called out of turn!"}),t.abrupt("return");case 3:if(e=this.flow,!(e.stepIndex+1>=e.steps.length)){t.next=8;break}return t.next=7,regeneratorRuntime.awrap(this.completeFlow());case 7:return t.abrupt("return");case 8:return e.emit("next",e.stepIndex),t.next=11,regeneratorRuntime.awrap(this._prepareForChange());case 11:return t.next=13,regeneratorRuntime.awrap(this._executeStep(e.stepIndex+1));case 13:case"end":return t.stop()}},null,this)},t.prototype.back=function(){var e;return regeneratorRuntime.async(function(t){for(;;)switch(t.prev=t.next){case 0:if(this._check()){t.next=3;break}return Log.debug(function(){return"Flow::back called out of turn!"}),t.abrupt("return");case 3:if(e=this.flow,0!==e.previousSteps.length){t.next=8;break}return t.next=7,regeneratorRuntime.awrap(this.abortFlow());case 7:return t.abrupt("return");case 8:return e.emit("back",e.steps[e.stepIndex],e.steps[e.stepIndex-1]),t.next=11,regeneratorRuntime.awrap(this._prepareForChange(!0));case 11:return t.next=13,regeneratorRuntime.awrap(this._executeStep(e.previousSteps.pop()));case 13:case"end":return t.stop()}},null,this)},t.prototype.completeFlow=function(){var e,t=this;return regeneratorRuntime.async(function(r){for(;;)switch(r.prev=r.next){case 0:if(this._check()){r.next=3;break}return Log.debug(function(){return"Flow::complete called out of turn!"}),r.abrupt("return");case 3:return Log.debug(function(){return(t.flow.name||"Anonymous")+" Flow completed."}),e=this.flow,r.next=7,regeneratorRuntime.awrap(this._prepareForChange());case 7:e.stepIndex=null,e[FACADE]=null,e.emit("completed",e.data),e.emit("ended",e.data);case 11:case"end":return r.stop()}},null,this)},t.prototype.abortFlow=function(e){var t,r=this;return regeneratorRuntime.async(function(n){for(;;)switch(n.prev=n.next){case 0:if(this._check()){n.next=3;break}return Log.debug(function(){return"Flow::abortFlow called out of order!"}),n.abrupt("return");case 3:return Log.debug(function(){return(r.flow.name||"Anonymous")+" Flow aborted"}),t=this.flow,e&&(t.data.error=e),t[FACADE].emit("aborted"),n.next=9,regeneratorRuntime.awrap(this._prepareForChange());case 9:t.stepIndex=null,t[FACADE]=null,t.emit("aborted",t.data),t.emit("ended",t.data);case 13:case"end":return n.stop()}},null,this)},t.prototype.nextOrAbort=function(e){return regeneratorRuntime.async(function(t){for(;;)switch(t.prev=t.next){case 0:if(!e){t.next=5;break}return t.next=3,regeneratorRuntime.awrap(this.abortFlow(e));case 3:t.next=7;break;case 5:return t.next=7,regeneratorRuntime.awrap(this.next());case 7:case"end":return t.stop()}},null,this)},_createClass(t,[{key:"stepName",get:function(){var e=this.flow.steps[this.flow.stepIndex];return e?e.fnName||e.name:void 0}},{key:"data",get:function(){return this.flow.data}},{key:"stepIndex",get:function(){return this.flow.stepIndex}},{key:"previousSteps",get:function(){return this.flow.previousSteps}}]),t}(_events.EventEmitter),FlowAsync=function(e){function t(r,n){_classCallCheck(this,t);var o=_possibleConstructorReturn(this,e.call(this));return o.owner=r,Array.isArray(n)?o.steps=n:o.steps=Array.prototype.slice.call(arguments,1),o.data={},o[FACADE]=null,o.stepIndex=0,o.previousSteps=[],o}return _inherits(t,e),t.prototype.toJSON=function(){return{data:this.data,stepIndex:this.stepIndex,previousSteps:this.previousSteps}},t.prototype.start=function(){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return this[FACADE]=new FlowFacadeAsync(this),e.next=3,regeneratorRuntime.awrap(this[FACADE]._executeStep(0));case 3:return e.abrupt("return",this);case 4:case"end":return e.stop()}},null,this)},t.prototype.abortFlow=function(e){return regeneratorRuntime.async(function(t){for(;;)switch(t.prev=t.next){case 0:if(this[FACADE]){t.next=3;break}return Log.error("Abort called on an inactive flow!"),t.abrupt("return");case 3:return t.next=5,regeneratorRuntime.awrap(this[FACADE].abortFlow(e));case 5:case"end":return t.stop()}},null,this)},_createClass(t,[{key:"stepName",get:function(){return this[FACADE].stepName}}]),t}(_events.EventEmitter);exports.default=FlowAsync;

},{"events":200,"manticore-log":208}],13:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}exports.__esModule=!0;var _en=require("./localized/en"),_en2=_interopRequireDefault(_en),_jp=require("./localized/jp"),_jp2=_interopRequireDefault(_jp);exports.default=require("l10n-manticore")({en:_en2.default,jp:_jp2.default});

},{"./localized/en":14,"./localized/jp":15,"l10n-manticore":204}],14:[function(require,module,exports){
"use strict";module.exports={Done:"Done",Cancel:"Cancel",Ok:"OK",Yes:"Yes",No:"No",Error:"Oops!",RemoveCard:"\nPlease remove card.",Sig:{Title:"Charge ${amount} to ${cardIssuer} *${lastFour}",Here:"Sign Here",Footer:"I agree to pay the amount above according to the terms applicable to my card."},Rcpt:{Title:"${amount}",Prompt:"Would you like a receipt?",EmailButtonTitle:"Email",SMSButtonTitle:"Text",NoThanksButtonTitle:"No Thanks",Sending:"Sending Receipt...",Disclaimer:"Receipts will be delivered by PayPal. See your receipt for PayPal's Privacy Policy",Email:{Title:"EMAIL RECEIPT",Placeholder:"me@somewhere.com",Disclaimer:"By entering my email, I agree to receive emails for all future PayPal Here transactions.",SendButtonTitle:"Send"},SMS:{Title:"TEXT RECEIPT",Placeholder:"+14085551212",Disclaimer:"You agree that you're authorized to add this phone number and consent to receiving automated texts. Message and data rates may apply. Receipts will be delivered by PayPal. See your receipt for PayPal's Privacy Policy.",SendButtonTitle:"Send"}},Tx:{Alert:{Ready:{Title:"Ready",Msg:"Tap, Insert or Swipe a card when ready."},EnterPin:{Title:"${amount}",Message:"Please enter the PIN on the card reader keypad"},IncorrectPin:{Title:"Incorrect PIN",Message:"The PIN is incorrect. Please try again."},ReadyForInsertOrSwipeOnly:{Title:"Ready",Msg:"Insert or swipe a card when ready."},ReadyForSwipeOnly:{Title:"Please Swipe Card",Msg:"Swipe the card at the top of the reader"},ReadyForInsertOnly:{Title:"Ready",Msg:"Insert a card when ready."},Cancelled:{Title:"Cancelled",Msg:"Transaction Cancelled"},Cancel:{Title:"Cancel",Msg:"Would you like to cancel this transaction?"},TimeOut:{Title:"Transaction Timed Out",Msg:"Transaction was not completed.",Button:"Cancel transaction"},NfcNotAllowed:{Title:"Insert or swipe card",Msg:"Card provider requires that you insert or swipe card."},NfcFallback:{Title:"Unable to Read Card",Msg:"Insert or swipe card now, or try a different card."},NfcPaymentDeclined:{Title:"Contactless Transaction Declined",Msg:"Do you want to try again by inserting the card?"},InsertOrSwipe:{Title:"Insert or Swipe Card",Msg:"Card issuer requires\nthat you insert or swipe card",Button:"Cancel transaction"},IncorrectOnlinePin:{Title:"Incorrect PIN",Msg:"The PIN entered was incorrect. Please try again."},GenericError:{Title:"Transaction cancelled",PaymentMessage:"Unable to process payment",RefundMessage:"Unable to process refund"},TapDifferentCard:{Title:"Unable to read card",Msg:"Please insert or swipe card now, or press OK and tap a different card"},BlockedCard:{Title:"Declined",Msg:"Contact the card issuer for more information"},BlockedCardTapped:{Title:"Declined",Msg:"Please contact the card issuer for more information"},BlockedCardSwiped:{Title:"Declined",Msg:"Please contact the card issuer for more information"},ChipCardSwiped:{Title:"Chip card detected",Msg:"Please insert card"},UnsuccessfulInsert:{Title:"Unable to read card",Msg:"Please try again. Firmly insert the card, chip first, into the bottom of the reader"},AmountTooLow:{Title:"Amount Too Low",Msg:"The minimum amount for card payments is ${amount}. Please enter a new amount or choose a different payment method."},AmountTooHigh:{Title:"Amount Too High",Msg:"The maximum amount for card payments is ${amount}. Please enter a new amount or choose a different payment method."},Refund:{Title:"Refund type",Msg:"Please select a type",Buttons:{WithCard:"Refund With Card",WithoutCard:"Refund Without Card"},CardMismatch:{Title:"Card Mismatch",Msg:"Card presented for refund is not the one used for the original payment"}},MultipleContactlessCardsDetected:{Title:"Please present only one card",Msg:"Multiple Contactless Cards Detected"},LowBattery:{Title:"Battery Low",Msg:"Please recharge your card reader"}},Retry:"Try again?",CancelledByUser:"Payment Cancelled",TransactionFailed:"Payment Declined",TransactionSuccessful:"Payment Successful",RefundSuccessful:"Refund Complete",RefundFailed:"Refund Failed",CaptureFailed:"Capture Failed",RetrieveListOfAuthTxnsFailed:"Failed retrieving authorized transactions"},SwUpgrade:{Required:{Title:"Update Required",Msg:"Your card reader must be updated before you can process transactions."},Optional:{Title:"Update available",Msg:"An update is available for your card reader."},Buttons:{Ok:"OK",UpdateNow:"Update Now",NotNow:"Not Now",Retry:"Try again"},Failed:{Title:"Software Update Failed",Msg:"Sorry, the update could not be completed.",BatteryLow:"Please recharge the card reader."},Updating:{Title:"Updating Reader",Msg:"\nPlease do not close the app or disconnect the reader"},Success:{Title:"Update Successful",Msg:"Your card reader is ready.\nYou can now accept card payments."},Downloading:"Downloading ${count}/${total}",Initializing:"Initializing card reader...\nPlease do not close the app or disconnect the reader",ValidatingSecurityKeys:"Validating security keys...\nPlease do not close the app or disconnect the reader",SecurityKeysInstalled:"Security keys installed.",UpdatingWithDetails:"Updating ${stage} ${progress}%\nPlease do not close the app or disconnect the reader",Restarting:"Restarting card reader...\nPlease do not close the app",Reconnecting:"Reconnecting to card reader...\nPlease do not close the app",RestartInstruction:{Title:"Start Reader",Msg:"Please start the reader to proceed with the update"},Connected:"Connected",Usb:{UsbUnplug:"Please unplug your USB reader and press OK",UsbWait:"Please wait before plugging in your USB reader.",UsbPlug:"Please reconnect your USB reader."}},EMV:{Tip:{Title:"Waiting for customer input...",Buttons:{NoTip:"No Tip"}},Processing:"Processing...",ProcessingPinOk:"Processing... PIN OK",PinOk:"PIN OK",ProcessingRefund:"Processing Refund...",Cancelling:"Cancelling...",Finalize:"Completing Payment...",DoNotRemove:"Do not remove card.",Remove:"Please remove card.",Complete:"${amount} paid",RefundComplete:"${amount} refunded",Select:"Choose an application:"},MultiCard:{Title:"Select a device",Msg:"Please select the PayPal card reader you would like to use:"},Device:{Connecting:{Title:"Connecting to\n${deviceId}"},Connected:{Title:"Card reader connected",Buttons:{Switch:"Switch Card Readers"}},RetryConnection:{Title:"Sorry, we could not connect to this reader",Message:"Please make sure the card reader is turned on and the battery is charged",Buttons:{Retry:"Try Again"}},ConnectingFailed:{Title:"Could not\nconnect to\n${deviceId}",Buttons:{Cancel:"OK"}},LastReaderUsed:{titleLastReaderUsed:"Last reader used",titleConnected:"Card Reader Connected",msgConnecting:"Connecting",msgConnectionFailed:"Sorry, we could not connect to this reader",msgFindFailed:"Sorry, we couldn't find any available card readers",msgCheckReader:"Please check that the card reader is turned on and the battery is charged",btnConnect:"Connect",btnFindAnother:"Find Another Reader",btnDone:"Done",btnSwitchCardReader:"Switch Card Readers",btnTryAgain:"Try Again",btnCancel:"Cancel"},ChipAndSwipe:"PayPal Chip and Swipe Reader",Chip:"PayPal Chip Card Reader",ChipAndTap:"PayPal Chip and Tap Reader",Swipe:"PayPal Swipe Reader"}};

},{}],15:[function(require,module,exports){
"use strict";module.exports={Done:"完了",Cancel:"キャンセル",Ok:"OK",Yes:"はい",No:"いいえ",Error:"申し訳ありません。",Sig:{Title:"${cardIssuer}　*${lastFour}に${amount}を請求します",Here:"ここにサイン",Footer:"カードに適用される利用条件に従い、上記の金額を支払うことに同意します。"},Rcpt:{Title:"${amount}",Prompt:"レシートを発行しますか? ",EmailButtonTitle:"メール",SMSButtonTitle:"テキスト",NoThanksButtonTitle:"不要",Sending:"レシートを送信中…",Disclaimer:"レシートはPayPalからお送りします。PayPalのプライバシーポリシーについては、レシートをご確認ください",Email:{Title:"メールで送信",Placeholder:"me@somewhere.com",Disclaimer:"メールアドレスを入力することで、今後のすべてのPayPal Here取引についてメールを受け取ることに同意します。",SendButtonTitle:"送信"},SMS:{Title:"SMSで送信",Placeholder:"14085551212",Disclaimer:"この電話番号を追加する権限があることと、自動送信メールを受け取ることに同意します。メール・データ料金が適用される場合があります。レシートはPayPalからお送りします。PayPalのプライバシーポリシーについては、レシートをご確認ください。",SendButtonTitle:"送信"}},Tx:{Alert:{Ready:{Title:"準備完了",Msg:"用意ができたらカードをタップ、挿入、またはスワイプします。"},EnterPin:{Title:"${amount}",Message:"カードリーダーのキーパッドに暗証番号を入力してください"},IncorrectPin:{Title:"暗証番号が間違っています",Message:"暗証番号が間違っています。もう一度お試しください。"},ReadyForInsertOrSwipeOnly:{Title:"準備完了",Msg:"用意ができたらカードを挿入またはスワイプします。"},ReadyForSwipeOnly:{Title:"カードをリーダーに通してください",Msg:"カードをリーダーの上部で通してください"},ReadyForInsertOnly:{Title:"準備完了",Msg:"用意ができたらカードを挿入します。"},Cancelled:{Title:"キャンセルされました",Msg:"取引がキャンセルされました"},Cancel:{Title:"キャンセル",Msg:"この取引をキャンセルしますか? "},TimeOut:{Title:"取引がタイムアウトになりました",Msg:"取引は完了しませんでした。",Button:"取引のキャンセル"},NfcNotAllowed:{Title:"カードの挿入またはリーダーに通す",Msg:"クレジットカード会社により、カードの挿入またはスワイプが求められています。"},NfcFallback:{Title:"カードを読み取れません",Msg:"カードを挿入するかスワイプしてください。または別のカードをお試しください。"},NfcPaymentDeclined:{Title:"非接触式取引が拒否されました",Msg:"カードを挿入して再度実行しますか? "},InsertOrSwipe:{Title:"カードの挿入またはスワイプ",Msg:"カード会社により、\nカードの挿入またはスワイプが求められています",Button:"取引のキャンセル"},IncorrectOnlinePin:{Title:"暗証番号が間違っています",Msg:"入力された暗証番号が正しくありません。もう一度お試しください。"},GenericError:{Title:"取引がキャンセルされました",PaymentMessage:"支払いを実行できません",RefundMessage:"返金を実行できません"},TapDifferentCard:{Title:"カードを読み取れません",Msg:"カードを挿入するかスワイプしてください。または[OK]を押して別のカードをタップしてください。"},BlockedCard:{Title:"拒否済み",Msg:"詳細についてはカード会社にお問い合わせください"},BlockedCardInserted:{Title:"拒否済み",Msg:"カードを取り外し、カード会社に詳細をお問い合わせください"},BlockedCardTapped:{Title:"拒否済み",Msg:"詳細についてはカード会社にお問い合わせください"},BlockedCardSwiped:{Title:"拒否済み",Msg:"詳細についてはカード会社にお問い合わせください"},ChipCardSwiped:{Title:"ICカードを認識しました",Msg:"カードを挿入してください"},UnsuccessfulInsert:{Title:"カードを読み取れません",Msg:"もう一度お試しください。カードリーダーの下部にある挿入口にICチップ側を先にしてカードをしっかり入れます"},AmountTooLow:{Title:"金額が低すぎます",Msg:"カード支払いの場合の最低ご利用額は${amount}です。金額を入力し直すか、別の支払方法をお選びください。"},AmountTooHigh:{Title:"金額が高すぎます",Msg:"カード支払いの場合のご利用最高額は${amount}です。金額を入力し直すか、別の支払方法をお選びください。"},Refund:{Title:"返金の種類",Msg:"種類を選択してください",Buttons:{WithCard:"カードを使用して返金",WithoutCard:"カードを使用せずに返金"},CardMismatch:{Title:"カードが一致しません",Msg:"返金用に提示されたカードは最初の支払い時に使用されたものではありません"}}},Retry:"再度実行しますか? ",CancelledByUser:"支払いのキャンセル",TransactionFailed:"支払いが拒否されました",TransactionSuccessful:"支払い完了",RefundSuccessful:"返金が完了しました",RefundFailed:"返金に失敗しました"},SwUpgrade:{Required:{Title:"更新が必要です",Msg:"取引を処理する前に、カードリーダーを更新する必要があります。"},Optional:{Title:"更新を利用できます",Msg:"カードリーダーの更新を利用できます。"},Buttons:{Ok:"OK",UpdateNow:"今すぐ更新する",NotNow:"後で実行",Retry:"再度実行"},Failed:{Title:"ソフトウェアの更新に失敗しました",Msg:"申し訳ありませんが、更新を完了できませんでした。",BatteryLow:"カードリーダーを充電してください。"},Updating:{Title:"カードリーダーを更新しています",Msg:"カードリーダーを取り外さないでください"},Success:{Title:"ソフトウェアの更新が完了しました"},Downloading:"${count}/${total}をダウンロードしています",Initializing:"カードリーダーを初期化中...取り外さないでください",ValidatingSecurityKeys:"セキュリティキーを確認しています...取り外さないでください",SecurityKeysInstalled:"セキュリティキーをインストールしました。",UpdatingWithDetails:"${stage} ${progress}%を更新しています...取り外さないでください",Restarting:"カードリーダーを再起動しています....取り外さないでください",Reconnecting:"カードリーダーに再接続しています...取り外さないでください",Connected:"接続済みです",Usb:{UsbUnplug:"USBリーダーを抜いて[OK]を押してください",UsbWait:"時間をおいてからUSBリーダーを接続してください。",UsbPlug:"USBリーダーを再度接続してください。"}},EMV:{Tip:{Title:"顧客の入力を待機中…",Buttons:{NoTip:"チップ不要"}},Processing:"処理中...",ProcessingPinOk:"処理中...暗証番号はOKです",PinOk:"暗証番号はOKです",ProcessingRefund:"返金処理中...",Cancelling:"取消中...",Finalize:"支払い処理を完了中...",DoNotRemove:"カードを取り出さないでください。",Remove:"カードを取り出してください。",Complete:"${amount}を支払いました",RefundComplete:"${amount}を返金しました",Select:"アプリを選択します: "},MultiCard:{Title:"端末を選択します",Msg:"使用するPayPalカードリーダーを選択してください: "},Device:{Connecting:{Title:"${deviceId}に\n接続しています"},RetryConnecting:{Title:"${deviceId}に\n接続しますか? ",Message:"端末が起動していることを確認します",Buttons:{Retry:"再度実行",NotNow:"後で実行"}},ConnectingFailed:{Title:"${deviceId}に\n接続できません\nでした",Buttons:{Cancel:"OK"}}}};

},{}],16:[function(require,module,exports){
"use strict";exports.__esModule=!0;var logLevel={quiet:0,error:1,warn:2,info:3,debug:4};exports.default=logLevel;

},{}],17:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function getEnumName(e,r){for(var a in e)if({}.hasOwnProperty.call(e,a)&&e[a]===r)return a;return r}function transactionCancelledError(e){return e&&(e.code===_retailPaymentDevice.deviceError.paymentCancelled.code&&e.domain===_retailPaymentDevice.deviceErrorDomain||e.code===_sdkErrors.transaction.customerCancel.code&&e.domain===_sdkErrors.domain.transaction)}function getDeviceModelName(e){if(e===_retailPaymentDevice.ReaderModel.M003)return"M000";var r=(0,_manticoreUtil.getPropertyName)(_retailPaymentDevice.ReaderModel,e);return r?r.toUpperCase():""}function hereAPICardDataFromCard(e){var r={reader:{vendor:e.reader.manufacturer.toUpperCase(),readerSerialNumber:e.reader.serialNumber,deviceModel:getDeviceModelName(e.reader.model)}};if(e.formFactor===_retailPaymentDevice.FormFactor.MagneticCardSwipe)r.reader.keySerialNumber=e.ksn,r.inputType=e.isMSRFallbackAllowed?"fallback_swipe":"swipe",r.track1=e.track1,r.track2=e.track2,r.track3=e.track3,e.isMSRFallbackAllowed&&r.reader.vendor===_retailPaymentDevice.deviceManufacturer.miura&&(r.reader.vendor="MIURA_FB_SWIPE",r.inputType="swipe");else if(e.formFactor===_retailPaymentDevice.FormFactor.ManualCardEntry)r.inputType="keyIn",r.emvData=e.emvData,e.expiration&&e.expiration.length>2&&(r.expirationMonth=e.expiration.substring(2),r.expirationYear=parseInt(e.expiration.substring(0,2),10)+2e3),r.cvv=e.cvv;else if(e.formFactor===_retailPaymentDevice.FormFactor.Chip)r.inputType="chip",r.emvData=e.emvData.apdu.data.toString("hex");else{if(e.formFactor!==_retailPaymentDevice.FormFactor.EmvCertifiedContactless)throw new Error("Cannot generate HereAPI card data from "+e);r.inputType=e.isContactlessMSD?"contactless_msd":"contactless_chip",r.emvData=e.emvData.apdu.data.toString("hex")}return r}function getInvoiceEnumFromPaymentType(e){switch(e){case _PaymentType2.default.card:case _PaymentType2.default.keyIn:return _paypalInvoicing.InvoiceEnums.PaymentMethod.CREDIT_CARD;case _PaymentType2.default.cash:return _paypalInvoicing.InvoiceEnums.PaymentMethod.CASH;case _PaymentType2.default.check:return _paypalInvoicing.InvoiceEnums.PaymentMethod.CHECK;default:return _paypalInvoicing.InvoiceEnums.PaymentMethod.NONE}}function getAmountWithCurrencySymbol(e,r){return""+(currencySymbols[e]||"$")+_paypalInvoicing.Currency.round(e,r).toFormat(2,_bignumber2.default.ROUND_HALF_UP)}function getRandomId(){return Math.floor(1e13*Math.random())}function getCardReaderModel(e){return e?"PayPal Audio Reader"===e||0===e.indexOf("Roam")?_retailPaymentDevice.ReaderModel.Swiper:0===e.indexOf("PayPal ")?_retailPaymentDevice.ReaderModel.M010:0===e.indexOf("PayPal-")||0===e.indexOf("MOB")?_retailPaymentDevice.ReaderModel.Moby3000:0===e.indexOf("PPHere-")||0===e.indexOf("RP")?_retailPaymentDevice.ReaderModel.RP450:_retailPaymentDevice.ReaderModel.Unknown:_retailPaymentDevice.ReaderModel.Unknown}function getCardReaderManufacturer(e){var r=getCardReaderModel(e);return r===_retailPaymentDevice.ReaderModel.M010?_retailPaymentDevice.deviceManufacturer.miura:r===_retailPaymentDevice.ReaderModel.Moby3000||r===_retailPaymentDevice.ReaderModel.RP450?_retailPaymentDevice.deviceManufacturer.ingenico:r===_retailPaymentDevice.ReaderModel.Swiper?_retailPaymentDevice.deviceManufacturer.roam:_retailPaymentDevice.deviceManufacturer.miura}function getCardReaderIcon(e){var r=getCardReaderModel(e);return r===_retailPaymentDevice.ReaderModel.Moby3000?"ic_chipnswipe":r===_retailPaymentDevice.ReaderModel.RP450?"ic_chipntap_waves":r===_retailPaymentDevice.ReaderModel.M010?"chip_emv_chippin":r===_retailPaymentDevice.ReaderModel.Swiper?"triangle_swiper":null}function getCardReaderDescription(e){var r=getCardReaderModel(e);return r===_retailPaymentDevice.ReaderModel.Moby3000?(0,_l10n2.default)("Device.ChipAndSwipe"):r===_retailPaymentDevice.ReaderModel.RP450?(0,_l10n2.default)("Device.ChipAndTap"):r===_retailPaymentDevice.ReaderModel.M010?(0,_l10n2.default)("Device.Chip"):r===_retailPaymentDevice.ReaderModel.Swiper?(0,_l10n2.default)("Device.Swipe"):null}function isRoamSwiper(e){return getCardReaderModel(e)===_retailPaymentDevice.ReaderModel.Swiper}function saveLastActiveReader(e,r){var a=JSON.stringify({id:e.id,address:e.address});_manticore2.default.setItem(itemKeyActiveReader,storageType.SecureBlob,a,function(e,t){e?Log.error("lastReader> Error saving '"+a+"': "+JSON.stringify(e)):Log.debug(function(){return"lastReader> Successfully saved '"+a+"' to "+t}),r&&r()})}function getLastActiveReader(e){_manticore2.default.getItem(itemKeyActiveReader,storageType.SecureBlob,function(r,a){if(r||!a)return Log.warn("lastReader> Unable to retrieve last active reader. Key: "+itemKeyActiveReader+". Error: "+JSON.stringify(r)),void e(null);Log.debug(function(){return"lastReader> Found last connected card reader with details: "+a});var t=JSON.parse(a);e(t)})}function isNullOrUndefined(e){return null===e||void 0===e}exports.__esModule=!0,exports.currencySymbols=void 0,exports.getEnumName=getEnumName,exports.transactionCancelledError=transactionCancelledError,exports.getDeviceModelName=getDeviceModelName,exports.hereAPICardDataFromCard=hereAPICardDataFromCard,exports.getInvoiceEnumFromPaymentType=getInvoiceEnumFromPaymentType,exports.getAmountWithCurrencySymbol=getAmountWithCurrencySymbol,exports.getRandomId=getRandomId,exports.getCardReaderModel=getCardReaderModel,exports.getCardReaderManufacturer=getCardReaderManufacturer,exports.getCardReaderIcon=getCardReaderIcon,exports.getCardReaderDescription=getCardReaderDescription,exports.isRoamSwiper=isRoamSwiper,exports.saveLastActiveReader=saveLastActiveReader,exports.getLastActiveReader=getLastActiveReader,exports.isNullOrUndefined=isNullOrUndefined;var _retailPaymentDevice=require("retail-payment-device"),_manticoreUtil=require("manticore-util"),_manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_manticore=require("manticore"),_manticore2=_interopRequireDefault(_manticore),_paypalInvoicing=require("paypal-invoicing"),_bignumber=require("bignumber.js"),_bignumber2=_interopRequireDefault(_bignumber),_sdkErrors=require("./sdkErrors"),_PaymentType=require("../transaction/PaymentType"),_PaymentType2=_interopRequireDefault(_PaymentType),_l10n=require("../common/l10n"),_l10n2=_interopRequireDefault(_l10n),storageType={Secure:"S",Blob:"B",String:"V",SecureBlob:"E"},itemKeyActiveReader="last-active-card-reader",Log=(0,_manticoreLog2.default)("sdkUtil");module.exports.StorageType=storageType;var currencySymbols=exports.currencySymbols={USD:"$",AUD:"$",CAD:"$",HKD:"$",GBP:"£",EUR:"€"};

},{"../common/l10n":13,"../transaction/PaymentType":78,"./sdkErrors":18,"bignumber.js":95,"manticore":213,"manticore-log":208,"manticore-util":212,"paypal-invoicing":279,"retail-payment-device":356}],18:[function(require,module,exports){
"use strict";function payPalError(a,r,e){var o=new _manticorePaypalerror.PayPalErrorInfo;return o.code=r.toString(),o.domain=a,o.message=e,_manticorePaypalerror.PayPalError.makeError(null,o)}exports.__esModule=!0,exports.sdk=exports.network=exports.retail=exports.merchant=exports.transaction=exports.domain=void 0,exports.payPalError=payPalError;var _manticorePaypalerror=require("manticore-paypalerror"),domain=exports.domain={transaction:"transaction",merchant:"merchant",retail:"retail",sdk:"sdk",network:"network"},transaction=exports.transaction={customerCancel:payPalError(domain.transaction,1,"Transaction cancelled by customer"),genericCancel:payPalError(domain.transaction,2,"The transaction was cancelled"),cardCantContinue:payPalError(domain.transaction,3,"Cannot continue with specified card."),noFunctionalDevices:payPalError(domain.transaction,4,"No functional devices."),invoiceStatusMismatch:payPalError(domain.transaction,5,"The invoice status is not eligible for the given transaction method"),amountTooLow:payPalError(domain.transaction,6,"The invoice amount was too low"),amountTooHigh:payPalError(domain.transaction,7,"The invoice amount was too high"),failedToCollectSignature:payPalError(domain.transaction,8,"Failed to collect signature"),cannotSwipeChipCard:payPalError(domain.transaction,9,"Cannot swipe a chip card"),mustSwipeCard:payPalError(domain.transaction,10,"Must swipe the card"),refundCardMismatch:payPalError(domain.transaction,11,"Card presented for refund is not the one used for the original payment"),cardTypeMismatch:payPalError(domain.transaction,12,"Presented card is not of the expected type"),locationError:payPalError(domain.transaction,13,"Unable to retrieve location information"),missingInvoiceId:payPalError(domain.transaction,14,"Invoice ID is required to complete this refund."),missingTransactionNumber:payPalError(domain.transaction,15,"Transaction number is required to complete this refund."),cannotDiscardCard:payPalError(domain.transaction,16,"Cannot discard the presented card"),notAuthorizedForCapture:payPalError(domain.transaction,17,"Transaction was not authorized for capture"),authorizationAlreadyCompleted:payPalError(domain.transaction,18,"Capture attempt on the authorization failed because it was already completed by one or more previous captures on authorization"),authorizationExpired:payPalError(domain.transaction,19,"The authorization related to this request has expired. You must reauthorize the transaction"),authorizationIdDoesNotExists:payPalError(domain.transaction,20,"Authorization ID passed in request does not exist in PayPal system"),authorizationVoided:payPalError(domain.transaction,21,"Authorization has been voided"),captureAmountLimitExceeded:payPalError(domain.transaction,22,"Capture amount specified exceeded allowable limit"),captureFailed:payPalError(domain.transaction,23,"The capture request has failed.Resend the request at another time. If this error persists, contact PayPal Merchant Technical Support."),invalidCaptureAmount:payPalError(domain.transaction,24,"Capture amount is invalid. Amount has to be greater than zero"),multipleContactlessCardsDetected:payPalError(domain.transaction,16,"Multiple Contactless Cards Detected."),tryDifferentInterface:payPalError(domain.transaction,17,"Try different interface"),cannotClearActiveTransaction:payPalError(domain.transaction,18,"Cannot clear transaction when payment is in progress")},merchant=exports.merchant={failedToLoad:payPalError(domain.merchant,1,"Failed to load the merchant information."),requiredInfoNotLoaded:payPalError(domain.merchant,2,"Failed to load required merchant information"),notInitialized:payPalError(domain.merchant,3,"Merchant not initialized"),accessTokenNotProvided:payPalError(domain.merchant,4,"Access token is missing from provided credentials"),environmentNotProvided:payPalError(domain.merchant,5,"Environment is missing from provided credentials"),merchantDataNotProvided:payPalError(domain.merchant,6,"Data required to create the merchant object are missing."),merchantUserInfoNotProvided:payPalError(domain.merchant,7,"User info data required to create the merchant object are missing."),merchantStatusNotProvided:payPalError(domain.merchant,8,"Status data required to create the merchant object are missing."),invalidToken:payPalError(domain.merchant,9,"The token is either invalid or missing."),tokenDataNotProvided:payPalError(domain.merchant,10,"The token data to build the composite token is either invalid or missing.")},retail=exports.retail={nfcPaymentDeclined:payPalError(domain.retail,600075),incorrectOnlinePin:payPalError(domain.retail,6000164),onlinePinMaxRetryExceed:payPalError(domain.retail,6000165),contactIssuer:payPalError(domain.retail,580031)},network=exports.network={requestFailed:payPalError(domain.network,1,"Request failed"),networkOffline:payPalError(domain.network,-1001)},sdk=exports.sdk={userCancelled:payPalError(domain.sdk,1,"Action was cancelled by user"),fileNotFound:payPalError(domain.sdk,2,"Unable to retrieve file from device storage"),validationError:payPalError(domain.sdk,3,"The arguments passed are invalid."),retrieveNextPageNotEnabled:payPalError(domain.sdk,4,"retrieving next page is not enabled for this response"),noNextPageToRetrieve:payPalError(domain.sdk,5,"No next page or invalid next page token for the list of results in this response"),cardReaderScannerNotInitialized:payPalError(domain.sdk,6,"Card reader scanner not initialized"),noReaderFound:payPalError(domain.sdk,7,"No reader found"),bluetoothDisabled:payPalError(domain.sdk,8,"Bluetooth disabled")};

},{"manticore-paypalerror":209}],19:[function(require,module,exports){
"use strict";function _interopRequireDefault(t){return t&&t.__esModule?t:{default:t}}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_flowAsync=require("../common/flowAsync"),_flowAsync2=_interopRequireDefault(_flowAsync),Log=(0,_manticoreLog2.default)("flow.baseFlow"),BaseFlowAsync=function(){function t(){_classCallCheck(this,t)}return t.prototype.setFlowSteps=function(t,e){return this.flowSteps=e,this.flow=new _flowAsync2.default(this,this.flowSteps),this.flow.name=t,this},t.prototype.addFlowEndedHandler=function(t){return this._check(),this.flow.once("ended",t),this},t.prototype.addFlowAbortedHandler=function(t){return this._check(),this.flow.once("aborted",t),this},t.prototype.addFlowCompletedHandler=function(t){return this._check(),this.flow.once("completed",t),this},t.prototype._check=function(){if(!this.flow)throw new Error("Flow needs to be initialized first")},t.prototype.setCompletionSteps=function(t,e){return this.completionFlowName=t,this.completionFlowSteps=e,this},t.prototype.createFlowMessageStep=function(t){var e=this;return function(o){t(e.context,o.data,function(t){e.alert=t,o.next()})}},t.prototype.startFlow=function(){var t=this;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return Log.debug(function(){return"Start executing "+t.flowSteps.length+" steps for "+t.flow.name+" flow"}),e.next=3,regeneratorRuntime.awrap(this.flow.start());case 3:case"end":return e.stop()}},null,this)},t}();exports.default=BaseFlowAsync;

},{"../common/flowAsync":12,"manticore-log":208}],20:[function(require,module,exports){
"use strict";function _interopRequireWildcard(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o]);return t.default=e,t}function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_retailPaymentDevice=require("retail-payment-device"),_paypalrestManticore=require("paypalrest-manticore"),_manticoreUtil=require("manticore-util"),_sdkErrors=require("../common/sdkErrors"),_PaymentErrorHandler=require("./PaymentErrorHandler"),_PaymentErrorHandler2=_interopRequireDefault(_PaymentErrorHandler),_flow=require("../common/flow"),_flow2=_interopRequireDefault(_flow),_cal=require("../common/cal"),Cal=_interopRequireWildcard(_cal),_messageHelper=require("./messageHelper"),messageHelper=_interopRequireWildcard(_messageHelper),_TokenExpirationHandler=require("../common/TokenExpirationHandler"),_TokenExpirationHandler2=_interopRequireDefault(_TokenExpirationHandler),_Merchant=require("../common/Merchant"),_Merchant2=_interopRequireDefault(_Merchant),Log=(0,_manticoreLog2.default)("flow.baseTransactionFlow"),AuthCode=_retailPaymentDevice.PaymentDevice.authCode,BaseTransactionFlow=function(){function e(t,o,r){var n=this;_classCallCheck(this,e),this.card=t,this.context=o,this.onCompleteCallback=r,this.transactionCancelRequested=function(){Log.info("Transaction cancel was requested from device "+n.card.reader.id),n.card.reader.abortTransaction(n.context,function(){Log.info("Deactivated card reader "+n.card.reader.id),n.flow.abortFlow(_retailPaymentDevice.deviceError.paymentCancelled)})},this.transactionCancelled=function(){Log.info("Transaction on device "+n.card.reader.id+" was cancelled"),n.flow.abortFlow(_retailPaymentDevice.deviceError.paymentCancelled)}}return e.prototype.setFlowSteps=function(e,t){return this.flowName=e,this.flowSteps=t,this.flow=new _flow2.default(this,this.flowSteps),this},e.prototype.addFlowEndedHandler=function(e){if(void 0===this.flow)throw new Error("Flow needs to be initialized first");return this.flow.on("ended",e),this},e.prototype.setCompletionSteps=function(e,t){return this.completionFlowName=e,this.completionFlowSteps=t,this},e.prototype.startFlow=function(){var e=this;Log.debug(function(){return"Start executing "+e.flowSteps.length+" steps for "+e.flowName+" flow"}),this.flow.name=this.flowName,this.context.setPaymentFlowStarted(),this.flow.on("completed",function(t){e.completeTransaction(t)}),this.flow.on("aborted",function(t){e.abortTransaction(t)}),this.flow.start()},e.prototype.invokeCompleteCallback=function(e,t,o){!e.alert||t!==_PaymentErrorHandler2.default.action.abort&&t!==_PaymentErrorHandler2.default.action.offlineDecline||e.alert.dismiss();var r=e.tx||{};r.card=r.card||this.card,this.onCompleteCallback(e.error,t,r,o)},e.prototype.completeTransaction=function(e,t){var o=this;if(Log.debug(function(){return"Starting completion steps for "+o.flowName+" flow"}),!this.completionFlowSteps)return Log.debug(function(){return"Flow ended and completion steps not defined. Proceeding to invoke complete callback"}),void this.invokeCompleteCallback(e,t);this.completionFlow=new _flow2.default(this,this.completionFlowSteps),this.completionFlow.name=this.completionFlowName,this.completionFlow.data=e,this.completionFlow.on("ended",function(e){Log.debug(function(){return"Flow ended. Proceeding to invoke flow complete callback (error: "+e.error+")"}),o.invokeCompleteCallback(e,t)}),this.completionFlow?this.card&&this.card.reader?this.card.reader.postTransactionCleanup(function(){o.completionFlow.start()}):this.completionFlow.start():Log.debug("Did not find any completionFlow")},e.prototype.abortTransaction=function(e){var t=this;Log.debug(function(){return"Aborting "+t.context.id}),this.voidPaymentIfApplicable(e);var o=e.error,r=this.card&&this.card.formFactor,n=this.card&&this.card.reader;if(!o)return void(n?n.display({id:_retailPaymentDevice.PaymentDevice.Message.TransactionCancelled,substitutions:messageHelper.formattedInvoiceTotal(this.context.invoice)},function(){return t.completeTransaction(e)}):this.completeTransaction(e));if(Log.warn("Flow ("+(0,_manticoreUtil.getPropertyName)(_retailPaymentDevice.FormFactor,r)+") aborted with error code: '"+o.code+"' domain: "+o.domain+"\n"+o),this.context.timeoutHandler&&o.domain===_paypalrestManticore.paypalRestErrorDomain&&o.code===_paypalrestManticore.restError.unauthorized.code){var i=new _TokenExpirationHandler2.default(function(o){if(Log.debug(function(){return"TokenExpirationHandler was invoked with handler: "+(0,_manticoreUtil.getPropertyName)(_TokenExpirationHandler2.default.action,o)}),o===_TokenExpirationHandler2.default.action.resume)throw new Error("Not implemented");t.invokeCompleteCallback(e)});return e.alert&&e.alert.dismiss(),void this.context.timeoutHandler(i)}new _PaymentErrorHandler2.default(this.context).handle(o,r,n,function(o,r){o===_PaymentErrorHandler2.default.action.abort?t.completeTransaction(e,o):t.invokeCompleteCallback(e,o,r)})},e.prototype.voidPaymentIfApplicable=function(e){var t=this;if(Log.debug(function(){return"voidPaymentIfApplicable data.error: "+JSON.stringify(e.error)}),!(e&&e.tx&&e.tx.transactionHandle))return void Log.debug("Will not void transaction as transaction handle was not assigned");if(e.error&&e.error.code===_sdkErrors.retail.contactIssuer.code)return void Log.debug(function(){return"Will not void transaction. Declined with error: "+JSON.stringify(e.error)});var o={invoiceId:this.context.invoice.payPalId};e.tx.responseCode&&(o.responseCode=e.tx.responseCode),e.cardResponse&&e.cardResponse.apdu&&e.cardResponse.apdu.data&&(o.emvData=e.cardResponse.apdu.data.toString("hex"));var r="checkouts/"+e.tx.transactionHandle+"/void";Log.debug(function(){return"Invoice void request:"+JSON.stringify(o,null,4)}),_Merchant2.default.active.request({service:"retail",op:r,format:"json",method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(o)},function(e,n){if(e)return void Log.error("Void request "+r+" returned an error for payload: "+JSON.stringify(o,null,4)+"\n"+e+" ");Log.info("Successfully voided invoice id: "+t.context.invoice.payPalId+". "+JSON.stringify(n))})},e.prototype.saveInvoiceStep=function(e){var t=this;Log.debug(function(){return"Saving invoice\n"+JSON.stringify(t.context.invoice,null,4)}),this.context.invoice.save(function(o){if(o&&t.card&&t.card.reader){Log.error("Unable to save invoice. Error: "+o+"\n"+JSON.stringify(t.context.invoice,null,4));var r=AuthCode.TransactionFailure;o.code===_sdkErrors.network.networkOffline.code&&(r=AuthCode.NoNetwork),Log.debug("Pushing authCode : "+r),t.card.reader.completeTransaction(r,function(t){return t&&Log.error("Error response on pushing auth code to terminal "+JSON.stringify(t)),e.abortFlow(o)})}else o?e.abortFlow(o):(Log.debug(function(){return"Saved invoice successfully "+JSON.stringify(t.context.invoice,null,4)}),Cal.setInvoiceId(t.context.invoice.payPalId),e.next())})},e.prototype.createFlowMessageStep=function(e){var t=this;return function(o){e(t.context,o.data,function(){o.next()})}},e}();exports.default=BaseTransactionFlow;

},{"../common/Merchant":3,"../common/TokenExpirationHandler":9,"../common/cal":10,"../common/flow":11,"../common/sdkErrors":18,"./PaymentErrorHandler":25,"./messageHelper":28,"manticore-log":208,"manticore-util":212,"paypalrest-manticore":317,"retail-payment-device":356}],21:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}exports.__esModule=!0;var _manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_CaptureStep=require("./steps/CaptureStep"),_CaptureStep2=_interopRequireDefault(_CaptureStep),_BaseFlowAsync2=require("./BaseFlowAsync"),_BaseFlowAsync3=_interopRequireDefault(_BaseFlowAsync2),Log=(0,_manticoreLog2.default)("flow.captureFlow"),CaptureFlow=function(e){function t(r,n){_classCallCheck(this,t),Log.debug("Initializing Capture Flow");var o=_possibleConstructorReturn(this,e.call(this));return o.context=r,o.onCompleteCallback=n,o}return _inherits(t,e),t.prototype.start=function(){var t=this;return regeneratorRuntime.async(function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,regeneratorRuntime.awrap(e.prototype.setFlowSteps.call(this,"Capture",[new _CaptureStep2.default(this.context).flowStep]));case 2:return e.prototype.addFlowEndedHandler.call(this,function(){return t.completeTransaction(t.flow.data)}),Log.debug(function(){return"PaymentToCapture: "+t.context.authorizationId+" capture amount : "+t.context.captureAmount}),r.next=6,regeneratorRuntime.awrap(e.prototype.startFlow.call(this));case 6:case"end":return r.stop()}},null,this)},t.prototype.completeTransaction=function(e){return regeneratorRuntime.async(function(t){for(;;)switch(t.prev=t.next){case 0:return Log.debug("Flow ended and completion steps not defined. Proceeding to invoke complete callback"),t.next=3,regeneratorRuntime.awrap(this.invokeCompleteCallback(e));case 3:case"end":return t.stop()}},null,this)},t.prototype.invokeCompleteCallback=function(e){var t;return regeneratorRuntime.async(function(r){for(;;)switch(r.prev=r.next){case 0:t=e.tx||{},this.onCompleteCallback(e.error,t);case 2:case"end":return r.stop()}},null,this)},t}(_BaseFlowAsync3.default);exports.default=CaptureFlow;

},{"./BaseFlowAsync":19,"./steps/CaptureStep":30,"manticore-log":208}],22:[function(require,module,exports){
"use strict";function _interopRequireWildcard(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&(t[a]=e[a]);return t.default=e,t}function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}exports.__esModule=!0;var _manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_retailPaymentDevice=require("retail-payment-device"),_messageHelper=require("./messageHelper"),messageHelper=_interopRequireWildcard(_messageHelper),_BaseTransactionFlow2=require("./BaseTransactionFlow"),_BaseTransactionFlow3=_interopRequireDefault(_BaseTransactionFlow2),_MerchantTakePaymentStep=require("./steps/MerchantTakePaymentStep"),_MerchantTakePaymentStep2=_interopRequireDefault(_MerchantTakePaymentStep),_SignatureStep=require("./steps/SignatureStep"),_SignatureStep2=_interopRequireDefault(_SignatureStep),_FinalizePaymentStep=require("./steps/FinalizePaymentStep"),_FinalizePaymentStep2=_interopRequireDefault(_FinalizePaymentStep),_UpdateInvoicePaymentStep=require("./steps/UpdateInvoicePaymentStep"),_UpdateInvoicePaymentStep2=_interopRequireDefault(_UpdateInvoicePaymentStep),_RemoveCardStep=require("./steps/RemoveCardStep"),_RemoveCardStep2=_interopRequireDefault(_RemoveCardStep),_ReceiptStep=require("./steps/ReceiptStep"),_ReceiptStep2=_interopRequireDefault(_ReceiptStep),Log=(0,_manticoreLog2.default)("flow.creditCardFlow"),CreditCardFlow=function(e){function t(a,n,r){_classCallCheck(this,t),Log.debug("Initializing Credit Flow");var i=_possibleConstructorReturn(this,e.call(this,a,n,r));return e.prototype.setFlowSteps.call(i,"Credit",[function(e){n.allowInProgressPaymentCancel&&(this.card.reader.once(_retailPaymentDevice.PaymentDevice.Event.cardRemoved,this.transactionCancelRequested),this.card.reader.once(_retailPaymentDevice.PaymentDevice.Event.cancelRequested,this.transactionCancelRequested),this.card.reader.once(_retailPaymentDevice.PaymentDevice.Event.disconnected,this.transactionCancelRequested),this.card.reader.once(_retailPaymentDevice.PaymentDevice.Event.cancelled,this.transactionCancelled)),e.next()},i.createFlowMessageStep(messageHelper.showProcessingMessage),i.saveInvoiceStep,new _MerchantTakePaymentStep2.default(n,i.voidPaymentIfApplicable).flowStep,new _SignatureStep2.default(n).flowStep,i.createFlowMessageStep(messageHelper.showFinalizeMessage),function(e){this._removePaymentCancelListeners(),e.next()},new _FinalizePaymentStep2.default(n).flowStep,new _RemoveCardStep2.default(n).flowStep,i.createFlowMessageStep(messageHelper.showCompleteMessage)]).addFlowEndedHandler(function(){return i._removePaymentCancelListeners()}).setCompletionSteps("Credit-Receipt",[new _UpdateInvoicePaymentStep2.default(n).flowStep,i.createFlowMessageStep(messageHelper.ifFailureShowMessage),new _ReceiptStep2.default(i.context).flowStep]).startFlow(),i}return _inherits(t,e),t.prototype._removePaymentCancelListeners=function(){var e=this.card.reader;this.context.allowInProgressPaymentCancel&&(e.removeListener(_retailPaymentDevice.PaymentDevice.Event.cardRemoved,this.transactionCancelRequested),e.removeListener(_retailPaymentDevice.PaymentDevice.Event.cancelRequested,this.transactionCancelRequested),e.removeListener(_retailPaymentDevice.PaymentDevice.Event.disconnected,this.transactionCancelRequested),e.removeListener(_retailPaymentDevice.PaymentDevice.Event.cancelled,this.transactionCancelled))},t}(_BaseTransactionFlow3.default);exports.default=CreditCardFlow;

},{"./BaseTransactionFlow":20,"./messageHelper":28,"./steps/FinalizePaymentStep":32,"./steps/MerchantTakePaymentStep":36,"./steps/ReceiptStep":37,"./steps/RemoveCardStep":38,"./steps/SignatureStep":39,"./steps/UpdateInvoicePaymentStep":40,"manticore-log":208,"retail-payment-device":356}],23:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_flow=require("../common/flow"),_flow2=_interopRequireDefault(_flow),_ReceiptStep=require("./steps/ReceiptStep"),_ReceiptStep2=_interopRequireDefault(_ReceiptStep),Log=(0,_manticoreLog2.default)("flow.OfferReceipt"),OfferReceiptFlow=function(){function e(t,i,o){_classCallCheck(this,e),this.err=t,this.context=i,this.callback=o,Log.debug("Initializing Offer receipt flow")}return e.prototype.startFlow=function(){var e=this;this.offerReceipt=new _flow2.default(this,[new _ReceiptStep2.default(this.context).flowStep]),this.offerReceipt.data.error=this.err,this.offerReceipt.on("ended",function(t){return e.callback(t)}),this.offerReceipt.start()},e}();exports.default=OfferReceiptFlow;

},{"../common/flow":11,"./steps/ReceiptStep":37,"manticore-log":208}],24:[function(require,module,exports){
"use strict";function _interopRequireWildcard(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t.default=e,t}function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_paypalrestManticore=require("paypalrest-manticore"),_manticoreUtil=require("manticore-util"),_flow=require("../common/flow"),_flow2=_interopRequireDefault(_flow),_ReceiptStep=require("./steps/ReceiptStep"),_ReceiptStep2=_interopRequireDefault(_ReceiptStep),_l10n=require("../common/l10n"),_l10n2=_interopRequireDefault(_l10n),_messageHelper=require("./messageHelper"),_retailSDKUtil=require("../common/retailSDKUtil"),retailSDKUtils=_interopRequireWildcard(_retailSDKUtil),_TokenExpirationHandler=require("../common/TokenExpirationHandler"),_TokenExpirationHandler2=_interopRequireDefault(_TokenExpirationHandler),Log=(0,_manticoreLog2.default)("flow.OfflineDeclineFlow"),OfflineDeclineFlow=function(){function e(t,i,n){_classCallCheck(this,e),this.err=t,this.context=i,this.callback=n,Log.debug("Initializing Offline Decline Flow")}return e.prototype.startFlow=function(){var e=this;(0,_messageHelper.showSimpleMessage)((0,_l10n2.default)("Cancelling transaction..",""),null,!1,this),this.cancellationFlow=new _flow2.default(this,[function(e){var t=this;this.context.invoice.isCancelled=retailSDKUtils.transactionCancelledError(this.err),this.context.invoice.isFailed=!0,this.context.invoice.save(function(i){if(i)return Log.error("Unable to save invoice. Error: "+i+"\n"+JSON.stringify(t.context.invoice,null,4)),void e.abortFlow(i);e.next()})},new _ReceiptStep2.default(this.context).flowStep]),this.cancellationFlow.data.error=this.err,this.cancellationFlow.on("ended",function(t){return e.callback(t)}),this.cancellationFlow.on("aborted",function(t){return e.abortedFlow(t)}),this.cancellationFlow.start()},e.prototype.abortedFlow=function(e){var t=e.error;if(t){if(Log.warn("OfflineDeclineFlow aborted with error code: '"+t.code+"' domain: "+t.domain+" \n"+t),this.context.timeoutHandler&&t.domain===_paypalrestManticore.paypalRestErrorDomain&&t.code===_paypalrestManticore.restError.unauthorized.code){var i=new _TokenExpirationHandler2.default(function(e){if(Log.debug(function(){return"TokenExpirationHandler was invoked with handler: "+(0,_manticoreUtil.getPropertyName)(_TokenExpirationHandler2.default.action,e)}),e===_TokenExpirationHandler2.default.action.resume)throw new Error("Not implemented")});return void this.context.timeoutHandler(i)}Log.warn("OfflineDeclineFlow aborted with error code: '"+t.code+"' domain: "+t.domain+" might need proper treatment!")}},e}();exports.default=OfflineDeclineFlow;

},{"../common/TokenExpirationHandler":9,"../common/flow":11,"../common/l10n":13,"../common/retailSDKUtil":17,"./messageHelper":28,"./steps/ReceiptStep":37,"manticore-log":208,"manticore-util":212,"paypalrest-manticore":317}],25:[function(require,module,exports){
"use strict";function _interopRequireWildcard(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_manticore=require("manticore"),_manticore2=_interopRequireDefault(_manticore),_retailPaymentDevice=require("retail-payment-device"),_manticoreUtil=require("manticore-util"),_l10n=require("../common/l10n"),_l10n2=_interopRequireDefault(_l10n),_sdkErrors=require("../common/sdkErrors"),_messageHelper=require("./messageHelper"),messageHelper=_interopRequireWildcard(_messageHelper),_Merchant=require("../common/Merchant"),_Merchant2=_interopRequireDefault(_Merchant),_transactionStates=require("../transaction/transactionStates"),Log=(0,_manticoreLog2.default)("flow.paymentErrorHandler"),PaymentErrorHandler=function(){function e(t){var r,n,a,i,o,c,l,s,d,m,u,f,y,_,p,v=this;_classCallCheck(this,e),this.context=t,this.formattedAmount=this.context.isRefund()&&this.context.refundAmount?messageHelper.formattedRefundTotal(this.context):messageHelper.formattedInvoiceTotal(this.context.invoice);var D=e.action,g=e.errors,C=e.displayMessage,P=void 0,h=void 0,M=(r={},r[_retailPaymentDevice.deviceError.nfcTimeout.code]=function(e,t){Log.debug(function(){return"Received an NFC timeout. Retrying again."}),t(D.retry)},r[_retailPaymentDevice.deviceError.nfcNotAllowed.code]=function(t,r){v._nfcPaymentDeclineErrorHandler(t,function(t){r(t===e.action.retryWithInsertOrSwipe?t:D.offlineDecline)})},r[_retailPaymentDevice.deviceError.tryDifferentCard.code]=function(e,t){v._updateDisplay(e,_retailPaymentDevice.PaymentDevice.Message.UnableToReadNfcCard,v.formattedAmount,{title:(0,_l10n2.default)("Tx.Alert.TapDifferentCard.Title"),message:(0,_l10n2.default)("Tx.Alert.TapDifferentCard.Msg"),cancel:(0,_l10n2.default)("Ok")},function(){v.context.promptForPaymentInstrument(),t(D.retry)})},r[_retailPaymentDevice.deviceError.contactIssuer.code]=P=function(e,t){v._updateDisplay(e,_retailPaymentDevice.PaymentDevice.Message.ContactIssuer,v.formattedAmount,{title:(0,_l10n2.default)("Tx.Alert.BlockedCardTapped.Title"),message:(0,_l10n2.default)("Tx.Alert.BlockedCardTapped.Msg"),cancel:(0,_l10n2.default)("Ok")},function(){return t(D.abort)})},r[_retailPaymentDevice.deviceError.contactlessPaymentAbortedByCardInsert.code]=e._doNothing,r[_retailPaymentDevice.deviceError.contactlessPaymentAbortedByCardSwipe.code]=e._doNothing,r),T=(n={},n[_retailPaymentDevice.deviceError.cardBlocked.code]=function(e,t){return v._insertContactIssuer(e,t,!0)},n[_retailPaymentDevice.deviceError.contactIssuer.code]=function(e,t){return v._insertContactIssuer(e,t,!0)},n[_retailPaymentDevice.deviceError.smartCardNotInSlot.code]=function(e,t){v._updateDisplay(e,_retailPaymentDevice.PaymentDevice.Message.TransactionCancelled,v.formattedAmount,{title:(0,_l10n2.default)("EMV.Cancelling")},function(){e.abortTransaction(v.context),t(D.offlineDecline)})},n[_retailPaymentDevice.deviceError.lowOnBattery.code]=function(e,t){Log.debug(function(){return"low battery error occured!!! "+e.id}),v._updateDisplay(null,null,null,{title:(0,_l10n2.default)("Tx.Alert.LowBattery.Title"),message:(0,_l10n2.default)("Tx.Alert.LowBattery.Msg"),cancel:(0,_l10n2.default)("Cancel")},function(){e.disconnect(),t(D.abort)})},n[_retailPaymentDevice.deviceError.invalidChip.code]=function(e,t){if(Log.debug(function(){return"Invalid chip card (Attempt: "+(v.context.retryCountInvalidChip+1)+")"}),v.context.retryCountInvalidChip>=_retailPaymentDevice.PaymentDevice.constant.InvalidChipRetryCount)return v._updateDisplay(null,null,null,{title:(0,_l10n2.default)("Tx.Alert.ReadyForSwipeOnly.Title"),message:(0,_l10n2.default)("Tx.Alert.ReadyForSwipeOnly.Msg"),imageIcon:"img_emv_swipe",cancel:(0,_l10n2.default)("Ok")},function(){v.alert&&v.alert.dismiss()}),v.context.allowFallBackSwipe=!0,void e.waitForCardRemoval(function(){t(D.retryWithSwipe)});v.context.retryCountInvalidChip+=1,e.waitForCardRemoval(function(){v.context.promptForPaymentInstrument(null,new Set([_retailPaymentDevice.FormFactor.MagneticCardSwipe,_retailPaymentDevice.FormFactor.Chip])),t(D.retryWithInsertOrSwipe)}),v._updateDisplay(null,null,null,{title:(0,_l10n2.default)("Tx.Alert.UnsuccessfulInsert.Title"),message:(0,_l10n2.default)("Tx.Alert.UnsuccessfulInsert.Msg"),imageIcon:"img_emv_insert",cancel:(0,_l10n2.default)("Cancel")},function(){return t(D.abort)})},n),x=(a={},a[_retailPaymentDevice.deviceError.contactIssuer.code]=h=function(e,t){v._updateDisplay(e,_retailPaymentDevice.PaymentDevice.Message.ContactIssuer,v.formattedAmount,{title:(0,_l10n2.default)("Tx.Alert.BlockedCardSwiped.Title"),message:(0,_l10n2.default)("Tx.Alert.BlockedCardSwiped.Msg"),cancel:(0,_l10n2.default)("Ok")},function(){return t(D.abort)})},a),F=(i={},i[_retailPaymentDevice.deviceError.mustSwipeCard.code]=function(e,t){v._mustSwipeCardHandler(e,t)},i[_retailPaymentDevice.deviceError.generic.code]=function(e,t){v.errorHandlerCompletion(e,t,D.abort,!1,v.formattedAmount,_retailPaymentDevice.PaymentDevice.Message.TransactionCancelled,_retailPaymentDevice.PaymentDevice.Message.TransactionCancelledRemoveCard,g.genericError,C.ok)},i[_retailPaymentDevice.deviceError.paymentCancelled.code]=function(e,t){v.errorHandlerCompletion(e,t,D.abort,!1,v.formattedAmount,_retailPaymentDevice.PaymentDevice.Message.TransactionCancelled,_retailPaymentDevice.PaymentDevice.Message.TransactionCancelledRemoveCard,g.cancelled,C.done)},i[_retailPaymentDevice.deviceError.cancelReadCardData.code]=function(e,t){v.errorHandlerCompletion(e,t,D.offlineDecline,!1,v.formattedAmount,_retailPaymentDevice.PaymentDevice.Message.TransactionCancelled,_retailPaymentDevice.PaymentDevice.Message.TransactionCancelledRemoveCard,g.cancelled,C.done)},i),w=(o={},o[_sdkErrors.retail.nfcPaymentDeclined.code]=function(t,r){v._updateDisplay(t,_retailPaymentDevice.PaymentDevice.Message.NfcDecline,null,null,function(){v.context.promptForPaymentInstrument(null,new Set([_retailPaymentDevice.FormFactor.MagneticCardSwipe,_retailPaymentDevice.FormFactor.Chip]),{title:(0,_l10n2.default)("Tx.Alert.NfcPaymentDeclined.Title"),message:(0,_l10n2.default)("Tx.Alert.NfcPaymentDeclined.Msg"),error:_sdkErrors.retail.nfcPaymentDeclined}),r(e.action.retryWithInsertOrSwipe,{showPrompt:!1,syncInvoiceTotal:!1})})},o[_sdkErrors.retail.onlinePinMaxRetryExceed.code]=P,o[_sdkErrors.retail.contactIssuer.code]=P,o),E=(c={},c[_sdkErrors.retail.contactIssuer.code]=function(e,t){return v._insertContactIssuer(e,t,!1)},c[_sdkErrors.retail.onlinePinMaxRetryExceed.code]=function(e,t){return v._insertContactIssuer(e,t,!1)},c),A=(l={},l[_sdkErrors.retail.contactIssuer.code]=h,l),I=(s={},s[_sdkErrors.retail.incorrectOnlinePin.code]=function(e,t){v._updateDisplay(e,_retailPaymentDevice.PaymentDevice.Message.IncorrectPin,v.formattedAmount,{title:(0,_l10n2.default)("Tx.Alert.IncorrectOnlinePin.Title"),message:(0,_l10n2.default)("Tx.Alert.IncorrectOnlinePin.Msg"),cancel:(0,_l10n2.default)("Ok")},function(){v.context.promptForPaymentInstrument(),t(D.retry)})},s),S=(d={},d[_sdkErrors.transaction.cannotSwipeChipCard.code]=function(e,t){v._updateDisplay(null,null,null,{title:(0,_l10n2.default)("Tx.Alert.ChipCardSwiped.Title"),message:(0,_l10n2.default)("Tx.Alert.ChipCardSwiped.Msg"),cancel:(0,_l10n2.default)("Ok")},function(){v.context.promptForPaymentInstrument(null,new Set([_retailPaymentDevice.FormFactor.Chip]))}),t(D.retryWithInsert)},d),k=(m={},m[_sdkErrors.transaction.multipleContactlessCardsDetected.code]=function(e,t){v._updateDisplay(null,null,null,{title:(0,_l10n2.default)("Tx.Alert.MultipleContactlessCardsDetected.Title"),message:(0,_l10n2.default)("Tx.Alert.MultipleContactlessCardsDetected.Msg"),cancel:(0,_l10n2.default)("Ok")},function(){t(D.retry)})},m),H=(u={},u[_sdkErrors.transaction.mustSwipeCard.code]=function(e,t){v._mustSwipeCardHandler(e,t)},u[_sdkErrors.transaction.amountTooLow.code]=function(e,t){var r=messageHelper.formattedAmount(v.context.invoice.currency,_Merchant2.default.active.cardSettings.minimum);v.errorHandlerCompletion(e,t,D.retry,!0,r,_retailPaymentDevice.PaymentDevice.Message.AmountTooLow,_retailPaymentDevice.PaymentDevice.Message.AmountTooLowRemoveCard,g.amountTooLow,C.ok)},u[_sdkErrors.transaction.amountTooHigh.code]=function(e,t){var r=messageHelper.formattedAmount(v.context.invoice.currency,_Merchant2.default.active.cardSettings.maximum);v.errorHandlerCompletion(e,t,D.retry,!0,r,_retailPaymentDevice.PaymentDevice.Message.AmountTooHigh,_retailPaymentDevice.PaymentDevice.Message.AmountTooHighRemoveCard,g.amountTooHigh,C.ok)},u[_sdkErrors.transaction.refundCardMismatch.code]=function(e,t){v.errorHandlerCompletion(e,t,D.abort,!1,v.formattedAmount,_retailPaymentDevice.PaymentDevice.Message.RefundCardMismatch,_retailPaymentDevice.PaymentDevice.Message.RefundCardMismatchRemoveCard,g.refundCardMismatch,C.ok)},u[_sdkErrors.transaction.customerCancel.code]=function(e,t){v.errorHandlerCompletion(e,t,D.abort,!1,v.formattedAmount,_retailPaymentDevice.PaymentDevice.Message.TransactionCancelled,_retailPaymentDevice.PaymentDevice.Message.TransactionCancelledRemoveCard,g.cancelled,C.ok)},u[_sdkErrors.transaction.tryDifferentInterface.code]=function(e,t){Log.debug(function(){return"Will activate Chip & Swipe form factors for handling tryDifferentInterface API Error for "+v.context.id}),v._startListeningForPayments(),v._updateDisplay(e,_retailPaymentDevice.PaymentDevice.Message.UnableToReadNfcCard,v.formattedAmount,{title:(0,_l10n2.default)("Tx.Alert.TapDifferentCard.Title"),message:(0,_l10n2.default)("Tx.Alert.TapDifferentCard.Msg"),cancel:(0,_l10n2.default)("Ok")},function(){v.context.promptForPaymentInstrument(),t(D.retry)})},u);this.errorHandlers=(p={},p[_retailPaymentDevice.deviceErrorDomain]=(f={},f[_retailPaymentDevice.FormFactor.None]=F,f[_retailPaymentDevice.FormFactor.EmvCertifiedContactless]=(0,_manticoreUtil.extend)(M,F),f[_retailPaymentDevice.FormFactor.Chip]=(0,_manticoreUtil.extend)(T,F),f[_retailPaymentDevice.FormFactor.MagneticCardSwipe]=(0,_manticoreUtil.extend)(x,F),f),p[_sdkErrors.domain.retail]=(y={},y[_retailPaymentDevice.FormFactor.None]=I,y[_retailPaymentDevice.FormFactor.EmvCertifiedContactless]=(0,_manticoreUtil.extend)(w,I),y[_retailPaymentDevice.FormFactor.Chip]=(0,_manticoreUtil.extend)(E,I),y[_retailPaymentDevice.FormFactor.MagneticCardSwipe]=(0,_manticoreUtil.extend)(A,I),y),p[_sdkErrors.domain.transaction]=(_={},_[_retailPaymentDevice.FormFactor.None]=H,_[_retailPaymentDevice.FormFactor.EmvCertifiedContactless]=(0,_manticoreUtil.extend)(k,H),_[_retailPaymentDevice.FormFactor.Chip]=H,_[_retailPaymentDevice.FormFactor.MagneticCardSwipe]=(0,_manticoreUtil.extend)(S,H),_[_retailPaymentDevice.FormFactor.ManualCardEntry]=H,_),p)}return e._doNothing=function(e,t){t(null)},e.prototype.errorHandlerCompletion=function(t,r,n,a,i,o,c,l,s){var d=o,m=t&&t.isConnected()&&t.cardInSlot,u={title:(0,_l10n2.default)("Tx.Alert."+l+".Title"),message:a?(0,_l10n2.default)("Tx.Alert."+l+".Msg",i):(0,_l10n2.default)("Tx.Alert."+l+".Msg"),cancel:(0,_l10n2.default)(""+s)};l===e.errors.genericError&&(u.message=(0,_l10n2.default)("Tx.Alert.GenericError."+(this.context.isRefund()?e.displayMessage.refundMessage:e.displayMessage.paymentMessage))),m&&(u=this._cardInSlotHelper(t,r,n,u),d=c),this._updateDisplay(t,d,i,u,function(){m||r(n)})},e.prototype._cardInSlotHelper=function(t,r,n,a){var i=this;return a.message=a.message.concat((0,_l10n2.default)(e.displayMessage.removeCard)),delete a.cancel,t.waitForCardRemoval(function(){i.alert&&i.alert.dismiss(),r(n)}),a},e.prototype._startListeningForPayments=function(){var e=this;Log.debug(function(){return"Will activate Chip & Swipe form factors for "+e.context.id}),this.context.setPaymentState(_transactionStates.PaymentState.retry),this.context.deviceController.activate({showPrompt:!1,formFactors:[_retailPaymentDevice.FormFactor.Chip,_retailPaymentDevice.FormFactor.MagneticCardSwipe],syncInvoiceTotal:!1})},e.prototype._mustSwipeCardHandler=function(t,r){this._updateDisplay(t,null,null,{title:(0,_l10n2.default)("Tx.Alert.ReadyForSwipeOnly.Title"),message:(0,_l10n2.default)("Tx.Alert.ReadyForSwipeOnly.Msg"),imageIcon:"img_emv_swipe"}),this.context.allowFallBackSwipe=!0,r(e.action.retryWithSwipe)},e.prototype._nfcPaymentDeclineErrorHandler=function(t,r){var n=this;this._updateDisplay(t,_retailPaymentDevice.PaymentDevice.Message.NfcDecline,null,{title:(0,_l10n2.default)("Tx.Alert.NfcPaymentDeclined.Title"),message:(0,_l10n2.default)("Tx.Alert.NfcPaymentDeclined.Msg"),buttons:[(0,_l10n2.default)("Ok")],cancel:(0,_l10n2.default)("Cancel")},function(t,a){0===a?(n.context.promptForPaymentInstrument(null,new Set([_retailPaymentDevice.FormFactor.Chip,_retailPaymentDevice.FormFactor.MagneticCardSwipe])),r(e.action.retryWithInsertOrSwipe)):r(e.action.abort)})},e.prototype._insertContactIssuer=function(t,r,n){var a=n?e.action.offlineDecline:e.action.abort;this.errorHandlerCompletion(t,r,a,!1,this.formattedAmount,_retailPaymentDevice.PaymentDevice.Message.ContactIssuer,_retailPaymentDevice.PaymentDevice.Message.ContactIssuerRemoveCard,e.errors.blockedCard,e.displayMessage.ok)},e.prototype._updateDisplay=function(e,t,r,n,a){var i=this,o=function(){if(!n)return void(a&&a());i.alert=_manticore2.default.alert(n,function(e,t){i.alert&&i.alert.dismiss(),a&&a(e,t)}),n.cancel||n.buttons||!a||a(i.alert)};e&&t?e.display({id:t,substitutions:r},o):o()},e.prototype.handle=function(t,r,n,a){if(Log.debug(function(){return"Handling error with code: "+t.code+", domain: "+t.domain+", formFactor: "+(0,_manticoreUtil.getPropertyName)(_retailPaymentDevice.FormFactor,r)+", device: "+(n?n.id:"<no device>")}),t.domain&&r&&this.errorHandlers[t.domain]&&this.errorHandlers[t.domain][r]&&this.errorHandlers[t.domain][r][t.code]){var i=this.errorHandlers[t.domain][r][t.code];try{return void i(n,a)}catch(e){throw Log.error("Error ("+t.domain+":"+t.code+") executing handler "+i+"\n"+e),e}}Log.warn("No handlers were defined for domain: '"+t.domain+"' form factor : '"+(0,_manticoreUtil.getPropertyName)(_retailPaymentDevice.FormFactor,r)+"' and Error code "+t.code),this.errorHandlerCompletion(n,a,e.action.abort,!1,this.formattedAmount,_retailPaymentDevice.PaymentDevice.Message.TransactionCancelled,_retailPaymentDevice.PaymentDevice.Message.TransactionCancelledRemoveCard,e.errors.genericError,e.displayMessage.ok)},e}();exports.default=PaymentErrorHandler,PaymentErrorHandler.action={offlineDecline:"OfflineDecline",abort:"abort",retry:"retry",retryWithInsertOrSwipe:"retryWithInsertOrSwipe",retryWithInsert:"retryWithInsert",retryWithSwipe:"retryWithSwipe"},PaymentErrorHandler.errors={genericError:"GenericError",cancelled:"Cancelled",amountTooLow:"AmountTooLow",amountTooHigh:"AmountTooHigh",refundCardMismatch:"Refund.CardMismatch",blockedCard:"BlockedCard"},PaymentErrorHandler.displayMessage={ok:"Ok",done:"Done",cancel:"Cancel",removeCard:"RemoveCard",refundMessage:"RefundMessage",paymentMessage:"PaymentMessage"};

},{"../common/Merchant":3,"../common/l10n":13,"../common/sdkErrors":18,"../transaction/transactionStates":90,"./messageHelper":28,"manticore":213,"manticore-log":208,"manticore-util":212,"retail-payment-device":356}],26:[function(require,module,exports){
"use strict";function _interopRequireWildcard(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}exports.__esModule=!0;var _manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_messageHelper=require("./messageHelper"),messageHelper=_interopRequireWildcard(_messageHelper),_BaseTransactionFlow2=require("./BaseTransactionFlow"),_BaseTransactionFlow3=_interopRequireDefault(_BaseTransactionFlow2),_MerchantTakePaymentStep=require("./steps/MerchantTakePaymentStep"),_MerchantTakePaymentStep2=_interopRequireDefault(_MerchantTakePaymentStep),_UpdateInvoicePaymentStep=require("./steps/UpdateInvoicePaymentStep"),_UpdateInvoicePaymentStep2=_interopRequireDefault(_UpdateInvoicePaymentStep),_ReceiptStep=require("./steps/ReceiptStep"),_ReceiptStep2=_interopRequireDefault(_ReceiptStep),Log=(0,_manticoreLog2.default)("flow.paymentFlow"),PaymentFlow=function(e){function t(n,r){_classCallCheck(this,t),Log.debug("Initializing Payment Flow");var o=_possibleConstructorReturn(this,e.call(this,null,n,r));return e.prototype.setFlowSteps.call(o,"Payment",[o.createFlowMessageStep(messageHelper.showProcessingMessage),o.saveInvoiceStep,new _MerchantTakePaymentStep2.default(n).flowStep,o.createFlowMessageStep(messageHelper.showCompleteMessage)]).setCompletionSteps("Payment-Receipt",[new _UpdateInvoicePaymentStep2.default(n).flowStep,new _ReceiptStep2.default(o.context).flowStep]).startFlow(),o}return _inherits(t,e),t}(_BaseTransactionFlow3.default);exports.default=PaymentFlow;

},{"./BaseTransactionFlow":20,"./messageHelper":28,"./steps/MerchantTakePaymentStep":36,"./steps/ReceiptStep":37,"./steps/UpdateInvoicePaymentStep":40,"manticore-log":208}],27:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}exports.__esModule=!0;var _manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_manticore=require("manticore"),_manticore2=_interopRequireDefault(_manticore),_retailPaymentDevice=require("retail-payment-device"),_BaseFlowAsync2=require("./BaseFlowAsync"),_BaseFlowAsync3=_interopRequireDefault(_BaseFlowAsync2),_l10n=require("../common/l10n"),_l10n2=_interopRequireDefault(_l10n),Log=(0,_manticoreLog2.default)("flow.ReaderTippingFlow"),ReaderTippingFlow=function(e){function t(r,n,i,a){_classCallCheck(this,t),Log.debug("Initializing Tipping Flow");var o=_possibleConstructorReturn(this,e.call(this));return o.device=r,o.amountBasedTip=n,o.invoice=i,o.completionCallback=a,o}return _inherits(t,e),t.prototype.start=function(){var t=this;return regeneratorRuntime.async(function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,regeneratorRuntime.awrap(e.prototype.setFlowSteps.call(this,"Tipping",[this._stopBatteryPollStep,this._createFlowMessageStep,this._requestForTip,this._receiveTip,this._confirmTip]));case 2:return e.prototype.addFlowEndedHandler.call(this,function(){return t._completeTippingFlow()}),r.next=5,regeneratorRuntime.awrap(e.prototype.startFlow.call(this));case 5:case"end":return r.stop()}},null,this)},t.prototype._stopBatteryPollStep=function(e){return regeneratorRuntime.async(function(t){for(;;)switch(t.prev=t.next){case 0:return Log.debug("Stop polling for key in TippingOnReader"),this.device.stopPollForBattery(),t.next=4,regeneratorRuntime.awrap(e.next());case 4:case"end":return t.stop()}},null,this)},t.prototype._createFlowMessageStep=function(e){var t,r=this;return regeneratorRuntime.async(function(n){for(;;)switch(n.prev=n.next){case 0:Log.debug("_createFlowMessageStep"),n.prev=1,t={title:(0,_l10n2.default)("EMV.Tip.Title"),buttons:[(0,_l10n2.default)("EMV.Tip.Buttons.NoTip")]},this.alert=_manticore2.default.alert(t,function(e,t){r.alert&&r.alert.dismiss(),Log.debug("No Tip button pushed so aborting..."),0===t&&(r.device.abortTipping().then(function(){return Log.debug("aborted tipping on the terminal")}).catch(function(e){Log.warn("could not abort tipping on terminal with error: "+e)}),r.abort())}),n.next=12;break;case 6:return n.prev=6,n.t0=n.catch(1),Log.warn("Aborting the ReaderTipping flow with error : "+n.t0+" "),n.next=11,regeneratorRuntime.awrap(this.abort(n.t0));case 11:return n.abrupt("return");case 12:return n.next=14,regeneratorRuntime.awrap(e.next());case 14:case"end":return n.stop()}},null,this,[[1,6]])},t.prototype._requestForTip=function(e){return regeneratorRuntime.async(function(t){for(;;)switch(t.prev=t.next){case 0:return Log.debug("Request Tip"),t.prev=1,t.next=4,regeneratorRuntime.awrap(this.device.requestForTip(this.invoice));case 4:t.next=12;break;case 6:return t.prev=6,t.t0=t.catch(1),Log.warn("Aborting the ReaderTipping requestForTip flow with error : "+t.t0+" "),t.next=11,regeneratorRuntime.awrap(this.abort(t.t0));case 11:return t.abrupt("return");case 12:return t.next=14,regeneratorRuntime.awrap(this._registerKeyPressListeners(e));case 14:case"end":return t.stop()}},null,this,[[1,6]])},t.prototype._receiveTip=function(e){var t;return regeneratorRuntime.async(function(r){for(;;)switch(r.prev=r.next){case 0:return Log.debug("Receiving Tip"),t=0,r.prev=2,r.next=5,regeneratorRuntime.awrap(this.device.promptForTip(this.amountBasedTip));case 5:t=r.sent,r.next=14;break;case 8:return r.prev=8,r.t0=r.catch(2),Log.warn("Aborting the tipping flow receiveTip with error : "+r.t0+" & tip : "+t),r.next=13,regeneratorRuntime.awrap(this.abort(r.t0));case 13:return r.abrupt("return");case 14:if(t){r.next=19;break}return Log.warn("Aborting the tipping flow receiveTip with failed tip : "+t),r.next=18,regeneratorRuntime.awrap(this.abort());case 18:return r.abrupt("return");case 19:return Log.info("Tip received : "+t),this.amountBasedTip?this.invoice.gratuityAmount=t:this.invoice.gratuityAmount=(t*this.invoice.subTotal/100).toFixed(2),r.next=23,regeneratorRuntime.awrap(e.next());case 23:case"end":return r.stop()}},null,this,[[2,8]])},t.prototype._confirmTip=function(e){return regeneratorRuntime.async(function(t){for(;;)switch(t.prev=t.next){case 0:return Log.debug("Confirm Tip"),t.prev=1,e.confirmTip=!0,t.next=5,regeneratorRuntime.awrap(this.device.confirmTip(this.invoice));case 5:t.next=13;break;case 7:return t.prev=7,t.t0=t.catch(1),Log.warn("Aborting the ReaderTipping confirmTip flow with error : "+t.t0+" "),t.next=12,regeneratorRuntime.awrap(this.abort(t.t0));case 12:return t.abrupt("return");case 13:return t.next=15,regeneratorRuntime.awrap(this._registerKeyPressListeners(e));case 15:case"end":return t.stop()}},null,this,[[1,7]])},t.prototype._registerKeyPressListeners=function(e){var t=this;return regeneratorRuntime.async(function(r){for(;;)switch(r.prev=r.next){case 0:this.device.once(_retailPaymentDevice.PaymentDevice.Event.cancelRequested,function(){return t._proceedWithFlow(e,!0)}),this.device.once(_retailPaymentDevice.PaymentDevice.Event.proceed,function(){return t._proceedWithFlow(e,!1)});case 2:case"end":return r.stop()}},null,this)},t.prototype._proceedWithFlow=function(e,t){return regeneratorRuntime.async(function(r){for(;;)switch(r.prev=r.next){case 0:return Log.debug("_proceedWithFlow"),r.next=3,regeneratorRuntime.awrap(this._deRegisterKeyPressListeners());case 3:if(!t){r.next=16;break}if(!e.confirmTip){r.next=11;break}return e.confirmTip=!1,Log.debug("confirmTip cancelled so going back"),r.next=9,regeneratorRuntime.awrap(e.back());case 9:r.next=14;break;case 11:return Log.debug("Tip Cancelled"),r.next=14,regeneratorRuntime.awrap(this.abort());case 14:r.next=18;break;case 16:return r.next=18,regeneratorRuntime.awrap(e.next());case 18:case"end":return r.stop()}},null,this)},t.prototype._deRegisterKeyPressListeners=function(){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(this._removeListeners());case 2:case"end":return e.stop()}},null,this)},t.prototype._removeListeners=function(){var e,t,r,n,i,a,o,s,c,u,p;return regeneratorRuntime.async(function(l){for(;;)switch(l.prev=l.next){case 0:Log.debug("_removeListeners"),e=[_retailPaymentDevice.PaymentDevice.Event.cancelRequested,_retailPaymentDevice.PaymentDevice.Event.proceed],t=e,r=Array.isArray(t),n=0,t=r?t:t[Symbol.iterator]();case 3:if(!r){l.next=9;break}if(!(n>=t.length)){l.next=6;break}return l.abrupt("break",31);case 6:i=t[n++],l.next=13;break;case 9:if(n=t.next(),!n.done){l.next=12;break}return l.abrupt("break",31);case 12:i=n.value;case 13:a=i,o=this.device.listeners(a),s=Array.isArray(o),c=0,o=s?o:o[Symbol.iterator]();case 15:if(!s){l.next=21;break}if(!(c>=o.length)){l.next=18;break}return l.abrupt("break",29);case 18:u=o[c++],l.next=25;break;case 21:if(c=o.next(),!c.done){l.next=24;break}return l.abrupt("break",29);case 24:u=c.value;case 25:p=u,this.device.removeListener(a,p);case 27:l.next=15;break;case 29:l.next=3;break;case 31:case"end":return l.stop()}},null,this)},t.prototype.abort=function(e){return regeneratorRuntime.async(function(t){for(;;)switch(t.prev=t.next){case 0:return Log.debug(function(){return"abort with error: "+e}),this.alert&&(this.alert.dismiss(),delete this.alert),t.next=4,regeneratorRuntime.awrap(this._clearTip());case 4:return t.next=6,regeneratorRuntime.awrap(this.flow.abortFlow(e));case 6:case"end":return t.stop()}},null,this)},t.prototype._clearTip=function(){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:Log.debug("Tip Cleared"),this.invoice.gratuityAmount=0;case 2:case"end":return e.stop()}},null,this)},t.prototype._completeTippingFlow=function(){var e=this;return regeneratorRuntime.async(function(t){for(;;)switch(t.prev=t.next){case 0:return Log.debug(function(){return"completeTippingFlow with tipAmount: "+e.invoice.gratuityAmount}),this.alert&&(this.alert.dismiss(),delete this.alert),t.next=4,regeneratorRuntime.awrap(this._removeListeners());case 4:return Log.debug("Start polling for battery"),t.next=7,regeneratorRuntime.awrap(this.device.startPollForBattery());case 7:this.completionCallback();case 8:case"end":return t.stop()}},null,this)},t}(_BaseFlowAsync3.default);exports.default=ReaderTippingFlow;

},{"../common/l10n":13,"./BaseFlowAsync":19,"manticore":213,"manticore-log":208,"retail-payment-device":356}],28:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function formattedAmount(e,t){return{amount:(0,_retailSDKUtil.getAmountWithCurrencySymbol)(e,t)}}function formattedInvoiceTotal(e){return formattedAmount(e.currency,e.total)}function formattedRefundTotal(e){return formattedAmount(e.invoice.currency,e.refundAmount)}function displayOrReuseAlert(e,t){return e.alert=_manticore2.default.alert(t,function(){}),e.alert}function readerDisplay(e,t,a,n,r){var i=e.deviceController.selectedDevice;e.card&&e.card.reader&&(i=e.card.reader),i?i.display({id:t,substitutions:a,displaySystemIcons:r},n):n&&n()}function showSimpleMessage(e,t,a,n){return displayOrReuseAlert(n,{title:e,message:t,showActivity:a,replace:!0})}function showProcessingMessage(e,t,a){var n=e.card&&e.card.formFactor===_retailPaymentDevice.FormFactor.Chip,r={title:n?(0,_l10n2.default)("EMV.DoNotRemove"):(0,_l10n2.default)("EMV.Processing"),message:n?(0,_l10n2.default)("EMV.Processing"):null,showActivity:!0,replace:!0,audio:{file:"success_card_read.mp3"}};e.pinPresent&&(r.message=n?(0,_l10n2.default)("EMV.ProcessingPinOk"):(0,_l10n2.default)("EMV.PinOk"));var i=_manticore2.default.alert(r,function(){});t.alert=i;var s=n?_retailPaymentDevice.PaymentDevice.Message.ProcessingContact:_retailPaymentDevice.PaymentDevice.Message.Processing;e.pinPresent&&(s=n?_retailPaymentDevice.PaymentDevice.Message.ProcessingContactWithPin:_retailPaymentDevice.PaymentDevice.Message.ProcessingWithPin),readerDisplay(e,s,e.isRefund()?formattedRefundTotal(e):formattedInvoiceTotal(e.invoice),function(){return a(i)})}function showProcessingWithPinMessage(e,t,a){readerDisplay(e,_retailPaymentDevice.PaymentDevice.Message.ProcessingWithPin,null,a)}function showCancellationMessage(e,t,a){var n=showSimpleMessage((0,_l10n2.default)("EMV.Cancelling"),null,!0,t);readerDisplay(e,_retailPaymentDevice.PaymentDevice.Message.TransactionCancelling,null,function(){return a(n)})}function showFinalizeMessage(e,t,a){var n=showSimpleMessage((0,_l10n2.default)("EMV.Finalize"),null,!0,t),r=formattedInvoiceTotal(e.invoice);readerDisplay(e,_retailPaymentDevice.PaymentDevice.Message.CompletingPayment,r,function(){return a(n)})}function showRefundProcessingMessage(e,t,a){return a(showSimpleMessage((0,_l10n2.default)("EMV.ProcessingRefund"),null,!0,t))}function showRemoveCardMessage(e,t,a){var n=formattedInvoiceTotal(e.invoice),r="EMV.Complete",i="EMV.Remove",s=_retailPaymentDevice.PaymentDevice.Message.PaidRemoveCard;e.isRefund()&&(n=formattedRefundTotal(e),r="EMV.RefundComplete",s=_retailPaymentDevice.PaymentDevice.Message.RefundRemoveCard),t.error&&(r="EMV.Remove",i="",s="",n="");var o=showSimpleMessage((0,_l10n2.default)(r,n),(0,_l10n2.default)(i),!1,t);readerDisplay(e,s,n,function(){return a(o)})}function showCompleteMessage(e,t,a){var n=e.isRefund()?formattedRefundTotal(e):formattedInvoiceTotal(e.invoice);readerDisplay(e,e.isRefund()?_retailPaymentDevice.PaymentDevice.Message.Refund:_retailPaymentDevice.PaymentDevice.Message.Paid,n,function(){return a(t)})}function ifFailureShowMessage(e,t,a){if(e.isRefund()&&t.error){var n=formattedRefundTotal(e);readerDisplay(e,_retailPaymentDevice.PaymentDevice.Message.RefundFailed,n,function(){return a(t)})}else a(t)}function showSelectApplicationPrompt(e,t,a,n){for(var r=[],i=a,s=Array.isArray(i),o=0,i=s?i:i[Symbol.iterator]();;){var l;if(s){if(o>=i.length)break;l=i[o++]}else{if(o=i.next(),o.done)break;l=o.value}var c=l;r.push(c[1]||c[0])}return t.alert=_manticore2.default.alert({title:(0,_l10n2.default)("EMV.Select"),buttons:r},function(e,t){if(n){var r=a[t][0],i=a[t][1];n(r,i)}}),t.alert}exports.__esModule=!0,exports.formattedAmount=formattedAmount,exports.formattedInvoiceTotal=formattedInvoiceTotal,exports.formattedRefundTotal=formattedRefundTotal,exports.readerDisplay=readerDisplay,exports.showSimpleMessage=showSimpleMessage,exports.showProcessingMessage=showProcessingMessage,exports.showProcessingWithPinMessage=showProcessingWithPinMessage,exports.showCancellationMessage=showCancellationMessage,exports.showFinalizeMessage=showFinalizeMessage,exports.showRefundProcessingMessage=showRefundProcessingMessage,exports.showRemoveCardMessage=showRemoveCardMessage,exports.showCompleteMessage=showCompleteMessage,exports.ifFailureShowMessage=ifFailureShowMessage,exports.showSelectApplicationPrompt=showSelectApplicationPrompt;var _retailPaymentDevice=require("retail-payment-device"),_manticore=require("manticore"),_manticore2=_interopRequireDefault(_manticore),_l10n=require("../common/l10n"),_l10n2=_interopRequireDefault(_l10n),_retailSDKUtil=require("../common/retailSDKUtil");

},{"../common/l10n":13,"../common/retailSDKUtil":17,"manticore":213,"retail-payment-device":356}],29:[function(require,module,exports){
"use strict";function _interopRequireWildcard(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}exports.__esModule=!0;var _retailPaymentDevice=require("retail-payment-device"),_manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_messageHelper=require("./messageHelper"),messageHelper=_interopRequireWildcard(_messageHelper),_UpdateInvoicePaymentStep=require("./steps/UpdateInvoicePaymentStep"),_UpdateInvoicePaymentStep2=_interopRequireDefault(_UpdateInvoicePaymentStep),_BaseTransactionFlow2=require("./BaseTransactionFlow"),_BaseTransactionFlow3=_interopRequireDefault(_BaseTransactionFlow2),_CheckRefundEligibilityStep=require("./steps/CheckRefundEligibilityStep"),_CheckRefundEligibilityStep2=_interopRequireDefault(_CheckRefundEligibilityStep),_IssueRefundStep=require("./steps/IssueRefundStep"),_IssueRefundStep2=_interopRequireDefault(_IssueRefundStep),_RemoveCardStep=require("./steps/RemoveCardStep"),_RemoveCardStep2=_interopRequireDefault(_RemoveCardStep),_ReceiptStep=require("./steps/ReceiptStep"),_ReceiptStep2=_interopRequireDefault(_ReceiptStep),Log=(0,_manticoreLog2.default)("flow.refundFlow"),RefundFlow=function(e){function t(n,a,r){_classCallCheck(this,t),Log.debug("Initializing Refund Flow");var i=_possibleConstructorReturn(this,e.call(this,n,a,r));e.prototype.setFlowSteps.call(i,"Refund",[function(e){this.card&&(this.card.reader.once(_retailPaymentDevice.PaymentDevice.Event.cardRemoved,this.transactionCancelRequested),this.card.reader.once(_retailPaymentDevice.PaymentDevice.Event.cancelRequested,this.transactionCancelRequested),this.card.reader.once(_retailPaymentDevice.PaymentDevice.Event.cancelled,this.transactionCancelled)),e.next()},i.createFlowMessageStep(messageHelper.showProcessingMessage),function(e){this.card?this.card.reader.abortTransaction(this.context,function(){e.next()}):e.next()},new _CheckRefundEligibilityStep2.default(a).flowStep,i.createFlowMessageStep(messageHelper.showRefundProcessingMessage),function(e){this._removePaymentCancelListeners(),e.next()},new _IssueRefundStep2.default(a).flowStep,new _RemoveCardStep2.default(a).flowStep,i.createFlowMessageStep(messageHelper.showCompleteMessage)]).addFlowEndedHandler(function(){return i._removePaymentCancelListeners()}).setCompletionSteps("Refund-Receipt",[new _UpdateInvoicePaymentStep2.default(a).flowStep,i.createFlowMessageStep(messageHelper.ifFailureShowMessage),new _ReceiptStep2.default(i.context).flowStep]);var o=a.invoice.payments&&a.invoice.payments[0];return i.flow.data.invoiceId=a.invoice.payPalId,Log.debug("PaymentToRefund : "+JSON.stringify(o)+" with actual refund amount : "+a.refundAmount),o&&(i.flow.data.transactionNumber=o.transactionID,i.flow.data.paymentMethod=o.method),i.startFlow(),i}return _inherits(t,e),t.prototype._removePaymentCancelListeners=function(){this.card&&(this.card.reader.removeListener(_retailPaymentDevice.PaymentDevice.Event.cardRemoved,this.transactionCancelRequested),this.card.reader.removeListener(_retailPaymentDevice.PaymentDevice.Event.cancelRequested,this.transactionCancelRequested),this.card.reader.removeListener(_retailPaymentDevice.PaymentDevice.Event.cancelled,this.transactionCancelled))},t}(_BaseTransactionFlow3.default);exports.default=RefundFlow;

},{"./BaseTransactionFlow":20,"./messageHelper":28,"./steps/CheckRefundEligibilityStep":31,"./steps/IssueRefundStep":35,"./steps/ReceiptStep":37,"./steps/RemoveCardStep":38,"./steps/UpdateInvoicePaymentStep":40,"manticore-log":208,"retail-payment-device":356}],30:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}exports.__esModule=!0;var _manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_Merchant=require("../../common/Merchant"),_Merchant2=_interopRequireDefault(_Merchant),_FlowStepAsync2=require("./FlowStepAsync"),_FlowStepAsync3=_interopRequireDefault(_FlowStepAsync2),_sdkErrors=require("../../common/sdkErrors"),_CaptureResponse=require("../../transaction/CaptureResponse"),_CaptureResponse2=_interopRequireDefault(_CaptureResponse),Log=(0,_manticoreLog2.default)("flow.step.capture"),CaptureStep=function(e){function t(r){_classCallCheck(this,t);var n=_possibleConstructorReturn(this,e.call(this));return n.context=r,n}return _inherits(t,e),t.prototype.execute=function(e){var t,r,n=this;return regeneratorRuntime.async(function(o){for(;;)switch(o.prev=o.next){case 0:if(!e.data.error){o.next=5;break}return Log.warn("Skip capturing transaction. Reason: One/more of previous steps logged an error"),o.next=4,regeneratorRuntime.awrap(e.nextOrAbort(e.data.error));case 4:return o.abrupt("return");case 5:if(t=_Merchant2.default.active,this.context.authorizationId){o.next=11;break}return Log.error("No authorization ID found. Aborting."),o.next=10,regeneratorRuntime.awrap(e.abortFlow(_sdkErrors.transaction.missingTransactionNumber));case 10:return o.abrupt("return");case 11:return o.next=13,regeneratorRuntime.awrap(this._buildRequest(t));case 13:r=o.sent,Log.info("Capturing for authorization ID: "+this.context.authorizationId+", amount: "+this.context.captureAmount),t.request({service:"payments",op:"/authorization/"+this.context.authorizationId+"/capture",format:"json",method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(r)},function(t,r){return regeneratorRuntime.async(function(o){for(;;)switch(o.prev=o.next){case 0:return o.next=2,regeneratorRuntime.awrap(n._processResult(e,t,r));case 2:case"end":return o.stop()}},null,n)});case 16:case"end":return o.stop()}},null,this)},t.prototype._buildRequest=function(e){var t;return regeneratorRuntime.async(function(r){for(;;)switch(r.prev=r.next){case 0:return t={is_final_capture:!0},this.context.captureAmount&&(t.amount={total:this.context.captureAmount,currency:e.currency}),r.abrupt("return",t);case 3:case"end":return r.stop()}},null,this)},t.prototype._processResult=function(e,t,r){var n;return regeneratorRuntime.async(function(o){for(;;)switch(o.prev=o.next){case 0:return e.data.tx={},n=t,t?(Log.error(function(){return"got an error after request "+JSON.stringify(t)}),"AUTHORIZATION_ALREADY_COMPLETED"===t.code?n=_sdkErrors.transaction.authorizationAlreadyCompleted:"AUTHORIZATION_EXPIRED"===t.code?n=_sdkErrors.transaction.authorizationExpired:"AUTHORIZATION_ID_DOES_NOT_EXIST"===t.code?n=_sdkErrors.transaction.authorizationIdDoesNotExists:"AUTHORIZATION_VOIDED"===t.code?n=_sdkErrors.transaction.authorizationVoided:(n=_sdkErrors.transaction.captureFailed,n.developerMessage=JSON.stringify(t)),e.data.error=n):r&&r.body?(Log.info("finished API call the response is "+JSON.stringify(r.body)),e.data.tx=new _CaptureResponse2.default(r.body),Log.info("("+this.context.authorizationId+") Successfully captured. txRecord: "+JSON.stringify(e.data.tx))):Log.error("("+this.context.id+") Something went wrong for "+this.context.authorizationId),o.next=5,regeneratorRuntime.awrap(e.nextOrAbort(n));case 5:case"end":return o.stop()}},null,this)},t}(_FlowStepAsync3.default);exports.default=CaptureStep;

},{"../../common/Merchant":3,"../../common/sdkErrors":18,"../../transaction/CaptureResponse":72,"./FlowStepAsync":34,"manticore-log":208}],31:[function(require,module,exports){
"use strict";function _interopRequireWildcard(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}exports.__esModule=!0;var _manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_moment=require("moment"),_moment2=_interopRequireDefault(_moment),_FlowStep2=require("./FlowStep"),_FlowStep3=_interopRequireDefault(_FlowStep2),_Merchant=require("../../common/Merchant"),_Merchant2=_interopRequireDefault(_Merchant),_retailSDKUtil=require("../../common/retailSDKUtil"),retailSDKUtil=_interopRequireWildcard(_retailSDKUtil),_sdkErrors=require("../../common/sdkErrors"),Log=(0,_manticoreLog2.default)("flow.step.checkRefundEligibility"),CheckRefundEligibilityFlowStep=function(e){function t(r){_classCallCheck(this,t);var o=_possibleConstructorReturn(this,e.call(this));return o.context=r,o}return _inherits(t,e),t.prototype.execute=function(e){if(!this.context.card)return void e.next();if(e.data.error)return Log.warn("Skip Issuing refund. Reason: One/more of previous steps logged an error"),void e.next();var t=this._buildRequest(e);_Merchant2.default.active.request({service:"retail",op:"checkouts/"+e.data.transactionNumber+"/validateCard",format:"json",method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)},function(t,r){var o=null;!t&&r.body&&"ELIGIBLE"!==r.body.status&&(o=_sdkErrors.transaction.refundCardMismatch),e.nextOrAbort(o)})},t.prototype._buildRequest=function(){return{invoiceId:this.context.invoice.payPalId,dateTime:(0,_moment2.default)().format("YYYY-MM-DDTHH:mm:ssZZ"),card:retailSDKUtil.hereAPICardDataFromCard(this.context.card)}},t}(_FlowStep3.default);exports.default=CheckRefundEligibilityFlowStep;

},{"../../common/Merchant":3,"../../common/retailSDKUtil":17,"../../common/sdkErrors":18,"./FlowStep":33,"manticore-log":208,"moment":278}],32:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}exports.__esModule=!0;var _manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_sdkErrors=require("../../common/sdkErrors"),_FlowStep2=require("./FlowStep"),_FlowStep3=_interopRequireDefault(_FlowStep2),_Merchant=require("../../common/Merchant"),_Merchant2=_interopRequireDefault(_Merchant),Log=(0,_manticoreLog2.default)("flow.step.mft"),FinalizePaymentStep=function(e){function t(r){_classCallCheck(this,t);var o=_possibleConstructorReturn(this,e.call(this));return o.context=r,o.isContaclessMSDTransaction=r.card.isContactlessMSD,o}return _inherits(t,e),t.prototype.execute=function(e){var t=this;if(e.data.error)return Log.warn("Skipping Finalize payment. Reason: One/more of previous steps logged an error"),void e.next();if(!e.data.signature&&(!e.data.cardResponse||this.isContaclessMSDTransaction))return Log.debug("Skipping Finalize payment"),void e.next();var r=this.buildRequest(e);Log.debug("MFT request:\n"+JSON.stringify(r,null,4)),_Merchant2.default.active.request({service:"retail",op:"checkouts/"+(e.data.tx.transactionNumber||e.data.tx.transactionHandle),format:"json",method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(r)},function(r,o){var n=r,i=o&&o.body&&o.body.errorCode;i&&(n=(0,_sdkErrors.payPalError)(_sdkErrors.domain.retail,i,o.body.message).withDebugId(o.body.correlationId)),Log.debug("MFT response:\n"+JSON.stringify(o,null,"\t")+"\n");var a=null;return!o||n?(Log.error("MFT Error: "+JSON.stringify(n)+", Invoice Total: "+t.context.invoice.currency+" "+t.context.invoice.total+"\n "+JSON.stringify(o)),a=n||_sdkErrors.network.requestFailed,void e.abortFlow(a)):o.body?(e.data.tx.updateFromFinalize(o.body),Log.info("("+t.context.id+") Finalize payment response received for invoice total: "+t.context.invoice.currency+" "+t.context.invoice.total+", "+e.data.tx.toString()),void e.next()):void e.abortFlow(_sdkErrors.network.requestFailed)})},t.prototype.buildRequest=function(e){var t={invoiceId:this.context.invoice.payPalId};return e.data.cardResponse&&!this.isContaclessMSDTransaction&&(t.emvData=e.data.cardResponse.apdu.data.toString("hex"),t.responseCode=e.data.tx.responseCode),e.data.signature&&(t.signature=e.data.signature.toString("utf-8")),t},t}(_FlowStep3.default);exports.default=FinalizePaymentStep;

},{"../../common/Merchant":3,"../../common/sdkErrors":18,"./FlowStep":33,"manticore-log":208}],33:[function(require,module,exports){
"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _createClass=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),FlowStep=function(){function e(){_classCallCheck(this,e)}return e.prototype.execute=function(){throw new Error("FlowStep must define execute method.")},_createClass(e,[{key:"flowStep",get:function(){var e=this,t=function(t){e.execute(t)};return t.fnName=this.constructor.name,t}}]),e}();exports.default=FlowStep;

},{}],34:[function(require,module,exports){
"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _createClass=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),FlowStepAsync=function(){function e(){_classCallCheck(this,e)}return e.prototype.execute=function(){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:throw new Error("FlowStep must define execute method.");case 1:case"end":return e.stop()}},null,this)},_createClass(e,[{key:"flowStep",get:function(){var e=this,t=this,n=function(n){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(t.execute(n));case 2:case"end":return e.stop()}},null,e)};return n.fnName=this.constructor.name,n}}]),e}();exports.default=FlowStepAsync;

},{}],35:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}exports.__esModule=!0;var _manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_paypalInvoicing=require("paypal-invoicing"),_l10n=require("../../common/l10n"),_l10n2=_interopRequireDefault(_l10n),_Merchant=require("../../common/Merchant"),_Merchant2=_interopRequireDefault(_Merchant),_FlowStep2=require("./FlowStep"),_FlowStep3=_interopRequireDefault(_FlowStep2),_TransactionRecord=require("../../transaction/TransactionRecord"),_TransactionRecord2=_interopRequireDefault(_TransactionRecord),_sdkErrors=require("../../common/sdkErrors"),Log=(0,_manticoreLog2.default)("flow.step.issueRefund"),IssueRefundStep=function(e){function t(n){_classCallCheck(this,t);var o=_possibleConstructorReturn(this,e.call(this));return o.context=n,o}return _inherits(t,e),t.prototype.execute=function(e){var t=this;if(e.data.error)return Log.warn("Skip Issuing refund. Reason: One/more of previous steps logged an error"),void e.next();var n=_Merchant2.default.active,o=void 0,r=void 0,i=void 0;if(e.data.paymentMethod===_paypalInvoicing.InvoiceEnums.PaymentMethod.CASH||e.data.paymentMethod===_paypalInvoicing.InvoiceEnums.PaymentMethod.CHECK){if(!e.data.invoiceId)return Log.error("No invoiceId found for refund. Aborting."),void e.abortFlow(_sdkErrors.transaction.missingInvoiceId);o="invoicing",r="invoices/"+e.data.invoiceId+"/record-refund",i={},Log.info("Issuing refund for check/cash with invoiceId: "+e.data.invoiceId+", amount: "+this.context.refundAmount)}else{if(!e.data.transactionNumber)return Log.error("No transaction transactionNumber found. Aborting."),void e.abortFlow(_sdkErrors.transaction.missingTransactionNumber);o="payments",r="sale/"+e.data.transactionNumber+"/refund",i=this._buildRequest(n),Log.info("("+this.context.id+") Issuing refund for transaction number: "+e.data.transactionNumber+", amount: "+this.context.refundAmount)}n.request({service:o,op:r,format:"json",method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(i)},function(n,o){t._processResult(e,n,o)})},t.prototype._buildRequest=function(e){var t={is_non_platform_transaction:"YES"};return this.context.refundAmount&&(t.amount={total:this.context.refundAmount,currency:e.currency}),t},t.prototype._processResult=function(e,t,n){e.data.tx={},n&&n.body?e.data.tx=new _TransactionRecord2.default(n.body):e.data.paymentMethod===_paypalInvoicing.InvoiceEnums.PaymentMethod.CASH||e.data.paymentMethod===_paypalInvoicing.InvoiceEnums.PaymentMethod.CHECK?e.data.tx=new _TransactionRecord2.default({invoiceId:e.data.invoiceId}):Log.error("Neither card nor cash/check case! Check it out!"),t?t.message=(0,_l10n2.default)("Tx.RefundFailed"):Log.info("("+this.context.id+") Successfully refunded. txRecord: "+e.data.tx),e.nextOrAbort(t)},t}(_FlowStep3.default);exports.default=IssueRefundStep;

},{"../../common/Merchant":3,"../../common/l10n":13,"../../common/sdkErrors":18,"../../transaction/TransactionRecord":86,"./FlowStep":33,"manticore-log":208,"paypal-invoicing":279}],36:[function(require,module,exports){
"use strict";function _interopRequireWildcard(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}exports.__esModule=!0;var _manticore=require("manticore"),_manticore2=_interopRequireDefault(_manticore),_moment=require("moment"),_moment2=_interopRequireDefault(_moment),_retailPaymentDevice=require("retail-payment-device"),_manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_manticoreUtil=require("manticore-util"),_sdkErrors=require("../../common/sdkErrors"),_FlowStep2=require("./FlowStep"),_FlowStep3=_interopRequireDefault(_FlowStep2),_TransactionRecord=require("../../transaction/TransactionRecord"),_TransactionRecord2=_interopRequireDefault(_TransactionRecord),_retailSDKUtil=require("../../common/retailSDKUtil"),retailSDKUtil=_interopRequireWildcard(_retailSDKUtil),_Merchant=require("../../common/Merchant"),_Merchant2=_interopRequireDefault(_Merchant),_PaymentType=require("../../transaction/PaymentType"),_PaymentType2=_interopRequireDefault(_PaymentType),Log=(0,_manticoreLog2.default)("flow.step.mtp"),AuthCode=_retailPaymentDevice.PaymentDevice.authCode,MerchantTakePaymentStep=function(e){function t(r,o){_classCallCheck(this,t);var n=_possibleConstructorReturn(this,e.call(this));return n.context=r,n.instrument=r.card,n.voidFunc=o,n}return _inherits(t,e),t.prototype.execute=function(e){var t=this;if(this.context.paymentType===_PaymentType2.default.keyIn&&!(this.instrument instanceof _retailPaymentDevice.ManuallyEnteredCard))return void e.abort(_sdkErrors.transaction.cardTypeMismatch.withDevMessage("Expected card to be of type ManuallyEnteredCard"));this._getLocation(function(r,o){if(r)return Log.error("Error while retrieving location: "+r),void e.abort(_sdkErrors.transaction.locationError.withDevMessage("Error while retrieving location information."));Log.debug("Retrieved location information : "+JSON.stringify(o)),e.data.location=o,t._performMTP(e)})},t.prototype._performMTP=function(e){var t=this,r=_Merchant2.default.active,o=this._buildRequest(e.data.location);Log.debug(function(){return"MTP request :\n"+JSON.stringify(o,null,4)}),r.request({service:"retail",op:"checkouts",format:"json",method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(o)},function(r,n){var i=r,a=n&&n.body&&n.body.errorCode,u=n&&n.body&&n.body.warnings&&n.body.warnings[0];if(a&&(i=(0,_sdkErrors.payPalError)(_sdkErrors.domain.retail,a,n.body.message).withDebugId(n.body.correlationId)),u&&(i=(0,_sdkErrors.payPalError)(_sdkErrors.domain.retail,n.body.warnings[0].errorCode,n.body.warnings[0].message).withDebugId(n.body.correlationId)),Log.debug(function(){return"MTP response: "+JSON.stringify(n,null,4)}),e.data.tx=n&&n.body?new _TransactionRecord2.default(n.body):{},e.data.tx.card=t.context.card,t.context.paymentType!==_PaymentType2.default.card)return void e.nextOrAbort(i);var c=n&&n.body&&n.body.authCode&&"null"!==n.body.authCode?n.body.authCode:null,s=o&&o.card&&o.card.emvData&&(t.instrument.formFactor===_retailPaymentDevice.FormFactor.Chip||t.instrument.formFactor===_retailPaymentDevice.FormFactor.EmvCertifiedContactless);i?Log.error("MTP Error: "+JSON.stringify(i)+", isEmv: "+s+", formFactor: "+t.instrument.formFactor+",Invoice Total: "+t.context.invoice.currency+" "+t.context.invoice.total+",rz.statusCode: "+(n?n.statusCode:"empty")+", rz.body: "+JSON.stringify(n?n.body:{})):Log.info("("+t.context.id+") MTP response received for invoice total: "+t.context.invoice.currency+" "+t.context.invoice.total+",ff: "+(0,_manticoreUtil.getPropertyName)(_retailPaymentDevice.FormFactor,t.instrument.formFactor)+", AuthCode: "+(n&&n.body&&n.body.authCode)+","+e.data.tx.toString()),t._processResult(s,c,e,i)})},t.prototype._processResult=function(e,t,r,o){var n=this,i=function(e,t){if(r.data.cardResponse=t,r.data.error)return Log.info("("+n.context.id+") Voiding tx as flow was aborted when MTP request was in flight with error: "+JSON.stringify(r.data.error)),void(n.voidFunc&&n.voidFunc(r.data));r.nextOrAbort(o||e)};e?(t?r.data.tx.authCode=t:(r.data.tx.authCode=AuthCode.TransactionSuccess,o&&(r.data.tx.authCode=o.code===_sdkErrors.network.networkOffline.code?AuthCode.NoNetwork:AuthCode.TransactionFailure)),this._pushAuthCode(r.data.tx.authCode,i)):i(null,null)},t.prototype._pushAuthCode=function(e,t){var r=this;Log.debug("Pushing authCode : "+e+" to "+this.instrument.reader.id),this.instrument.reader.completeTransaction(e,function(o,n){if(o)return Log.error("("+r.context.id+") Error response on pushing auth code to terminal-"+o),void t(o,n);Log.info("("+r.context.id+") Pushed auth code ("+e+") to reader "+r.instrument.reader.id+". Response template: "+(n.apdu?n.apdu.template:"")),t(null,n)})},t.prototype._getLocation=function(e){Log.debug("getLocation"),_manticore2.default.getLocation(e)},t.prototype._buildRequest=function(e){var t={invoiceId:this.context.invoice.payPalId,paymentType:this.context.paymentType,latitude:e.latitude||0,longitude:e.longitude||0,dateTime:(0,_moment2.default)().format()};if(this.context.paymentType===_PaymentType2.default.card){var r=retailSDKUtil.hereAPICardDataFromCard(this.instrument);this.instrument.formFactor!==_retailPaymentDevice.FormFactor.MagneticCardSwipe&&(r.pinPresent=!!this.context.pinPresent),r.signatureRequired=this.instrument.isSignatureRequired,t.dateTime=this.instrument.timestamp||t.dateTime,t.card=r}if(this.context.paymentType===_PaymentType2.default.keyIn){var o=this.instrument.getExpiration()||"";t.paymentType=_PaymentType2.default.card,t.card={inputType:_PaymentType2.default.keyIn,accountNumber:this.instrument.getCardNumber(),expirationMonth:o.substr(0,2),expirationYear:o.substr(2,4),cvv:this.instrument.getCVV()}}return t},t}(_FlowStep3.default);exports.default=MerchantTakePaymentStep;

},{"../../common/Merchant":3,"../../common/retailSDKUtil":17,"../../common/sdkErrors":18,"../../transaction/PaymentType":78,"../../transaction/TransactionRecord":86,"./FlowStep":33,"manticore":213,"manticore-log":208,"manticore-util":212,"moment":278,"retail-payment-device":356}],37:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}exports.__esModule=!0;var _retailPaymentDevice=require("retail-payment-device"),_manticore=require("manticore"),_manticore2=_interopRequireDefault(_manticore),_manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_retailPageTracker=require("retail-page-tracker"),_ReceiptViewContent=require("../../transaction/ReceiptViewContent"),_l10n=require("../../common/l10n"),_l10n2=_interopRequireDefault(_l10n),_FlowStep2=require("./FlowStep"),_FlowStep3=_interopRequireDefault(_FlowStep2),_retailSDKUtil=require("../../common/retailSDKUtil"),_Merchant=require("../../common/Merchant"),_Merchant2=_interopRequireDefault(_Merchant),_ReceiptDestination=require("../../transaction/ReceiptDestination"),Log=(0,_manticoreLog2.default)("flow.step.receipt"),ReceiptStep=function(e){function t(i){_classCallCheck(this,t);var r=_possibleConstructorReturn(this,e.call(this));return r.context=i,r}return _inherits(t,e),t.prototype.execute=function(e){var t=this,i=[_retailPaymentDevice.FormFactor.Chip,_retailPaymentDevice.FormFactor.EmvCertifiedContactless,_retailPaymentDevice.FormFactor.MagneticCardSwipe];this.context.deactivateFormFactors(i,function(){}),e.data.tx=e.data.tx||{};var r=this.context.invoice,n=e.data.tx,a=e.data.error,o=(0,_retailSDKUtil.getAmountWithCurrencySymbol)(r.currency,this.context.refundAmount||r.total),c=new _ReceiptViewContent.ReceiptViewContent(o,this.context.isRefund(),a,n&&n.payer&&n.payer.maskedEmail,n&&n.payer&&n.payer.maskedPhone,this.context.additionalReceiptOptions);e.data.alert&&(e.data.alert.dismiss(),delete e.data.alert),_manticore2.default.offerReceipt({invoice:r,error:e.data.error,viewContent:c},function(i,a){a?"emailOrSms"===a.name?t._sendReceipt(e,a.value,r,n):(Log.info("("+t.context.id+") Custom receipt option selected "+a.value+":"+a.name),t.context.receiptHandler&&t.context.receiptHandler(a.value,a.name,e.data.tx),_retailPageTracker.Tracker.publishPageView(null,t.context.isRefund()?_retailPageTracker.pages.refundReceiptCustom.withAction(a.name):_retailPageTracker.pages.paymentReceiptCustom.withAction(a.name))):(_retailPageTracker.Tracker.publishPageView(null,t.context.isRefund()?_retailPageTracker.pages.refundReceiptNoThanks:_retailPageTracker.pages.paymentReceiptNoThanks),Log.debug(function(){return"Email/SMS receipt forwarding not required. Skipping receipt step. Native response: "+a}),e.next())})},t.prototype._sendReceipt=function(e,t,i,r){var n=this;Log.debug(function(){return"Forward receipt to "+t});var a=_manticore2.default.alert({showActivity:!0,title:(0,_l10n2.default)("Rcpt.Sending")},function(){}),o=r&&(r.transactionHandle||r.transactionNumber)||e.data.transactionNumber,c=this._transactionType(e),p=void 0,l=void 0;r&&r.payer&&(p=r.payer.customerId,l=r.payer.receiptPreferenceToken),_Merchant2.default.active.forwardReceipt(i,t,o,c,p,l,function(i){i?Log.error("Send receipt failed with "+JSON.stringify(i)):(Log.info("("+n.context.id+") Successfully forwarded receipt to "+t+" for txNumber: "+o),r.receiptDestination||(r.receiptDestination=new _ReceiptDestination.ReceiptDestination),t.indexOf("@")>0?(r.receiptDestination.type=_ReceiptDestination.ReceiptDestinationType.email,r.receiptDestination.email=t):r.receiptDestination.type=_ReceiptDestination.ReceiptDestinationType.text),a.dismiss(),e.next()})},t.prototype._transactionType=function(e){return e.data.error?(0,_retailSDKUtil.transactionCancelledError)(e.data.error)?"VOID":"DECLINE":this.context.type===_retailPaymentDevice.TransactionType.Refund?"REFUND":this.context.type===_retailPaymentDevice.TransactionType.PartialRefund?"PARTIAL":"SALE"},t}(_FlowStep3.default);exports.default=ReceiptStep;

},{"../../common/Merchant":3,"../../common/l10n":13,"../../common/retailSDKUtil":17,"../../transaction/ReceiptDestination":80,"../../transaction/ReceiptViewContent":81,"./FlowStep":33,"manticore":213,"manticore-log":208,"retail-page-tracker":324,"retail-payment-device":356}],38:[function(require,module,exports){
"use strict";function _interopRequireWildcard(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}exports.__esModule=!0;var _retailPaymentDevice=require("retail-payment-device"),_FlowStep2=require("./FlowStep"),_FlowStep3=_interopRequireDefault(_FlowStep2),_messageHelper=require("../messageHelper"),messageHelper=_interopRequireWildcard(_messageHelper),RemoveCardStep=function(e){function t(r){_classCallCheck(this,t);var o=_possibleConstructorReturn(this,e.call(this));return o.context=r,o}return _inherits(t,e),t.prototype.execute=function(e){var t=this.context.card;t&&t.formFactor===_retailPaymentDevice.FormFactor.Chip?(t.reader.waitForCardRemoval(function(){e.data.alert&&(e.data.alert.dismiss(),delete e.data.alert),e.next()}),messageHelper.showRemoveCardMessage(this.context,e.data,function(t){e.data.alert=t})):e.next()},t}(_FlowStep3.default);exports.default=RemoveCardStep;

},{"../messageHelper":28,"./FlowStep":33,"retail-payment-device":356}],39:[function(require,module,exports){
"use strict";function _interopRequireWildcard(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}exports.__esModule=!0;var _retailPaymentDevice=require("retail-payment-device"),_manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_SignatureReceiver=require("../../transaction/SignatureReceiver"),_SignatureReceiver2=_interopRequireDefault(_SignatureReceiver),_transactionEvent=require("../../transaction/transactionEvent"),_transactionEvent2=_interopRequireDefault(_transactionEvent),_FlowStep2=require("./FlowStep"),_FlowStep3=_interopRequireDefault(_FlowStep2),_messageHelper=require("../messageHelper"),messageHelper=_interopRequireWildcard(_messageHelper),Log=(0,_manticoreLog2.default)("flow.step.signature"),Message=_retailPaymentDevice.PaymentDevice.Message,SignatureStep=function(e){function t(r){_classCallCheck(this,t);var i=_possibleConstructorReturn(this,e.call(this));return i.context=r,i}return _inherits(t,e),t.prototype.execute=function(e){var r=this;if(!1===this.context.card.isSignatureRequired)return Log.debug("Skipping signature step. Reason: Signature not required for this transaction"),void e.next();if(this.context.emit(_transactionEvent2.default.willPresentSignature),e.data.error)return Log.debug("Skipping signature step. Reason: One/more of previous steps logged an error"),void e.next();var i=new _SignatureReceiver2.default(this.context,function(t,i){e.removeListener("aborted",r.dismissSignature),e.data.signature=i,Log.info("("+r.context.id+") Signature collected. err? "+!!t),e.nextOrAbort(t)});this.dismissSignature=function(){i.dismiss()},e.once("aborted",this.dismissSignature);var n=messageHelper.formattedInvoiceTotal(this.context.invoice),o=t.getReaderDisplayMessage(this.context.card);this.context.card.reader.display({id:o,substitutions:n},function(){e.data.alert&&e.data.alert.dismiss(),r.context._signatureCollector?r.context._signatureCollector(i):i.acquireSignature()})},t.getReaderDisplayMessage=function(e){return e.formFactor===_retailPaymentDevice.FormFactor.Chip?Message.SignatureForInsert:e.formFactor!==_retailPaymentDevice.FormFactor.EmvCertifiedContactless||e.isContactlessMSD?Message.SignatureForNonEmv:Message.SignatureForTap},t}(_FlowStep3.default);exports.default=SignatureStep;

},{"../../transaction/SignatureReceiver":83,"../../transaction/transactionEvent":89,"../messageHelper":28,"./FlowStep":33,"manticore-log":208,"retail-payment-device":356}],40:[function(require,module,exports){
"use strict";function _interopRequireWildcard(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e.default=t,e}function _interopRequireDefault(t){return t&&t.__esModule?t:{default:t}}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function _inherits(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}exports.__esModule=!0;var _moment=require("moment"),_moment2=_interopRequireDefault(_moment),_paypalInvoicing=require("paypal-invoicing"),_FlowStep2=require("./FlowStep"),_FlowStep3=_interopRequireDefault(_FlowStep2),_retailSDKUtil=require("../../common/retailSDKUtil"),retailSDKUtils=_interopRequireWildcard(_retailSDKUtil),UpdateInvoicePaymentStep=function(t){function e(n){_classCallCheck(this,e);var o=_possibleConstructorReturn(this,t.call(this));return o.context=n,o}return _inherits(e,t),e.prototype.execute=function(t){var e=t.data.error;if(e)retailSDKUtils.transactionCancelledError(e)?this.context.invoice.isCancelled=!0:this.context.invoice.isFailed=!0;else{var n=this.context.invoice,o=new _paypalInvoicing.InvoicePayment;o.type=_paypalInvoicing.InvoiceEnums.PaymentType.EXTERNAL,o.transactionID=t.data.tx.transactionNumber,o.transactionType="SALE",o.date=(0,_moment2.default)(),o.method=retailSDKUtils.getInvoiceEnumFromPaymentType(this.context.paymentType),o.amount=n.total,o.currency=n.currency,n.payments?n.payments.push(o):n.payments=[o],n.status=_paypalInvoicing.InvoiceEnums.Status.PAID,this.context.refundAmount&&(o.transactionType="REFUND",n.status=_paypalInvoicing.InvoiceEnums.Status.REFUNDED,this.context.refundAmount.lessThan(n.total)&&(n.status=_paypalInvoicing.InvoiceEnums.Status.PARTIALLY_REFUNDED),n.refundedAmount=this.context.refundAmount)}t.next()},e}(_FlowStep3.default);exports.default=UpdateInvoicePaymentStep;

},{"../../common/retailSDKUtil":17,"./FlowStep":33,"moment":278,"paypal-invoicing":279}],41:[function(require,module,exports){
(function (global){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var _NetworkResponse=require("./common/NetworkHandler/NetworkResponse"),_NetworkResponse2=_interopRequireDefault(_NetworkResponse);global._babelPolyfill||(require("core-js/es6/symbol"),require("core-js/es6/set"),require("core-js/fn/string/includes"),require("core-js/fn/object/is"),require("core-js/fn/array/of"),require("core-js/fn/array/from"),require("core-js/fn/array/find"),require("core-js/fn/array/find-index"),require("core-js/fn/symbol/iterator"));var Log=require("manticore-log")("root"),SDK=require("./sdk"),m=require("manticore");global.Promise=require("yaku"),global.regeneratorRuntime=require("babel-regenerator-runtime"),global.setTimeout||(global.setTimeout=function(e,r){return m.setTimeout(e,r||0)});try{Log.debug("Beginning SDK initialization."),m.export(require("retail-payment-device")),m.export(require("./paymentDevice/index")),m.export(require("./transaction/index")),m.export(_NetworkResponse2.default),m.export(require("paypal-invoicing")),m.export(require("manticore-paypalerror")),m.export(require("./common/RetailInvoice")),m.export(require("./common/SdkEnvironmentInfo")),m.ready(SDK),Log.debug("SDK initialization complete.")}catch(e){Log.error("Failed to complete initialization: "+e.message+"\n"+e.stack)}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./common/NetworkHandler/NetworkResponse":5,"./common/RetailInvoice":7,"./common/SdkEnvironmentInfo":8,"./paymentDevice/index":69,"./sdk":70,"./transaction/index":88,"babel-regenerator-runtime":93,"core-js/es6/set":98,"core-js/es6/symbol":99,"core-js/fn/array/find":101,"core-js/fn/array/find-index":100,"core-js/fn/array/from":102,"core-js/fn/array/of":103,"core-js/fn/object/is":104,"core-js/fn/string/includes":105,"core-js/fn/symbol/iterator":106,"manticore":213,"manticore-log":208,"manticore-paypalerror":209,"paypal-invoicing":279,"retail-payment-device":356,"yaku":371}],42:[function(require,module,exports){
(function (Buffer){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _retailPaymentDevice=require("retail-payment-device"),_manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),Log=(0,_manticoreLog2.default)("ingenico.cardStatus"),CardStatus=function(){function e(t){var r=this;_classCallCheck(this,e),this.response=t,this.isSignatureRequired=!1;var a=this.response.getStatus();145===a||144===a?this.formFactor=_retailPaymentDevice.FormFactor.Chip:148===a||147===a?this.formFactor=_retailPaymentDevice.FormFactor.EmvCertifiedContactless:149===a&&(this.formFactor=_retailPaymentDevice.FormFactor.MagneticCardSwipe);for(var i=this.response.apdu.tlvs.values,s=Array.isArray(i),n=0,i=s?i:i[Symbol.iterator]();;){var o;if(s){if(n>=i.length)break;o=i[n++]}else{if(n=i.next(),n.done)break;o=n.value}var u=o;40761===u.tagNumber?function(){var e=u.parse();Log.debug(function(){return"contactlessInfoByte = "+e}),r.emv=7===e}():14647845===u.tagNumber?(Log.debug("parsing ksn (tag 0xdf8225)"),this.ksn=u.parse(),Log.debug(function(){return"ksn (tag 0xdf8225) = "+r.ksn.toString("hex")})):14647843===u.tagNumber?this.sredData=u.parse():14647894===u.tagNumber?this.maskedTrack1=u.parse():14647895===u.tagNumber?this.maskedTrack2=u.parse():14659075===u.tagNumber?(Log.debug("parsing ksn (tag 0xdfae03)"),this.ksn=u.parse(),Log.debug(function(){return"ksn (tag 0xdfae03) = "+r.ksn.toString("hex")})):14659074===u.tagNumber?this.sredData=u.parse():40756===u.tagNumber&&this.formFactor===_retailPaymentDevice.FormFactor.Chip?function(){var e=u.parse();r.checkVal=e[0],Log.debug(function(){return"checkval = "+r.checkVal}),Log.debug(function(){return"tag 0x9f34 = "+e.toString("hex")}),r.isSignatureRequired=30==(63&e[0]),Log.debug(function(){return"tag 0x9f34 isSignatureRequired= "+r.isSignatureRequired})}():57199===u.tagNumber&&this.formFactor===_retailPaymentDevice.FormFactor.EmvCertifiedContactless&&function(){var e=u.parse();Log.debug(function(){return"tag 0xdf6f = "+e.toString("hex")}),r.isSignatureRequired=1==(1&e[1]),Log.debug(function(){return"tag 0xdf6f isSignatureRequired= "+r.isSignatureRequired})}()}this.p2pe=this.response.apdu.data.slice(1).toString("hex")}return e.prototype.getPresentedCard=function(e){var t=this,r=void 0;if(Log.debug("getPresentedCard"),this.formFactor===_retailPaymentDevice.FormFactor.MagneticCardSwipe)return Log.debug("Card Swiped"),this._magstripe(e);for(var a=this.response.apdu.tlvs.values,i=Array.isArray(a),s=0,a=i?a:a[Symbol.iterator]();;){var n;if(i){if(s>=a.length)break;n=a[s++]}else{if(s=a.next(),s.done)break;n=s.value}var o=n;if(80===o.tagNumber){var u=o.parse();"string"==typeof u&&/^[a-zA-Z\s]+$/.test(u)&&(this.cardIssuer=_retailPaymentDevice.CardDataUtil.getCardIssuerFromEmvAppLabel(u))}if(87===o.tagNumber){var c=o.parse();c=c.toString("hex");var g=c.substr(0,c.indexOf("d"));this.lastFour=g.substr(g.length-4)}}return this.formFactor===_retailPaymentDevice.FormFactor.Chip?(r=new _retailPaymentDevice.Card,r.formFactor=_retailPaymentDevice.FormFactor.Chip,r.reader=e,r.emvData=this.response,r.cardIssuer=this.cardIssuer,r.lastFourDigits=this.lastFour,r.isSignatureRequired=this.isSignatureRequired,Log.debug("EMV Card Inserted"),r):this.formFactor===_retailPaymentDevice.FormFactor.EmvCertifiedContactless?(Log.debug("EMV Card Contactless"),r=new _retailPaymentDevice.Card,r.formFactor=_retailPaymentDevice.FormFactor.EmvCertifiedContactless,r.emvData=this.response,r.reader=e,r.isContactlessMSD=!this.emv,r.cardIssuer=this.cardIssuer,r.lastFourDigits=this.lastFour,r.isSignatureRequired=this.isSignatureRequired,r):(Log.debug(function(){return"Unknown formFactor "+t.formFactor}),null)},e.prototype._magstripe=function(e){var t=new _retailPaymentDevice.MagneticCard,r=this.maskedTrack1||this.maskedTrack2,a=new Buffer(this.maskedTrack2,"hex").toString(),i=a.indexOf("="),s=a.substring(1,i);if(t.cardIssuer=_retailPaymentDevice.CardDataUtil.getCardIssuerFromCardNumber(s.substr(0,6)),t.lastFourDigits=s.substr(s.length-4),i>=0){var n=a.substring(i+5,i+6);"2"!==n&&"6"!==n||(Log.debug("Chip card was swiped"),t.chipCard=!0)}return t.formFactor=_retailPaymentDevice.FormFactor.MagneticCardSwipe,t.ksn=this.ksn?this.ksn.toString("hex"):"",t.reader=e,r&&r.length?(t.track2=this.response.apdu.data.toString("hex"),t):(Log.error("Missing track 1 and 2 from card swipe data"),t.failed=!0,t)},e.prototype.toString=function(){var e=[];return this.ksn&&(e.push("\nKSN: "),e.push(this.ksn.toString("hex"))),this.track2&&(e.push("\nTrack 2: "),e.push(this.track2.toString("hex"))),this.maskedTrack1&&(e.push("\nMasked Track 1: "),e.push(this.maskedTrack1.toString("hex"))),this.maskedTrack2&&(e.push("\nMasked Track 2: "),e.push(this.maskedTrack2.toString("hex"))),this.sredData&&(e.push("\nSRED: "),e.push(this.sredData.toString("hex"))),e.join("")},e}();exports.default=CardStatus;

}).call(this,require("buffer").Buffer)
},{"buffer":96,"manticore-log":208,"retail-payment-device":356}],43:[function(require,module,exports){
(function (Buffer){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}exports.__esModule=!0;var _manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_manticoreUtil=require("manticore-util"),_async=require("async"),_async2=_interopRequireDefault(_async),_retailPaymentDevice=require("retail-payment-device"),_BaseFlowAsync2=require("../flows/BaseFlowAsync"),_BaseFlowAsync3=_interopRequireDefault(_BaseFlowAsync2),_IngenicoDeviceUpdate=require("./SoftwareUpdate/IngenicoDeviceUpdate"),_IngenicoDeviceUpdate2=_interopRequireDefault(_IngenicoDeviceUpdate),Log=(0,_manticoreLog2.default)("ingenico.connectionFlow"),ConnectionFlow=function(e){function t(r,n){_classCallCheck(this,t);var i=_possibleConstructorReturn(this,e.call(this));return i.device=r,i.completionCallback=n,i}return _inherits(t,e),t.prototype.start=function(){var t=this;return regeneratorRuntime.async(function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,regeneratorRuntime.awrap(e.prototype.setFlowSteps.call(this,"Ingenico Connection",[this._retrieveBatteryInfo,this._tryQuickConnect,this._retrieveVersionInfo,this._retrieveDeviceCapabilities,this._checkFirmwareUpdate]));case 2:return e.prototype.addFlowEndedHandler.call(this,function(e){e.error||(t.device.performQuickConnect=!0),t.completionCallback(e.error)}),Log.debug(function(){return"Starting the connection flow for "+t.device.id}),r.next=6,regeneratorRuntime.awrap(e.prototype.startFlow.call(this));case 6:case"end":return r.stop()}},null,this)},t.prototype._tryQuickConnect=function(e){var t=this;if(this.device.performQuickConnect)return Log.debug(function(){return"Performing quick connect on "+t.device.id}),void e.completeFlow();e.next()},t.prototype._checkFirmwareUpdate=function(e){var t=this;if(this.device.pendingUpdate&&this.device.pendingUpdate.updateInProgress)return Log.debug(function(){return"Skipping firmware check as firmware update is in progress on "+t.device.id}),void e.next();_async2.default.parallel([function(e){return t.device.terminal.getFirmwareChecksum(e)},function(e){return t.device.terminal.getConfigVersion(e)}],function(r){r?(Log.warn(function(){return"Error querying for firmware updates... Will retry on the next connect for "+t.device.id}),e.next()):t._fetchSWInfoFromServer(e)})},t.prototype._retrieveBatteryInfo=function(e){return regeneratorRuntime.async(function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,regeneratorRuntime.awrap(this.device.retrieveBatteryInfoAsync());case 3:t.next=10;break;case 5:return t.prev=5,t.t0=t.catch(0),t.next=9,regeneratorRuntime.awrap(e.abortFlow(t.t0));case 9:return t.abrupt("return");case 10:return t.next=12,regeneratorRuntime.awrap(e.next());case 12:case"end":return t.stop()}},null,this,[[0,5]])},t.prototype._retrieveVersionInfo=function(e){var t;return regeneratorRuntime.async(function(r){for(;;)switch(r.prev=r.next){case 0:return r.prev=0,r.next=3,regeneratorRuntime.awrap(this.device.terminal.getFirmwareVersionInfoAsync());case 3:t=r.sent,this.setDeviceModel(t),r.next=12;break;case 7:return r.prev=7,r.t0=r.catch(0),r.next=11,regeneratorRuntime.awrap(e.abortFlow(r.t0));case 11:return r.abrupt("return");case 12:return r.next=14,regeneratorRuntime.awrap(e.next());case 14:case"end":return r.stop()}},null,this,[[0,7]])},t.prototype.setDeviceModel=function(e){var t=new Buffer(e,"hex"),r=t.toString(),n=r.substr(0,3).toLowerCase();Log.debug(function(){return"versionInfo string : "+r}),this.device.isMoby="mob"===n,this.device.isMoby&&(this.device.model=_retailPaymentDevice.ReaderModel.Moby3000),Log.info(this.device.id+" device.model identified as: "+(0,_manticoreUtil.getPropertyName)(_retailPaymentDevice.ReaderModel,this.device.model))},t.prototype._retrieveFirmwareChecksum=function(e){var t=this;return regeneratorRuntime.async(function(r){for(;;)switch(r.prev=r.next){case 0:if(!this.device.pendingUpdate||!this.device.pendingUpdate.updateInProgress){r.next=4;break}return Log.debug(function(){return"Skipping firmware check as firmware update is in progress on "+t.device.id}),e.completeFlow(),r.abrupt("return");case 4:return r.prev=4,r.next=7,regeneratorRuntime.awrap(this.device.terminal.getFirmwareChecksumAsync());case 7:r.next=14;break;case 9:return r.prev=9,r.t0=r.catch(4),r.next=13,regeneratorRuntime.awrap(e.abort(r.t0));case 13:return r.abrupt("return");case 14:return r.next=16,regeneratorRuntime.awrap(e.next());case 16:case"end":return r.stop()}},null,this,[[4,9]])},t.prototype._retrieveConfigVersion=function(e){return regeneratorRuntime.async(function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,regeneratorRuntime.awrap(this.device.terminal.getConfigVersionAsync());case 3:t.next=10;break;case 5:return t.prev=5,t.t0=t.catch(0),t.next=9,regeneratorRuntime.awrap(e.abort(t.t0));case 9:return t.abrupt("return");case 10:return t.next=12,regeneratorRuntime.awrap(e.next());case 12:case"end":return t.stop()}},null,this,[[0,5]])},t.prototype._retrieveDeviceCapabilities=function(e){var t,r,n,i,o=this;return regeneratorRuntime.async(function(a){for(;;)switch(a.prev=a.next){case 0:return t=void 0,a.prev=1,a.next=4,regeneratorRuntime.awrap(this.device.terminal.getDeviceCapabilitiesAsync());case 4:t=a.sent,a.next=12;break;case 7:return a.prev=7,a.t0=a.catch(1),a.next=11,regeneratorRuntime.awrap(e.abortFlow(a.t0));case 11:return a.abrupt("return");case 12:if(Log.debug(function(){return"Device Capabilities response : "+t}),r=new Buffer(t,"hex"),r=r.toString(),Log.debug(function(){return"Device Capabilities response string: "+r}),n=r.indexOf("RP"),i=r.substring(n+2,n+10)){a.next=23;break}return a.next=21,regeneratorRuntime.awrap(e.abortFlow());case 21:a.next=28;break;case 23:return this.device.serialNumber=i,this.device.setCardReaderToMerchant(i),Log.debug(function(){return"Reader Serial Number : "+o.device.serialNumber}),a.next=28,regeneratorRuntime.awrap(e.next());case 28:case"end":return a.stop()}},null,this,[[1,7]])},t.prototype._generateUpdateRequest=function(e){var t=65535&e.terminal.firmwareCustomVersion,r=e.terminal.firmwareCustomVersion>>16&65535;return{components:[{name:"ingenico_firmware",version:""+e.terminal.firmwareChecksum},{name:"ingenico_config",version:""+t},{name:"ingenico_capkeys",version:""+r}]}},t.prototype._fetchSWInfoFromServer=function(e){var t=this,r=this._generateUpdateRequest(this.device);this.device.app.getFirmwareUpdates(r,this.device.manufacturer,this.device.model,function(r,n){return!r&&n&&n.body?(t.serverSwInfo=n,Log.debug(function(){return"Received firmware update response for this.device: "+t.device}),n&&n.body?304===n.statusCode?(Log.debug(function(){return t.device.id+" Software update not needed"}),void e.next()):void t._checkUpdate(n.body.modules,e):(Log.warn("Unable to retrieve firmware update information due to rz"),n.body&&Log.warn(JSON.stringify(n.body,null,"\t")),void e.next())):(Log.error("Unable to retrieve firmware update information. Error: "+r),n&&n.body&&Log.warn(JSON.stringify(n.body,null,"\t")),void e.next())})},t.prototype._checkUpdate=function(e,t){Log.debug("Checking update"),_IngenicoDeviceUpdate2.default.needsUpdate(this.device,e)&&(this.device.updates=e,this.updateRequired=!0,this._notifyReaderUpdateRequired()),t.next()},t.prototype._notifyReaderUpdateRequired=function(){var e=this;Log.debug(function(){return"notifying reader status for "+e.device.id}),this.device.updates&&(Log.info(this.device.id+" needs update.\nUpdates(Modules: "+(this.device.updates?this.device.updates.length:0)+")\n"+JSON.stringify(this.device.updates)),this.device.updateRequired(new _IngenicoDeviceUpdate2.default(this.device)))},t}(_BaseFlowAsync3.default);exports.default=ConnectionFlow;

}).call(this,require("buffer").Buffer)
},{"../flows/BaseFlowAsync":19,"./SoftwareUpdate/IngenicoDeviceUpdate":48,"async":92,"buffer":96,"manticore-log":208,"manticore-util":212,"retail-payment-device":356}],44:[function(require,module,exports){
"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _createClass=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),_uniqueId=0,IngenicoCommand=function(){function e(t,n){_classCallCheck(this,e),this.id=_uniqueId+=1,this.name=t,this.apduCommand=n,this.callbacks=[],this.nativeCommand=null,this.sendAttempt=0}return e.prototype.toJSON=function(){return{id:this.id,name:this.name,apduCommand:this.apduCommand?this.apduCommand.toString("hex"):this._rawHex,isRawHex:!!this._rawHex,reuseIfQueued:this._reuseIfQueued,callbacks:this.callbacks.length,nativeCommandName:this.nativeCommand&&this.nativeCommand.name}},e.prototype.toString=function(){return JSON.stringify(this.toJSON())},_createClass(e,[{key:"rawHexCommand",set:function(e){this._rawHex=e},get:function(){return this._rawHex}},{key:"nameWithId",get:function(){return this.name+"-"+this.id}},{key:"reuseIfQueued",set:function(e){this._reuseIfQueued=e},get:function(){return this._reuseIfQueued}}]),e}();exports.default=IngenicoCommand;

},{}],45:[function(require,module,exports){
"use strict";function _interopRequireWildcard(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _toConsumableArray(e){if(Array.isArray(e)){for(var t=0,r=Array(e.length);t<e.length;t++)r[t]=e[t];return r}return Array.from(e)}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}exports.__esModule=!0;var _createClass=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),_manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_retailPaymentDevice=require("retail-payment-device"),_manticoreUtil=require("manticore-util"),Util=_interopRequireWildcard(_manticoreUtil),_ConnectionFlow=require("./ConnectionFlow"),_ConnectionFlow2=_interopRequireDefault(_ConnectionFlow),_Terminal=require("./Terminal"),_Terminal2=_interopRequireDefault(_Terminal),_eventType=require("./eventType"),_eventType2=_interopRequireDefault(_eventType),_ingenicoReaderError=require("./ingenicoReaderError"),_ingenicoReaderError2=_interopRequireDefault(_ingenicoReaderError),_CardStatus=require("./CardStatus"),_CardStatus2=_interopRequireDefault(_CardStatus),_sdkErrors=require("../common/sdkErrors"),Log=(0,_manticoreLog2.default)("ingenico"),IngenicoDevice=function(e){function t(r,n,i,a,o){_classCallCheck(this,t);var c=_possibleConstructorReturn(this,e.call(this,r,n,i,a,o));return c.manufacturer=_retailPaymentDevice.deviceManufacturer.ingenico,c.terminal=new _Terminal2.default(c.native,c),c.model=i.model,c.type=_retailPaymentDevice.readerType.Emv,c.connectionType=_retailPaymentDevice.readerConnectionType.Bluetooth,c.performQuickConnect=!1,c}return _inherits(t,e),t.prototype.beginDeviceRemoved=function(e){this.native.removed(e)},t.prototype.beginDeviceConnect=function(e){var t=this;if(this.native.isConnected())return Log.debug(function(){return"Connect called, but "+t.id+" is already connected."}),void e();Log.debug(function(){return"Connecting to Ingenico device "+t.id}),this.native.connect(function(r){if(r)return Log.error("Connect response Error "+r),void e(r);Log.debug(function(){return"Established BT connection with "+t.id+". Will begin the connection flow..."}),new _ConnectionFlow2.default(t,e).start().then(function(){Log.debug("Connection flow done")}).catch(function(t){Log.error("Connection flow failed "+t),e&&e()})})},t.prototype.listenForCardRemoval=function(e){var t=this;this.deactivateFormFactors([_retailPaymentDevice.FormFactor.MagneticCardSwipe,_retailPaymentDevice.FormFactor.Chip,_retailPaymentDevice.FormFactor.EmvCertifiedContactless],function(){t._waitForCardRemoval(!1,e)})},t.prototype.beginDeviceDisconnect=function(e){var t=this;if(this.connectionInProgress&&this.native.cancelConnect&&(Log.debug(function(){return t.id+" Connection is in progress... Will stop it"}),this.native.cancelConnect()),!this.isConnected())return Log.debug(function(){return"Disconnect called, but "+t.id+" is already dis-connected."}),void e(null);this.terminal.disconnect(),this.native.disconnect(e)},t.prototype.getFirmwareVersionInfo=function(e){this.terminal.getFirmwareVersionInfo(e)},t.prototype.getVersionInfo=function(){return{os:this.terminal.firmwareChecksum||"",mpi:this.terminal.firmwareCustomVersion||""}},t.prototype.activateForPayment=function(t,r,n){var i=this;this.context=t,Log.info(this.id+" activateForPayment context="+t+", formFactors="+Util.getPropertyName(_retailPaymentDevice.FormFactor,r)+", showPrompt="+n);var a=new Set(r);a.has(_retailPaymentDevice.FormFactor.EmvCertifiedContactless)&&1===a.size&&(r=[_retailPaymentDevice.FormFactor.MagneticCardSwipe,_retailPaymentDevice.FormFactor.Chip,_retailPaymentDevice.FormFactor.EmvCertifiedContactless],Log.info(this.id+" only EmvCertifiedContactless requested so having ALL formFactors, formFactors="+Util.getPropertyName(_retailPaymentDevice.FormFactor,r)));var o=t.invoice,c=function(){i.cardInSlot=!1,e.prototype.activateForPayment.call(i,t,r,n);var a=t.type===_retailPaymentDevice.TransactionType.Sale?0:20,c=function(e,r){if(e&&(t.type===_retailPaymentDevice.TransactionType.Sale||t.type===_retailPaymentDevice.TransactionType.Refund&&e.code!==_retailPaymentDevice.deviceError.nfcNotAllowed.code))return Log.info(i.id+"  IngenicoDevice handling err: "+e.code),e.code===_ingenicoReaderError2.default.batteryTooLowError?(Log.debug(function(){return i.id+"  IngenicoDevice low battery err: "+e.code}),void i.emit(_retailPaymentDevice.PaymentDevice.Event.cardPresented,_retailPaymentDevice.deviceError.lowOnBattery,null,_retailPaymentDevice.FormFactor.Chip)):t.isPaymentInRetryOrProgress()||e.code!==_ingenicoReaderError2.default.cardReaderNotConnected&&e.code!==_ingenicoReaderError2.default.cardReaderConnectionLost&&e!==_retailPaymentDevice.deviceError.deviceNotConnected?e.code===_ingenicoReaderError2.default.transactionCancelled?void i.emit(_retailPaymentDevice.PaymentDevice.Event.cancelled):e.code===_ingenicoReaderError2.default.noMutuallySupportedAIDs?(Log.info(i.id+" IngenicoDevice noMutuallySupportedAIDs abort and emit cardPresented, tryDifferentInterface"),void i.abortTransaction(t,function(){Log.info(i.id+" IngenicoDevice noMutuallySupportedAIDs aborted... emit cardPresented, tryDifferentInterface"),i.emit(_retailPaymentDevice.PaymentDevice.Event.cardPresented,_sdkErrors.transaction.tryDifferentInterface,null,_retailPaymentDevice.FormFactor.EmvCertifiedContactless)})):e.code===_ingenicoReaderError2.default.applicationBlocked?(Log.info(i.id+" IngenicoDevice applicationBlocked abort and emit cardPresented, cardBlocked"),i.cardInSlot&&i._waitForCardRemoval(!1,function(){Log.info(i.id+" waitForCardRemoval complete")}),void i.emit(_retailPaymentDevice.PaymentDevice.Event.cardPresented,_retailPaymentDevice.deviceError.cardBlocked,null,_retailPaymentDevice.FormFactor.Chip)):e.code===_retailPaymentDevice.deviceError.nfcNotAllowed.code?(Log.info(i.id+" IngenicoDevice offline decline"),void i.emit(_retailPaymentDevice.PaymentDevice.Event.cardPresented,_retailPaymentDevice.deviceError.nfcNotAllowed,null,_retailPaymentDevice.FormFactor.EmvCertifiedContactless)):void i.emit(_retailPaymentDevice.PaymentDevice.Event.cardPresented,e,_retailPaymentDevice.CardPresentEvent.cardDataRead,_retailPaymentDevice.FormFactor.Chip):(Log.debug(function(){return i.id+"  IngenicoDevice NO emit any cardPresented for err: "+e.code}),void i.abortTransaction(t,function(){Log.debug(function(){return i.id+" IngenicoDevice "+e.code+" aborted..."})}));if(r instanceof _retailPaymentDevice.AvailableApplications)return void i.emit(_retailPaymentDevice.PaymentDevice.Event.cardPresented,null,_retailPaymentDevice.CardPresentEvent.appSelectionRequired,_retailPaymentDevice.FormFactor.Chip,{card:null,availableApps:r});var n=new _CardStatus2.default(r).getPresentedCard(i);Log.debug(function(){return"Received ICC response from '"+Util.getPropertyName(_retailPaymentDevice.FormFactor,n.formFactor)+"'\n"+r+"\nCard: "+n}),i.emit(_retailPaymentDevice.PaymentDevice.Event.cardPresented,null,_retailPaymentDevice.CardPresentEvent.cardDataRead,n.formFactor,{card:n})};i.terminal.startTransaction(a,o,r,c)};this.isActivated?(Log.info(this.id+" Abort and re-activate with formFactors: "+r),this.abortTransaction(t,c)):c()},t.prototype.completeTransaction=function(e,t){if(!this.isConnected())return void(t&&t(_retailPaymentDevice.deviceError.deviceNotConnected));this.terminal.completeTransaction(e,function(e,r){Log.debug("Auth code sent. Response : "+r),t&&t(e,r)})},t.prototype.deactivateFormFactors=function(t){var r=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:function(){};if(!t||0===t.length||!this.isActivated)return Log.debug(function(){return"No form factors to deactivate. WasActivated? "+r.isActivated}),void n();var i=this.getSetOfActiveFormFactors();e.prototype.deactivateFormFactors.call(this,[_retailPaymentDevice.FormFactor.Chip,_retailPaymentDevice.FormFactor.MagneticCardSwipe,_retailPaymentDevice.FormFactor.EmvCertifiedContactless]),Log.debug(function(){return"Deactivating form factors '"+Util.getPropertyName(_retailPaymentDevice.FormFactor,t)+"' on '"+r.id+"'. Previously active: '"+Util.getPropertyName(_retailPaymentDevice.FormFactor,[].concat(_toConsumableArray(i)))+"', Currently active: '"+Util.getPropertyName(_retailPaymentDevice.FormFactor,[].concat(_toConsumableArray(r.getSetOfActiveFormFactors())))+"'"}),this.terminal.stopTransaction(function(){for(var e=t,a=Array.isArray(e),o=0,e=a?e:e[Symbol.iterator]();;){var c;if(a){if(o>=e.length)break;c=e[o++]}else{if(o=e.next(),o.done)break;c=o.value}var d=c;i.delete(d)}Log.debug(function(){return"Deactivated all formFactors on "+r.id+". Will reactivate '"+Util.getPropertyName(_retailPaymentDevice.FormFactor,[].concat(_toConsumableArray(i)))+"'"}),i.size>0&&r.activateForPayment(r.context,[].concat(_toConsumableArray(i))),n()})},t.prototype.abortTransaction=function(t,r){var n=this;Log.debug(function(){return"Aborting tx on '"+n.id+"'"}),this.terminal.stopTransaction(function(){e.prototype.abortTransaction.call(n,t,r)})},t.prototype.postTransactionCleanup=function(e){var t=this;Log.debug(function(){return"postTransactionCleanup on '"+t.id+"'"}),this.cardInSlot=!1,this.terminal.postTransactionCleanup(e)},t.prototype.display=function(e,t){t&&t()},t.prototype.received=function(e){var t=this;try{if(this.lastError=null,!e)return void Log.warn("Received empty unsolicited message");if(!e.event)return void Log.warn("Received unsolicited message without event type");var r=e.error,n=Util.getPropertyName(_eventType2.default,e.event);if(r?(this.lastError=r,Log.error("UNSOLICITED event:'"+n+"' Error with message:'"+r.message+"', code: '"+r.code+"'")):Log.debug(function(){return"UNSOLICITED Message received for event:'"+n+"', raw data: "+e.data}),e.event===_eventType2.default.cardInserted){if(Log.debug(function(){return"Card insert detected on "+t.id}),this.cardInSlot=!0,this.canAbortTx=!0,!r)return void this.emit(_retailPaymentDevice.PaymentDevice.Event.cardPresented,null,_retailPaymentDevice.CardPresentEvent.insertDetected,_retailPaymentDevice.FormFactor.Chip);if(r.code===_ingenicoReaderError2.default.invalidChip)return this.canAbortTx=!1,void this.emit(_retailPaymentDevice.PaymentDevice.Event.cardPresented,_retailPaymentDevice.deviceError.invalidChip,null,_retailPaymentDevice.FormFactor.Chip);if(r.code===_ingenicoReaderError2.default.invalidChipSwipeCard)return this.canAbortTx=!1,void this.emit(_retailPaymentDevice.PaymentDevice.Event.cardPresented,_retailPaymentDevice.deviceError.mustSwipeCard,null,_retailPaymentDevice.FormFactor.Chip)}if(e.event===_eventType2.default.cardRemoved)return Log.debug(function(){return"Card remove detected on "+t.id}),this.cardInSlot=!1,this.isActivated&&this.canAbortTx&&(Log.debug(function(){return"cardRemoved detected but startTxInProgress TRUE on "+t.id+" so aborting it!"}),this.abortTransaction(this.context,function(){Log.debug(function(){return t.id+" IngenicoDevice aborted transaction due to cardRemoved event..."})})),void this.emit(_retailPaymentDevice.PaymentDevice.Event.cardRemoved);if(e.event===_eventType2.default.cardSwiped&&r.code===_ingenicoReaderError2.default.pleaseInsertCard)return void this.emit(_retailPaymentDevice.PaymentDevice.Event.cardPresented,_sdkErrors.transaction.cannotSwipeChipCard,_retailPaymentDevice.CardPresentEvent.insertDetected,_retailPaymentDevice.FormFactor.MagneticCardSwipe);if(e.event===_eventType2.default.cardTapped&&(r.code===_ingenicoReaderError2.default.multipleContactlessCardsDetected&&this.emit(_retailPaymentDevice.PaymentDevice.Event.cardPresented,_sdkErrors.transaction.multipleContactlessCardsDetected,_retailPaymentDevice.CardPresentEvent.insertDetected,_retailPaymentDevice.FormFactor.EmvCertifiedContactless),r.code===_ingenicoReaderError2.default.contactlessInterfaceFailedTryContact&&this.emit(_retailPaymentDevice.PaymentDevice.Event.cardPresented,_retailPaymentDevice.deviceError.nfcNotAllowed,null,_retailPaymentDevice.FormFactor.EmvCertifiedContactless),r.code===_ingenicoReaderError2.default.pleaseSeePhone))return void this.app.display({message:"Please ask customer to SEE PHONE",cancel:"done"},function(e){e.dismiss()})}catch(t){throw Log.error("Error handling unsolicited message "+e+" \n"+t),t}},t.prototype.getBatteryInfo=function(e){this.terminal.getBatteryLevel(!0,e)},t.prototype.getBatteryInfoAsync=function(){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(Util.callbackToPromise(this.getBatteryInfo.bind(this)));case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}},null,this)},t.prototype.retrieveBatteryInfoAsync=function(){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(Util.callbackToPromise(this.retrieveBatteryInfo.bind(this)));case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}},null,this)},t.prototype._waitForCardRemoval=function(e,t){this.terminal.waitForCardRemoval(e,t)},t.prototype.selectPaymentApplication=function(e){var t=this;this.terminal.selectApplication(e,function(e,r){if(e)return void t.emit(_retailPaymentDevice.PaymentDevice.Event.cardPresented,e,_retailPaymentDevice.CardPresentEvent.cardDataRead,_retailPaymentDevice.FormFactor.Chip);Log.debug(function(){return"Received ICC card data from Application select: "+r});var n=new _CardStatus2.default(r).getPresentedCard(t);t.emit(_retailPaymentDevice.PaymentDevice.Event.cardPresented,null,_retailPaymentDevice.CardPresentEvent.cardDataRead,n.formFactor,{card:n})})},t.prototype.doesHaveCapability=function(e){switch(e){case _retailPaymentDevice.deviceCapabilityType.contactless:return this.model===_retailPaymentDevice.ReaderModel.RP450;default:return!1}},_createClass(t,[{key:"formFactors",get:function(){return this.isMoby?[_retailPaymentDevice.FormFactor.Chip,_retailPaymentDevice.FormFactor.MagneticCardSwipe]:[_retailPaymentDevice.FormFactor.Chip,_retailPaymentDevice.FormFactor.EmvCertifiedContactless,_retailPaymentDevice.FormFactor.MagneticCardSwipe]}}]),t}(_retailPaymentDevice.PaymentDevice);exports.default=IngenicoDevice;

},{"../common/sdkErrors":18,"./CardStatus":42,"./ConnectionFlow":43,"./Terminal":49,"./eventType":52,"./ingenicoReaderError":54,"manticore-log":208,"manticore-util":212,"retail-payment-device":356}],46:[function(require,module,exports){
"use strict";exports.__esModule=!0;var _tlvlib=require("tlvlib"),IngenicoTags={ApplicationEffectiveDate:new _tlvlib.DefinedTag("ApplicationEffectiveDate",24357,_tlvlib.ValueFormat.Binary,3),ApplicationLabel:new _tlvlib.DefinedTag("ApplicationLabel",80,_tlvlib.ValueFormat.Binary,16),CardHolderName:new _tlvlib.DefinedTag("CardHolderName",24352,_tlvlib.ValueFormat.Binary,26),ApplicationPreferredName:new _tlvlib.DefinedTag("ApplicationPreferredName",40722,_tlvlib.ValueFormat.Binary,16),ApplicationExpirationDate:new _tlvlib.DefinedTag("ApplicationExpirationDate",24356,_tlvlib.ValueFormat.Binary,3),CertificationVerificationValue:new _tlvlib.DefinedTag("CertificationVerificationValue",57168,_tlvlib.ValueFormat.Binary,12),PAN:new _tlvlib.DefinedTag("PAN",90,_tlvlib.ValueFormat.Binary,10),PANSequenceNumber:new _tlvlib.DefinedTag("PANSequenceNumber",24372,_tlvlib.ValueFormat.Binary,1),TerminalApplicationIdentifier:new _tlvlib.DefinedTag("TerminalApplicationIdentifier",40710,_tlvlib.ValueFormat.Binary),TerminalVerificationResults:new _tlvlib.DefinedTag("TerminalVerificationResults",149,_tlvlib.ValueFormat.Binary,5),ApplicationCryptogram:new _tlvlib.DefinedTag("ApplicationCryptogram",40742,_tlvlib.ValueFormat.Binary,8),ApplicationTransactionCounter:new _tlvlib.DefinedTag("ApplicationTransactionCounter",40758,_tlvlib.ValueFormat.Binary,2),CardholderVerificationMethodResult:new _tlvlib.DefinedTag("CardholderVerificationMethodResult",40756,_tlvlib.ValueFormat.Binary,3),CryptogramInformationData:new _tlvlib.DefinedTag("CryptogramInformationData",40743,_tlvlib.ValueFormat.Binary,1),IssuerApplicationData:new _tlvlib.DefinedTag("IssuerApplicationData",40720,_tlvlib.ValueFormat.Binary,32),TransactionStatusInformation:new _tlvlib.DefinedTag("TransactionStatusInformation",155,_tlvlib.ValueFormat.Binary,2),UnpredictableNumber:new _tlvlib.DefinedTag("UnpredictableNumber",40759,_tlvlib.ValueFormat.Binary,4),AmountAuthorizedBinary:new _tlvlib.DefinedTag("AmountAuthorizedBinary",129,_tlvlib.ValueFormat.CompressedNumeric,4),AmountOtherBinary:new _tlvlib.DefinedTag("AmountOtherBinary",40708,_tlvlib.ValueFormat.CompressedNumeric,4),TransactionCurrencyExponent:new _tlvlib.DefinedTag("TransactionCurrencyExponent",24374,_tlvlib.ValueFormat.Numeric,1),OverallContactlessTransactionLimit:new _tlvlib.DefinedTag("OverallContactlessTransactionLimit",57189,_tlvlib.ValueFormat.CompressedAlpha,4),AuthorizationResponseCodeList:new _tlvlib.DefinedTag("AuthorizationResponseCodeList",57110,_tlvlib.ValueFormat.CompressedAlpha),POSEntryMode:new _tlvlib.DefinedTag("POSEntryMode",40761,_tlvlib.ValueFormat.CompressedNumeric,1),DOLAnswerFormat:new _tlvlib.DefinedTag("DOLAnswerFormat",14647849,_tlvlib.ValueFormat.CompressedAlpha),TerminalCountryCode:new _tlvlib.DefinedTag("TerminalCountryCode",40730,_tlvlib.ValueFormat.CompressedNumeric,2),TerminalCapabilities:new _tlvlib.DefinedTag("TerminalCapabilities",40755,_tlvlib.ValueFormat.CompressedAlpha,3),AdditionalTerminalCapabilities:new _tlvlib.DefinedTag("AdditionalTerminalCapabilities",40768,_tlvlib.ValueFormat.CompressedAlpha,5),TerminalIdentification:new _tlvlib.DefinedTag("TerminalIdentification",40732,_tlvlib.ValueFormat.CompressedNumeric,8),ExtraProgressMessageFlag:new _tlvlib.DefinedTag("ExtraProgressMessageFlag",57192,_tlvlib.ValueFormat.CompressedNumeric,1),TerminalApplicationVersionNumber:new _tlvlib.DefinedTag("TerminalApplicationVersionNumber",40713,_tlvlib.ValueFormat.CompressedNumeric,2),GenerateACControl:new _tlvlib.DefinedTag("GenerateACControl",57202,_tlvlib.ValueFormat.CompressedNumeric,1),TerminalType:new _tlvlib.DefinedTag("TerminalType",40757,_tlvlib.ValueFormat.CompressedNumeric,1),TransactionCategoryCode:new _tlvlib.DefinedTag("TransactionCategoryCode",40787,_tlvlib.ValueFormat.CompressedNumeric,1),ContactlessInformationOut:new _tlvlib.DefinedTag("ContactlessInformationOut",57199,_tlvlib.ValueFormat.Binary,2),BatteryLevelThreshold:new _tlvlib.DefinedTag("BatteryLevelThreshold",14647865,_tlvlib.ValueFormat.CompressedNumeric,1),AcquirerExclusionList:new _tlvlib.DefinedTag("AcquirerExclusionList",65407,_tlvlib.ValueFormat.Binary),AcquirerIdentifier:40705,AlternateMessageForRemoveCardPrompt:57203,AmexExpresspayPseudoTrack1Data:57157,AmexExpresspayPseudoTrack2Data:57158,DiscoverDPASPseudoTrack1Data:57174,DiscoverDPASPseudoTrack2Data:57175,AmexExpresspayUnpredictableNumberRange:57156,DefaultValueForDDOL:57109,AmountAuthorizedNumeric:40706,AmountOfLasttransactionWithSameCard:57125,AmountOtherNumeric:40707,AmountReferenceCurrency:40762,ApplicationCurrencyExponent:40772,ApplicationCurrencyCode:40770,ApplicationDiscretionaryData:40709,ServiceCode:24368,ApplicationFileLocator:148,ApplicationIdentifier:79,ApplicationInterchangeProfile:130,ApplicationPriorityIndicator:135,ApplicationTemplate:97,ApplicationUsageControl:40711,ApplicationVersionNumber:40712,AuthorizationCode:137,AuthorizationResponseCode:138,BankIndentifierCode:24404,CanadianFlag:14647842,CardAdditionalProcesses:40808,CardholderLanguage:57106,CardholderVerificationMethodList:142,CardIsInTheHotlist:57126,CardRiskManagementDataObjectList1:140,CardRiskManagementDataObjectList2:141,CertificationAuthorityPublicKeyIndex:143,ContactlessKernelIdentifier:57196,ContactlessSignatureCheckResult:57198,CustomerExclusiveData:40828,CVMOUTresult:57144,DedicatedFileName:84,DefaultValueForTDOL:57112,DirectoryDefinitionFile:157,DirectoryDiscretionaryTemplate:115,DynamicDataAuthenticationDataObjectList:40777,FileControlInformationIssuerDiscretionaryData:48908,FileControlInformationTemplate:165,FDDAVersion:40809,FormFactorIndicator:40814,HandOverCardFlag:57201,ICCDynamicNumber:40780,ICCPINEnciphermentPublicKeyCertificate:40749,ICCPINEnciphermentPublicKeyExponent:40750,ICCPINEnciphermentPublicKeyRemainder:40751,ICCPublicKeyCertificate:40774,ICCPublicKeyExponent:40775,ICCPublicKeyRemainder:40776,InterfaceDeviceSerialNumber:40734,InternationalBankAccountNumber:24403,IssuerAuthenticationData:145,IssuerCountryCode:24360,IssuerCountryCodeAlpha2:24405,IssuerCountryCodeAlpha3:24406,IssuerIdentificationNumber:42,IssuerPublicKeyExponent:40754,IssuerPublicKeyRemainder:146,IssuerScript1:113,IssuerScript2:114,IssuerScriptCommand:134,IssuerScriptResults:57105,IssuerScriptResultsForProcessor:40795,KSN:14647845,ListOfTransactionTypesUsedByTheApplication:57146,LanguagePreference:24365,LogFormat:40783,MACData:14647813,MACDOL:14647812,MACInitialisationVector:14647814,MasterSessionKeyLocator:14647840,Maximumtargetpercentage:57097,MerchantCategoryCode:40725,MerchantIdentifier:40726,OnlinePINBlock:57167,OnlinePINBlockFormat:14647810,OnlinePINBlockKeyLocator:14647808,OnlinePINSMID:57166,PayPassThirdPartyData:40814,PayPassTransactionOutcome:57197,PINEntryDisplayPromptString:57193,ProcessingOptionsDataObjectList:40760,ReaderRiskParameterRecord:57195,ResponseMessageTemplateFormat1:80,ResponseMessageTemplateFormat2:77,ResultofOnlineProcess:57145,RetryConfigurationFlag:57204,RoamEncryptedEMVdata:14647843,EncryptedTrack:14647843,ManuallyEnteredPAN:14647846,ManuallyEnteredExpiryDate:14647847,SignedDynamicApplicationData:40779,SignedStaticApplicationData:147,StaticDataAuthenticationTagList:40778,TargetPercentage:57096,TerminalActionCodeDefault:57091,TerminalActionCodeDenial:57092,TerminalActionCodeOnline:57093,TerminalConfiguration:57149,TerminalDecisionafterGenerateAC:57137,TerminalFloorLimit:40731,TerminalOptions:57099,TerminalRiskManagementData:40733,ThresholdValue:57095,Track1Data:86,Track2DataMasterCard:40811,Track2EquivalentData:57,TransactionCertificateDataObjectList:151,TransactionCertificateHashValue:152,TransactionClass:57165,TransactionCurrencyCode:24362,TransactionDate:154,TransactionForcedOnline:57116,TransactionPersonalIdentificationNumberData:153,TransactionReferenceCurrency:40764,TransactionReferenceCurrencyExponent:40765,TransactionSequenceCounter:40769,TransactionTime:40737,TransactionType:156,TransactionTypeDescription:57200,VerificationonlyTransactionFlag:57205,VisaContactlessOfflineAvailableSpendingAmount:40797,VisaDebitOptOut:14647841,VisaTerminalEntryCapability:57194,WrapperforIssuerScriptTagWithIncorrectLength:57100,ApplicationReferenceCurrency:40763,ApplicationReferenceCurrencyExponent:40771,CardholderNameExtended:40715,DataAuthenticationCode:40773,FCITemplate:111,IssuerActionCodeDefault:40717,IssuerActionCodeDenial:40718,IssuerActionCodeOnline:40719,IssuerCodeTableIndex:40721,IssuerPublicKeyCertificate:144,LowerConsecutiveOfflineLimit:40724,PersonalIdentificationNumberTryCounter:40727,ShortFileIndicator:136,Track1DiscretionaryData:40735,Track2DiscretionaryData:40736,UpperConsecutiveOfflineLimit:40739,CVC3:40801,PCVC3:40802,LogEntry:40781,IssuerURL:24400,VLPAvailableFunds:40825,VLPFundsLimit:40823,VLPIssuerAuthorisationCode:40820,VLPSingleTransactionLimit:40824,TerminalCompatibilityIndicator:40786,VLPResetThreshold:40813,VLPTerminalTransactionLimit:40827,LastOnlineApplicationTransactionCounterRegister:40723,PUNATCTrack1:40803,NATCTrack2:40807,CVC3Track1:40800,NATCTrack1:40804,PCVC3rack2:40805,Track2DataContactless:40811,CertificationAuthorityPKI:40738,IssuerScriptIdentifier:40728,MerchantNameLocation:40782,VLPTerminalSupportIndicator:40826,AccountType:24407,PUNATCTrack2:40806,CardTransactionQualifiers:40812,ApplicationProgramIdentifier:40794,OutcomeParameterSet:14647593};exports.default=IngenicoTags;

},{"tlvlib":359}],47:[function(require,module,exports){
(function (Buffer){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function parseStatus(e){try{var a=e.slice(0,2);return a=new Buffer(a,"hex"),a[0]}catch(a){throw Log.error("Failed parsing card status "+e+": "+a.message+", stack: "+a.stack+", "+a),a}}function parseCardData(e){try{var a=parseStatus(e),r=e.slice(2,e.length);return r=new Buffer(r,"hex"),new _TransactionDataResponse2.default(a,r,!1)}catch(a){throw Log.error("Failed parsing Ingenico packet "+e+": "+a.message+", stack: "+a.stack+", "+a),a}}exports.__esModule=!0,exports.parseStatus=parseStatus,exports.parseCardData=parseCardData;var _manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_TransactionDataResponse=require("./TransactionDataResponse"),_TransactionDataResponse2=_interopRequireDefault(_TransactionDataResponse),Log=(0,_manticoreLog2.default)("ingenico.parser");

}).call(this,require("buffer").Buffer)
},{"./TransactionDataResponse":50,"buffer":96,"manticore-log":208}],48:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _toConsumableArray(e){if(Array.isArray(e)){for(var t=0,r=Array(e.length);t<e.length;t++)r[t]=e[t];return r}return Array.from(e)}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}function ingenicoLogs(e){var t=require("manticore-log")("paymentDevice.ingenicoDevice");e&&switchedOff?(switchedOff=!1,lastIngenicoLogState?t.Config.level=lastIngenicoLogState:delete t.Config.level,delete Log.Config.level,Log.debug("Re-enabled logs.")):e||switchedOff||(Log.debug("Squelching Ingenico debug logs."),lastIngenicoLogState=t.Config.level,switchedOff=!0,t.Config.level="INFO",Log.Config.level="DEBUG")}function getNameFromUrl(e){var t=e.split("/");return t=t[t.length-1]}function pushModules(e,t,r){if(e)for(var i=t,n=Array.isArray(i),o=0,i=n?i:i[Symbol.iterator]();;){var a;if(n){if(o>=i.length)break;a=i[o++]}else{if(o=i.next(),o.done)break;a=o.value}var s=a;e.push({url:s,version:r})}}function _addObjectToRemoteConfig(e,t){var r=e;if(r)for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(r[i]=t[i]);else r=t;return r}function getOne(e,t,r){var i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,n=t.url,o=t.url+t.version;_manticore2.default.getItem(o,blobDecodedStorage,function(a,s){if(s)return Log.debug(function(){return"Retrieved from CACHE "+n}),void _manticore2.default.setTimeout(function(){return r(null,s)},0);if(0===i){if(isProgressFileFetches[n])return Log.debug(function(){return"Waiting for existing fetch of "+n}),void isProgressFileFetches[n].push(r);isProgressFileFetches[n]=[r]}Log.debug(function(){return"Fetching firmware update file "+n});var c=(0,_moment2.default)(),d=getNameFromUrl(n).toLowerCase();Log.debug(function(){return"fileName: "+d});var l=".json"===d.substr(-5)?"json":"binary";Log.debug(function(){return"fileName: "+d+" format: "+l}),_manticore2.default.http({url:n,format:l},function(a,s){var u=e.device.terminal.getTimeDiff(c);if(a?Log.error("Attempt "+(i||0)+"/"+maxAttempts+". Duration: "+u+"s. Download failed for "+n+" with error: "+a+")"):Log.debug(function(){return"Download duration: "+u+". Done with "+n}),a||"json"!==l)if(a){if(i<maxAttempts)return Log.warn(function(){return"Fetch failed for "+n+". Starting retry #{retryCount+1}"}),void getOne(e,t,r,(i||0)+1)}else _manticore2.default.setItem(o,blobDecodedStorage,s.body,null);else{var f=e.device.terminal.remoteConfig;e.device.terminal.remoteConfig=_addObjectToRemoteConfig(f,s.body),e.device.terminal.remoteConfig.version=e.device.terminal.remoteConfig.version||e.device.terminal.firmwareCustomVersion;var g=parseInt(t.version,10);Log.debug(function(){return"file "+d+" fileInfoVersion: "+g}),"ingenico_capkeys.json"===d?(g=parseInt(t.version,10)<<16,e.device.terminal.remoteConfig.version&=65535,Log.debug(function(){return"file "+d+" fileInfoVersion: "+g}),Log.debug(function(){return d+" remote.Configversion: "+e.device.terminal.remoteConfig.version})):(e.device.terminal.remoteConfig.version&=4294901760,Log.debug(function(){return d+" remote.Configversion: "+e.device.terminal.remoteConfig.version})),e.device.terminal.remoteConfig.version|=g,Log.debug(function(){return"remoteConfig.version: "+e.device.terminal.remoteConfig.version})}for(var p=isProgressFileFetches[n],m=Array.isArray(p),v=0,p=m?p:p[Symbol.iterator]();;){var h;if(m){if(v>=p.length)break;h=p[v++]}else{if(v=p.next(),v.done)break;h=v.value}h(a,s)}delete isProgressFileFetches[n]})})}exports.__esModule=!0;var _retailPaymentDevice=require("retail-payment-device"),_manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_async=require("async"),_async2=_interopRequireDefault(_async),_manticore=require("manticore"),_manticore2=_interopRequireDefault(_manticore),_manticoreUtil=require("manticore-util"),_moment=require("moment"),_moment2=_interopRequireDefault(_moment),_flow=require("../../common/flow"),_flow2=_interopRequireDefault(_flow),_retailSDKUtil=require("../../common/retailSDKUtil"),Log=(0,_manticoreLog2.default)("ingenico.fwUpdate"),blobDecodedStorage="BD",maxAttempts=2,INGENICO_CONNECTION_RETRY_LIMIT=10,INGENICO_CONNECTION_RETRY_TIMEOUT=2e4,lastIngenicoLogState=void 0,switchedOff=void 0,isProgressFileFetches={},IngenicoDeviceUpdate=function(e){function t(r){_classCallCheck(this,t);var i=_possibleConstructorReturn(this,e.call(this,r));return i.files={},i.updates={},i}return _inherits(t,e),t.prototype.beginDeviceUpdate=function(e){var t=this;Log.info("Beginning SW Update on "+this.device.id),isProgressFileFetches={};var r=[];this.device.updates&&(Log.debug(function(){return"Found "+t.device.updates.length+" module updates"}),r.push(this.updateSWModules));var i=new _flow2.default(this,r);i.name="Firmware Update",i.on("ended",function(r){var i=r.error,n=t.device.terminal.getTimeDiff(t.startTime);i?(Log.error("SW Update on "+t.device.id+" failed with error: "+i+". Duration: "+n),i.domain===_retailPaymentDevice.deviceError.corruptFirmware.domain&&i.code===_retailPaymentDevice.deviceError.corruptFirmware.code&&(t.isRequired=!1,Log.info("Marking firmware update on "+t.device.id+" as optional as the downloaded file was corrupt"))):Log.info("Firmware update completed on "+t.device.id+". Duration: "+n),t.appAlert&&t.appAlert.dismiss(),e(i,!i)}),this.startTime=(0,_moment2.default)(),i.start()},t.prototype.validateUpdateEligibility=function(e){!(this.device.batteryInfo&&this.device.batteryInfo.isLevelUpdateCritical)&&e()},t.prototype._disableLogs=function(e){Log.debug("Disabling ingenico logs"),ingenicoLogs(!1),e.next(null)},t.prototype._enableLogs=function(e){Log.debug("Enabling logs"),ingenicoLogs(!0),e.next(null)},t.prototype.updateSWModules=function(e){var t=this,r=new _flow2.default(this,this._gatherFiles,this._calculateUpdateSteps,this._updateOs,this._tryReconnect,this._retrieveVersionInfo,this._updateConfig,this._verifyUpdate,this._updateDeviceName);r.name="Software Module Update Flow",r.on("ended",function(i){Log.info("Software modules update ended on "+t.device.id+". Error: "+i.error),t._alertProgress(r,"Configuration",!0),t.appAlert&&t.appAlert.dismiss(),e.nextOrAbort(i.error)}),this.appAlert=this.device.app.display({title:_retailPaymentDevice.appMessage.SwUpdateInProgress.title,message:_retailPaymentDevice.appMessage.SwUpdateInProgress.message,showActivity:!0}),r.start()},t.prototype._generateSteps=function(e){var t=[];if(e.urls)for(var r=e.urls,i=Array.isArray(r),n=0,r=i?r:r[Symbol.iterator]();;){var o;if(i){if(n>=r.length)break;o=r[n++]}else{if(n=r.next(),n.done)break;o=n.value}var a=o;t.push({name:getNameFromUrl(a),url:a,version:e.version,reload:e.reload})}if(e.subcomponents)for(var s=e.subcomponents,c=Array.isArray(s),d=0,s=c?s:s[Symbol.iterator]();;){var l;if(c){if(d>=s.length)break;l=s[d++]}else{if(d=s.next(),d.done)break;l=d.value}var u=l;t.push.apply(t,_toConsumableArray(this._generateSteps(u)))}return t},t.prototype._gatherFiles=function(e){for(var t=this,r=this.device.updates,i=Array.isArray(r),n=0,r=i?r:r[Symbol.iterator]();;){var o;if("break"===function(){if(i){if(n>=r.length)return"break";o=r[n++]}else{if(n=r.next(),n.done)return"break";o=n.value}var e=o,a=t._generateSteps(e);t.updates[e.name]=a,Log.debug(function(){return"Gathered update "+e.name+"\n"+JSON.stringify(a)})}())break}this._fetchFiles(this.device,function(t){Log.debug("Ready for software update."),e.nextOrAbort(t)})},t.prototype._fetchFiles=function(e,r){var i=this,n=[];t.needsUpdate(e,e.updates,n),Log.debug(function(){return"Preparing to download "+n.length+" files"}),_async2.default.eachSeries(n,function(e,t){getOne(i,e,t)},r)},t.needsUpdate=function(e,t,r){for(var i=!1,n=t,o=Array.isArray(n),a=0,n=o?n:n[Symbol.iterator]();;){var s;if(o){if(a>=n.length)break;s=n[a++]}else{if(a=n.next(),a.done)break;s=a.value}var c=s;if("ingenico_firmware"===c.name)i=!0,e._expectedFirmwareChecksum=c.version,Log.info(e.id+" OS will be updated from "+e.terminal.firmwareChecksum+" to "+c.version),pushModules(r,c.urls,c.version);else if("Ingenico_CONFIG"===c.name&&c.subcomponents){i=!0,Log.info(e.id+" CFG will be updated with "+c.subcomponents.length+" sub components.");for(var d=c.subcomponents,l=Array.isArray(d),u=0,d=l?d:d[Symbol.iterator]();;){var f;if(l){if(u>=d.length)break;f=d[u++]}else{if(u=d.next(),u.done)break;f=u.value}var g=f;Log.info(e.id+" Sub components version: "+g.version),pushModules(r,g.urls,g.version)}}}return i?e.terminal.remoteConfig={}:Log.debug(function(){return e.id+" does not need an upgrade."}),i},t.prototype._calculateUpdateSteps=function(e){var t=this.device.terminal.remoteConfig.PublicKeys?this.device.terminal.remoteConfig.PublicKeys.length:0;e.data.configUpdateStepCount=t+16,e.data.fwUpdateStepCount=1,e.data.currentStepNumber=0,e.next()},t.prototype._fWUpdateProgressHandler=function(e,t){var r=t||"0/0",i=r.split("/");e.data.fwUpdateStepCount=parseInt(i[1],10)+1,e.data.currentStepNumber=parseInt(i[0],10),this._alertProgress(e,"OS")},t.prototype._addAndAlertProgress=function(e,t,r){var i=this;Log.debug(function(){return i.device.id+" _addAndAlertProgress "+t+" updateCount: "+r}),e.data.currentStepNumber+=r,Log.debug(function(){return"_addAndAlertProgress currentStepNumber: "+e.data.currentStepNumber}),this._alertProgress(e,t)},t.prototype._alertProgress=function(e,t,r){var i=this,n=e.data.fwUpdateStepCount+e.data.configUpdateStepCount,o=r?n:e.data.currentStepNumber,a=e.data.progressPercent;e.data.progressPercent=parseInt(100*o/n,10);var s=a!==e.data.progressPercent;Log.debug(function(){return i.device.id+" Total steps: "+n+", current step: "+o+", prevProgressPercent: "+a+" progressPercent: "+e.data.progressPercent+", updateApp: "+s}),s&&(this.appAlert=this.device.app.display({title:_retailPaymentDevice.appMessage.SwUpdateInProgressWithDetails.title,message:{id:_retailPaymentDevice.appMessage.SwUpdateInProgressWithDetails.message,substitutions:{stage:t,progress:e.data.progressPercent}},showActivity:!0}))},t.prototype._updateOs=function(e){var t=this,r=this.updates.ingenico_firmware;if(!r||0===r.length)return Log.debug("OS update not needed."),e.data.restartRequired=!1,void e.next(null);var i=r[0].url+r[0].version;this.device.terminal.updateFirmware(i,function(r){t._fWUpdateProgressHandler(e,r)},function(r){e.data.restartRequired=!0,t._addAndAlertProgress(e,"OS",1),e.nextOrAbort(r)})},t.prototype._retrieveVersionInfo=function(e){this._addAndAlertProgress(e,"Configuration",1),this.device.terminal.getFirmwareVersionInfo(function(t){return e.nextOrAbort(t)})},t.prototype._tryReconnect=function(e){var t=this;if(!e.data.restartRequired)return Log.debug("Restart not required"),this._addAndAlertProgress(e,"Configuration",1),void e.next();this.appAlert=this.device.app.display({title:this.device.isMoby?_retailPaymentDevice.appMessage.SwUpdateRestartInstruction.title:_retailPaymentDevice.appMessage.SwUpdateReconnecting.title,message:this.device.isMoby?_retailPaymentDevice.appMessage.SwUpdateRestartInstruction.message:_retailPaymentDevice.appMessage.SwUpdateReconnecting.message,showActivity:!0}),this._pollUntilConnect(INGENICO_CONNECTION_RETRY_LIMIT,INGENICO_CONNECTION_RETRY_TIMEOUT,function(r){t._addAndAlertProgress(e,"OS",1),e.nextOrAbort(r)})},t.prototype._pollUntilConnect=function(e,t,r){var i=this;Log.debug(function(){return"Disconnecting "+i.device.id+" as part of reconnection"}),this.device.forceDisconnect(function(){Log.debug(function(){return"Disconnected "+i.device.id+"!. Proceeding to reconnect"}),_manticore2.default.setTimeout(function(){Log.debug(function(){return"Attempting reconnect to "+i.device.id+". Remaining attempts: "+e}),i.device.connect(function(n){if(n){Log.warn("Reconnect failed with error "+n+". Remaining attempts: "+e);var o=e-1;o<=0?(Log.error("Giving up device connection with "+i.device.id+" as all retry attempts were exhausted"),r(n)):i._pollUntilConnect(o,t,r)}else Log.info(i.device.id+" was successfully connected after restart. Remaining attempts: "+e),r(null)})},t)})},t.prototype._configUpdateProgressCallback=function(e,t,r){this._addAndAlertProgress(e.data.updateFlow,"Configuration",1),r?e.nextOrAbort(t):e.next()},t.prototype._verifyUpdate=function(e){var t=this;if(!this.device._expectedFirmwareChecksum)return Log.info("Will not validate firmware checksum as there was no UNS file update on "+this.device.id),void e.next();this.device.terminal.getFirmwareChecksum(function(r){Log.info("Firmware checksum BEFORE : '"+t.device._expectedFirmwareChecksum+"', AFTER '"+t.device.terminal.firmwareChecksum+"'"),t.device._expectedFirmwareChecksum!==t.device.terminal.firmwareChecksum?e.nextOrAbort(_retailPaymentDevice.deviceError.swUpdateFailed.withDevMessage("Checksum did not match after firmware update. Expected '"+t.device._expectedFirmwareChecksum+"', Actual: '"+t.device.terminal.firmwareChecksum+"'")):e.nextOrAbort(r)})},t.prototype._updateConfig=function(e){var t=this.updates.Ingenico_CONFIG;if(!t||0===t.length)return Log.debug("Config update not needed."),void e.next();var r=new _flow2.default(this,this._clearAidList,this._clearPublicKeys,this._configureContactAidList,this._configureContactlessAidList,this._configurePublicKeys,this._configureAmountDol,this._configureOnlineDol,this._configureResponseDol,this._configureContactlessOnlineResponseDol,this._configureContactlessResponseDol,this._configureMagstripeDol,this._configureContactlessOptions,this._sendConfigCommands,this._setConfigVersion);r.name="Ingenico config",r.data.restartRequired=!0,r.data.updateFlow=e,r.on("completed",function(t){Log.debug(function(){return"Config flow completed. Error: "+t.error}),e.next()}),r.on("aborted",function(t){Log.debug(function(){return"Config flow aborted. Error: "+t.error}),e.abort(t.error)}),Log.debug("Starting the config flow"),this._addAndAlertProgress(e,"Configuration",1),r.start()},t.prototype._configureOnlineDol=function(e){var t=this;this.device.terminal.configureOnlineDol(function(r){return t._configUpdateProgressCallback(e,r,!0)})},t.prototype._configureAmountDol=function(e){var t=this;this.device.terminal.configureAmountDol(function(r){return t._configUpdateProgressCallback(e,r,!0)})},t.prototype._configureResponseDol=function(e){var t=this;this.device.terminal.configureResponseDol(function(r){return t._configUpdateProgressCallback(e,r,!0)})},t.prototype._configureContactlessResponseDol=function(e){var t=this;this.device.model===_retailPaymentDevice.ReaderModel.Moby3000?(Log.debug("Not configuring contactless DOL."),this._configUpdateProgressCallback(e,null,!1)):this.device.terminal.configureContactlessResponseDol(function(r){return t._configUpdateProgressCallback(e,r,!0)})},t.prototype._configureContactlessOnlineResponseDol=function(e){var t=this;this.device.model===_retailPaymentDevice.ReaderModel.Moby3000?(Log.debug("Not configuring contactless response DOL"),this._configUpdateProgressCallback(e,null,!1)):this.device.terminal.configureContactlessOnlineDol(function(r){return t._configUpdateProgressCallback(e,r,!0)})},t.prototype._configureMagstripeDol=function(e){var t=this;this.device.terminal.configureMagstripeDol(function(r){return t._configUpdateProgressCallback(e,r,!0)})},t.prototype._clearAidList=function(e){var t=this;this.device.terminal.clearAidList(function(r){return t._configUpdateProgressCallback(e,r,!0)})},t.prototype._clearPublicKeys=function(e){var t=this;this.device.terminal.clearPublicKeys(function(r){return t._configUpdateProgressCallback(e,r,!0)})},t.prototype._configurePublicKeys=function(e){var t=this;this.device.terminal.configurePublicKeys(function(){t._addAndAlertProgress(e.data.updateFlow,"Configuration",1)},function(r){return t._configUpdateProgressCallback(e,r,!0)})},t.prototype._configureContactAidList=function(e){var t=this;this.device.terminal.configureContactAidList(function(r){return t._configUpdateProgressCallback(e,r,!0)})},t.prototype._configureContactlessAidList=function(e){var t=this;this.device.model===_retailPaymentDevice.ReaderModel.Moby3000?(Log.debug("Not configuring contactless AidList"),this._configUpdateProgressCallback(e,null,!1)):this.device.terminal.configureContactlessAidList(function(r){return t._configUpdateProgressCallback(e,r,!0)})},t.prototype._configureContactlessOptions=function(e){var t=this;this.device.model===_retailPaymentDevice.ReaderModel.Moby3000?(Log.debug("Not configuring contactless options"),this._configUpdateProgressCallback(e,null,!1)):this.device.terminal.configureContactlessOptions(function(r){return t._configUpdateProgressCallback(e,r,!0)})},t.prototype._sendConfigCommands=function(e){var t=this;this.device.terminal.sendConfigCommands(function(r){return t._configUpdateProgressCallback(e,r,!0)})},t.prototype._setConfigVersion=function(e){var t=this;this.device.terminal.setConfigVersion(function(r,i){Log[r?"error":"info"]("versionInfo> Custom version of '"+t.device.id+"' set. Response: "+i),t.device.terminal.getConfigVersion(function(){t._configUpdateProgressCallback(e,r,!0)})})},t.prototype._updateDeviceName=function(e){var t=this;if(this.device.model===_retailPaymentDevice.ReaderModel.RP450&&0===this.device.id.indexOf("PayPal-")){var r=this.device.id;this.device.id=this.device.id.replace("PayPal-","PPHere-"),Log.info(function(){return(0,_manticoreUtil.getPropertyName)(_retailPaymentDevice.ReaderModel,t.device.model)+" (address='"+t.device.address+"') ID changed from '"+r+"' to '"+t.device.id+"'"}),(0,_retailSDKUtil.saveLastActiveReader)(this.device,function(){e.next()})}else e.next()},t.prototype._getCachedFile=function(e,t){_manticore2.default.getItem(e,blobDecodedStorage,function(r,i){t(i?null:_retailPaymentDevice.deviceError.swUpdateFailed.withDevMessage("File with url: "+e+" was not found on the device"),i)})},t}(_retailPaymentDevice.DeviceUpdate);exports.default=IngenicoDeviceUpdate;

},{"../../common/flow":11,"../../common/retailSDKUtil":17,"async":92,"manticore":213,"manticore-log":208,"manticore-util":212,"moment":278,"retail-payment-device":356}],49:[function(require,module,exports){
(function (Buffer){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}function createApduCommand(e,t,n,r,i,o){return new _tlvlib.ApduCommand(e,t,n,r,i,o,!0)}function buildTlvListForTx(e,t,n,r){var i=new _tlvlib.TlvList,o=new Date;return i.add(_tlvlib.Tags.TransactionCurrencyCode,n),i.add(_IngenicoTags2.default.AmountAuthorizedBinary,_IngenicoTags2.default.AmountAuthorizedBinary.format.toBytes(t,_IngenicoTags2.default.AmountAuthorizedBinary.length)),i.add(_tlvlib.Tags.TransactionType,e),i.add(_tlvlib.Tags.AmountAuthorized,_tlvlib.Tags.AmountAuthorized.format.toBytes(t,6)),i.add(_tlvlib.Tags.AmountOther,_tlvlib.Tags.AmountOther.format.toBytes(0,6)),i.add(_IngenicoTags2.default.AmountOtherBinary,_IngenicoTags2.default.AmountOtherBinary.format.toBytes(0,_IngenicoTags2.default.AmountOtherBinary.length)),i.add(_IngenicoTags2.default.TransactionCurrencyExponent,2),i.add(_tlvlib.Tags.TransactionDate,o),i.add(_IngenicoTags2.default.TerminalCountryCode,n),i.add(_IngenicoTags2.default.TerminalIdentification,"3132333435363738"),i.add(_tlvlib.Tags.TransactionTime,o),i.add(_IngenicoTags2.default.POSEntryMode,0),i.add(_IngenicoTags2.default.AuthorizationResponseCodeList,"59315A3159325A3259335A333030303530313034"),i.add(_IngenicoTags2.default.ExtraProgressMessageFlag,"01"),i.add(_IngenicoTags2.default.TerminalApplicationVersionNumber,"0020"),i.add(_IngenicoTags2.default.BatteryLevelThreshold,"00"),i.add(_tlvlib.Tags.GenerateACControl,e===TransactionTypeRefund?2:0),r.has(_retailPaymentDevice.FormFactor.EmvCertifiedContactless)&&i.add(_IngenicoTags2.default.OverallContactlessTransactionLimit,"FFFFFFFF"),r.has(_retailPaymentDevice.FormFactor.Chip)&&(i.add(_IngenicoTags2.default.TerminalCapabilities,"E028C8"),i.add(_IngenicoTags2.default.AdditionalTerminalCapabilities,"F000F0A001"),i.add(_IngenicoTags2.default.TerminalType,22),i.add(_IngenicoTags2.default.TransactionCategoryCode,52)),i}function getCurrencyIso(e){switch(e){case"AUD":return 36;case"GBP":return 826;case"USD":return 840;case"HKD":return 344;case"EUR":return 978;case"CAD":return 124;default:return null}}function buildAidApps(e,t){for(var n=void 0,r=null,i=new _tlvlib.TlvList(t),o=i.values,a=Array.isArray(o),s=0,o=a?o:o[Symbol.iterator]();;){var u;if(a){if(s>=o.length)break;u=o[s++]}else{if(s=o.next(),s.done)break;u=s.value}var c=u,d=c.parse();c.tag===_tlvlib.Tags.TerminalApplicationIdentifier?(n&&(e.apps.push([n,r]),r=null),n=d):c.tag===_tlvlib.Tags.ApplicationLabel&&(r&&n&&(e.apps.push([n,r]),n=null),r=d)}n&&e.apps.push([n,r.toString()])}function buildApps(e,t){for(var n=t.apdu.tlvs.values,r=Array.isArray(n),i=0,n=r?n:n[Symbol.iterator]();;){var o;if(r){if(i>=n.length)break;o=n[i++]}else{if(i=n.next(),i.done)break;o=i.value}var a=o;if(a.tag===_tlvlib.Tags.ApplicationTemplate){buildAidApps(e,a.parse())}}}function toHex(e,t){var n=2;void 0!==t&&(n=t);for(var r=e.toString(16);r.length<n;)r="0"+r;return r}function getTlvData(e){var t=e.tlvData,n="";for(var r in t)if(Object.prototype.hasOwnProperty.call(t,r)){n+=r;var i=t[r],o=i.length/2;n+=toHex(o),n+=i}return n=toHex(n.length/2,4)+n}function getContactlessData(e){var t=e.FloorLimit;return t+=e.CVMLimit,t+=e.TxnLimit,t+=e.TermCaps,t+=getTlvData(e)}exports.__esModule=!0;var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_paypalInvoicing=require("paypal-invoicing"),_events=require("events"),_tlvlib=require("tlvlib"),_retailPaymentDevice=require("retail-payment-device"),_manticore=require("manticore"),_manticore2=_interopRequireDefault(_manticore),_manticoreUtil=require("manticore-util"),_moment=require("moment"),_moment2=_interopRequireDefault(_moment),_async=require("async"),_async2=_interopRequireDefault(_async),_eventType=require("./eventType"),_eventType2=_interopRequireDefault(_eventType),_IngenicoTags=require("./IngenicoTags"),_IngenicoTags2=_interopRequireDefault(_IngenicoTags),_Parser=require("./Parser"),_Writer=require("./Writer"),_Writer2=_interopRequireDefault(_Writer),_IngenicoCommand=require("./IngenicoCommand"),_IngenicoCommand2=_interopRequireDefault(_IngenicoCommand),defaultConfiguration=require("./ingenico_config.json"),Log=(0,_manticoreLog2.default)("ingenico.terminal"),TransactionTypeRefund=20,blobDecodedStorage="BD",disableChip=1,disableEmvCertifiedContactless=2,disableMagneticCardSwipe=4,TerminalStatus={Contact:{Decline:function(e){return 0===e||144===e},OnlineDol:function(e){return 1===e||145===e},DecisionRequired:function(e){return 145===e}},Contactless:{OfflineDecline:function(e){return 3===e||147===e},OnlineDol:function(e){return 4===e||148===e},DecisionRequired:function(e){return 1===e},Magstripe:function(e){return 2===e}},AmountDol:function(e){return 0===e||144===e}},Terminal=function(e){function t(n,r){_classCallCheck(this,t);var i=_possibleConstructorReturn(this,e.call(this));return i.nativeShim=n,i.reader=r,i.remoteConfig={},i.firmwareChecksum="",i.writer=new _Writer2.default(r),i}return _inherits(t,e),t.prototype.disconnect=function(){Log.debug("Clearing the writer queue and re-creating it"),this.writer.clear(),this.writer=new _Writer2.default(this.reader)},t.prototype.getFirmwareVersionInfo=function(e){var t=createApduCommand(255,0,1,0);this.writer.send(new _IngenicoCommand2.default("get-firmware-version",t),e)},t.prototype.getFirmwareVersionInfoAsync=function(){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap((0,_manticoreUtil.callbackToPromise)(this.getFirmwareVersionInfo.bind(this)));case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}},null,this)},t.prototype.getFirmwareChecksum=function(e){var t=this,n=createApduCommand(255,136,9,6);this.writer.send(new _IngenicoCommand2.default("get-firmware-checksum",n),function(n,r){if(n)return void e(n);var i=new Buffer(r,"hex"),o=JSON.parse(i.toString());o&&o.FW&&(t.firmwareChecksum=o.FW.Chk),Log.debug(function(){return t.reader.id+" firmwareChecksum: "+t.firmwareChecksum+". Response: "+i.toString()}),e(n,r)})},t.prototype.getFirmwareChecksumAsync=function(){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap((0,_manticoreUtil.callbackToPromise)(this.getFirmwareChecksum.bind(this)));case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}},null,this)},t.prototype.getConfigVersion=function(e){var t=this,n=createApduCommand(255,136,9,4);this.writer.send(new _IngenicoCommand2.default("get-config-version",n),function(n,r){if(n)return void e(n);var i=new Buffer(r,"hex"),o=JSON.parse(i.toString());o&&o.SW&&(t.firmwareCustomVersion=parseInt(o.SW.name,16)),Log.info(t.reader.id+" versionInfo> Got configVersion: '"+(65535&t.firmwareCustomVersion)+"', capkeysVersion: '"+(t.firmwareCustomVersion>>16&65535)+"', firmwareCustomVersion: '"+t.firmwareCustomVersion+"' versionInfo: '"+JSON.stringify(o)+"', full response: "+i.toString()),e(n,r)})},t.prototype.getConfigVersionAsync=function(){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap((0,_manticoreUtil.callbackToPromise)(this.getConfigVersion.bind(this)));case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}},null,this)},t.prototype.setConfigVersion=function(e){var t=this,n=this.remoteConfig.version||0,r="000000000000"+toHex(n,8),i="ff8809010a"+r+"00",o=new _IngenicoCommand2.default("set-config-version");o.rawHexCommand=i,Log.info(this.reader.id+" versionInfo> Setting config version to remote version '"+this.remoteConfig.version+"'. TerminalCustomVersion: '"+r+"', cmd: '"+i+"'"),this.writer.send(o,function(i,o){Log[i?"error":"debug"](function(){return t.reader.id+" versionInfo> Received response to setConfigVersion "+n+" with Error: "+i+", rz: "+o}),t.firmwareCustomVersion=n,e(i,r)})},t.prototype.updateFirmware=function(e,t,n){var r=this;Log.debug(function(){return"Firmware update file "+e});var i=(0,_moment2.default)();_manticore2.default.getItemPath(e,blobDecodedStorage,function(o,a){if(Log.debug(function(){return"File path: "+a+", error: "+o}),o)return void n(o);if(!r.nativeShim.isUnsFileValid(a))return void _manticore2.default.deleteItem(e,blobDecodedStorage,function(e,t){Log.debug(function(){return"Delete update file. Error: "+e+", response: "+t}),n(_retailPaymentDevice.deviceError.corruptFirmware)});var s=new _IngenicoCommand2.default("enableFirmwareUpdateMode");s.nativeCommand=!0,r.writer.send(s,function(o,s){if(Log.debug(function(){return"Enabled firmware update mode. err: "+o+" response: "+s}),o)return void n(o);Log.debug(function(){return"fwFileLocation = "+a+" this.nativeShim.updateFirmware"});var u=new _IngenicoCommand2.default("updateFirmware");u.nativeCommand={fwFileLocation:a,progressCallback:t},r.writer.send(u,function(t,o){Log.debug(function(){return"Update firmware complete. Push duration: "+r.getTimeDiff(i)+" error: "+t+", response: "+o}),_manticore2.default.deleteItem(e,blobDecodedStorage,function(e,r){Log.debug(function(){return"Delete update file. Error: "+e+", response: "+r}),n(t,o)})})})})},t.prototype.getTimeDiff=function(e){var t=(0,_moment2.default)(),n=t.diff(e);return _moment2.default.utc(n).format("HH:mm:ss:SSS")},t.prototype.getCardInsertionStatus=function(e){var t=createApduCommand(255,1,0,0);this.writer.send(new _IngenicoCommand2.default("get-card-insertion-status",t),e)},t.prototype.waitForCardRemoval=function(e,t){var n=this,r=e?"ea60":"ffff",i="ff01020002"+r+"00",o=new _IngenicoCommand2.default("wait-for-card-removal");o.rawHexCommand=i,this.writer.send(o,function(e,r){Log.debug(function(){return"Received response to waitForCardRemoval with Error : "+JSON.stringify(e)+" \n and response : "+r}),n.reader.received({event:_eventType2.default.cardRemoved}),t(e,r)})},t.prototype.getDeviceCapabilities=function(e){var t=createApduCommand(255,0,2,0);this.writer.send(new _IngenicoCommand2.default("get-device-capabilities",t),e)},t.prototype.getDeviceCapabilitiesAsync=function(){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap((0,_manticoreUtil.callbackToPromise)(this.getDeviceCapabilities.bind(this)));case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}},null,this)},t.prototype._configurationHasKey=function(e){return this.remoteConfig&&e in this.remoteConfig},t.prototype._getConfigurationTagsForKey=function(e){var t=this;return this.remoteConfig&&e in this.remoteConfig?(Log.debug(function(){return"Got the tags for key : "+e+" "+JSON.stringify(t.remoteConfig[e])}),this.remoteConfig[e]):(Log.debug(function(){return"Returning null for key : "+e}),null)},t.prototype.configureOnlineDol=function(e){if(this._configurationHasKey("OnlineDol")){var t=createApduCommand(255,129,7,1),n=this._getConfigurationTagsForKey("OnlineDol",defaultConfiguration.OnlineDol);t.appendBytes(new Buffer(n,"hex")),this.writer.send(new _IngenicoCommand2.default("configure-online-dol",t),e)}else Log.warn("Skip configureOnlineDol. OnlineDol not found in configuration for "+this.reader.id),e()},t.prototype.configureResponseDol=function(e){if(this._configurationHasKey("ResponseDol")){var t=createApduCommand(255,129,7,2),n=this._getConfigurationTagsForKey("ResponseDol",defaultConfiguration.ResponseDol);t.appendBytes(new Buffer(n,"hex")),this.writer.send(new _IngenicoCommand2.default("configure-response-dol",t),e)}else Log.warn("Skip configureResponseDol. ResponseDol not found in configuration for "+this.reader.id),e()},t.prototype.configureContactlessResponseDol=function(e){if(this._configurationHasKey("ContactlessResponseDol")){var t=createApduCommand(255,129,7,3),n=this._getConfigurationTagsForKey("ContactlessResponseDol",defaultConfiguration.ContactlessResponseDol);t.appendBytes(new Buffer(n,"hex")),this.writer.send(new _IngenicoCommand2.default("configure-contactless-response-dol",t),e)}else Log.warn("Skip configureContactlessResponseDol. ContactlessResponseDol not found in configuration for "+this.reader.id),e()},t.prototype.configureContactlessOnlineDol=function(e){if(this._configurationHasKey("ContactlessOnlineDol")){var t=createApduCommand(255,129,7,4),n=this._getConfigurationTagsForKey("ContactlessOnlineDol",defaultConfiguration.ContactlessOnlineDol);t.appendBytes(new Buffer(n,"hex")),this.writer.send(new _IngenicoCommand2.default("configure-contactless-online-dol",t),e)}else Log.warn("Skip configureContactlessOnlineDol. ContactlessOnlineDol not found in configuration for "+this.reader.id),e()},t.prototype.clearAidList=function(e){if(this._configurationHasKey("aidList")){var t=createApduCommand(255,129,1,0);t.appendBytes(new Buffer("","hex")),this.writer.send(new _IngenicoCommand2.default("clear-aid-list",t),e)}else Log.warn("Skip clearAidList. aidList not found in configuration for "+this.reader.id),e()},t.prototype.configureContactAidList=function(e){var t=this._getConfigurationTagsForKey("aidList",defaultConfiguration.aidList);if(t&&t.Contact){var n=this._getCommonAidData(t.Contact,getTlvData),r=createApduCommand(255,129,0,t.Contact.P2||3);r.appendBytes(new Buffer(n,"hex")),this.writer.send(new _IngenicoCommand2.default("configure-contact-aid-list",r),e)}else Log.warn("Skip contact aid configuration, not found for "+this.reader.id),e()},t.prototype.configureContactlessAidList=function(e){var t=this._getConfigurationTagsForKey("aidList",defaultConfiguration.aidList);if(t&&t.Contactless){var n=this._getCommonAidData(t.Contactless,getContactlessData),r=createApduCommand(255,129,0,t.Contactless.P2||2);r.appendBytes(new Buffer(n,"hex")),this.writer.send(new _IngenicoCommand2.default("configure-contactless-aid-list",r),e)}else Log.warn("Skip contactless aid configuration, not found for "+this.reader.id),e()},t.prototype.clearPublicKeys=function(e){if(this._configurationHasKey("PublicKeys")){var t=createApduCommand(255,129,4,0);t.appendBytes(new Buffer("","hex")),this.writer.send(new _IngenicoCommand2.default("clear-public-keys",t),e)}else Log.warn("Skip clearPublicKeys. PublicKeys not found in configuration for "+this.reader.id),e()},t.prototype.configurePublicKeys=function(e,t){var n=this;if(this._configurationHasKey("PublicKeys")){for(var r=this._getConfigurationTagsForKey("PublicKeys",defaultConfiguration.PublicKeys),i=[],o=[],a=r,s=Array.isArray(a),u=0,a=s?a:a[Symbol.iterator]();;){var c;if("break"===function(){if(s){if(u>=a.length)return"break";c=a[u++]}else{if(u=a.next(),u.done)return"break";c=u.value}var e=c;Log.debug(function(){return"Add key "+JSON.stringify(e)});var t=e.RID+e.CAPublicKeyIndex+toHex(e.PublicKey.length/2)+e.PublicKey+e.ExponentOfPublicKey+e.Checksum,n=createApduCommand(255,129,2,0);n.appendBytes(new Buffer(t,"hex")),o.push({pKey:e,cmd:n,pKeyData:t})}())break}Log.debug(function(){return"publicKeyCmdList length: "+o.length}),_async2.default.eachSeries(o,function(t,r){n.writer.send(new _IngenicoCommand2.default("configure-public-keys",t.cmd),function(n,o){e(),Log.debug(function(){return"configurePublicKeys key: "+JSON.stringify(t.pKey)+" pKeyData: "+t.pKeyData+" error: "+n+", response: "+o}),n&&i.push(n),r&&r(n)})},function(){n._callbackFromPublicKeyList(i,t)})}else Log.warn("Skip configurePublicKeys. PublicKeys not found in configuration for "+this.reader.id),t()},t.prototype._callbackFromPublicKeyList=function(e,t){Log.debug("Done from _callbackFromPublicKeyList async.eachSeries");var n=null;e.length>0&&(Log.warn("Error in configurePublicKeys for "+this.reader.id),n=e),t(n,null)},t.prototype._getCommonAidData=function(e,t){var n="",r=e.AID,i=0;for(var o in r)if(Object.prototype.hasOwnProperty.call(r,o))if(o.length>0&&o.length%2==0){i+=1;var a=toHex(o.length/2),s=r[o];n+=a,n+=o,n+=s.TermAppVer,n+=s.LowestAppVer,n+=s.Priority,n+=s.AppSelect,t&&(n+=t(s))}else Log.error("Invalid aid length "+o.length+" for aid '"+o+"' for "+this.reader.id);return toHex(i)+n},t.prototype.configureMagstripeDol=function(e){if(this._configurationHasKey("MagstripeDol")){var t=createApduCommand(255,129,7,5),n=this._getConfigurationTagsForKey("MagstripeDol",defaultConfiguration.MagstripeDol);t.appendBytes(new Buffer(n,"hex")),this.writer.send(new _IngenicoCommand2.default("configure-magstripe-dol",t),e)}else Log.warn("Skip configureMagstripeDol. MagstripeDol not found in configuration for "+this.reader.id),e()},t.prototype.configureAmountDol=function(e){if(this._configurationHasKey("AmountDol")){var t=createApduCommand(255,129,7,0),n=this._getConfigurationTagsForKey("AmountDol",defaultConfiguration.AmountDol);t.appendBytes(new Buffer(n,"hex")),this.writer.send(new _IngenicoCommand2.default("configure-amount-dol",t),e)}else Log.warn("Skip configureAmountDol. AmountDol not found in configuration for "+this.reader.id),e()},t.prototype.configureContactlessOptions=function(e){if(this._configurationHasKey("ContactlessOptions")){var t=new _IngenicoCommand2.default("contactless-options");t.rawHexCommand=this._getConfigurationTagsForKey("ContactlessOptions",defaultConfiguration.ContactlessOptions),this.writer.send(t,e)}else Log.warn("Skip contactless options configuration, not found for "+this.reader.id),e()},t.prototype.sendConfigCommands=function(e){var t=this;if(this._configurationHasKey("ReaderCommands")){var n=this._getConfigurationTagsForKey("ReaderCommands",defaultConfiguration.ReaderCommands);Log.debug(function(){return"sendConfigCommands to "+t.reader.id+": "+JSON.stringify(n)}),_async2.default.eachSeries(n,function(e,n){if(e.Command){var r=new _IngenicoCommand2.default(e.Description);r.rawHexCommand=e.Command,t.writer.send(r,n)}else n()},e)}else Log.warn("ReaderCommands configuration, not found for "+this.reader.id),e()},t.prototype.stopTransaction=function(e){this.writer.deactivateReader(e)},t.prototype.postTransactionCleanup=function(e){Log.debug("postTransactionCleanup"),delete this._activeTxType,this.stopTransaction(e)},t.prototype.startTransaction=function(e,t,n,r){var i=this,o=_paypalInvoicing.Currency.toCents(t.currency,t.total),a=getCurrencyIso(t.currency);this.invoice=t,this._activeTxType=e;var s=new Set(n),u=0;s.has(_retailPaymentDevice.FormFactor.Chip)||(u|=disableChip),s.has(_retailPaymentDevice.FormFactor.EmvCertifiedContactless)||(u|=disableEmvCertifiedContactless),s.has(_retailPaymentDevice.FormFactor.MagneticCardSwipe)||(u|=disableMagneticCardSwipe),Log.debug(function(){return"startTransaction P2 = "+u+" for "+i.reader.id});var c=buildTlvListForTx(e,o,a,s),d=createApduCommand(255,129,16,u);d.appendBytes(c.toBytes()),s.has(_retailPaymentDevice.FormFactor.Chip)?d.appendBytes(new Buffer("DF15039F3704DF8229010100DF82000400010001DF82020100DF0B0101DF3A050000090220","hex")):d.appendBytes(new Buffer("DF8229010100","hex"));var l=new _IngenicoCommand2.default(_Writer2.default.cmdName.startTx,d);this.writer.send(l,function(e,t){i._parseResponseForTxStart(e,t,r)})},t.prototype._parseResponseForTxStart=function(e,t,n){var r=this,i=this._activeTxType;if(Log.debug(function(){return"Received response for startTransaction command. Error: "+JSON.stringify(e)+" rz: "+t}),e)return void n(e);var o=(0,_Parser.parseStatus)(t);if(Log.debug(function(){return"Transaction response status from presenting card: 0x"+(o?o.toString(16):"undefined")}),TerminalStatus.AmountDol(o))return Log.debug("Amount DOL detected in the transaction response... Will request for transaction data"),void(this.reader.cardInsertedHandler?(Log.debug(function(){return"Invoke CardInsertHandler for chip insert: "+r.reader.context.id}),this.reader.cardInsertedHandler(new _retailPaymentDevice.CardInsertedHandler(function(){r.emit(_retailPaymentDevice.PaymentDevice.Event.cardPresented,null,_retailPaymentDevice.CardPresentEvent.insertDetected,_retailPaymentDevice.FormFactor.Chip),Log.debug(function(){return"Continue CardDataRead: "+r.reader.context.id}),r._sendTransactionData(function(e,t){r._parseResponseForTxComplete(e,t,n)})}))):(Log.debug(function(){return"Continue CardDataRead without cardInsertedHandler: "+r.reader.context.id}),this._sendTransactionData(function(e,t){r._parseResponseForTxComplete(e,t,n)})));if(TerminalStatus.Contact.DecisionRequired(o))return this.buildAppActivation=function(){var e=(0,_Parser.parseCardData)(t),r=new _retailPaymentDevice.AvailableApplications(t);buildApps(r,e),Log.debug(function(){return"dr : "+JSON.stringify(r)}),n(null,r)},void(this.reader.cardInsertedHandler?(Log.debug(function(){return"Invoke CardInsertHandler for multi-app: "+r.reader.context.id}),this.reader.cardInsertedHandler(new _retailPaymentDevice.CardInsertedHandler(function(){Log.debug(function(){return"Multi app card with cardInsertedHandler: "+r.reader.context.id}),r.buildAppActivation()}))):(Log.debug(function(){return"Multi app card without cardInsertedHandler: "+r.reader.context.id}),this.buildAppActivation()));if(TerminalStatus.Contactless.OfflineDecline(o)&&i!==TransactionTypeRefund)return Log.debug("Contactless Offline Decline."),void n(_retailPaymentDevice.deviceError.nfcNotAllowed);if(!t)return void n(new Error("Invalid card data"));var a=void 0;try{var s=t.replace("9F4100","");a=(0,_Parser.parseCardData)(s)}catch(e){return Log.error("Unable to parse card data: "+e),void n(_retailPaymentDevice.deviceError.dataRetrievalFailed.withDevMessage(e.message))}n(null,a)},t.prototype._parseResponseForTxComplete=function(e,t,n){var r=this._activeTxType;if(delete this._activeTxType,e)return void n(e);if(!t)return void n(new Error("Invalid card data"));try{var i=function(){var e=t.replace("9F4100",""),i=(0,_Parser.parseCardData)(e);if(r!==TransactionTypeRefund){for(var o=!1,a=i.apdu.tlvs.values,s=Array.isArray(a),u=0,a=s?a:a[Symbol.iterator]();;){var c;if(s){if(u>=a.length)break;c=a[u++]}else{if(u=a.next(),u.done)break;c=u.value}var d=c;if(57137===d.tagNumber){var l=function(){o=!0;var e=d.parse();if(0===e[0])return Log.debug(function(){return"Decline for status: 0x"+i.getStatus().toString(16)+" and tag (0xDF31) status  = 0x"+e.toString("hex")}),n(_retailPaymentDevice.deviceError.contactIssuer,i),{v:{v:void 0}};1===e[0]?Log.debug(function(){return"online approval for status: 0x"+i.getStatus().toString(16)+" and tag (0xDF31) status  = 0x"+e.toString("hex")}):Log.debug(function(){return"unexpected tag (0xDF31) status  = 0x"+e.toString("hex")+" for status: 0x"+i.getStatus().toString(16)})}();if("object"===(void 0===l?"undefined":_typeof(l)))return l.v}}if(!o)for(var f=i.apdu.tlvs.values,g=Array.isArray(f),p=0,f=g?f:f[Symbol.iterator]();;){var m;if(g){if(p>=f.length)break;m=f[p++]}else{if(p=f.next(),p.done)break;m=p.value}var v=m;if(40743===v.tagNumber){var y=function(){var e=v.parse();if(0===e[0])return Log.debug(function(){return"Decline for status: 0x"+i.getStatus().toString(16)+" and tag (0x9F27) status  = 0x"+e.toString("hex")}),n(_retailPaymentDevice.deviceError.contactIssuer,i),{v:{v:void 0}};64===e[0]?Log.debug(function(){return"online approval for status: 0x"+i.getStatus().toString(16)+" and tag (0x9F27) status  = 0x"+e.toString("hex")}):Log.debug(function(){return"unexpected tag (0x9F27) status  = 0x"+e.toString("hex")+" for status: 0x"+i.getStatus().toString(16)})}();if("object"===(void 0===y?"undefined":_typeof(y)))return y.v}}}n(null,i)}();if("object"===(void 0===i?"undefined":_typeof(i)))return i.v}catch(e){Log.error("Unable to parse card data: "+e),n(e)}},t.prototype.completeTransaction=function(e,t){var n=this,r=createApduCommand(255,129,21,0),i=new _tlvlib.TlvList;i.add(57145,new Buffer("01","hex")),r.appendBytes(i.toBytes()),r.appendHex(e.toString("hex")),this.writer.send(new _IngenicoCommand2.default("complete-transaction",r),function(e,r){n._parseResponseForTxComplete(e,r,t)})},t.prototype._sendTransactionData=function(e){var t=createApduCommand(255,129,19,0),n=new _tlvlib.TlvList;if(n.add(40731,new Buffer("00000000","hex")),n.add(57095,new Buffer("00000000","hex")),n.add(57096,new Buffer("00","hex")),n.add(57097,new Buffer("00","hex")),n.add(57091,new Buffer("00000000","hex")),n.add(57092,new Buffer("00000000","hex")),n.add(57093,new Buffer("00000000","hex")),this.invoice){var r=_paypalInvoicing.Currency.toCents(this.invoice.currency,this.invoice.total);Log.debug(function(){return"in the TransactionData command, finalizing the invoice amount = "+r}),n.add(_tlvlib.Tags.AmountAuthorized,_tlvlib.Tags.AmountAuthorized.format.toBytes(r,6))}t.appendBytes(n.toBytes()),this.writer.send(new _IngenicoCommand2.default("transaction-data",t),e)},t.prototype.getBatteryLevel=function(e,t){var n=this,r=createApduCommand(255,136,0,1),i=new _IngenicoCommand2.default("get-battery-or-charging-status",r);i.reuseIfQueued=e,this.writer.send(i,function(r,i){if(r)return Log.error("Unable to retrieve battery level+charging status on "+n.reader.id+": "+r),void t(r,null);var o=parseInt(i,16);if(255===o){var a=createApduCommand(255,136,0,0);a.reuseIfQueued=e,n.writer.send(new _IngenicoCommand2.default("get-battery-level",a),function(e,i){if(e)return Log.error("Unable to retrieve battery level on "+n.reader.id+": "+r),void t(r,null);o=parseInt(i,16),Log.debug(function(){return"charging battery level "+o});var a=new _retailPaymentDevice.BatteryInfo(o,!0,new Date,_retailPaymentDevice.batteryStatus.charging);t(null,a)})}else{Log.debug(function(){return"draining battery level "+o});var s=new _retailPaymentDevice.BatteryInfo(o,!1,new Date,_retailPaymentDevice.batteryStatus.draining);t(null,s)}})},t.prototype.selectApplication=function(e,t){var n=this;Log.debug(function(){return"Selected AID to be sent : "+e});var r=createApduCommand(255,129,18,0);r.appendHex(e),this.writer.send(new _IngenicoCommand2.default("select-app",r),function(e,r){n._parseResponseForTxStart(e,r,t)})},t}(_events.EventEmitter);exports.default=Terminal;

}).call(this,require("buffer").Buffer)
},{"./IngenicoCommand":44,"./IngenicoTags":46,"./Parser":47,"./Writer":51,"./eventType":52,"./ingenico_config.json":55,"async":92,"buffer":96,"events":200,"manticore":213,"manticore-log":208,"manticore-util":212,"moment":278,"paypal-invoicing":279,"retail-payment-device":356,"tlvlib":359}],50:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}exports.__esModule=!0;var _tlvlib=require("tlvlib"),_retailPaymentDevice=require("retail-payment-device"),_manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),Log=(0,_manticoreLog2.default)("ingenico.TransactionDataResponse"),TransactionDataResponse=function(e){function t(r,n,o){_classCallCheck(this,t);var a=_possibleConstructorReturn(this,e.call(this,n,n.length,o));a.status=r;var i=new _tlvlib.TlvList(n);try{a.apdu=new _tlvlib.ApduResponse(i),a.apdu.data=n,Log.debug(function(){return"Ingenico response template: "+(a.apdu.template?a.apdu.template.toString(16):"<empty>")+" SW1: "+a.apdu.sw1.toString(16)+" SW2: "+a.apdu.sw2.toString(16)+" Raw: "+n.toString("hex")})}catch(e){Log.error("Failed to parse APDU from raw response: "+n.toString("hex")+"\nError: "+e.message)}return a}return _inherits(t,e),t.prototype.getStatus=function(){return this.status},t}(_retailPaymentDevice.CardReaderResponse);exports.default=TransactionDataResponse;

},{"manticore-log":208,"retail-payment-device":356,"tlvlib":359}],51:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _toConsumableArray(e){if(Array.isArray(e)){for(var n=0,t=Array(e.length);n<e.length;n++)t[n]=e[n];return t}return Array.from(e)}function _classCallCheck(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_createClass=function(){function e(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(n,t,a){return t&&e(n.prototype,t),a&&e(n,a),n}}(),_machina=require("machina"),_machina2=_interopRequireDefault(_machina),_manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_events=require("events"),_manticore=require("manticore"),_manticore2=_interopRequireDefault(_manticore),_retailPaymentDevice=require("retail-payment-device"),_IngenicoCommand=require("./IngenicoCommand"),_IngenicoCommand2=_interopRequireDefault(_IngenicoCommand),Log=(0,_manticoreLog2.default)("ingenico.writer"),maxRetry=3,msRetryPause=300,errCardReaderBusy="CardReaderBusy",Writer=function(){function e(n){var t=this;_classCallCheck(this,e),this.device=n,this.channel=new _machina2.default.Fsm({namespace:"ingenico-command-queue",initialState:"idle",initialize:function(){t._queue=[],t._isAwaiting=function(){return t._queue.length>0&&t._queue[0].awaiting},t._isAwaitingOn=function(e){return t._queue.length>0&&t._queue[0].awaiting&&t._queue[0].name===e},t._queueToString=function(){return"Q = ["+(t._queue.length?t._queue.map(function(e){return(e.awaiting?"<AWAIT>":"")+e.name+"-"+e.id}).join(","):"<none>")+"]"},t._addCommandToQueue=function(n){if(n.reuseIfQueued){e:for(var a=t._queue,i=Array.isArray(a),r=0,a=i?a:a[Symbol.iterator]();;){var o,u=function(){if(i){if(r>=a.length)return"break";o=a[r++]}else{if(r=a.next(),r.done)return"break";o=r.value}var e=o;if(e.name===n.name){var u;return(u=e.callbacks).push.apply(u,_toConsumableArray(n.callbacks)),Log.debug(function(){return"["+t.channel.state+"] =*= Will not send "+n.nameWithId+".. callback will be added to "+e.id+". "+t._queueToString()}),{v:void 0}}}();switch(u){case"break":break e;default:if("object"===(void 0===u?"undefined":_typeof(u)))return u.v}}}if(n.name===e.cmdName.startTx){if(t._isAwaitingOn(n.name))return void Log.warn(function(){return"["+t.channel.state+"] Discarding "+n+" as device is currently active with command "+t._queue[0]});for(var c=1;c<t._queue.length;c++){var d=function(e){if(t._queue[e].name===n.name)return Log.debug(function(){return"["+t.channel.state+"] "+n.nameWithId+" will replace existing command "+t._queue[e].nameWithId+" at position "+e}),t._queue[e]=n,{v:void 0}}(c);if("object"===(void 0===d?"undefined":_typeof(d)))return d.v}}if(n.name===e.cmdName.stopTx){if(t._isAwaitingOn(n.name))return Log.debug(function(){return"["+t.channel.state+"] Discarding "+n.nameWithId+" as we are already awaiting on a stop transaction "+t._queue[0].nameWithId}),void t._queue[0].callbacks.push(n.callbacks[0]);for(var c=t._queue.length-1;c>0;c--)!function(a){var i=t._queue[a];i.name===e.cmdName.startTx&&(Log.debug(function(){return"["+t.channel.state+"] Discarding unsent "+i.nameWithId+" in response to "+n.nameWithId}),t._queue.splice(a,1))}(c);for(var s=[],c=t._queue.length-1;c>=0;c--){var l=t._queue[c];l.name===e.cmdName.stopTx&&(t._queue.splice(c,1),s=s.concat(l.callbacks))}return s.length>0&&Log.debug(function(){return"["+t.channel.state+"] "+s.length+" callbacks of unsent '"+n.name+"' command will be added to "+n.nameWithId}),s=s.concat(n.callbacks),n.callbacks=s,t._isAwaiting()?t._queue.splice(1,0,n):t._queue.unshift(n),void Log.debug(function(){return"["+t.channel.state+"]["+n.nameWithId+"] Added to top of Queue. "+t._queueToString()})}Log.debug(function(){return"["+t.channel.state+"] Enqueue command "+n.nameWithId+". "+t._queueToString()}),t._queue.push(n)},t._dequeueAndInvokeCallback=function(e,n,a){var i=t._queue.shift();if(e&&e.code===errCardReaderBusy){if(Log.warn("["+t.channel.state+"] <==== CardReaderBusy RESPONSE received "+i.nameWithId),!(i.sendAttempt>maxRetry))return Log.warn("["+t.channel.state+"] <==== RESPONSE indicates card reader is busy. Will retry "+i.nameWithId+" in "+msRetryPause+"ms. Attempts so far: "+i.sendAttempt+"/"+maxRetry),t._queue.unshift(i),void _manticore2.default.setTimeout(function(){Log.debug(function(){return"["+t.channel.state+"] Transitioning to 'process' state after the "+msRetryPause+" timeout"}),a("sendCommand")},msRetryPause);Log.error("["+t.channel.state+"] <==== RESPONSE indicates card reader is busy and already re-tried "+i.sendAttempt+" times. Will error out")}else e&&e===_retailPaymentDevice.deviceError.deviceNotConnected?Log.debug(function(){return"["+t.channel.state+"] <==== RESPONSE Device not connected! Will error out "+i.nameWithId}):e&&"CommandCancelledUponReceiptOfACancelWaitCommand"===e.code?Log.debug(function(){return"["+t.channel.state+"] <==== Received expected error: '"+JSON.stringify(e)+"' from cancelling last command"}):Log[e?"error":"debug"](function(){return"["+t.channel.state+"] <==== RESPONSE "+(e?"Error: "+JSON.stringify(e)+" ":"")+"will be handled by "+i.nameWithId+" CallbackCount: "+i.callbacks.length+". rz: "+JSON.stringify(n)});t.device.lastError=e;for(var r=i.callbacks,o=Array.isArray(r),u=0,r=o?r:r[Symbol.iterator]();;){var c;if("break"===function(){if(o){if(u>=r.length)return"break";c=r[u++]}else{if(u=r.next(),u.done)return"break";c=u.value}var a=c;a&&_manticore2.default.setTimeout(function(){try{a(e,n)}catch(e){Log.error("["+t.channel.state+"] Error from invoking callback for command "+i.nameWithId+" with response "+n+"\ncb: "+a+" \ne stack: "+e.stack+" :\ne  message : "+(e.msg||e.message))}},0)}())break}a("idle")},t._deviceRemovedHandler=function(){e.Events.emit("response",_retailPaymentDevice.deviceError.deviceNotConnected)},t._deviceResponseHandler=function(e,n){t._dequeueAndInvokeCallback(e,n,function(e){t._removeListeners(),t.channel.transition(e)})},t._removeListeners=function(){e.Events.removeListener("response",t._deviceResponseHandler),t.device.removeListener(_retailPaymentDevice.PaymentDevice.Event.disconnected,t._deviceRemovedHandler),t.device.removeListener(_retailPaymentDevice.PaymentDevice.Event.deviceRemoved,t._deviceRemovedHandler)},Log.debug(function(){return"Command channel queue initialized for "+t.device.id})},states:{idle:{_onEnter:function(){Log.debug(function(){return"[idle]--\x3eenter Queue size: "+t._queue.length}),t._queue.length>0&&t.channel.transition("sendCommand")},enqueue:function(e){t._addCommandToQueue(e),t.channel.transition("sendCommand")}},sendCommand:{_onEnter:function(){if(Log.debug(function(){return"["+t.channel.state+"]--\x3eenter. "+t._queueToString()}),!t._queue.length)return Log.debug(function(){return"["+t.channel.state+"] No commands to send, Transitioning to 'idle'"}),void t.channel.transition("idle");t.channel.handle("send")},send:function(){if(!t.device.isConnected())return void t._dequeueAndInvokeCallback(_retailPaymentDevice.deviceError.deviceNotConnected,null,function(e){t.channel.transition(e)});var n=t._queue[0],a=function(n,t){_manticore2.default.setTimeout(function(){e.Events.emit("response",n,t)},0)};if(t.device.lastError=null,n.awaiting=!0,n.sendAttempt+=1,n.nativeCommand)Log.debug(function(){return"["+t.channel.state+"] ====> Sending native command "+n.nameWithId+". CallbackCount "+n.callbacks.length}),t.device.native[n.name](n.nativeCommand,a);else{var i=n.apduCommand?n.apduCommand.toBytes().toString("hex"):n.rawHexCommand;Log.debug(function(){return"["+t.channel.state+"] ====> Sending "+n.nameWithId+":"+i+". CallbackCount "+n.callbacks.length}),t.device.native.send(n.name+":"+n.id,i,a)}n.name===e.cmdName.startTx?t.channel.transition("waitForCardData",n):t.channel.transition("wait",n)},enqueue:function(e){t._addCommandToQueue(e)}},wait:{_onEnter:function(){Log.debug(function(){return"["+t.channel.state+"]--\x3eenter. "+t._queueToString()}),t.channel.handle("awaitResponse")},awaitResponse:function(){e.Events.once("response",t._deviceResponseHandler),t.device.once(_retailPaymentDevice.PaymentDevice.Event.disconnected,t._deviceRemovedHandler),t.device.once(_retailPaymentDevice.PaymentDevice.Event.deviceRemoved,t._deviceRemovedHandler)},enqueue:function(e){t._addCommandToQueue(e)}},waitForCardData:{_onEnter:function(e){Log.debug(function(){return"["+t.channel.state+"]--\x3eenter. "+t._queueToString()}),t.channel.handle("awaitResponse",e)},awaitResponse:function(){e.Events.once("response",t._deviceResponseHandler),t.device.once(_retailPaymentDevice.PaymentDevice.Event.disconnected,t._deviceRemovedHandler),t.device.once(_retailPaymentDevice.PaymentDevice.Event.deviceRemoved,t._deviceRemovedHandler)},cancelLastCommand:function(){t._removeListeners();var e=t._queue.shift(),n=new _IngenicoCommand2.default("cancel-last-command");n.rawHexCommand="ff0b000000",t._queue.unshift(n),Log.debug(function(){return"["+t.channel.state+"][cancelLastCommand] Pushed "+n.nameWithId+" to top of queue and abandoned "+(e?""+e.nameWithId:"<none>")}),t.channel.transition("sendCommand")},enqueue:function(e){t._addCommandToQueue(e)}}},enqueue:function(e){t.channel.handle("enqueue",e)},deactivateReader:function(n){Log.debug(function(){return"["+t.channel.state+"] ***** Reader de-activate requested. "+t._queueToString()}),t.channel.handle("cancelLastCommand");var a=new _IngenicoCommand2.default(e.cmdName.stopTx);a.rawHexCommand="FF811600000000",a.callbacks.push(n),t.channel.handle("enqueue",a)}})}return e.prototype.send=function(e,n){e instanceof _IngenicoCommand2.default?(e.callbacks.push(n),this.channel.enqueue(e)):(Log.error("Received command "+e+" that is not of type IngenicoCommand"),n&&n(_retailPaymentDevice.deviceError.unexpectedRequest))},e.prototype.clear=function(){Log.info("Reset queue of size : "+this._queue.length),this._queue=[],this._removeListeners()},e.prototype.deactivateReader=function(e){this.channel.deactivateReader(e)},_createClass(e,[{key:"commandQueue",get:function(){return this._queue}}]),e}();exports.default=Writer,Writer.cmdName={stopTx:"stop-transaction",startTx:"start-transaction"},Writer.Events=new _events.EventEmitter;

},{"./IngenicoCommand":44,"events":200,"machina":207,"manticore":213,"manticore-log":208,"retail-payment-device":356}],52:[function(require,module,exports){
"use strict";exports.__esModule=!0;var eventType={cardInserted:"cardInserted",cardRemoved:"cardRemoved",cardSwiped:"cardSwiped",cardTapped:"cardTapped",commandSent:"commandSent"};exports.default=eventType;

},{}],53:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}exports.__esModule=!0;var _IngenicoDevice=require("./IngenicoDevice");Object.defineProperty(exports,"default",{enumerable:!0,get:function(){return _interopRequireDefault(_IngenicoDevice).default}});

},{"./IngenicoDevice":45}],54:[function(require,module,exports){
"use strict";exports.__esModule=!0;var ingenicoReaderError={invalidChip:"C009",invalidChipSwipeCard:"C00A",pleaseInsertCard:"C00C",multipleContactlessCardsDetected:"C00E",pleaseSeePhone:"C01A",contactlessInterfaceFailedTryContact:"C017",transactionCancelled:"CommandCancelledUponReceiptOfACancelWaitCommand",mandatoryEMVTLVDataMissing:"MandatoryEMVTLVDataMissing",noMutuallySupportedAIDs:"NoMutuallySupportedAIDs",applicationBlocked:"ApplicationBlocked",cardReaderNotConnected:"CardReaderNotConnected",cardReaderConnectionLost:"ConnectionLost",batteryTooLowError:"BatteryTooLowError"};exports.default=ingenicoReaderError;

},{}],55:[function(require,module,exports){
module.exports={
  "AmountDol": "9F02065F25035F24034F1050109F121087019F36025A0A5F3401950557139B02",
  "OnlineDol": "5F24039F09025F30029F02069F03069F26084F10820250109F36029F07029F34039F270184109F1E089F10205F28025F34019F39019F06109F33039F1A029F350195059F53015F2A029A039F41049B029C019F37045713DF822520DF8223F0",
  "ResponseDol": "5F24039F09029F02069F03069F26084F10820250109F36029F07029F34039F270184109F1E089F10205F28025F34019F39019F06109F33039F1A029F350195059F53015F2A029A039F41049B029C019F37045713DF822520DF8223F0",
  "ContactlessResponseDol": "9F63069F64019F62069F65029F7C209F6B139F67019F66049F60028202841095059A039C015F34019F02069F03069F09029F10209F1A029F1E089F26089F27019F33039F34039F35019F36029F37049F41049F53019F6E205F24039F61025F201ADF31015713DF822520DF8223F0DF6F02DFDF413EDFDF4227",
  "ContactlessOnlineDol": "9F63069F64019F62069F65029F7C209F6B139F67019F66049F60029F07029F39019F06105F28025F30024F1050108202841095059A039C015F2A025F34019F02069F03069F09029F10209F1A029F1E089F26089F27019F33039F34039F35019F36029F37049F41049F53019F6E205F24039F61025F201A5713DF822520DF8223F0DF6F02DFDF413EDFDF4227",
  "MagstripeDol": "DF822520DF8223F0DF82564CDF82574CDF82584CDF82604C00",
  "ContactlessOptions": "ff8124000002df9d00",
  "ReaderCommands":
  [
    {
      "Description": "buzzerCmd",
      "Command": "ff880700010200"
    },
    {
      "Description": "indefiniteWait",
      "Command": "FF8106000006FFFF656e010100"
    },
    {
      "Description": "savingModeCmd",
      "Command": "ff88040002000a00"
    },
    {
      "Description": "shutDownTimeoutCmd",
      "Command": "ff88040102007800"
    }
  ],
  "aidList": {
    "Contact": {
      "AID": {
        "A0000000031010": {
          "TermAppVer": "0096",
          "LowestAppVer": "0096",
          "Priority": "00",
          "AppSelect": "01",
          "tlvData": {
            "DF03": "DC4000A800",
            "DF04": "0010000000",
            "DF05": "DC4004F800",
            "9F01": "000000000000",
            "9F40": "600000A001",
            "9F35": "22",
            "9F33": "6028C8"
          }
        },
        "A0000000032010": {
          "TermAppVer": "0096",
          "LowestAppVer": "0096",
          "Priority": "00",
          "AppSelect": "01",
          "tlvData": {
            "DF03": "DC4000A800",
            "DF04": "0010000000",
            "DF05": "DC4004F800",
            "9F01": "000000000000",
            "9F40": "600000A001",
            "9F35": "22",
            "9F33": "6028C8"
          }
        },
        "A0000000041010": {
          "TermAppVer": "0002",
          "LowestAppVer": "0002",
          "Priority": "00",
          "AppSelect": "01",
          "tlvData": {
            "DF03": "FE5080F800",
            "DF04": "0000000000",
            "DF05": "FE5080F800",
            "9F01": "000000000000",
            "9F40": "600000A001",
            "9F35": "22",
            "9F33": "6028C8"
          }
        },
        "A0000001523010": {
          "TermAppVer": "0001",
          "LowestAppVer": "0001",
          "Priority": "00",
          "AppSelect": "01",
          "tlvData": {
            "DF03": "DC00002000",
            "DF04": "0010000000",
            "DF05": "FCE09CF800",
            "9F01": "000000000000",
            "9F40": "600000A001",
            "9F35": "22",
            "9F33": "6028C8"
          }
        },
        "A00000002501": {
          "TermAppVer": "0001",
          "LowestAppVer": "0001",
          "Priority": "00",
          "AppSelect": "01",
          "tlvData": {
            "DF03": "C800000000",
            "DF04": "0000000000",
            "DF05": "C800000000",
            "9F01": "000000000000",
            "9F40": "600000A001",
            "9F35": "22",
            "9F33": "6028C8"
          }
        }
      }
    },
    "Contactless": {
      "AID": {
        "A0000000031010": {
          "TermAppVer": "0096",
          "LowestAppVer": "0096",
          "Priority": "00",
          "AppSelect": "01",
          "FloorLimit": "00000000",
          "CVMLimit": "00001388",
          "TxnLimit": "000F4240",
          "TermCaps": "6028C8",
          "tlvData": {
            "DF03": "0000000000",
            "DF04": "0000000000",
            "DF05": "0000000000",
            "DF07": "00000000",
            "DF08": "00",
            "DF09": "00",
            "DF15": "9F37049F02065F2A029F6905",
            "DF18": "9F0206",
            "9F40": "600000A001",
            "9F6D": "0001",
            "9F35": "22"
          }
        },
        "A0000000032010": {
          "TermAppVer": "0096",
          "LowestAppVer": "0096",
          "Priority": "00",
          "AppSelect": "01",
          "FloorLimit": "00000000",
          "CVMLimit": "00001388",
          "TxnLimit": "000F4240",
          "TermCaps": "6028C8",
          "tlvData": {
            "DF03": "0000000000",
            "DF04": "0000000000",
            "DF05": "0000000000",
            "DF07": "00000000",
            "DF08": "00",
            "DF09": "00",
            "DF15": "9F37049F02065F2A029F6905",
            "DF18": "9F0206",
            "9F40": "600000A001",
            "9F6D": "0001",
            "9F35": "22"
          }
        },
        "A0000000041010": {
          "TermAppVer": "0002",
          "LowestAppVer": "0002",
          "Priority": "00",
          "AppSelect": "01",
          "FloorLimit": "00000000",
          "CVMLimit": "00001388",
          "TxnLimit": "000F4240",
          "TermCaps": "6028C8",
          "tlvData": {
            "DF07": "00000000",
            "DF08": "00",
            "DF09": "00",
            "DF03": "FC50808800",
            "DF04": "0000000000",
            "DF05": "FC50808800",
            "9F40": "600000A001",
            "9F6D": "0001",
            "9F35": "22",
            "9F1D": "2C28000000000000",
            "DF15": "9F37049F02065F2A029F6905",
            "DF18": "9F02065F2A029A039C0195059F3704",
            "DF54": "9F6A04",
            "DF811E": "10",
            "DF811B": "20",
            "DF812C": "00",
            "DF8118": "20",
            "DF8119": "08",
            "DF8124": "000001000000",
            "DF8125": "000001000000",
            "DF8126": "000000005000",
            "DF811C": "003C",
            "DF811D": "01"
          }
        },
        "A0000001523010": {
          "TermAppVer": "0100",
          "LowestAppVer": "0100",
          "Priority": "00",
          "AppSelect": "01",
          "FloorLimit": "00000000",
          "CVMLimit": "00001388",
          "TxnLimit": "000F4240",
          "TermCaps": "6028C8",
          "tlvData": {
            "DF03": "0000000000",
            "DF04": "0000000000",
            "DF05": "0000000000",
            "DF07": "00000000",
            "DF08": "00",
            "DF09": "00",
            "DF15": "9F37049F02065F2A029F6905",
            "9F40": "600000A001",
            "9F6D": "0001",
            "9F35": "22"
          }
        },
        "A0000003241010": {
          "TermAppVer": "0100",
          "LowestAppVer": "0100",
          "Priority": "00",
          "AppSelect": "01",
          "FloorLimit": "00000000",
          "CVMLimit": "00001388",
          "TxnLimit": "000F4240",
          "TermCaps": "6028C8",
          "tlvData": {
            "DF03": "0000000000",
            "DF04": "0000000000",
            "DF05": "0000000000",
            "DF07": "00000000",
            "DF08": "00",
            "DF09": "00",
            "DF15": "9F37049F02065F2A029F6905",
            "9F6D": "0001",
            "9F40": "600000A001",
            "9F35": "22"
          }
        },
        "A00000002501": {
          "TermAppVer": "0001",
          "LowestAppVer": "0001",
          "Priority": "00",
          "AppSelect": "01",
          "FloorLimit": "00000000",
          "CVMLimit": "00001388",
          "TxnLimit": "000F4240",
          "TermCaps": "6028C8",
          "tlvData": {
            "DF07": "00000000",
            "DF08": "00",
            "DF09": "00",
            "DF03": "DC50840000",
            "DF04": "0000000000",
            "DF05": "C400000000",
            "9F40": "600000A001",
            "DF15": "9F37049F02065F2A029F6905",
            "DF44": "003C",
            "9F6D": "0001",
            "9F35": "22",
            "9F6E": "D8A00000"
          }
        }
      }
    }
  }
}

},{}],56:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,i){if(!(e instanceof i))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_retailPaymentDevice=require("retail-payment-device"),Log=(0,_manticoreLog2.default)("paymentDevice.displayController"),CardReaderDisplayController=function(){function e(){_classCallCheck(this,e),this._lastDisplayCommand={}}return e.prototype.display=function(e,i,t,o){var a=this,r=!1,n=this._lastDisplayCommand[i.id];n?n.priority>e?(Log.debug(function(){return"Will NOT push "+e+":"+t.id+" to "+i.id+" as last pushed command "+n.priority+":"+n.displayArgs.id+" was higher in priority"}),r=!1):(Log.debug(function(){return"Will push "+e+":"+t.id+" to "+i.id+" as last pushed command "+n.priority+":"+n.displayArgs.id+" was lower in priority"}),r=!0):(Log.debug(function(){return"Will push "+t.id+" to "+i.id+" as no previous commands were found"}),i.once(_retailPaymentDevice.PaymentDevice.Event.disconnected,function(){return delete a._lastDisplayCommand[i.id]}),r=!0),r&&(this._lastDisplayCommand[i.id]={priority:e,displayArgs:t},i.display(t,function(e){e&&delete a._lastDisplayCommand[i.id],o&&o(e)}))},e.prototype.resetAll=function(){this._lastDisplayCommand={}},e}(),displayController=new CardReaderDisplayController;exports.default=displayController;

},{"manticore-log":208,"retail-payment-device":356}],57:[function(require,module,exports){
"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}exports.__esModule=!0;var _events=require("events"),CardReaderScanAndDiscoverOptions=function(e){function t(){return _classCallCheck(this,t),_possibleConstructorReturn(this,e.apply(this,arguments))}return _inherits(t,e),t.prototype.connectToCardReader=function(e){},t.prototype.onAddedObserver=function(){},t}(_events.EventEmitter);exports.default=CardReaderScanAndDiscoverOptions,CardReaderScanAndDiscoverOptions.Events={onCardReaderDiscovered:"onCardReaderDiscovered",onScanComplete:"onScanComplete",onConnectionStatus:"onConnectionStatus"};

},{"events":200}],58:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}function getHost(e){return"live"===e?"api.paypal.com":"sandbox"===e?"api.sandbox.paypal.com":"www."+e+".stage.paypal.com:12326"}function generateSwUpdateUrl(e){return"https://"+getHost(e)+"/v2/retail/validate-config"}function generateRKIUrl(e){return"https://"+getHost(e)+"/v2/retail/secure-terminal-configs"}function getRemoteKeys(e,r,t,i){var a=generateRKIUrl(_Merchant2.default.active.environment),n=e||{};n.vendor=r.toLowerCase(),n.model=(0,_retailSDKUtil.getDeviceModelName)(t).toLowerCase(),Log.debug(function(){return"Checking for RKI info from "+a+"\n"+JSON.stringify(n,null,4)}),_Merchant2.default.active.request({url:a,method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(n),format:"json"},function(e,r){Log.debug("Received response for RKI update request"),e?Log.error("Error response to firmware update request "+a+". Error: "+e+"\n"+JSON.stringify(r)):Log.debug(function(){return"Received firmware update response "+JSON.stringify(r,null,4)}),i(e,r)})}function checkForUpdates(e,r,t,i){var a=generateSwUpdateUrl(_Merchant2.default.active.environment),n=e||{};n.country_code=_Merchant2.default.active.country.toLowerCase(),n.vendor=r.toLowerCase(),n.model=(0,_retailSDKUtil.getDeviceModelName)(t).toLowerCase(),n.environment=_Merchant2.default.active.repository,n.client_type="app",Log.debug(function(){return"versionInfo> Checking for firmware updates from "+a+"\n"+JSON.stringify(n,null,4)}),_Merchant2.default.active.request({url:a,method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(n),format:"json"},function(e,r){e?Log.error("versionInfo> Error response to firmware update request "+a+". Error: "+e+"\n"+JSON.stringify(r)):Log.debug(function(){return"versionInfo> Received firmware update response "+JSON.stringify(r,null,4)}),i(e,r)})}function displayParse(e){return e?e.id?(0,_l10n2.default)(e.id,e.substitutions):(0,_l10n2.default)(e):""}exports.__esModule=!0;var _manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_miuraEmv=require("miura-emv"),_miuraEmv2=_interopRequireDefault(_miuraEmv),_manticore=require("manticore"),_manticore2=_interopRequireDefault(_manticore),_retailPaymentDevice=require("retail-payment-device"),_Merchant=require("../common/Merchant"),_Merchant2=_interopRequireDefault(_Merchant),_l10n=require("../common/l10n"),_l10n2=_interopRequireDefault(_l10n),_retailSDKUtil=require("../common/retailSDKUtil"),_sdkErrors=require("../common/sdkErrors"),_RoamSwiperDevice=require("./RoamSwiperDevice"),_RoamSwiperDevice2=_interopRequireDefault(_RoamSwiperDevice),_IngenicoDevice=require("../ingenico-emv/IngenicoDevice"),_IngenicoDevice2=_interopRequireDefault(_IngenicoDevice),Log=(0,_manticoreLog2.default)("sdk.deviceBuilder"),DeviceBuilder=function(){function e(){_classCallCheck(this,e)}return e.prototype.build=function(e,r,t,i,a,n){Log.info("build: Building device with manufacturer: "+e+", id: "+r+", isUsb: "+t+", model: "+a+", hardwareAddress: "+n+". Current devices: "+_retailPaymentDevice.PaymentDevice.devices.length);for(var o=_retailPaymentDevice.PaymentDevice.devices,c=Array.isArray(o),u=0,o=c?o:o[Symbol.iterator]();;){var s;if(c){if(u>=o.length)break;s=o[u++]}else{if(u=o.next(),u.done)break;s=u.value}var l=s;if(l.equals(r,e))return Log.info("build: Found matching device "+l+". Will re-use it"),l.native=i,l}if(Log.debug(function(){return"Device with id "+r+", manufacturer: "+e+" not found in cache... Will provision one"}),e.toUpperCase()===_retailPaymentDevice.deviceManufacturer.miura)return new _miuraEmv2.default(r,i,{display:this.display,getFirmwareUpdates:this.getFirmwareUpdates,getRemoteCardReaderKeys:this.getRemoteCardReaderKeys,getMerchant:this.getMerchant},t,n);if(e.toUpperCase()===_retailPaymentDevice.deviceManufacturer.roam)return new _RoamSwiperDevice2.default(r,i,{display:this.display,getMerchant:this.getMerchant},t);if(e.toUpperCase()===_retailPaymentDevice.deviceManufacturer.ingenico){var d={display:this.display,getFirmwareUpdates:this.getFirmwareUpdates,getMerchant:this.getMerchant};return"MOBY3000"===a.toUpperCase()?d.model=_retailPaymentDevice.ReaderModel.Moby3000:"RP450"===a.toUpperCase()&&(d.contactlessEnabled=!0,d.model=_retailPaymentDevice.ReaderModel.RP450),new _IngenicoDevice2.default(r,i,d,t,n)}return null},e.prototype.getRemoteCardReaderKeys=function(e,r,t,i){if(Log.debug(function(){return"Received card reader remote keys request for '"+r+"-"+t+"'"}),_Merchant2.default.active)return void getRemoteKeys(e,r,t,i);_Merchant2.default.events.once("initialized",function(a){if(a)return Log.warn("Will not check for RKI for "+t+" as merchant initialize failed with error: "+a),void i(a);getRemoteKeys(e,r,t,i)})},e.prototype.getFirmwareUpdates=function(e,r,t,i){Log.debug(function(){return"Received firmware update check request for '"+r+"-"+t+"'"}),_Merchant2.default.active?checkForUpdates(e,r,t,i):i(_sdkErrors.merchant.notInitialized)},e.prototype.getMerchant=function(){return _Merchant2.default.active},e.prototype.display=function(e,r){Log.debug(function(){return"Card reader wants to display an alert on App: "+JSON.stringify(e)});var t={title:displayParse(e.title),message:displayParse(e.message),cancel:displayParse(e.cancel),showActivity:e.showActivity,audio:e.audio,replace:e.replace,setCancellable:e.setCancellable};if(e.buttons){t.buttons=[];for(var i=e.buttons,a=Array.isArray(i),n=0,i=a?i:i[Symbol.iterator]();;){var o;if(a){if(n>=i.length)break;o=i[n++]}else{if(n=i.next(),n.done)break;o=n.value}var c=o;t.buttons.push(displayParse(c))}}var u=r;return u||(u=function(){}),_manticore2.default.alert(t,u)},e}();exports.default=DeviceBuilder;

},{"../common/Merchant":3,"../common/l10n":13,"../common/retailSDKUtil":17,"../common/sdkErrors":18,"../ingenico-emv/IngenicoDevice":45,"./RoamSwiperDevice":67,"manticore":213,"manticore-log":208,"miura-emv":227,"retail-payment-device":356}],59:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _createClass=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),_manticore=require("manticore"),_manticore2=_interopRequireDefault(_manticore),_manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_retailPaymentDevice=require("retail-payment-device"),_l10n=require("../common/l10n"),_l10n2=_interopRequireDefault(_l10n),_retailSDKUtil=require("../common/retailSDKUtil"),_DeviceConnectorOptions=require("./DeviceConnectorOptions"),_DeviceConnectorOptions2=_interopRequireDefault(_DeviceConnectorOptions),_DeviceManager=require("../transaction/DeviceManager"),_DeviceManager2=_interopRequireDefault(_DeviceManager),Log=(0,_manticoreLog2.default)("deviceConnector"),DeviceConnector=function(){function e(){_classCallCheck(this,e)}return e.prototype.connectToLastActiveReaderOrFindAnother=function(e){var t=this;this._promptInProgress=!0,this._createdCardReader=null,(0,_retailSDKUtil.getLastActiveReader)(function(r){Log.debug(function(){return"Last Active reader id: "+(r?r.id:"<null>")});var n=_DeviceManager2.default.getDeviceScanner();return n&&n.connectedDevice&&r&&n.connectedDevice.id===r.id?(Log.debug(function(){return"Last Active reader id: "+n.connectedDevice.id+" is already connected! Do NOT show the dialog!"}),e(null,n.connectedDevice),void(t._promptInProgress=!1)):r&&!(0,_retailSDKUtil.isRoamSwiper)(r.id)||!n?void t._connectToLastActiveReaderOrFindAnother(e):void n.updateLastActiveIfBTPaired(function(){t._connectToLastActiveReaderOrFindAnother(e)})})},e.prototype._connectToLastActiveReaderOrFindAnother=function(e){var t=this;(0,_retailSDKUtil.getLastActiveReader)(function(r){if(!r)return e&&e(_retailPaymentDevice.deviceError.lastActiveReaderNotFound),void(t._promptInProgress=!1);if((0,_retailSDKUtil.isRoamSwiper)(r.id))return Log.debug('Will not execute "connectLastReaderPrompt" flow as the last connected card reader was ROAM Swiper.'),e&&e(null,null),void(t._promptInProgress=!1);var n=new _DeviceConnectorOptions2.default;n.readerId=""+r.id,n.readerDescription=(0,_retailSDKUtil.getCardReaderDescription)(r.id),n.readerImgId=(0,_retailSDKUtil.getCardReaderIcon)(r.id),n.errorImgId="ic_critical",n.hardwareAddress=r.address,n.titleLastReaderUsed=(0,_l10n2.default)("Device.LastReaderUsed.titleLastReaderUsed"),n.titleConnected=(0,_l10n2.default)("Device.LastReaderUsed.titleConnected"),n.msgConnecting=(0,_l10n2.default)("Device.LastReaderUsed.msgConnecting"),n.msgConnectionFailed=(0,_l10n2.default)("Device.LastReaderUsed.msgConnectionFailed"),n.msgFindFailed=(0,_l10n2.default)("Device.LastReaderUsed.msgFindFailed"),n.msgCheckReader=(0,_l10n2.default)("Device.LastReaderUsed.msgCheckReader"),n.btnConnect=(0,_l10n2.default)("Device.LastReaderUsed.btnConnect"),n.btnFindAnother=(0,_l10n2.default)("Device.LastReaderUsed.btnFindAnother"),n.btnDone=(0,_l10n2.default)("Device.LastReaderUsed.btnDone"),n.btnSwitchCardReader=(0,_l10n2.default)("Device.LastReaderUsed.btnSwitchCardReader"),n.btnTryAgain=(0,_l10n2.default)("Device.LastReaderUsed.btnTryAgain"),n.btnCancel=(0,_l10n2.default)("Device.LastReaderUsed.btnCancel"),n.connectToLastReader=function(){_manticore2.default.isCardReaderAvailable(r.id,r.address)?t.createAndConnect(r.id,r.address,function(e,t){n.emit(_DeviceConnectorOptions2.default.Events.connectionResult,e,t)}):(Log.info("Card reader with Id: '"+r.id+"' and address '"+r.address+"' is not available. Will not prompt user to connect to it"),n.emit(_DeviceConnectorOptions2.default.Events.connectionResult,_retailPaymentDevice.deviceError.cardReaderNotAvailable))},Log.debug(function(){return"Invoking connectLastReaderPrompt with "+JSON.stringify(n,null,4)}),_manticore2.default.connectLastReaderPrompt(n,function(r){if(Log.debug(function(){return"Completed 'connectLastReaderPrompt' with action='"+r+"'"}),t._promptInProgress=!1,"cancel"===r)t._createdCardReader&&t._createdCardReader.disconnect(function(e){Log.debug(function(){return"Disconnected from "+t._createdCardReader.id+". Error: "+e})}),e&&e(_retailPaymentDevice.deviceError.actionCancelled);else if("scan"===r)try{_DeviceManager2.default.searchAndConnectWithUI()}catch(t){Log.error("Error selecting devices: "+t),e(_retailPaymentDevice.deviceError.dataRetrievalFailed.withDevMessage(t.toString()))}else{var n=_DeviceManager2.default.getActiveReader();if(!n)return void(e&&e());Log.info("Set active reader to '"+n.id+"', firmwareUpdate: "+n.isUpdateRequired()),e&&e(null,n)}})})},e.prototype.createAndConnect=function(e,t,r){var n=this;Log.debug(function(){return"Card reader "+e+" with address ("+t+") is available. Will prompt to connect"});var a=e,i=(0,_retailSDKUtil.getCardReaderManufacturer)(a);_manticore2.default.createCardReader({name:a,address:t,manufacturer:i},function(e,o){if(e)return Log.error("Error provisioning card reader with "+a+"-"+t+"-"+i+" : "+JSON.stringify(e)),void(r&&r(e));n._createdCardReader=o,Log.debug(function(){return"Successfully created card reader "+o.id+"-"+o.address+". Will attempt to connect to it"}),o.connect(function(e){e?Log.error("Connection to card reader '"+o.id+"' failed with error : "+JSON.stringify(e)):Log.debug(function(){return"Successfully connected to card reader "+o.id+"."}),r&&r(e,o)})})},_createClass(e,[{key:"isInProgress",get:function(){return this._promptInProgress},set:function(e){throw new Error("The readOnly _promptInProgress property cannot be written. "+e+" was passed.")}}]),e}(),deviceConnector=new DeviceConnector;exports.default=deviceConnector;

},{"../common/l10n":13,"../common/retailSDKUtil":17,"../transaction/DeviceManager":75,"./DeviceConnectorOptions":60,"manticore":213,"manticore-log":208,"retail-payment-device":356}],60:[function(require,module,exports){
"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}exports.__esModule=!0;var _events=require("events"),DeviceConnectorOptions=function(e){function t(){return _classCallCheck(this,t),_possibleConstructorReturn(this,e.apply(this,arguments))}return _inherits(t,e),t.prototype.connectToLastReader=function(){},t}(_events.EventEmitter);exports.default=DeviceConnectorOptions,DeviceConnectorOptions.Events={connectionResult:"onConnectionResult"};

},{"events":200}],61:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _createClass=function(){function e(e,n){for(var t=0;t<n.length;t++){var i=n[t];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(n,t,i){return t&&e(n.prototype,t),i&&e(n,i),n}}(),_manticore=require("manticore"),_manticore2=_interopRequireDefault(_manticore),_manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_retailPaymentDevice=require("retail-payment-device"),_events=require("events"),_l10n=require("../common/l10n"),_l10n2=_interopRequireDefault(_l10n),_retailSDKUtil=require("../common/retailSDKUtil"),_DeviceConnector=require("./DeviceConnector"),_DeviceConnector2=_interopRequireDefault(_DeviceConnector),_DiscoveredCardReader=require("./DiscoveredCardReader"),_DiscoveredCardReader2=_interopRequireDefault(_DiscoveredCardReader),_CardReaderScanAndDiscoverOptions=require("./CardReaderScanAndDiscoverOptions"),_CardReaderScanAndDiscoverOptions2=_interopRequireDefault(_CardReaderScanAndDiscoverOptions),_sdkErrors=require("../common/sdkErrors"),Log=(0,_manticoreLog2.default)("DeviceScanner"),deviceScannerError={bluetoothdDisabled:"bluetoothDisabled"},DeviceScanner=function(){function e(n){var t=this;_classCallCheck(this,e),this.native=n,this._connectedPaymentDevice=null,_retailPaymentDevice.PaymentDevice.Events.on("deviceDiscovered",function(e){return t.discovered(e)}),this._discoveredDevices=[],this._setDiscovered=new Set,e.Events.emit(e.Events.constructor,this)}return e.prototype.discovered=function(e){var n=this;Log.info("a new device discovered by DeviceScanner: "+e.id),e.once(_retailPaymentDevice.PaymentDevice.Event.deviceRemoved,function(e){return n._removedDevice(e)}),e.on(_retailPaymentDevice.PaymentDevice.Event.disconnected,function(){return n._disconnectedDevice(e)}),e.on(_retailPaymentDevice.PaymentDevice.Event.connected,function(){return n._connectedDevice(e)}),(0,_retailSDKUtil.isRoamSwiper)(e.id)&&(this._selectionInProgress&&this._scanInProgress?(Log.debug("Roam swiper just plugged during scan in Progress. This will update the MCR list"),this.onDiscovered({id:e.id,address:"RoamSwiper",isConnected:!1})):this._connectedPaymentDevice?(Log.debug(function(){return"Roam swiper just plugged in which will trigger scan and discover given the current connected device: "+n._connectedPaymentDevice}),this.searchAndConnectWithUI()):(Log.info("connecting to "+e.id+" without searchAndConnectWithUI"),_DeviceConnector2.default.isInProgress?Log.debug(function(){return"Due to in-progress connection prompt, NOT connecting to "+e.id}):e.connect(function(n){n?Log.error("Connection to card reader '"+e.id+"' failed with error : "+JSON.stringify(n)):Log.debug(function(){return"Successfully connected to card reader "+e.id+"."})})))},e.prototype._removedDevice=function(e){Log.debug(function(){return"removed  device '"+(e&&e.id)+"'!"}),this._disconnectedDevice(e)},e.prototype._disconnectedDevice=function(n){n&&this._connectedPaymentDevice===n?(Log.debug(function(){return"unsetting connected device '"+(n&&n.id)+"' to null"}),this._connectedPaymentDevice=null,e.Events.emit(e.Event.disconnected,n)):Log.debug(function(){return"the device '"+(n&&n.id)+"' is not connected device anymore!"})},e.prototype._connectedDevice=function(e){var n=this;if(!this._connectedPaymentDevice)return void this._setConnectedDevice(e);e&&this._connectedPaymentDevice!==e?(Log.debug(function(){return"connected -> disconnecting the connected device: "+JSON.stringify(n._connectedPaymentDevice,null,4)}),this._connectedPaymentDevice.disconnect(function(){n._setConnectedDevice(e)})):Log.debug(function(){return"SAME  device '"+(e&&e.id)+"' connected!"})},e.prototype._setConnectedDevice=function(n){this._connectedPaymentDevice=n,Log.debug(function(){return"Setting connected device to '"+(n&&n.id)+"'"}),e.Events.emit(e.Event.connected,n),(0,_retailSDKUtil.saveLastActiveReader)(n)},e.prototype.updateLastActiveIfBTPaired=function(e){var n=function(n){var t=n.id,i=n.address;return(0,_retailSDKUtil.getCardReaderModel)(t)===_retailPaymentDevice.ReaderModel.Unknown||(0,_retailSDKUtil.getCardReaderModel)(t)===_retailPaymentDevice.ReaderModel.Swiper?(Log.debug(function(){return"non-BT device model discovered: "+t}),!1):(Log.debug("Saving reader id: "+t+" and address:: "+i),(0,_retailSDKUtil.saveLastActiveReader)({id:t,address:i},e),!0)};Log.debug(function(){return"Discovered readers: "+JSON.stringify(_retailPaymentDevice.PaymentDevice.devices)});for(var t=_retailPaymentDevice.PaymentDevice.devices,i=Array.isArray(t),r=0,t=i?t:t[Symbol.iterator]();;){var o;if(i){if(r>=t.length)break;o=t[r++]}else{if(r=t.next(),r.done)break;o=r.value}if(n(o))return}this.native.getBTList(function(t){Log.debug(function(){return"BT paired readers: "+JSON.stringify(t,null,2)});for(var i=t,r=Array.isArray(i),o=0,i=r?i:i[Symbol.iterator]();;){var c;if(r){if(o>=i.length)break;c=i[o++]}else{if(o=i.next(),o.done)break;c=o.value}if(n(c))return}e&&e()})},e.prototype.onDiscovered=function(e){if(Log.debug(function(){return"onDiscovered args: "+JSON.stringify(e,null,4)}),!e||!e.id||!e.address)return void Log.warn("Received empty args message");var n=e.id,t=e.address;if((0,_retailSDKUtil.getCardReaderModel)(n)===_retailPaymentDevice.ReaderModel.Unknown)return void Log.debug(function(){return"unknown device model discovered: "+n});if(Log.debug(function(){return"onDiscovered -> new device: '"+n+"' and address: "+t}),this._scanInProgress&&this._selectionInProgress)if(this._setDiscovered.has(t))Log.debug(function(){return"already added to discovered list "+e.id+":"+e.address+" "});else{Log.debug(function(){return"onDiscovered -> prompting the new device: "+JSON.stringify(e,null,2)}),this._setDiscovered.add(t),this._discoveredDevices.push({id:n,address:t});var i=new _DiscoveredCardReader2.default;i.readerId=n,i.readerDescription=(0,_retailSDKUtil.getCardReaderDescription)(n),i.readerImgId=(0,_retailSDKUtil.getCardReaderIcon)(n),i.isConnected=!!e.isConnected,Log.debug(function(){return"Emitting discoveredReader with "+JSON.stringify(i,null,4)}),this.opt.emit(_CardReaderScanAndDiscoverOptions2.default.Events.onCardReaderDiscovered,i)}else Log.debug(function(){return"we shall NOT discover any device "+e.id+" when scan is NOT in Progress!!! "})},e.prototype.searchAndConnectWithUI=function(e){var n=this;Log.debug(function(){return"searchAndConnectWithUI started. the current selected device: "+n._connectedPaymentDevice}),this._connectedPaymentDevice&&this._connectedPaymentDevice.cardPresented?Log.info("Will not prompt for device selection due to payment in progress? '"+(this._connectedPaymentDevice&&this._connectedPaymentDevice.cardPresented)+"'"):this._searchAndConnect(e)},e.prototype._searchAndConnect=function(e){var n=this;this._scanInProgress=!0,this._selectionInProgress=!0,this._discoveredDevices=[],this._setDiscovered.clear();var t=new _CardReaderScanAndDiscoverOptions2.default;this.opt=t,t.connectToCardReader=function(t){if(!n._selectionInProgress)return void Log.warn("connectToCardReader  called for "+t+" even though selection is OVER!");Log.info("connectToCardReader  called for "+t);for(var i=void 0,r=n._discoveredDevices,o=Array.isArray(r),c=0,r=o?r:r[Symbol.iterator]();;){var d;if(o){if(c>=r.length)break;d=r[c++]}else{if(c=r.next(),c.done)break;d=c.value}var a=d;a.id===t&&(i=a,Log.info("Found matching device "+i.id+". Will connect it"))}var s=function(){Log.info("connecting to "+i.id),n._connectionInProgress=i,_DeviceConnector2.default.createAndConnect(i.id,i.address,function(t,r){if(n._connectionInProgress=null,t)return Log.error("Error for card reader with "+i.id+"-"+i.address+" : "+JSON.stringify(t)),n._emitConnected(t,r),void(n._selectionInProgress=!0);n._emitConnected(t,r),e&&e(null,r)})};if(n._connectedPaymentDevice)if(n._connectedPaymentDevice.id!==i.id)Log.debug(function(){return"UI -> disconnecting the connected device: "+JSON.stringify(n._connectedPaymentDevice,null,4)}),n._connectedPaymentDevice.disconnect(function(){s()});else{Log.info("SAME device selected by user ==>> "+n._connectedPaymentDevice.id+". Connected? "+n._connectedPaymentDevice.isConnected());var u=function(t){n._emitConnected(t,n._connectedPaymentDevice),e&&e(t,n._connectedPaymentDevice)};n._connectedPaymentDevice.isConnected()?u(null):n._connectedPaymentDevice.connect(function(e){return u(e)})}else s();n._scanInProgress&&(Log.info("stopping scanAndDiscover since the user selected "+i.id),n.native.stop()),n._selectionInProgress=!1},t.onAddedObserver=function(){Log.debug("Native side added the observers so we can start scanning"),n._connectedPaymentDevice&&(Log.debug(function(){return"Adding first the connected device (address: "+n._connectedPaymentDevice.address+"): "+JSON.stringify(n._connectedPaymentDevice,null,4)}),n.onDiscovered({id:n._connectedPaymentDevice.id,address:n._connectedPaymentDevice.address,isConnected:!0})),n.native.start(function(e){Log.debug("scan complete"),n._scanInProgress=!1;var t=null;e&&(Log.error("Scanning ended with error: "+JSON.stringify(e,null,2)),t=e.code&&e.code===deviceScannerError.bluetoothdDisabled?_sdkErrors.sdk.bluetoothDisabled:e.code?new Error(e.code):new Error("error")),n._discoveredDevices.length<=0&&(t=_sdkErrors.sdk.noReaderFound),n.opt.emit(_CardReaderScanAndDiscoverOptions2.default.Events.onScanComplete,t)})},Log.debug(function(){return"Invoking searchAndConnectWithUI with "+JSON.stringify(t,null,4)}),_manticore2.default.scanAndDiscover(t,function(t){if("cancel"===t){if(n._connectionInProgress){Log.debug(function(){return"Trying to cancel in-progress connection to "+n._connectionInProgress.id+". Total discovered devices: "+_retailPaymentDevice.PaymentDevice.devices.length});for(var i=_retailPaymentDevice.PaymentDevice.devices,r=Array.isArray(i),o=0,i=r?i:i[Symbol.iterator]();;){var c;if("break"===function(){if(r){if(o>=i.length)return"break";c=i[o++]}else{if(o=i.next(),o.done)return"break";c=o.value}var e=c;e.id===n._connectionInProgress.id&&e.manufacturer===_retailPaymentDevice.deviceManufacturer.ingenico&&(Log.debug(function(){return"Will stop connection to "+e.id}),e.disconnect(function(){Log.debug(function(){return"Disconnected from "+e.id})}))}())break}}e&&e(_retailPaymentDevice.deviceError.actionCancelled),n._scanInProgress&&(Log.info("stopping scanAndDiscover since the user selected "+t),n.native.stop()),n._selectionInProgress=!1}else"scan"===t?n._searchAndConnect(e):Log.debug(function(){return"Device discover and connect flow completed... will check for firmware update if any. SelectedDevice: "+(n._connectedPaymentDevice&&n._connectedPaymentDevice.id)+", firmwareUpdate: "+(n._connectedPaymentDevice&&n._connectedPaymentDevice.isUpdateRequired())})})},e.prototype._emitConnected=function(e,n){var t=void 0;n&&(t=new _DiscoveredCardReader2.default,t.readerId=n.id,t.readerDescription=(0,_retailSDKUtil.getCardReaderDescription)(n.id),t.readerImgId=(0,_retailSDKUtil.getCardReaderIcon)(n.id),t.isConnected=!0),Log.debug(function(){return"Emitting onConnectionStatus: "+JSON.stringify(t,null,2)}),this.opt.emit(_CardReaderScanAndDiscoverOptions2.default.Events.onConnectionStatus,e,t)},e.prototype._promptForDeviceConnection=function(){for(var e=this,n=[],t=[],i=this._discoveredDevices,r=Array.isArray(i),o=0,i=r?i:i[Symbol.iterator]();;){var c;if(r){if(o>=i.length)break;c=i[o++]}else{if(o=i.next(),o.done)break;c=o.value}var d=c;Log.info("_promptForDeviceConnection: "+JSON.stringify(d,null,2)),n.push((0,_retailSDKUtil.getCardReaderIcon)(d.id)),t.push(d.id)}this.alert=_manticore2.default.alert({title:(0,_l10n2.default)("MultiCard.Title"),message:(0,_l10n2.default)("MultiCard.Msg"),buttonsImages:n,buttonsIds:t,mcrDialog:!0},function(n,t){if(Log.debug(function(){return"index selected: "+t}),e.alert&&e.alert.dismiss(),t>=0&&t<=e._discoveredDevices.length-1){var i=e._discoveredDevices[t];Log.info("MCR - Found matching device "+JSON.stringify(i,null,2)+". Will connect it"),e.opt.connectToCardReader(i.id)}else Log.error("wrong index selected for the card reader: "+t);e._selectionInProgress=!1,e._scanInProgress&&(Log.info("_promptForDeviceConnection -> native.stop()"),e.native.stop())})},_createClass(e,[{key:"connectedDevice",get:function(){return this._connectedPaymentDevice},set:function(e){throw new Error("The readOnly connectedPaymentDevice property cannot be written. "+e+" was passed.")}}]),e}();exports.default=DeviceScanner,DeviceScanner.Event={constructor:"constructor",connected:"connected",disconnected:"disconnected"},DeviceScanner.Events=new _events.EventEmitter;

},{"../common/l10n":13,"../common/retailSDKUtil":17,"../common/sdkErrors":18,"./CardReaderScanAndDiscoverOptions":57,"./DeviceConnector":59,"./DiscoveredCardReader":63,"events":200,"manticore":213,"manticore-log":208,"retail-payment-device":356}],62:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _createClass=function(){function e(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,i,n){return i&&e(t.prototype,i),n&&e(t,n),t}}(),_manticore=require("manticore"),_manticore2=_interopRequireDefault(_manticore),_manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_retailPaymentDevice=require("retail-payment-device"),_CardReaderDisplayController=require("./CardReaderDisplayController"),_CardReaderDisplayController2=_interopRequireDefault(_CardReaderDisplayController),_displayPriority=require("./displayPriority"),_displayPriority2=_interopRequireDefault(_displayPriority),Log=(0,_manticoreLog2.default)("DeviceSelector"),DeviceSelector=function(){function e(){var t=this;_classCallCheck(this,e),this._selectedPaymentDevice=null,_retailPaymentDevice.PaymentDevice.Events.on("deviceDiscovered",function(e){return t.discovered(e)})}return e.prototype._setSelectedDevice=function(e){Log.debug(function(){return"Setting selected device to '"+(e&&e.id)+"'"}),this._selectedPaymentDevice=e,e&&_retailPaymentDevice.PaymentDevice.Events.emit(_retailPaymentDevice.PaymentDevice.Event.selected,e)},e.prototype.discovered=function(e){var t=this;Log.info("a new device discovered by DeviceSelector: "+e.id),e.once(_retailPaymentDevice.PaymentDevice.Event.deviceRemoved,function(e){return t.removed(e)}),e.on(_retailPaymentDevice.PaymentDevice.Event.disconnected,function(){return t._startDeviceSelection()}),e.on(_retailPaymentDevice.PaymentDevice.Event.connected,function(){return t._startDeviceSelection()})},e.prototype.removed=function(e){if(Log.info("a new device removed by DeviceSelector: "+e.id),e===this._selectedPaymentDevice&&e.cardPresented)return this._setSelectedDevice(null),void Log.debug(function(){return"The selected device:"+e.id+" having active transaction is removed!"});this._selectedPaymentDevice&&e!==this._selectedPaymentDevice&&!this._selectionInProgress||(Log.debug("a new device removed and to be select new one --\x3e>>>"),this._promptForDeviceSelection())},e.prototype.isConnectedToMiura=function(){for(var e=_retailPaymentDevice.PaymentDevice.devices,t=Array.isArray(e),i=0,e=t?e:e[Symbol.iterator]();;){var n;if(t){if(i>=e.length)break;n=e[i++]}else{if(i=e.next(),i.done)break;n=i.value}if(n.manufacturer.toUpperCase()===_retailPaymentDevice.deviceManufacturer.miura)return!0}return!1},e.prototype.promptDevicesToSelect=function(){this._promptForDeviceSelection(function(){})},e.prototype._startDeviceSelection=function(){var e=this;Log.debug(function(){return"_startDeviceSelection started. the current selected device: "+e._selectedPaymentDevice}),this._selectedPaymentDevice&&this._selectedPaymentDevice.cardPresented?(this._setSelectedDevice(this._selectedPaymentDevice),Log.info("Will not prompt for device selection due to one of the reasons. Device already selected? '"+!!this._selectedPaymentDevice+"', Payment in progress? '"+(this._selectedPaymentDevice&&this._selectedPaymentDevice.cardPresented)+"'")):this._promptForDeviceSelection()},e.prototype.selectDevice=function(e){var t,i,n,r,c,a;return regeneratorRuntime.async(function(o){for(;;)switch(o.prev=o.next){case 0:if(e){o.next=4;break}return o.next=3,regeneratorRuntime.awrap(this._promptForDeviceSelection());case 3:return o.abrupt("return");case 4:t=!1,i=_retailPaymentDevice.PaymentDevice.devices,n=Array.isArray(i),r=0,i=n?i:i[Symbol.iterator]();case 6:if(!n){o.next=12;break}if(!(r>=i.length)){o.next=9;break}return o.abrupt("break",21);case 9:c=i[r++],o.next=16;break;case 12:if(r=i.next(),!r.done){o.next=15;break}return o.abrupt("break",21);case 15:c=r.value;case 16:a=c,a.id===e&&a.isConnected()?(t=!0,this._setSelectedDevice(a),this._selectedPaymentDevice.emit(_retailPaymentDevice.PaymentDevice.Event.selected,this._selectedPaymentDevice),Log.info("selected device with id ==>> "+this._selectedPaymentDevice.id)):a.abortTransaction(),this._displayReadyMsg();case 19:o.next=6;break;case 21:t||Log.info("NO device is found with id ==>> "+e+" or it is disconnected");case 22:case"end":return o.stop()}},null,this)},e.prototype._promptForDeviceSelection=function(){var e,t,i,n,r,c,a,o=this;return regeneratorRuntime.async(function(s){for(;;)switch(s.prev=s.next){case 0:Log.debug(function(){return"total number of devices is  "+_retailPaymentDevice.PaymentDevice.devices.length}),this.alert&&this.alert.dismiss(),e=[],t=function(){if(n){if(r>=i.length)return"break";c=i[r++]}else{if(r=i.next(),r.done)return"break";c=r.value}var t=c;t.isConnected()&&(Log.debug(function(){return"connected device:"+t.id}),e.push(t))},i=_retailPaymentDevice.PaymentDevice.devices,n=Array.isArray(i),r=0,i=n?i:i[Symbol.iterator]();case 5:if("break"!==(a=t())){s.next=8;break}return s.abrupt("break",10);case 8:s.next=5;break;case 10:Log.debug(function(){return"total number of connected devices is  "+e.length}),e.length<=0?(this._setSelectedDevice(null),Log.info("No device is selected since there is no available device")):1===e.length?this._selectedPaymentDevice!==e[0]?(this._selectedPaymentDevice&&this._selectedPaymentDevice.abortTransaction(),this._setSelectedDevice(e[0]),Log.info("Selected device set to "+this._selectedPaymentDevice.id),_manticore2.default.setTimeout(function(){o._selectedPaymentDevice&&o._selectedPaymentDevice.emit(_retailPaymentDevice.PaymentDevice.Event.selected)},0),this._displayReadyMsg()):(Log.info("SAME device selected by default ==>> "+this._selectedPaymentDevice.id),this._setSelectedDevice(this._selectedPaymentDevice)):e.length>1&&Log.error("There should NOT be "+e.length+" connected devices more than 1!!!");case 12:case"end":return s.stop()}},null,this)},e.prototype._displayReadyMsg=function(){for(var e=_retailPaymentDevice.PaymentDevice.devices,t=Array.isArray(e),i=0,e=t?e:e[Symbol.iterator]();;){var n;if(t){if(i>=e.length)break;n=e[i++]}else{if(i=e.next(),i.done)break;n=i.value}var r=n;if(r.model===_retailPaymentDevice.ReaderModel.M010){var c={id:_retailPaymentDevice.PaymentDevice.Message.NotReady,displaySystemIcons:!0};r!==this._selectedPaymentDevice?r.display(c):(c.id=_retailPaymentDevice.PaymentDevice.Message.ReadyWithId,c.substitutions={id:r.id},_CardReaderDisplayController2.default.display(_displayPriority2.default.low,r,c))}}},_createClass(e,[{key:"selectedDevice",get:function(){return this._selectedPaymentDevice},set:function(e){throw new Error("The readOnly selectedPaymentDevice property cannot be written. "+e+" was passed.")}}]),e}(),deviceSelector=new DeviceSelector;exports.default=deviceSelector;

},{"./CardReaderDisplayController":56,"./displayPriority":68,"manticore":213,"manticore-log":208,"retail-payment-device":356}],63:[function(require,module,exports){
"use strict";function _classCallCheck(e,a){if(!(e instanceof a))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var DiscoveredCardReader=function e(){_classCallCheck(this,e)};exports.default=DiscoveredCardReader;

},{}],64:[function(require,module,exports){
(function (Buffer){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}function getMagnetPrint(e,t){e.magneprint={status:t.slice(344,347).toString("hex"),length:t[348]},e.magneprint.length&&(e.magneprint.data=t.slice(349,349+e.magneprint.length).toString("hex"))}function getTracks(e,t){var r=0==(1&t[0]),n=0==(1&t[1]),i=0==(1&t[2]),a=t[3],o=t[4],c=t[5];r&&a&&(e.track1=t.slice(7,7+a).toString("hex")),n&&o&&(e.track2=t.slice(119,119+o).toString("hex")),i&&c&&(e.track3=t.slice(231,231+c).toString("hex"))}function magtekVersion1(e,t){e.counter=t.slice(493,500).toString("hex"),e.crypto={enabled:1==(1&t[501]),keyInjected:2==(2&t[501])},4&t[501]&&(e.crypto.keysExhausted=!0,Log.error("DUKPT keys exhausted on Magtek reader.")),e.ksn=t.slice(555,565).toString("hex")}function magtekVersion2(e,t){e.counter=t.slice(856,858).toString("hex"),e.crypto={enabled:4==(4&t[494]),keyInjected:2==(2&t[494])},1&t[494]&&(e.crypto.keysExhausted=!0,Log.error("DUKPT keys exhausted on Magtek reader.")),e.ksn=t.slice(495,505).toString("hex"),e.counter=t.slice(856,858).toString("hex");var r=t[505];r&&(e.track1masked=t.slice(508,508+r).toString("ascii")),r=t[506],r&&(e.track2masked=t.slice(620,620+r).toString("ascii")),(r=t[507])&&(e.track3masked=t.slice(732,732+r).toString("ascii"))}exports.__esModule=!0;var _retailPaymentDevice=require("retail-payment-device"),_manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),Log=(0,_manticoreLog2.default)("paymentDevice.magtekRawUsbReaderDevice"),MagtekRawUsbReaderDevice=function(e){function t(r,n){_classCallCheck(this,t);var i=_possibleConstructorReturn(this,e.call(this,r,n));return i.manufacturer="Magtek",i}return _inherits(t,e),t.prototype.received=function(t){try{var r=new Buffer(t,"base64");if(r.length<565)return void Log.error("Invalid MagTek data length: "+r.length);var n=new _retailPaymentDevice.MagneticCard;n.formFactor=_retailPaymentDevice.FormFactor.MagneticCardSwipe,n.reader=this,getTracks(n,r),getMagnetPrint(n,r),14===this.productId||565===r.length?magtekVersion1(n,r):17!==this.productId&&887!==r.length||magtekVersion2(n,r),!this.serialNumber&&n.ksn&&(this.serialNumber=n.ksn.substring(0,14)),e.prototype.received.call(this,n)}catch(e){Log.error("Failed to parse Magtek card event: "+e.message+"\n"+e.stack)}},t}(_retailPaymentDevice.MagneticReaderDevice);exports.default=MagtekRawUsbReaderDevice;

}).call(this,require("buffer").Buffer)
},{"buffer":96,"manticore-log":208,"retail-payment-device":356}],65:[function(require,module,exports){
"use strict";function _interopRequireDefault(t){return t&&t.__esModule?t:{default:t}}function _classCallCheck(t,r){if(!(t instanceof r))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _retailPaymentDevice=require("retail-payment-device"),_manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),Log=(0,_manticoreLog2.default)("RoamSwiper.cardStatus"),CardStatus=function(){function t(r){_classCallCheck(this,t),this.response=r;try{var e=this.response.secureData;this.track1=e.track1,this.track2=e.track2,this.ksn=e.ksn,this.type=e.type,this.lastFour=e.lastFour,this.firstFour=e.firstFour}catch(t){Log.error("Roam swiper secure data Json parse Failed: "+t)}}return t.prototype.getPresentedCard=function(t){var r=new _retailPaymentDevice.MagneticCard,e=this.track1||this.track2;return r.formFactor=_retailPaymentDevice.FormFactor.MagneticCardSwipe,r.ksn=this.ksn?this.ksn.toString("hex"):"",r.reader=t,e&&e.length?(r.track1=this.track1,r.track2=this.track2,r.lastFourDigits=this.lastFour,r.cardIssuer=this.response.CardIssuer,r.isSignatureRequired=!1,"true"===this.response.IsSignatureRequired&&(r.isSignatureRequired=!0),r.cardholderName=this.response.CardHolderName,r):(Log.error("Missing track  from roam card swipe data"),r.failed=!0,r)},t.prototype.toString=function(){var t=[this.response.toString(),"\nChip flags ",this.chipFlags.toString(16)," Magstripe flags ",this.magstripeFlags.toString(16)];return this.ksn&&(t.push("\nKSN: "),t.push(this.ksn.toString("hex"))),this.track1&&(t.push("\nTrack 1: "),t.push(this.track1.toString("hex"))),this.track2&&(t.push("\nTrack 2: "),t.push(this.track2.toString("hex"))),this.maskedTrack2&&(t.push("\nMasked Track 2: "),t.push(this.maskedTrack2)),this.sredData&&(t.push("\nSRED: "),t.push(this.sredData.toString("hex"))),t.join("")},t}();exports.default=CardStatus;

},{"manticore-log":208,"retail-payment-device":356}],66:[function(require,module,exports){
(function (Buffer){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _retailPaymentDevice=require("retail-payment-device"),_manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),Log=(0,_manticoreLog2.default)("RoamSwiper.Parser"),Parser=function(){function e(){_classCallCheck(this,e)}return e.prototype.getCardInfo=function(e){var r={};try{var a=e.decodeData,t=Buffer.isBuffer(a)?a:new Buffer(a,"base64"),s=JSON.parse(t.toString("ascii"));if(r.secureData={},r.secureData.track1=e.track1,r.secureData.serial=s.ksn,r.secureData.ksn=s.ksn,r.secureData.type="ROAM",r.secureData.firstFour=null,r.secureData.lastFour=null,"string"==typeof s.maskedPAN||s.maskedPAN instanceof String){var u=s.maskedPAN.length;r.secureData.firstFour=s.maskedPAN.substring(0,4),r.secureData.lastFour=s.maskedPAN.substring(u-4,u),r.firstFour=r.secureData.firstFour,r.lastFour=r.secureData.lastFour}r.CVV=null,r.ExpiryDate=null,r.PostalCode=null,r.IsSignatureRequired=!1,r.WasPinRequired=!1;var o="",i="";if(s.cardholderName&&s.cardholderName.indexOf("/")>-1){var n=s.cardholderName.split("/");i=n[0],o=n[1]}else o=s.cardholderName;r.CardHolderName=o+" "+i,r.CardIssuer=_retailPaymentDevice.CardDataUtil.getCardIssuerFromCardNumber(r.firstFour),Log.debug(function(){return"cardInfo : "+JSON.stringify(r,null,2)})}catch(e){Log.error("Roam Swiper Parser throws "+e)}return r},e}();exports.default=Parser;

}).call(this,require("buffer").Buffer)
},{"buffer":96,"manticore-log":208,"retail-payment-device":356}],67:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}exports.__esModule=!0;var _createClass=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),_retailPaymentDevice=require("retail-payment-device"),_manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_Parser=require("./RoamSwiper/Parser"),_Parser2=_interopRequireDefault(_Parser),_CardStatus=require("./RoamSwiper/CardStatus"),_CardStatus2=_interopRequireDefault(_CardStatus),Log=(0,_manticoreLog2.default)("roamSwiperDevice"),RoamSwiperDevice=function(e){function t(r,n,o,i){var a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"RoamSwiper";_classCallCheck(this,t);var c=_possibleConstructorReturn(this,e.call(this,r,n,o,i,a));return c.manufacturer=_retailPaymentDevice.deviceManufacturer.roam,c.model=_retailPaymentDevice.ReaderModel.Swiper,c.parser=new _Parser2.default,c.type=_retailPaymentDevice.readerType.Magstripe,c.connectionType=_retailPaymentDevice.readerConnectionType.AudioJack,c}return _inherits(t,e),t.prototype.beginDeviceRemoved=function(e){this.native.removed(e)},t.prototype.beginDeviceConnect=function(e){var t=this;if(this.native.isConnected())return Log.debug(function(){return"Connect called, but "+t.id+" is already connected."}),void e();Log.debug(function(){return"Connecting to Roam swiper device "+t.id}),this.native.connect(function(t){if(t)return void e(t);e()})},t.prototype.listenForCardRemoval=function(e){e()},t.prototype.beginDeviceDisconnect=function(e){if(!this.isConnected())return Log.debug("Device already disconnected. Will not attempt to invoke native.disconnect"),void(e&&e(null));this.native.disconnect(e)},t.prototype.receivedKsn=function(e){Log.info("Received KSN for "+this.id+": "+e),this.setCardReaderToMerchant(e)},t.prototype.received=function(e){try{var t=this.parser.getCardInfo(e),r=new _CardStatus2.default(t).getPresentedCard(this);this.transactionActive=!0,Log.debug(function(){return"RoamSwiper received "+r}),this.emit(_retailPaymentDevice.PaymentDevice.Event.cardPresented,null,_retailPaymentDevice.CardPresentEvent.cardDataRead,_retailPaymentDevice.FormFactor.MagneticCardSwipe,{card:r})}catch(e){Log.error("RoamSwiper received throw "+e)}},t.prototype.send=function(e,t){this.native.send(e,t)},t.prototype.display=function(e,t){if(!this.isConnected())return void(t&&t(_retailPaymentDevice.deviceError.deviceNotConnected));t&&t()},t.prototype.getFirmwareVersionInfo=function(e){Log.warn("there is no way to know the firmware version info of  RoamSwiper!"),e&&e()},t.prototype.activateForPayment=function(t){Log.debug("activate roam swiper for payment"),e.prototype.activateForPayment.call(this,t,[_retailPaymentDevice.FormFactor.MagneticCardSwipe]),this.send("listenForCardEvents",function(e){e?Log.error("Failed to register for Roam keyboard events: "+e.message):Log.debug("Sent listenForCardEvents")})},t.prototype.getBatteryInfo=function(e){e&&e(null,new _retailPaymentDevice.BatteryInfo(100,!1,new Date,_retailPaymentDevice.batteryStatus.unknown))},t.prototype.deactivateFormFactors=function(t,r){var n=this;return Log.debug(function(){return"Deactivating form factors ["+t+"] on '"+n.id+"'"}),t&&0!==t.length?(e.prototype.deactivateFormFactors.call(this,t),new Set(t).has(_retailPaymentDevice.FormFactor.MagneticCardSwipe)?void this.send("stopListeningForCardEvents",function(e){e?Log.error("Failed to stop listening for Roam swiper events: "+e.message):Log.debug("Sent stopListeningForCardEvents"),r&&r(e)}):(Log.debug("Ignoring deactivate request as supported form factor not received"),void(r&&r()))):void(r&&r())},t.prototype.abortTransaction=function(t,r){var n=this;Log.info(function(){return"Deactivating "+n.id+" with "+(n.cardPresented?"an active transaction.":"NO active transaction.")}),e.prototype.abortTransaction.call(this,t),r&&r()},t.prototype.completeTransaction=function(e,t){this.transactionActive=!1,Log.debug(function(){return"Roam swiper completeTransaction"}),t&&t()},t.prototype.postTransactionCleanup=function(e){Log.debug(function(){return"Roam swiper postTransactionCleanup"}),e&&e()},_createClass(t,[{key:"formFactors",get:function(){return _retailPaymentDevice.FormFactor.MagneticCardSwipe}}]),t}(_retailPaymentDevice.PaymentDevice);exports.default=RoamSwiperDevice;

},{"./RoamSwiper/CardStatus":65,"./RoamSwiper/Parser":66,"manticore-log":208,"retail-payment-device":356}],68:[function(require,module,exports){
"use strict";exports.__esModule=!0;var displayPriority={low:1,medium:2,high:3};exports.default=displayPriority;

},{}],69:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var _miuraEmv=require("miura-emv"),_miuraEmv2=_interopRequireDefault(_miuraEmv),_DeviceBuilder=require("./DeviceBuilder"),_DeviceBuilder2=_interopRequireDefault(_DeviceBuilder),_RoamSwiperDevice=require("./RoamSwiperDevice"),_RoamSwiperDevice2=_interopRequireDefault(_RoamSwiperDevice),_DeviceScanner=require("./DeviceScanner"),_DeviceScanner2=_interopRequireDefault(_DeviceScanner),_DiscoveredCardReader=require("./DiscoveredCardReader"),_DiscoveredCardReader2=_interopRequireDefault(_DiscoveredCardReader),_CardReaderScanAndDiscoverOptions=require("./CardReaderScanAndDiscoverOptions"),_CardReaderScanAndDiscoverOptions2=_interopRequireDefault(_CardReaderScanAndDiscoverOptions),_MagtekRawUsbReaderDevice=require("./MagtekRawUsbReaderDevice"),_MagtekRawUsbReaderDevice2=_interopRequireDefault(_MagtekRawUsbReaderDevice),_ingenicoEmv=require("../ingenico-emv"),_ingenicoEmv2=_interopRequireDefault(_ingenicoEmv);module.exports={DeviceBuilder:_DeviceBuilder2.default,MiuraDevice:_miuraEmv2.default,MagtekRawUsbReaderDevice:_MagtekRawUsbReaderDevice2.default,RoamSwiperDevice:_RoamSwiperDevice2.default,IngenicoDevice:_ingenicoEmv2.default,DeviceScanner:_DeviceScanner2.default,DiscoveredCardReader:_DiscoveredCardReader2.default,CardReaderScanAndDiscoverOptions:_CardReaderScanAndDiscoverOptions2.default};

},{"../ingenico-emv":53,"./CardReaderScanAndDiscoverOptions":57,"./DeviceBuilder":58,"./DeviceScanner":61,"./DiscoveredCardReader":63,"./MagtekRawUsbReaderDevice":64,"./RoamSwiperDevice":67,"miura-emv":227}],70:[function(require,module,exports){
(function (Buffer){
"use strict";function _interopRequireWildcard(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var _manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_events=require("events"),_retailPaymentDevice=require("retail-payment-device"),_manticore=require("manticore"),_manticore2=_interopRequireDefault(_manticore),_retailPageTracker=require("retail-page-tracker"),_sdkErrors=require("./common/sdkErrors"),_TransactionContext=require("./transaction/TransactionContext"),_TransactionContext2=_interopRequireDefault(_TransactionContext),_Merchant=require("./common/Merchant"),_Merchant2=_interopRequireDefault(_Merchant),_cal=require("./common/cal"),Cal=_interopRequireWildcard(_cal),_Features=require("./common/Features"),_Features2=_interopRequireDefault(_Features),_networkInterceptor=require("./common/NetworkHandler/networkInterceptor"),_networkInterceptor2=_interopRequireDefault(_networkInterceptor),_DeviceManager=require("./transaction/DeviceManager"),_DeviceManager2=_interopRequireDefault(_DeviceManager),_logLevel=require("./common/logLevel"),_logLevel2=_interopRequireDefault(_logLevel),_package=require("../package.json"),_package2=_interopRequireDefault(_package),_PendingAuthManager=require("./transaction/PendingAuthManager"),_CardReaderDisplayController=require("./paymentDevice/CardReaderDisplayController"),_CardReaderDisplayController2=_interopRequireDefault(_CardReaderDisplayController),Log=(0,_manticoreLog2.default)("sdk"),SDK=function(e){function t(){_classCallCheck(this,t);var r=_possibleConstructorReturn(this,e.call(this));return _retailPaymentDevice.PaymentDevice.Events.on(t.Event.deviceDiscovered,function(e){return r.emit(t.Event.deviceDiscovered,e)}),_retailPageTracker.Tracker.events.on("pageViewed",function(e,n){return r.emit(t.Event.pageViewed,e,n)}),_Features2.default.loadRemoteFeatureMap(),r.setupCalLogging(),r}return _inherits(t,e),t.prototype.setupCalLogging=function(){Cal.newGroup(Date.now());var e=function e(){var t=function(){return _manticore2.default.setTimeout(e,1e4)};_Merchant2.default.active?Cal.flush(function(e,r){(r||e)&&Log.debug(function(){return"Flushed "+(r||0)+" cal log messages. "+(e?"Error: "+e:"")}),t()}):t()};Cal.attach(e)},t.prototype.buildCompositeToken=function(e){if(Log.debug(function(){return"Received composite token "+JSON.stringify(e)}),!e)throw _sdkErrors.merchant.tokenDataNotProvided;if(!e.accessToken)throw _sdkErrors.merchant.accessTokenNotProvided;if(!e.environment)throw _sdkErrors.merchant.environmentNotProvided;e.environment=e.environment.toLowerCase();var t=new Buffer(e.appId+":"+e.appSecret).toString("base64"),r=[e.accessToken,28880,e.refreshUrl,e.refreshToken,t];return e.environment+":"+new Buffer(JSON.stringify(r)).toString("base64")},t.prototype.initializeMerchant=function(e,t,r){var n=this;(new _Merchant2.default).initialize(e,t,function(e,t){!e&&t&&n.emit("merchantInitialized",t),r(e,t)})},t.prototype.error=function(e){return new Error(e)},t.prototype.setMerchant=function(e){if(Log.debug(function(){return"Received the merchant object : "+JSON.stringify(e)}),!e)throw _sdkErrors.merchant.merchantDataNotProvided;return e.compositeToken=this.buildCompositeToken(e.token),new _Merchant2.default(e)},t.prototype.getMerchant=function(){return _Merchant2.default.active},t.prototype.createTransaction=function(e){if(!_Merchant2.default.active)throw _sdkErrors.merchant.notInitialized.withDevMessage("You must have an active merchant to create a transaction.Call InitializeMerchant first, and wait for it to complete.");return new _TransactionContext2.default(e,_Merchant2.default.active)},t.prototype.logViaJs=function(e,t,r,n){try{(0,_manticoreLog2.default)(t)[e](r)}catch(n){Log.debug("Failed to log native message: "+e+" "+t+" "+r)}},t.prototype.setExecutingEnvironment=function(e){this.envInfo=(e.osName+"-"+e.osVersion+";app-"+e.appVersion+"-"+e.appBuild+";.sdk-"+_package2.default.version+".m-"+e.merchantId).replace(/\s+/g,""),Cal.setRequestSourceId(this.envInfo),_Merchant2.default.apiUserAgent="pph_sdk_v"+_package2.default.version+"-"+e.osName+"_"+e.osVersion+"-"+e.appName+"_v"+e.appVersion+"_"+e.appBuild+(e.merchantId?"-"+e.merchantId:""),Log.info("Setting RetailSDK executing environment to: "+this.envInfo+" and userAgent to "+_Merchant2.default.apiUserAgent)},t.prototype.discoveredPaymentDevice=function(e){_retailPaymentDevice.PaymentDevice.discovered(e)},t.prototype.captureAuthorizedTransaction=function(e,t,r){if(!_Merchant2.default.active)throw _sdkErrors.merchant.notInitialized.withDevMessage("You must have an active merchant to capture an authorized transaction. Call InitializeMerchant first, and wait for it to complete.");(0,_PendingAuthManager.captureAuthorizedTransaction)(e,t,r)},t.prototype.retrieveAuthorizedTransactions=function(e,t,r,n,o){if(!_Merchant2.default.active)throw _sdkErrors.merchant.notInitialized.withDevMessage("You must have an active merchant to capture an authorized transaction. Call InitializeMerchant first, and wait for it to complete.");(0,_PendingAuthManager.retrieveAuthorizedTransactions)(e,t,r,n,o)},t.prototype.logout=function(){try{Log.info("SDK logout was invoked. Active Transaction: "+(_TransactionContext2.default.active?_TransactionContext2.default.active.id:"<none>")+". Connected devices: "+_retailPaymentDevice.PaymentDevice.devices),_CardReaderDisplayController2.default.resetAll(),_TransactionContext2.default.active&&(Log.info("Ending "+_TransactionContext2.default.active.id+" as part of user SDK logout"),_TransactionContext2.default.active.end(_sdkErrors.sdk.userCancelled,null,!1)),_Merchant2.default.active&&(Log.info("Ending Merchant "+_Merchant2.default.active+" as part of user SDK logout"),_Merchant2.default.active=null);for(var e=_retailPaymentDevice.PaymentDevice.devices,t=Array.isArray(e),r=0,e=t?e:e[Symbol.iterator]();;){var n;if("break"===function(){if(t){if(r>=e.length)return"break";n=e[r++]}else{if(r=e.next(),r.done)return"break";n=r.value}var o=n;o.disconnectUsb&&(Log.debug(function(){return"Disconnecting USB from "+o.id}),o.disconnectUsb(function(){})),Log.debug(function(){return"Removing "+o.id}),o.removed()}())break}}catch(e){Log.error("Error on executing log-out "+e)}},t.prototype.setLogLevel=function(e){var t=_manticoreLog2.default.Level.DEBUG;e===_logLevel2.default.quiet?t="QUIET":e===_logLevel2.default.error?t=_manticoreLog2.default.Level.ERROR:e===_logLevel2.default.warn?t=_manticoreLog2.default.Level.WARN:e===_logLevel2.default.info?t=_manticoreLog2.default.Level.INFO:e===_logLevel2.default.debug&&(t=_manticoreLog2.default.Level.DEBUG),Log.debug(function(){return"Set SDK log level to "+t}),require("manticore-log").Root.level=t},t.prototype.setNetworkInterceptor=function(e){Log.info("Adding network interceptor "+e),(0,_networkInterceptor2.default)(e)},t.prototype.getDeviceManager=function(){return _DeviceManager2.default},t}(_events.EventEmitter);SDK.Event={deviceDiscovered:"deviceDiscovered",pageViewed:"pageViewed"};var sdk=module.exports=new SDK;

}).call(this,require("buffer").Buffer)
},{"../package.json":372,"./common/Features":2,"./common/Merchant":3,"./common/NetworkHandler/networkInterceptor":6,"./common/cal":10,"./common/logLevel":16,"./common/sdkErrors":18,"./paymentDevice/CardReaderDisplayController":56,"./transaction/DeviceManager":75,"./transaction/PendingAuthManager":79,"./transaction/TransactionContext":85,"buffer":96,"events":200,"manticore":213,"manticore-log":208,"retail-page-tracker":324,"retail-payment-device":356}],71:[function(require,module,exports){
"use strict";function _interopRequireDefault(t){return t&&t.__esModule?t:{default:t}}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _moment=require("moment"),_moment2=_interopRequireDefault(_moment),_paypalInvoicing=require("paypal-invoicing"),AuthorizedTransaction=function(){function t(e){_classCallCheck(this,t),this.authorizationId=e.id,this.timeCreated=(0,_moment2.default)(e.time_created),this.netAuthorizedAmount=(0,_paypalInvoicing.$$)(parseFloat(e.net.value)),this.currency=e.net.currency_code,this.status=e.status,this.detailedStatus=e.detailed_status}return t.prototype.toJSON=function(){return{authorizationId:this.authorizationId,timeCreated:this.timeCreated,netAuthorizedAmount:this.netAuthorizedAmount,currency:this.currency,status:this.status,detailedStatus:this.detailedStatus}},t.prototype.toString=function(){return JSON.stringify(this.toJSON())},t}();exports.default=AuthorizedTransaction;

},{"moment":278,"paypal-invoicing":279}],72:[function(require,module,exports){
"use strict";function _classCallCheck(t,a){if(!(t instanceof a))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _paypalInvoicing=require("paypal-invoicing"),CaptureResponse=function(){function t(a){_classCallCheck(this,t),this.captureId=a.id,this.isFinalCapture=a.is_final_capture,this.state=a.state,this.captureAmount=(0,_paypalInvoicing.$$)(parseFloat(a.amount.total)),this.currency=a.amount.currency,this.transactionFee=(0,_paypalInvoicing.$$)(parseFloat(a.transaction_fee.value))}return t.prototype.toJSON=function(){return{captureId:this.captureId,isFinalCapture:this.isFinalCapture,state:this.state,captureAmount:this.captureAmount,currency:this.currency,transactionFee:this.transactionFee}},t.prototype.toString=function(){return JSON.stringify(this.toJSON())},t}();exports.default=CaptureResponse;

},{"paypal-invoicing":279}],73:[function(require,module,exports){
"use strict";function _interopRequireWildcard(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _createClass=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),_manticore=require("manticore"),_manticore2=_interopRequireDefault(_manticore),_manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_retailPaymentDevice=require("retail-payment-device"),_manticoreUtil=require("manticore-util"),Util=_interopRequireWildcard(_manticoreUtil),_tlvlib=require("tlvlib"),_transactionEvent=require("./transactionEvent"),_transactionEvent2=_interopRequireDefault(_transactionEvent),_PaymentErrorHandler=require("../flows/PaymentErrorHandler"),_PaymentErrorHandler2=_interopRequireDefault(_PaymentErrorHandler),_l10n=require("../common/l10n"),_l10n2=_interopRequireDefault(_l10n),_retailSDKUtil=require("../common/retailSDKUtil"),_messageHelper=require("../flows/messageHelper"),messageHelper=_interopRequireWildcard(_messageHelper),_sdkErrors=require("../common/sdkErrors"),Log=(0,_manticoreLog2.default)("tx.cardPresentedHandler"),CardPresentedHandler=function(){function e(t){_classCallCheck(this,e),this.context=t}return e.prototype.handleCardPresent=function(e,t,r,n,a){var i=null;if(t!==_retailPaymentDevice.CardPresentEvent.insertDetected&&(this.context.isInvoiceAmountBelowAllowedMinimum()?i=_sdkErrors.transaction.amountTooLow:this.context.isInvoiceAmountAboveAllowedMaximum()&&(i=_sdkErrors.transaction.amountTooHigh)),e||i)return this.context.setPaymentInProgress(),void this._handleError(e||i,r,a);Log.info("Received card present event with sub type '"+Util.getPropertyName(_retailPaymentDevice.CardPresentEvent,t)+", ff: "+Util.getPropertyName(_retailPaymentDevice.FormFactor,r)+" for "+this.context),t===_retailPaymentDevice.CardPresentEvent.cardDataRead?this._handleCardData(n):t===_retailPaymentDevice.CardPresentEvent.pinEvent?this._handlePinEvent(n):t===_retailPaymentDevice.CardPresentEvent.appSelectionRequired?this._handleApplicationSelect(a,r,n):t===_retailPaymentDevice.CardPresentEvent.insertDetected?this._handleCardInsertDetectedEvent(a):Log.error("Received unknown card presented event from "+a.id+" event subType: "+t+",      formFactor: "+r+", result: "+n)},e.prototype.handleTxCancelled=function(e){var t=this;Log.warn("Tx cancelled listener was invoked for device : "+e.id),e.display({id:_retailPaymentDevice.PaymentDevice.Message.TransactionCancelled,substitutions:this._formattedAmount},function(){t.context.alert=_manticore2.default.alert({title:(0,_l10n2.default)("Tx.Alert.Cancelled.Title"),message:(0,_l10n2.default)("Tx.Alert.Cancelled.Msg"),cancel:(0,_l10n2.default)("Done")},function(){t.context.alert.dismiss(),t.context.end(_sdkErrors.transaction.genericCancel)})})},e.prototype.handleContactlessReaderDeactivated=function(e){var t=this;Log.debug(function(){return"Contactless reader was deactivated on "+e.id}),this.context.deviceController.syncOnce(e),Log.debug(function(){return"Emitting contactlessReaderDeactivated event for "+t.context}),this.context.emit(_transactionEvent2.default.contactlessReaderDeactivated)},e.prototype._handleCardInsertDetectedEvent=function(e){Log.debug(function(){return"Card insert detected on "+e.id}),this.context.alert=_manticore2.default.alert({title:(0,_l10n2.default)("EMV.DoNotRemove"),message:(0,_l10n2.default)("EMV.Processing"),showActivity:!0,replace:!0},function(){});var t=this.context.isRefund()?messageHelper.formattedRefundTotal(this.context):messageHelper.formattedInvoiceTotal(this.context.invoice);e.display({id:_retailPaymentDevice.PaymentDevice.Message.ProcessingContact,substitutions:t},function(){})},e.prototype._validateFormFactor=function(e,t){var r=this.context.getSetOfActiveFormFactors();if(!t&&e.chipCard&&e.formFactor===_retailPaymentDevice.FormFactor.MagneticCardSwipe){if(r.has(_retailPaymentDevice.FormFactor.Chip))return _sdkErrors.transaction.cannotSwipeChipCard;Log.info("Allow fallback swipes on chip card as chip reader was not enabled")}return e.formFactor!==_retailPaymentDevice.FormFactor.Chip||r.has(_retailPaymentDevice.FormFactor.Chip)?null:_sdkErrors.transaction.mustSwipeCard},e.prototype._handleCardData=function(e){var t=e.card;Log.debug(function(){return"Card presented using form factor: '"+Util.getPropertyName(_retailPaymentDevice.FormFactor,t.formFactor)+"'"}),this.context.card=t;var r=this._validateFormFactor(t,this.context.allowFallBackSwipe);if(r)return void this._handleError(r,t.formFactor,t.reader);t.chipCard&&t.formFactor===_retailPaymentDevice.FormFactor.MagneticCardSwipe&&(Log.info("Allowing fallback swipe on the chip card"),t.isMSRFallbackAllowed=!0),this._isOnlinePINVerificationRequired(t.emvData)&&(Log.debug("Online PIN authorization required... Will set pinPresent to true"),this.context.pinPresent=!0),this.context.cardPresentedHandler?(this.context.alert&&this.context.alert.dismiss(),this.context.cardPresentedHandler(t)):this.context.continueWithCard(t)},e.prototype._handlePinEvent=function(e){var t=this;Log.debug(function(){return"Received PinEvent "+JSON.stringify(e)});var r=function(){var e=t.context.isRefund()?messageHelper.formattedRefundTotal(t.context):messageHelper.formattedInvoiceTotal(t.context.invoice);t.context.alert=_manticore2.default.alert({title:(0,_l10n2.default)("Tx.Alert.EnterPin.Title",e),message:(0,_l10n2.default)("Tx.Alert.EnterPin.Message")},function(){})};if(e.correct)this.context.pinPresent=!0;else if(0===e.digits){if(this.context.pinRequired=!0,this._incorrectPin)return void(this._incorrectPin=!1);r()}else e.failureReason&&(this._incorrectPin=!0,this.context.alert=_manticore2.default.alert({title:(0,_l10n2.default)("Tx.Alert.IncorrectPin.Title"),message:(0,_l10n2.default)("Tx.Alert.IncorrectPin.Message"),cancel:(0,_l10n2.default)("OK")},r))},e.prototype._isOnlinePINVerificationRequired=function(e){if(!this.context.pinRequired||!e.tlvs)return!1;var t=e.tlvs.find(_tlvlib.Tags.CardholderVerificationMethodResults);return!(!t||!t.bytes[0])&&(Log.debug(function(){return"Checking for online PIN Authorization... Value of bytes[0] for CVM tag is "+t.bytes[0]}),2==(63&t.bytes[0]))},e.prototype._handleApplicationSelect=function(e,t,r){for(var n=this,a=[],i=r.availableApps,o=i.apps,c=Array.isArray(o),l=0,o=c?o:o[Symbol.iterator]();;){var s;if(c){if(l>=o.length)break;s=o[l++]}else{if(l=o.next(),l.done)break;s=l.value}var d=s;a.push(d[1]||d[0])}var u=function(){return n._handleError(_retailPaymentDevice.deviceError.smartCardNotInSlot,_retailPaymentDevice.FormFactor.Chip,e)};e.once(_retailPaymentDevice.PaymentDevice.Event.cardRemoved,u),this.context.alert=_manticore2.default.alert({title:(0,_l10n2.default)("EMV.Select"),buttons:a,replace:!0},function(t,a){var o=i.apps[a][0],c=i.apps[a][1];Log.info(n.context.id+" User selected application "+o+":"+c),n.context.alert=_manticore2.default.alert({title:(0,_l10n2.default)("EMV.DoNotRemove"),message:(0,_l10n2.default)("EMV.Processing"),showActivity:!0,replace:!0},function(){}),e.removeListener(_retailPaymentDevice.PaymentDevice.Event.cardRemoved,u),e.selectPaymentApplication(o,r.card)})},e.prototype._handleError=function(e,t,r){var n=this;e.code===_retailPaymentDevice.deviceError.contactlessPaymentAbortedByCardInsert.code||e.code===_retailPaymentDevice.deviceError.contactlessPaymentAbortedByCardSwipe.code?Log.debug("Contactless payment aborted by card insert/swipe"):Log.error("Transaction failed with error '"+e.domain+"."+e.code+"'"),new _PaymentErrorHandler2.default(this.context).handle(e,t,r,function(r){return n.context.processErrorHandlerResponse(e,r,t)})},_createClass(e,[{key:"_formattedAmount",get:function(){return{amount:(0,_retailSDKUtil.getAmountWithCurrencySymbol)(this.context.invoice.currency,this.context.invoice.total)}}}]),e}();exports.default=CardPresentedHandler;

},{"../common/l10n":13,"../common/retailSDKUtil":17,"../common/sdkErrors":18,"../flows/PaymentErrorHandler":25,"../flows/messageHelper":28,"./transactionEvent":89,"manticore":213,"manticore-log":208,"manticore-util":212,"retail-payment-device":356,"tlvlib":359}],74:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _toConsumableArray(e){if(Array.isArray(e)){for(var t=0,r=Array(e.length);t<e.length;t++)r[t]=e[t];return r}return Array.from(e)}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}exports.__esModule=!0;var _createClass=function(){function e(e,t){for(var r=0;r<t.length;r++){var i=t[r];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,r,i){return r&&e(t.prototype,r),i&&e(t,i),t}}(),_manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_retailPaymentDevice=require("retail-payment-device"),_paypalInvoicing=require("paypal-invoicing"),_events=require("events"),_manticoreUtil=require("manticore-util"),_CardPresentedHandler=require("./CardPresentedHandler"),_CardPresentedHandler2=_interopRequireDefault(_CardPresentedHandler),_DeviceSelector=require("../paymentDevice/DeviceSelector"),_DeviceSelector2=_interopRequireDefault(_DeviceSelector),_InvoiceSynchronizer=require("./InvoiceSynchronizer"),_InvoiceSynchronizer2=_interopRequireDefault(_InvoiceSynchronizer),_sdkErrors=require("../common/sdkErrors"),_Merchant=require("../common/Merchant"),_Merchant2=_interopRequireDefault(_Merchant),_messageHelper=require("../flows/messageHelper"),_retailSDKUtil=require("../common/retailSDKUtil"),Log=(0,_manticoreLog2.default)("transactionContext.deviceController"),DeviceController=function(e){function t(r){_classCallCheck(this,t);var i=_possibleConstructorReturn(this,e.call(this));return i.context=r,i.activeDevices=new Set,i._invoiceSynchronizer=new _InvoiceSynchronizer2.default(r,i),i._invoiceSynchronizer.start(),i._cardPresentedHandlers=new _CardPresentedHandler2.default(i.context),i}return _inherits(t,e),t.prototype.getApprovedFormFactors=function(e){var t=this.devices.filter(function(e){return e.isReadyForTransaction().isReady}),r=new Set([].concat.apply([],t.map(function(e){return e.formFactors})));return r.has(_retailPaymentDevice.FormFactor.EmvCertifiedContactless)&&this._isNFCContactlessLimitReached()&&r.delete(_retailPaymentDevice.FormFactor.EmvCertifiedContactless),e&&e.length>0?e.filter(function(e){return r.has(e)}):[].concat(_toConsumableArray(r))},t.prototype._isNFCContactlessLimitReached=function(){var e=this,t=_Merchant2.default.active;if(t.featureMap){var r=t.isCertificationMode?"*":t.featureMap.CONTACTLESS_LIMIT;return!("*"===r||!this.context.invoice.total.greaterThan((0,_paypalInvoicing.$$)(r)||0))&&(Log.debug(function(){return"Cannot perform NFC. Invoice total "+e.context.invoice.total+" is above contactless limit of "+r}),!0)}return!1},t.prototype._isMerchantFromUK=function(){return"GBP"===_Merchant2.default.active.currency},t.prototype._showInsertOrSwipeMessageOnDevice=function(e,t){e.display({id:_retailPaymentDevice.PaymentDevice.Message.ReadyForInsertAndSwipePayment,substitutions:t},function(){})},t.prototype.cardInsertDetected=function(){_DeviceSelector2.default.selectedDevice&&this._cardPresentedHandlers.handleCardPresent(null,_retailPaymentDevice.CardPresentEvent.insertDetected,_retailPaymentDevice.FormFactor.Chip,null,_DeviceSelector2.default.selectedDevice)},t.prototype.activate=function(e){var t=this,r=e.showPrompt,i=e.formFactors,n=!!(0,_retailSDKUtil.isNullOrUndefined)(e.syncInvoiceTotal)||e.syncInvoiceTotal,o=_DeviceSelector2.default.selectedDevice;if(Log.debug(function(){return"("+t.context.id+") Begin device activation for invoice total: "+t.context.invoice.total+", sync: "+n}),!o)return Log.warn("Exiting device activation for "+this.context.id+" as selected device was not set"),{error:_sdkErrors.transaction.noFunctionalDevices};if(Log.debug(function(){return"("+t.context.id+") Continue device activation for invoice total: "+t.context.invoice.total+", sync: "+n+" on "+o.id}),this.updateDeviceDisplayIfError(o))return{error:_sdkErrors.transaction.noFunctionalDevices};n?this._invoiceSynchronizer.start():Log.debug(function(){return"Will not sync invoice total of "+t.context.invoice.total+" on "+o.id}),o.stopPollForBattery(),this.listenersAddedTo===o?Log.debug(function(){return"Skip add listeners for "+t.context.id+". Listeners already added"}):(this.removeListenerOnDevice(o),Log.debug(function(){return"Adding listeners for "+t.context.id+" to "+o.id}),this.listenersAddedTo=o,this._addListener(o,_retailPaymentDevice.PaymentDevice.Event.cardPresented,function(e,r,i,n){o.cardPresented=!0,e||t._invoiceSynchronizer.stop(),t._cardPresentedHandlers.handleCardPresent(e,r,i,n,o)}),this._addListener(o,_retailPaymentDevice.PaymentDevice.Event.cancelled,function(){return t._cardPresentedHandlers.handleTxCancelled(o)}),this._addListener(o,_retailPaymentDevice.PaymentDevice.Event.cancelRequested,function(){return t.context.cancel}),this._addListener(o,_retailPaymentDevice.PaymentDevice.Event.contactlessReaderDeactivated,function(){return t._cardPresentedHandlers.handleContactlessReaderDeactivated(o)})),o.manufacturer.toUpperCase()===_retailPaymentDevice.deviceManufacturer.miura&&this._isNFCContactlessLimitReached()&&this._showInsertOrSwipeMessageOnDevice(o,(0,_messageHelper.formattedInvoiceTotal)(this.context.invoice));var a=this.getApprovedFormFactors(i);return Log.info("("+this.context.id+") Activating "+o.id+" for form factors ["+(0,_manticoreUtil.getPropertyName)(_retailPaymentDevice.FormFactor,a)+"] & showPrompt: "+r),o.cardInsertedHandler=this.context.cardInsertedHandler,o.activateForPayment(this.context,a,r),this.activeDevices.add(o),Log.debug(function(){return"Device '"+o.id+" activated for "+a+" form factors'"}),{device:o,formFactors:a}},t.prototype.updateDeviceDisplayIfError=function(e){var t=e.isReadyForTransaction();return!t.isReady&&(Log.warn("Selected device "+e.id+" failed availability check due to "+t.error),t.error===_retailPaymentDevice.deviceError.lowOnBattery?e.display({id:_retailPaymentDevice.PaymentDevice.Message.RechargeNow},function(){}):t.error===_retailPaymentDevice.deviceError.swUpdatePending&&e.display({id:_retailPaymentDevice.PaymentDevice.Message.SoftwareUpdateRequired},function(){}),!0)},t.prototype.syncOnce=function(e){this._invoiceSynchronizer.pushOnce(e||_DeviceSelector2.default.selectedDevice,this.context.invoice.total,function(){})},t.prototype.abort=function(e){this._invoiceSynchronizer.stop(),this.removeListeners();var t=_DeviceSelector2.default.selectedDevice;if(!t)return Log.info("Aborting transaction "+this.context.id),void(e&&e());Log.info("Aborting transaction "+this.context.id+" on "+t.id+" active with form factor's - '"+(0,_manticoreUtil.getPropertyName)(_retailPaymentDevice.FormFactor,[].concat(_toConsumableArray(t.getSetOfActiveFormFactors())))+"'"),t.abortTransaction(this.context,function(){t.display({id:_retailPaymentDevice.PaymentDevice.Message.ReadyWithId,substitutions:{id:t.id},displaySystemIcons:!0},function(){e(t)})})},t.prototype.deactivateFormFactors=function(e,t){_DeviceSelector2.default.selectedDevice?_DeviceSelector2.default.selectedDevice.deactivateFormFactors(e,function(){t&&t(_DeviceSelector2.default.selectedDevice)}):(Log.debug("Will not deactivate tx as no device selected! Will immediately invoke callback"),t&&t())},t.prototype.syncInvoice=function(){this._invoiceSynchronizer.start()},t.prototype.stopInvoiceSync=function(){this._invoiceSynchronizer.stop()},t.prototype.startPollingForBattery=function(){_DeviceSelector2.default.selectedDevice&&_DeviceSelector2.default.selectedDevice.startPollForBattery()},t.prototype.stopPollingForBattery=function(){_DeviceSelector2.default.selectedDevice&&_DeviceSelector2.default.selectedDevice.stopPollForBattery()},t.prototype._addListener=function(e,t,r){r.txContextId=this.context.id,e.on(t,r)},t.prototype.removeListeners=function(){for(var e=_retailPaymentDevice.PaymentDevice.devices,t=e,r=Array.isArray(t),i=0,t=r?t:t[Symbol.iterator]();;){var n;if(r){if(i>=t.length)break;n=t[i++]}else{if(i=t.next(),i.done)break;n=i.value}var o=n;this.removeListenerOnDevice(o)}this.listenersAddedTo=null},t.prototype.removeListenerOnDevice=function(e){for(var t=this,r=[_retailPaymentDevice.PaymentDevice.Event.cardPresented,_retailPaymentDevice.PaymentDevice.Event.cancelled,_retailPaymentDevice.PaymentDevice.Event.cancelRequested,_retailPaymentDevice.PaymentDevice.Event.contactlessReaderDeactivated],i=r,n=Array.isArray(i),o=0,i=n?i:i[Symbol.iterator]();;){var a;if("break"===function(){if(n){if(o>=i.length)return"break";a=i[o++]}else{if(o=i.next(),o.done)return"break";a=o.value}for(var r=a,c=e.listenerCount(r),s=[],l=e.listeners(r),d=Array.isArray(l),v=0,l=d?l:l[Symbol.iterator]();;){var u;if(d){if(v>=l.length)break;u=l[v++]}else{if(v=l.next(),v.done)break;u=v.value}var f=u;e.removeListener(r,f),s.push(f.id)}c&&Log.debug(function(){return"Removed "+c+" '"+r+"' listener(s) from "+e.id+" for "+t.context.id+". Listeners - "+s})}())break}},_createClass(t,[{key:"devices",get:function(){return this.context.paymentDevices||_retailPaymentDevice.PaymentDevice.devices}},{key:"selectedDevice",get:function(){return _DeviceSelector2.default.selectedDevice}}]),t}(_events.EventEmitter);exports.default=DeviceController,DeviceController.FilterCriteria={Ready:"Ready",BatteryStatus:"BatteryStatus",SoftwareUpdate:"SoftwareUpdate"};

},{"../common/Merchant":3,"../common/retailSDKUtil":17,"../common/sdkErrors":18,"../flows/messageHelper":28,"../paymentDevice/DeviceSelector":62,"./CardPresentedHandler":73,"./InvoiceSynchronizer":76,"events":200,"manticore-log":208,"manticore-util":212,"paypal-invoicing":279,"retail-payment-device":356}],75:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_retailPaymentDevice=require("retail-payment-device"),_DeviceSelector=require("../paymentDevice/DeviceSelector"),_DeviceSelector2=_interopRequireDefault(_DeviceSelector),_DeviceScanner=require("../paymentDevice/DeviceScanner"),_DeviceScanner2=_interopRequireDefault(_DeviceScanner),_DeviceConnector=require("../paymentDevice/DeviceConnector"),_DeviceConnector2=_interopRequireDefault(_DeviceConnector),_sdkErrors=require("../common/sdkErrors"),Log=(0,_manticoreLog2.default)("DeviceManager"),DeviceManager=function(){function e(){var n=this;_classCallCheck(this,e),_DeviceScanner2.default.Events.once(_DeviceScanner2.default.Events.constructor,function(e){n.scanner=e})}return e.prototype.getDeviceScanner=function(){return this.scanner},e.prototype.searchAndConnectWithUI=function(e){this.scanner?this.scanner.searchAndConnectWithUI(e):e(_sdkErrors.sdk.cardReaderScannerNotInitialized,null)},e.prototype.connectToLastActiveReaderOrFindAnotherWithUI=function(e){_DeviceConnector2.default.connectToLastActiveReaderOrFindAnother(e)},e.prototype.setActiveReader=function(e){e?_DeviceSelector2.default.selectDevice(e.id):Log.warn("The payment device cannot be null")},e.prototype.isConnectedToMiura=function(){return _DeviceSelector2.default.isConnectedToMiura()},e.prototype.getActiveReader=function(){return _DeviceSelector2.default.selectedDevice},e.prototype.getDiscoveredDevices=function(){return _retailPaymentDevice.PaymentDevice.devices},e}(),deviceManager=new DeviceManager;exports.default=deviceManager;

},{"../common/sdkErrors":18,"../paymentDevice/DeviceConnector":59,"../paymentDevice/DeviceScanner":61,"../paymentDevice/DeviceSelector":62,"manticore-log":208,"retail-payment-device":356}],76:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}exports.__esModule=!0;var _manticore=require("manticore"),_manticore2=_interopRequireDefault(_manticore),_retailPaymentDevice=require("retail-payment-device"),_manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_paypalInvoicing=require("paypal-invoicing"),_events=require("events"),_transactionEvent=require("./transactionEvent"),_transactionEvent2=_interopRequireDefault(_transactionEvent),_CardReaderDisplayController=require("../paymentDevice/CardReaderDisplayController"),_CardReaderDisplayController2=_interopRequireDefault(_CardReaderDisplayController),_displayPriority=require("../paymentDevice/displayPriority"),_displayPriority2=_interopRequireDefault(_displayPriority),_retailSDKUtil=require("../common/retailSDKUtil"),InvoiceEvent=_paypalInvoicing.Invoice.event,Log=(0,_manticoreLog2.default)("transactionContext.invoiceSynchronizer"),syncInvoice=!0,InvoiceSynchronizer=function(e){function t(i,n){_classCallCheck(this,t);var r=_possibleConstructorReturn(this,e.call(this));return r.context=i,r.invoice=i.invoice,r.deviceController=n,r._preferredFormFactors=new Set,r}return _inherits(t,e),t.prototype.start=function(){var e=this;syncInvoice=!0,Log.debug(function(){return"Starting invoice sync on "+(e.deviceController.selectedDevice?e.deviceController.selectedDevice.id:"(no device selected)")+" for invoice total "+e.invoice.total+". context.id: "+e.context.id});try{var t=this.context.isRefund()?this.context.refundAmount:this.invoice.total;if(this._q)return void this._q.push(t);this._q={tasks:[],invoiceSyncInProgress:!1,kill:function(){e._q.tasks=[]},process:function(){if(e._q&&e._q.tasks.length&&syncInvoice){var t=e._q.tasks.splice(0,e._q.tasks.length),i=t.pop();e._q.invoiceSyncInProgress=!0;var n=e.deviceController.selectedDevice;if(!n)return void(e._q.invoiceSyncInProgress=!1);e.pushOnce(n,i,function(){e.emit("onTaskComplete"),e._q&&(e._q.invoiceSyncInProgress=!1,e._q.tasks.length>0&&_manticore2.default.setTimeout(function(){Log.debug("manticore timeout syncInvoice: "+syncInvoice),e._q.process()},0))})}},push:function(t){e._q.tasks.push(t),e._q.invoiceSyncInProgress||(Log.debug("push syncInvoice: "+syncInvoice),e._q.process())}};var i=function(){return e._q.push(e.invoice.total)},n=function(){return e._q.push(e.context.refundAmount)};i.txContext=this.context,this.invoice.on(InvoiceEvent.totalMayHaveChanged,i),this.context.on(_transactionEvent2.default.invoiceDisplayFooterUpdated,i),this.context.on(_transactionEvent2.default.refundAmountEntered,n),this._q.push(this.invoice.total)}catch(e){Log.error("Invoice Synchronizer failed stopping with error "+e)}},t.prototype.pushOnce=function(e,t,i){var n=this;if(e){var r=e.isReadyForTransaction();if(!r.isReady)return void Log.debug(function(){return"Cannot push "+t+" to "+e.id+" as card reader is not ready. Error: "+r.error});if(e.pendingUpdate&&e.pendingUpdate.isRequired&&!e.pendingUpdate.wasInstalled)return void e.display({id:_retailPaymentDevice.PaymentDevice.Message.SoftwareUpdateRequired,displaySystemIcons:!0},i);var o=t.greaterThan(0);Log.debug(function(){return"InvoiceSync display for invoice total "+n.invoice.total+". context.id: "+n.context.id}),_CardReaderDisplayController2.default.display(_displayPriority2.default.medium,e,{id:o?_retailPaymentDevice.PaymentDevice.Message.InvoiceTotal:_retailPaymentDevice.PaymentDevice.Message.ReadyWithId,substitutions:{amount:(0,_retailSDKUtil.getAmountWithCurrencySymbol)(this.invoice.currency,t),footer:this.context.totalDisplayFooter,id:e.id},displaySystemIcons:!o},i)}},t.prototype.stop=function(){var e=this;syncInvoice=!1,Log.debug(function(){return"Stopping invoice sync on "+(e.deviceController.selectedDevice?e.deviceController.selectedDevice.id:", ")+", this.shouldSync: "+syncInvoice+" for invoice total "+e.invoice.total+". context.id: "+e.context.id});try{for(var t=[InvoiceEvent.totalMayHaveChanged],i=[_transactionEvent2.default.invoiceDisplayFooterUpdated,_transactionEvent2.default.refundAmountEntered],n=t,r=Array.isArray(n),o=0,n=r?n:n[Symbol.iterator]();;){var a;if(r){if(o>=n.length)break;a=n[o++]}else{if(o=n.next(),o.done)break;a=o.value}for(var c=a,s=this.invoice.listeners(c),l=Array.isArray(s),u=0,s=l?s:s[Symbol.iterator]();;){var v;if("break"===function(){if(l){if(u>=s.length)return"break";v=s[u++]}else{if(u=s.next(),u.done)return"break";v=u.value}var t=v;Object.is(t.txContext,e.context)?e.invoice.removeListener(c,t):Log.debug(function(){return"Skip remove of listener for invoice total "+e.invoice.total+" this.context.id: "+e.context.id+", listener.txContext: "+t.txContext.id})}())break}}for(var d=i,y=Array.isArray(d),p=0,d=y?d:d[Symbol.iterator]();;){var f;if(y){if(p>=d.length)break;f=d[p++]}else{if(p=d.next(),p.done)break;f=p.value}for(var _=f,h=this.context.listeners(_),g=Array.isArray(h),m=0,h=g?h:h[Symbol.iterator]();;){var q;if(g){if(m>=h.length)break;q=h[m++]}else{if(m=h.next(),m.done)break;q=m.value}var b=q;this.context.removeListener(_,b)}}if(!this._q)return;this._q.kill(),this._q=null}catch(e){Log.error("Invoice Synchronizer failed stopping with error "+e)}},t}(_events.EventEmitter);exports.default=InvoiceSynchronizer;

},{"../common/retailSDKUtil":17,"../paymentDevice/CardReaderDisplayController":56,"../paymentDevice/displayPriority":68,"./transactionEvent":89,"events":200,"manticore":213,"manticore-log":208,"paypal-invoicing":279,"retail-payment-device":356}],77:[function(require,module,exports){
"use strict";function _interopRequireWildcard(e){if(e&&e.__esModule)return e;var r={};if(null!=e)for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&(r[t]=e[t]);return r.default=e,r}function _classCallCheck(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _manticoreUtil=require("manticore-util"),util=_interopRequireWildcard(_manticoreUtil),Payer=function e(r){_classCallCheck(this,e),r&&util.assignSome(this,r,["customerId","receiptPreferenceToken","maskedEmail","maskedPhone"])};exports.default=Payer;

},{"manticore-util":212}],78:[function(require,module,exports){
"use strict";exports.__esModule=!0;var PaymentType={card:"card",keyIn:"keyIn",cash:"cash",check:"check"};exports.default=PaymentType;

},{}],79:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _buildContext(e){e.id="pa-"+(0,_retailSDKUtil.getRandomId)(),e.isPendingAuthTransaction=function(){return!0},e.isRefund=function(){return!1}}function captureAuthorizedTransaction(e,t,r){if(t<=0)return void r(_sdkErrors.transaction.invalidCaptureAmount,{});var i={};_buildContext(i),i.captureAmount=(0,_paypalInvoicing.$$)(t),i.authorizationId=e;var n=function(e,t){Log[e?"error":"info"]("Capture flow completed with error: "+JSON.stringify(e)+" "+i.id),Log.info("this is the end response "+JSON.stringify(t)),r&&r(e,t)};i.flow=new _CaptureFlow2.default(i,n),i.flowStart=function(){i.flow.start().then(function(){},function(e){if(Log.error(function(){return"Capture flow failed "+e}),r){var t=_sdkErrors.transaction.captureFailed;t.developerMessage=JSON.stringify(e),r(t,null)}})},i.flowStart()}function _processListOfActivitiesSearchResults(e,t,r){var i;return regeneratorRuntime.async(function(n){for(;;)switch(n.prev=n.next){case 0:return i={},e?e.message=(0,_l10n2.default)("Tx.RetrieveListOfAuthTxnsFailed"):t&&t.body&&(Log.debug("this is the result object "+JSON.stringify(t)),i=new _RetrieveAuthorizedTransactionResponse2.default(t.body,r),Log.info("Succesfully retrieved the list of transactions containing "+i.listOfAuths.length+" authorized transactions")),n.abrupt("return",i);case 3:case"end":return n.stop()}},null,this)}function retrieveAuthorizedTransactions(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:10,i=this,n=arguments[3],o=arguments[4],a="activities?";Log.info("the startTime object is "+JSON.stringify(e)+" and is of the type "+(void 0===e?"undefined":_typeof(e)));var s={retrieveAuthorizedTransactionFunction:retrieveAuthorizedTransactions},u=null;if(e&&(0,_moment2.default)(e).isValid()?e&&(0,_moment2.default)(e).isValid()&&t&&(0,_moment2.default)(t).isValid()&&e.getTime()>t.getTime()?u="endTime should not greater than startTime":r&&(!Number.isInteger(r)||r<=0)&&(u="pageSize given is not a valid integer"):u="Start time is missing or is invalid",u){var c=_sdkErrors.sdk.validationError;return c.developerMessage=u,void o(c)}e&&(0,_moment2.default)(e).isValid()&&(a=a+"start_time="+(0,_moment2.default)(e).toISOString(),s.startTime=e),t&&(0,_moment2.default)(t).isValid()&&(a=a+"&end_time="+(0,_moment2.default)(t).toISOString(),s.endTime=t),r&&Number.isInteger(r)?(a=a+"&page_size="+r,s.pageSize=r):(a+="&page_size=10",s.pageSize=10),n&&(a=a+"&next_page_token="+n),a+="&subtype=AUTHORIZATION",Log.debug("the op is "+a),_Merchant2.default.active.request({service:"activities",op:a,format:"json",method:"GET",headers:{"Content-Type":"application/json"}},function(e,t){var r;return regeneratorRuntime.async(function(i){for(;;)switch(i.prev=i.next){case 0:return Log.debug(function(){return"the list of activities returned is "+JSON.stringify(t)}),i.next=3,regeneratorRuntime.awrap(_processListOfActivitiesSearchResults(e,t,s));case 3:r=i.sent,Log.info("got the list back from the processsing function "+JSON.stringify(r)),o(e,r);case 6:case"end":return i.stop()}},null,i)})}exports.__esModule=!0;var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};exports.captureAuthorizedTransaction=captureAuthorizedTransaction,exports.retrieveAuthorizedTransactions=retrieveAuthorizedTransactions;var _manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_paypalInvoicing=require("paypal-invoicing"),_moment=require("moment"),_moment2=_interopRequireDefault(_moment),_CaptureFlow=require("./../flows/CaptureFlow"),_CaptureFlow2=_interopRequireDefault(_CaptureFlow),_Merchant=require("../common/Merchant"),_Merchant2=_interopRequireDefault(_Merchant),_l10n=require("../common/l10n"),_l10n2=_interopRequireDefault(_l10n),_retailSDKUtil=require("../common/retailSDKUtil"),_RetrieveAuthorizedTransactionResponse=require("./RetrieveAuthorizedTransactionResponse"),_RetrieveAuthorizedTransactionResponse2=_interopRequireDefault(_RetrieveAuthorizedTransactionResponse),_sdkErrors=require("../common/sdkErrors"),Log=(0,_manticoreLog2.default)("pendingAuthManager");

},{"../common/Merchant":3,"../common/l10n":13,"../common/retailSDKUtil":17,"../common/sdkErrors":18,"./../flows/CaptureFlow":21,"./RetrieveAuthorizedTransactionResponse":82,"manticore-log":208,"moment":278,"paypal-invoicing":279}],80:[function(require,module,exports){
"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var ReceiptDestinationType=exports.ReceiptDestinationType={none:0,email:1,text:2},ReceiptDestination=exports.ReceiptDestination=function e(t,i){_classCallCheck(this,e),this.type=t||ReceiptDestinationType.none,this.email=i||null};

},{}],81:[function(require,module,exports){
"use strict";function _interopRequireWildcard(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e.default=t,e}function _interopRequireDefault(t){return t&&t.__esModule?t:{default:t}}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0,exports.ReceiptViewContent=exports.ReceiptSMSEntryViewContent=exports.ReceiptEmailEntryViewContent=exports.ReceiptOptionsViewContent=void 0;var _l10n=require("../common/l10n"),_l10n2=_interopRequireDefault(_l10n),_retailSDKUtil=require("../common/retailSDKUtil"),retailSDKUtil=_interopRequireWildcard(_retailSDKUtil),ReceiptOptionsViewContent=exports.ReceiptOptionsViewContent=function t(e,i,n,l,a,s){_classCallCheck(this,t),i?this.message=n?(0,_l10n2.default)("Tx.RefundFailed"):(0,_l10n2.default)("Tx.RefundSuccessful"):retailSDKUtil.transactionCancelledError(n)?this.message=(0,_l10n2.default)("Tx.CancelledByUser"):this.message=n?(0,_l10n2.default)("Tx.TransactionFailed"):(0,_l10n2.default)("Tx.TransactionSuccessful"),this.title=(0,_l10n2.default)("Rcpt.Title",{amount:e}),this.titleIconFilename=n?"ic_x_declined":"check_icon_green",this.maskedEmail=l,this.maskedPhone=a,this.disclaimer=(0,_l10n2.default)("Rcpt.Disclaimer"),this.emailButtonTitle=(0,_l10n2.default)("Rcpt.EmailButtonTitle"),this.smsButtonTitle=(0,_l10n2.default)("Rcpt.SMSButtonTitle"),this.noThanksButtonTitle=(0,_l10n2.default)("Rcpt.NoThanksButtonTitle"),this.additionalReceiptOptions=s,this.prompt=(0,_l10n2.default)("Rcpt.Prompt")},ReceiptEmailEntryViewContent=exports.ReceiptEmailEntryViewContent=function t(){_classCallCheck(this,t),this.title=(0,_l10n2.default)("Rcpt.Email.Title"),this.placeholder=(0,_l10n2.default)("Rcpt.Email.Placeholder"),this.disclaimer=(0,_l10n2.default)("Rcpt.Email.Disclaimer"),this.sendButtonTitle=(0,_l10n2.default)("Rcpt.Email.SendButtonTitle")},ReceiptSMSEntryViewContent=exports.ReceiptSMSEntryViewContent=function t(){_classCallCheck(this,t),this.title=(0,_l10n2.default)("Rcpt.SMS.Title"),this.placeholder=(0,_l10n2.default)("Rcpt.SMS.Placeholder"),this.disclaimer=(0,_l10n2.default)("Rcpt.SMS.Disclaimer"),this.sendButtonTitle=(0,_l10n2.default)("Rcpt.SMS.SendButtonTitle")},ReceiptViewContent=exports.ReceiptViewContent=function t(e,i,n,l,a,s){_classCallCheck(this,t),this.receiptOptionsViewContent=new ReceiptOptionsViewContent(e,i,n,l,a,s),this.receiptEmailEntryViewContent=new ReceiptEmailEntryViewContent,this.receiptSMSEntryViewContent=new ReceiptSMSEntryViewContent};

},{"../common/l10n":13,"../common/retailSDKUtil":17}],82:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _moment=require("moment"),_moment2=_interopRequireDefault(_moment),_AuthorizedTransaction=require("./AuthorizedTransaction"),_AuthorizedTransaction2=_interopRequireDefault(_AuthorizedTransaction),_sdkErrors=require("../common/sdkErrors"),RetrieveAuthorizedTransactionResponse=function(){function e(t,i){var n=this;_classCallCheck(this,e),this.listOfAuths=[],i&&(this.startTime=i.startTime?i.startTime:null,this.endTime=i.endTime?i.endTime:null,this.pageSize=i.pageSize?i.pageSize:null,this._retrieveAuthorizedTranasactionFunction=i.retrieveAuthorizedTransactionFunction?i.retrieveAuthorizedTransactionFunction:null),t.items.length>0?t.items.forEach(function(e){if("PENDING"===e.status){var t=new _AuthorizedTransaction2.default(e);n.listOfAuths.push(t)}}):this.listOfAuths.push({}),t.links&&t.links.forEach(function(e){"next"===e.rel&&"GET"===e.method&&(n._nextPageToken=e.href.split("&next_page_token=")[1])})}return e.prototype.retrieveNextPage=function(e,t){if(!this._nextPageToken||!(0,_moment2.default)(Number.parseInt(this._nextPageToken,10)).isValid()||(0,_moment2.default)(Number.parseInt(this._nextPageToken,10))<this.startTime)return void t(_sdkErrors.sdk.noNextPageToRetrieve,null);var i=null;e&&Number.isInteger(e)&&e>0?i=e:this.pageSize&&(i=this.pageSize),this._retrieveAuthorizedTranasactionFunction&&"function"==typeof this._retrieveAuthorizedTranasactionFunction?this._retrieveAuthorizedTranasactionFunction(this.startTime,this.endTime,i,this._nextPageToken,t):t(_sdkErrors.sdk.retrieveNextPageNotEnabled,null)},e}();exports.default=RetrieveAuthorizedTransactionResponse;

},{"../common/sdkErrors":18,"./AuthorizedTransaction":71,"moment":278}],83:[function(require,module,exports){
"use strict";function _interopRequireWildcard(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}exports.__esModule=!0;var _manticore=require("manticore"),_manticore2=_interopRequireDefault(_manticore),_retailPaymentDevice=require("retail-payment-device"),_retailPageTracker=require("retail-page-tracker"),_events=require("events"),_l10n=require("../common/l10n"),_l10n2=_interopRequireDefault(_l10n),_messageHelper=require("../flows/messageHelper"),messageHelper=_interopRequireWildcard(_messageHelper),_transactionEvent=require("../transaction/transactionEvent"),_transactionEvent2=_interopRequireDefault(_transactionEvent),_sdkErrors=require("../common/sdkErrors"),SignatureReceiver=function(e){function t(r,n){_classCallCheck(this,t);var i=_possibleConstructorReturn(this,e.call(this));return i.context=r,i.cb=n,i}return _inherits(t,e),t.prototype.continueWithSignature=function(e){this.context.emit(_transactionEvent2.default.didCompleteSignature,null),this.cb(null,e)},t.prototype.acquireSignature=function(){var e=this,t=messageHelper.formattedInvoiceTotal(this.context.invoice),r={amount:t.amount,cardIssuer:this.context.card.cardIssuer&&this.context.card.cardIssuer!==_retailPaymentDevice.CardIssuer.Unknown?_retailPaymentDevice.CardDataUtil.getCardIssuerDisplayName(this.context.card.cardIssuer):"",lastFour:this.context.card.lastFourDigits};this.sigHandle=_manticore2.default.collectSignature({done:(0,_l10n2.default)("Done"),footer:(0,_l10n2.default)("Sig.Footer"),title:(0,_l10n2.default)("Sig.Title",r),signHere:(0,_l10n2.default)("Sig.Here"),cancel:this.context.allowInProgressPaymentCancel?(0,_l10n2.default)("Cancel"):null},function(t,r,n){return t?void e.cb(t):n?void(e.alert=_manticore2.default.alert({title:(0,_l10n2.default)("Tx.Alert.Cancel.Title"),message:(0,_l10n2.default)("Tx.Alert.Cancel.Msg"),buttons:[(0,_l10n2.default)("Yes")],cancel:(0,_l10n2.default)("No")},function(t,r){t.dismiss(),0===r&&e.cancel()})):(_retailPageTracker.Tracker.publishPageView(null,_retailPageTracker.pages.signature.withAction(_retailPageTracker.action.acquire)),void e.continueWithSignature(r))})},t.prototype.cancel=function(){_retailPageTracker.Tracker.publishPageView(null,_retailPageTracker.pages.signature.withAction(_retailPageTracker.action.cancel));var e=_sdkErrors.transaction.customerCancel;this.context.emit(_transactionEvent2.default.didCompleteSignature,e),this.cb(e),this.dismiss()},t.prototype.dismiss=function(){this.emit(t.event.cancelled),this.sigHandle&&this.sigHandle.dismiss()},t}(_events.EventEmitter);exports.default=SignatureReceiver,SignatureReceiver.event={cancelled:"cancelled"};

},{"../common/l10n":13,"../common/sdkErrors":18,"../flows/messageHelper":28,"../transaction/transactionEvent":89,"events":200,"manticore":213,"retail-page-tracker":324,"retail-payment-device":356}],84:[function(require,module,exports){
"use strict";function _classCallCheck(r,t){if(!(r instanceof t))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var TransactionBeginOptions=function(){function r(){_classCallCheck(this,r)}return r.prototype.toJSON=function(){return{showPromptInCardReader:this.showPromptInCardReader,showPromptInApp:this.showPromptInApp,preferredFormFactors:this.preferredFormFactors,tippingOnReaderEnabled:this.tippingOnReaderEnabled,amountBasedTipping:this.amountBasedTipping}},r.prototype.toString=function(){return"showPromptInCardReader: '"+this.showPromptInCardReader+"', showPromptInApp: '"+this.showPromptInApp+"'    preferredFormFactors: "+this.preferredFormFactors+", tippingOnReaderEnabled: "+this.tippingOnReaderEnabled+",    amountBasedTipping: "+this.amountBasedTipping},r}();exports.default=TransactionBeginOptions;

},{}],85:[function(require,module,exports){
"use strict";function _interopRequireWildcard(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _toConsumableArray(e){if(Array.isArray(e)){for(var t=0,r=Array(e.length);t<e.length;t++)r[t]=e[t];return r}return Array.from(e)}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}exports.__esModule=!0;var _createClass=function(){function e(e,t){for(var r=0;r<t.length;r++){var i=t[r];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,r,i){return r&&e(t.prototype,r),i&&e(t,i),t}}(),_manticore=require("manticore"),_manticore2=_interopRequireDefault(_manticore),_manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_paypalInvoicing=require("paypal-invoicing"),_retailPageTracker=require("retail-page-tracker"),_retailPaymentDevice=require("retail-payment-device"),_manticoreUtil=require("manticore-util"),_events=require("events"),_async=require("async"),_async2=_interopRequireDefault(_async),_l10n=require("../common/l10n"),_l10n2=_interopRequireDefault(_l10n),_sdkErrors=require("../common/sdkErrors"),_TransactionStateManager=require("./TransactionStateManager"),_TransactionStateManager2=_interopRequireDefault(_TransactionStateManager),_transactionStates=require("./transactionStates"),_PaymentErrorHandler=require("../flows/PaymentErrorHandler"),_PaymentErrorHandler2=_interopRequireDefault(_PaymentErrorHandler),_Merchant=require("../common/Merchant"),_Merchant2=_interopRequireDefault(_Merchant),_messageHelper=require("../flows/messageHelper"),messageHelper=_interopRequireWildcard(_messageHelper),_DeviceController=require("./DeviceController"),_DeviceController2=_interopRequireDefault(_DeviceController),_DeviceSelector=require("../paymentDevice/DeviceSelector"),_DeviceSelector2=_interopRequireDefault(_DeviceSelector),_transactionEvent=require("./transactionEvent"),_transactionEvent2=_interopRequireDefault(_transactionEvent),_PaymentType=require("./PaymentType"),_PaymentType2=_interopRequireDefault(_PaymentType),_OfflineDeclineFlow=require("../flows/OfflineDeclineFlow"),_OfflineDeclineFlow2=_interopRequireDefault(_OfflineDeclineFlow),_OfferReceiptFlow=require("../flows/OfferReceiptFlow"),_OfferReceiptFlow2=_interopRequireDefault(_OfferReceiptFlow),_TransactionBeginOptions=require("./TransactionBeginOptions"),_TransactionBeginOptions2=_interopRequireDefault(_TransactionBeginOptions),_retailSDKUtil=require("../common/retailSDKUtil"),Log=(0,_manticoreLog2.default)("transactionContext"),ErrorAction=_PaymentErrorHandler2.default.action,TransactionContext=function(e){function t(r,i){_classCallCheck(this,t);var n=_possibleConstructorReturn(this,e.call(this));return n.invoice=r,n.merchant=i,n.id="tx-"+(0,_retailSDKUtil.getRandomId)(),n._state=new _TransactionStateManager2.default(n),n.deviceController=new _DeviceController2.default(n),r.status===_paypalInvoicing.InvoiceEnums.Status.PAID||r.status===_paypalInvoicing.InvoiceEnums.Status.MARKED_AS_PAID||r.status===_paypalInvoicing.InvoiceEnums.Status.PARTIALLY_REFUNDED?n.type=_retailPaymentDevice.TransactionType.Refund:n.type=_retailPaymentDevice.TransactionType.Sale,Log.debug(function(){return"CREATE transaction with Id "+n.id+" and invoice total: "+(n.invoice?n.invoice.total:"")}),n._deferredBeginHandler=function(){return _DeviceSelector2.default.selectedDevice?n._deferredActivateOptions?(Log.info("Deferred transaction begin was invoked for '"+_DeviceSelector2.default.selectedDevice.id+"'"),void n.beginPaymentWithOptions(n._deferredActivateOptions)):void Log.debug(function(){return n.id+" Deferred transaction begin invoked but options are missing"}):void Log.error(n.id+" Deferred transaction begin invoked without a connected device")},n}return _inherits(t,e),t.prototype.toString=function(){return JSON.stringify(this.toJSON())},t.prototype.toJSON=function(){return{id:this.id,type:this.type,currency:this.invoice?this.invoice.currency:"",total:this.invoice?this.invoice.total:"",state:this._state.toJSON()}},t.prototype.processErrorHandlerResponse=function(e,t,r,i){var n=this;if(Log.info("("+this.id+") Response from error handler for handling the error-"+e.domain+":"+e.code+", ff: "+(0,_manticoreUtil.getPropertyName)(_retailPaymentDevice.FormFactor,r)+" was '"+(0,_manticoreUtil.getPropertyName)(ErrorAction,t)+"'"),t){if(t===ErrorAction.offlineDecline){var a=e.code===_retailPaymentDevice.deviceError.cancelReadCardData.code||e.code===_retailPaymentDevice.deviceError.smartCardNotInSlot.code?_sdkErrors.transaction.customerCancel:_retailPaymentDevice.deviceError.contactIssuer;return void new _OfflineDeclineFlow2.default(a,this,function(e){n.end(e.error,e.tx)}).startFlow()}if(t===ErrorAction.abort){var o=e||_sdkErrors.transaction.genericCancel;return e.code===_retailPaymentDevice.deviceError.paymentCancelled.code&&(o=_sdkErrors.transaction.customerCancel),void this.end(o)}this._state.setPaymentState(_transactionStates.PaymentState.retry);var c=[],s=[];t===ErrorAction.retry?s=[_retailPaymentDevice.FormFactor.Chip,_retailPaymentDevice.FormFactor.MagneticCardSwipe,_retailPaymentDevice.FormFactor.EmvCertifiedContactless]:t===ErrorAction.retryWithInsertOrSwipe?(c=[_retailPaymentDevice.FormFactor.EmvCertifiedContactless],s=[_retailPaymentDevice.FormFactor.Chip,_retailPaymentDevice.FormFactor.MagneticCardSwipe]):t===ErrorAction.retryWithSwipe?(c=[_retailPaymentDevice.FormFactor.Chip,_retailPaymentDevice.FormFactor.EmvCertifiedContactless],s=[_retailPaymentDevice.FormFactor.MagneticCardSwipe]):t===ErrorAction.retryWithInsert&&(c=[_retailPaymentDevice.FormFactor.MagneticCardSwipe,_retailPaymentDevice.FormFactor.EmvCertifiedContactless],s=[_retailPaymentDevice.FormFactor.Chip]);var l=!(i&&!(0,_retailSDKUtil.isNullOrUndefined)(i.showPrompt))||i.showPrompt,d=!(i&&!(0,_retailSDKUtil.isNullOrUndefined)(i.syncInvoiceTotal))||i.syncInvoiceTotal;this.deviceController.selectedDevice.deactivateFormFactors(c,function(){n.deviceController.activate({showPrompt:l,syncInvoiceTotal:d,formFactors:s})})}},t.prototype.getSetOfActiveFormFactors=function(){return this._state.getSetOfActiveFormFactors()},t.prototype.getPaymentState=function(){return this._state.getPaymentState()},t.prototype.getTippingState=function(){return this._state.getTippingState()},t.prototype.setPaymentState=function(e){this._state.setPaymentState(e)},t.prototype.clearOnReaderTip=function(){var e=this;Log.debug(function(){return"Clearing tip. Will reset acquired on-reader tip amount of "+e.invoice.gratuityAmount+" to 0"}),this._state.setTippingState(_transactionStates.TippingState.notStarted),this.invoice.gratuityAmount=0},t.prototype.beginPaymentWithOptions=function(e){var t=this;return Log.debug(function(){return"Begin payment on "+t.id+" with options "+JSON.stringify(e)+". PaymentState: "+(0,_manticoreUtil.getPropertyName)(_transactionStates.PaymentState,t.getPaymentState())}),this._state.getPaymentState()!==_transactionStates.PaymentState.idle&&this._state.getPaymentState()!==_transactionStates.PaymentState.complete?(Log.warn("["+this.id+"] Payment currently in progress. Will not begin payment. Payment State: "+(0,_manticoreUtil.getPropertyName)(_transactionStates.PaymentState,this.getPaymentState())),this):(_retailPageTracker.Tracker.publishPageView(null,_retailPageTracker.pages.transaction),this.type!==_retailPaymentDevice.TransactionType.Sale?(this.end(_sdkErrors.transaction.invoiceStatusMismatch),this):_DeviceSelector2.default.selectedDevice&&_DeviceSelector2.default.selectedDevice.isConnected()?(_retailPaymentDevice.PaymentDevice.Events.removeListener(_retailPaymentDevice.PaymentDevice.Event.selected,this._deferredBeginHandler),!e.tippingOnReaderEnabled&&this.isInvoiceAmountInvalidForCardReaderTransaction()&&(e.showPromptInCardReader=!1,e.showPromptInApp=!1,e.preferredFormFactors=[_retailPaymentDevice.FormFactor.MagneticCardSwipe,_retailPaymentDevice.FormFactor.Chip]),this.paymentOptions=e,e.showPromptInCardReader&&e.tippingOnReaderEnabled?this._beginTippingOnReader(e.amountBasedTipping,!0,function(){Log.debug(function(){return"After tipping, validated invoices... Proceeding to activate "+_retailPaymentDevice.PaymentDevice.devices.length+" connected devices for "+t.id}),t.isInvoiceAmountInvalidForCardReaderTransaction()&&(e.showPromptInCardReader=!1,e.showPromptInApp=!1,e.preferredFormFactors=[_retailPaymentDevice.FormFactor.MagneticCardSwipe,_retailPaymentDevice.FormFactor.Chip]),t._activateReaders({showPromptInCardReader:e.showPromptInCardReader,showPromptInApp:e.showPromptInApp,formFactors:e.preferredFormFactors,syncInvoiceTotal:!e.showPromptInCardReader})}):(Log.debug(function(){return"Validated invoices... Proceeding to activate "+_retailPaymentDevice.PaymentDevice.devices.length+" connected devices for "+t.id}),this._activateReaders({showPromptInCardReader:e.showPromptInCardReader,showPromptInApp:e.showPromptInApp,formFactors:e.preferredFormFactors})),this):(_DeviceSelector2.default.selectedDevice?Log.info(this.id+" Cannot continue with tx.begin as "+_DeviceSelector2.default.selectedDevice.id+" is not connected and ready"):Log.info(this.id+" Cannot continue with tx.begin as no device is selected"),this._deferredActivateOptions=e,_retailPaymentDevice.PaymentDevice.Events.removeListener(_retailPaymentDevice.PaymentDevice.Event.selected,this._deferredBeginHandler),_retailPaymentDevice.PaymentDevice.Events.once(_retailPaymentDevice.PaymentDevice.Event.selected,this._deferredBeginHandler),this))},t.prototype._beginTippingOnReader=function(e){var t=this,r=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],i=arguments[2],n=this._state.getTippingState(),a=this._state.getPaymentState(),o=!0;if(Log.debug(function(){return t.id+" Trying to begin tipping. TippingState: "+(0,_manticoreUtil.getPropertyName)(_transactionStates.TippingState,n)+", PaymentState: "+(0,_manticoreUtil.getPropertyName)(_transactionStates.PaymentState,a)}),n===_transactionStates.TippingState.inProgress||a===_transactionStates.PaymentState.inProgress?(Log.debug("Will not start tipping flow as either tipping or payment is in progress"),o=!1):n===_transactionStates.TippingState.complete&&(a!==_transactionStates.PaymentState.retry||this.card.isMSRFallbackAllowed?(Log.debug("Will not start tipping flow as tipping flow is complete"),o=!1):(Log.debug("Tipping was complete, but will restart tipping as payment is being retried"),o=!0)),!o)return Log.debug(function(){return t.id+" Bypassing tipping as it cannot be performed in current transaction state"}),void(i&&i());var c=this.deviceController.selectedDevice;if(!c||!c.doesHaveCapability(_retailPaymentDevice.deviceCapabilityType.display))return c?Log.debug(function(){return t.id+" Bypassing tipping since '"+c.id+"' does not have display capability"}):Log.debug(function(){return t.id+" Bypassing tipping since there is no active reader"}),void(i&&i());Log.info("Beginning tipping on on reader. Amount based="+e+". "+this._state),this._state.setTippingState(_transactionStates.TippingState.inProgress);var s=require("./../flows/ReaderTippingFlow").default;this.tippingFlow=new s(c,e,this.invoice,function(){Log.debug("Tipping on Reader flow completed"),t._state.setTippingState(_transactionStates.TippingState.complete),t.emit(_transactionEvent2.default.readerTippingCompleted,t.invoice.gratuityAmount),i&&i()});var l=function(){t._stopInvoiceSync(),t.tippingFlow.start().then(function(){Log.debug("Tipping on Reader flow done")},function(e){t._state.setTippingState(_transactionStates.TippingState.complete),Log.error("Tipping flow failed "+e),i&&i()})};r?this.deactivateFormFactors([].concat(_toConsumableArray(this.getSetOfActiveFormFactors())),l):l()},t.prototype.begin=function(){var e=new _TransactionBeginOptions2.default;return e.showPromptInCardReader=!0,e.showPromptInApp=!0,e.preferredFormFactors=[_retailPaymentDevice.FormFactor.Chip,_retailPaymentDevice.FormFactor.MagneticCardSwipe,_retailPaymentDevice.FormFactor.EmvCertifiedContactless],this.beginPaymentWithOptions(e)},t.prototype.beginRefund=function(e,t){var r=this;if(this.type!==_retailPaymentDevice.TransactionType.Refund)return this.end(_sdkErrors.transaction.invoiceStatusMismatch),this;if(_retailPageTracker.Tracker.publishPageView(null,_retailPageTracker.pages.refund),this._reset(),this.refundAmount=(0,_paypalInvoicing.$$)(t),e)if(this.deviceController.selectedDevice){this.emit(_transactionEvent2.default.refundAmountEntered);var i={title:(0,_l10n2.default)("Tx.Alert.Refund.Title"),message:(0,_l10n2.default)("Tx.Alert.Refund.Msg"),buttons:[(0,_l10n2.default)("Tx.Alert.Refund.Buttons.WithCard"),(0,_l10n2.default)("Tx.Alert.Refund.Buttons.WithoutCard")],cancel:(0,_l10n2.default)("Cancel")};this.alert=_manticore2.default.alert(i,function(e,t){r.alert&&r.alert.dismiss(),2!==t&&(0===t?r.deviceController.selectedDevice?r._activateReaders({showPromptInCardReader:!0,showPromptInApp:!0}):r.continueWithCard(null):1===t&&r.continueWithCard(null))})}else this.continueWithCard(null);return this},t.prototype._validateInvoice=function(e){var t=this;_Merchant2.default.active.cardSettings||e();var r=void 0,i=void 0,n=void 0,a=void 0;if(this.isInvoiceAmountBelowAllowedMinimum())a=_sdkErrors.transaction.amountTooLow,r=_retailPaymentDevice.PaymentDevice.Message.AmountTooLow,n=messageHelper.formattedAmount(this.invoice.currency,_Merchant2.default.active.cardSettings.minimum),i={title:(0,_l10n2.default)("Tx.Alert.AmountTooLow.Title"),message:(0,_l10n2.default)("Tx.Alert.AmountTooLow.Msg",n),cancel:(0,_l10n2.default)("Ok")},Log.debug(function(){return"Amount too Low for "+t.id});else{if(!this.isInvoiceAmountAboveAllowedMaximum())return void e();a=_sdkErrors.transaction.amountTooHigh,r=_retailPaymentDevice.PaymentDevice.Message.AmountTooHigh,n=messageHelper.formattedAmount(this.invoice.currency,_Merchant2.default.active.cardSettings.maximum),i={title:(0,_l10n2.default)("Tx.Alert.AmountTooHigh.Title"),message:(0,_l10n2.default)("Tx.Alert.AmountTooHigh.Msg",n),cancel:(0,_l10n2.default)("Ok")},Log.debug(function(){return"Amount too High for "+t.id})}_async2.default.each(this.deviceController.devices,function(e,t){return e.display({id:r,substitutions:n},t)},function(){t.alert=_manticore2.default.alert(i,function(){e(a)})})},t.prototype.isInvoiceAmountBelowAllowedMinimum=function(){return!!_Merchant2.default.active.cardSettings&&(_Merchant2.default.active.cardSettings.minimum&&this.invoice.total.lessThan(_Merchant2.default.active.cardSettings.minimum))},t.prototype.isInvoiceAmountAboveAllowedMaximum=function(){return!!_Merchant2.default.active.cardSettings&&(_Merchant2.default.active.cardSettings.maximum&&this.invoice.total.greaterThan(_Merchant2.default.active.cardSettings.maximum))},t.prototype.isInvoiceAmountInvalidForCardReaderTransaction=function(){return this.isInvoiceAmountBelowAllowedMinimum()||this.isInvoiceAmountAboveAllowedMaximum()},t.prototype._activateReaders=function(e){var t=this,r=e.showPromptInCardReader,i=e.showPromptInApp,n=e.formFactors,a=this.deviceController.selectedDevice,o=a?a.id:"<no reader>";if(Log.debug(function(){return"Activating "+o+" for '"+(0,_manticoreUtil.getPropertyName)(_retailPaymentDevice.FormFactor,n)+"'"}),n&&0!==n.length||(n=[_retailPaymentDevice.FormFactor.Chip,_retailPaymentDevice.FormFactor.EmvCertifiedContactless,_retailPaymentDevice.FormFactor.MagneticCardSwipe]),this._state.getPaymentState()===_transactionStates.PaymentState.inProgress||this._state.getTippingState()===_transactionStates.TippingState.inProgress)return void Log.debug(function(){return"Will not activate reader as "+t.id+" is not ready. "+t._state});for(var c=this._state.getSetOfActiveFormFactors(),s=[],l=n,d=Array.isArray(l),u=0,l=d?l:l[Symbol.iterator]();;){var p;if("break"===function(){if(d){if(u>=l.length)return"break";p=l[u++]}else{if(u=l.next(),u.done)return"break";p=u.value}var e=p;c.has(e)?Log.debug(function(){return"Will NOT activate '"+(0,_manticoreUtil.getPropertyName)(_retailPaymentDevice.FormFactor,e)+"' on "+o+" for "+t.id+" as it was previously activated"}):(Log.debug(function(){return"Activate "+o+".'"+(0,_manticoreUtil.getPropertyName)(_retailPaymentDevice.FormFactor,e)+"' for "+t.id}),s.push(e))}())break}if(0===s.length)return Log.info("("+this.id+") Will not activate as all provided form factors '"+(0,_manticoreUtil.getPropertyName)(_retailPaymentDevice.FormFactor,n)+"' are already active"),void this.deviceController.updateDeviceDisplayIfError(a);this._reset();var m=this.deviceController.activate({showPrompt:r,formFactors:s,syncInvoiceTotal:e.syncInvoiceTotal});if(m.error)return void(m.error===_sdkErrors.transaction.noFunctionalDevices?Log.warn("Device activate failed as there were no functional devices for "+this.id):this.end(m.error));var f=m.device;Log.info("("+this.id+") Activated "+f.id+" device for invoice total "+this.invoice.currency+" "+this.invoice.total+" for form factors: ["+(0,_manticoreUtil.getPropertyName)(_retailPaymentDevice.FormFactor,m.formFactors)+"]"),i&&this.promptForPaymentInstrument(f)},t.prototype.isRefund=function(){return this.type===_retailPaymentDevice.TransactionType.Refund||this.type===_retailPaymentDevice.TransactionType.PartialRefund},t.prototype.promptForPaymentInstrument=function(e,t,r){var i=this,n=t||this._state.getSetOfActiveFormFactors(),a=void 0,o=void 0;if(e&&e.model&&e.model===_retailPaymentDevice.ReaderModel.Swiper?n.has(_retailPaymentDevice.FormFactor.MagneticCardSwipe)&&(a="Ready",o="img_reader_status_connected_160"):n.has(_retailPaymentDevice.FormFactor.EmvCertifiedContactless)&&n.has(_retailPaymentDevice.FormFactor.MagneticCardSwipe)&&n.has(_retailPaymentDevice.FormFactor.Chip)?(a="Ready",o="img_emv_insert_tap_swipe"):n.has(_retailPaymentDevice.FormFactor.MagneticCardSwipe)&&n.has(_retailPaymentDevice.FormFactor.Chip)?(a="ReadyForInsertOrSwipeOnly",o="img_emv_insert_swipe"):n.has(_retailPaymentDevice.FormFactor.MagneticCardSwipe)?(a="ReadyForSwipeOnly",o="img_emv_swipe"):n.has(_retailPaymentDevice.FormFactor.Chip)&&(a="ReadyForInsertOnly",o="img_emv_insert"),a){var c=(0,_l10n2.default)("Tx.Alert."+a+".Title"),s=(0,_l10n2.default)("Tx.Alert."+a+".Msg");r&&r.title&&(c=r.title),r&&r.message&&(s=r.message),this.alert=_manticore2.default.alert({title:c,message:s,cancel:(0,_l10n2.default)("Cancel"),imageIcon:o},function(){if(i.alert.dismiss(),i.card&&i.card.emvData&&i.invoice.payPalId){return void new _OfferReceiptFlow2.default(r&&r.error,i,function(e){i.end(e.error,e.tx)}).startFlow()}i.end(_sdkErrors.sdk.userCancelled)})}},t.prototype.deactivateFormFactors=function(e,t){var r=this;if(Log.debug(function(){return"Deactivate form factors '"+(0,_manticoreUtil.getPropertyName)(_retailPaymentDevice.FormFactor,e)+"' for "+r.id}),this._deferredActivateOptions&&this._deferredActivateOptions.preferredFormFactors)for(var i=e,n=Array.isArray(i),a=0,i=n?i:i[Symbol.iterator]();;){var o;if(n){if(a>=i.length)break;o=i[a++]}else{if(a=i.next(),a.done)break;o=a.value}var c=o,s=this._deferredActivateOptions.preferredFormFactors.indexOf(c);-1!==s&&this._deferredActivateOptions.preferredFormFactors.splice(s,1)}this.deviceController.deactivateFormFactors(e,function(r){Log.debug(function(){return"Deactivated "+(0,_manticoreUtil.getPropertyName)(_retailPaymentDevice.FormFactor,e)+" on "+(r?r.id:"<no device>")}),t&&t(null)})},t.prototype.end=function(e,r){var i=this,n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];Log.debug(function(){return"END "+i.id}),this._signatureCollector=null,this.tokenExpirationHandler=null,this.deviceController.startPollingForBattery(),e?Log.error("Ending transaction due to error "+JSON.stringify(e)+" "+this.id):Log.info("("+this.id+") Ending transaction and removing all listeners from "+this.deviceController.activeDevices.size+" devices"),this.alert&&this.alert.dismiss(),this.isRefund()?_retailPageTracker.Tracker.publishPageView(e,e?_retailPageTracker.pages.refundDecline:_retailPageTracker.pages.refundComplete):_retailPageTracker.Tracker.publishPageView(e,e?_retailPageTracker.pages.paymentDecline:_retailPageTracker.pages.paymentComplete),this._reset(),t.active===this&&(Log.debug(function(){return i.id+" is no longer active. TransactionContext.active = null"}),delete t.active),Log.debug(function(){return i.id+" ENDED... Will invoke cancel"}),this._cancel(function(){i._state.setPaymentState(_transactionStates.PaymentState.complete),i._state.setPaymentFlowStartedState(!1),i.completedHandler&&n?(Log.debug(function(){return"Invoking completed handler '"+i.completedHandler.id+"' for "+i.id}),i.completedHandler(e,r)):Log.debug(function(){return"Cannot invoke completion handler as it was not set/removed from "+i.id}),i.dropHandlers(),i.deviceController.removeListeners()})},t.prototype._reset=function(){var e=this;Log.debug(function(){return"Resetting state of "+e.id}),this.retryCountInvalidChip=0,this.pinPresent=!1,this.pinRequired=!1,this.allowFallBackSwipe=!1,this.card&&(this.card.isMSRFallbackAllowed=!1)},t.prototype.on=function(t,r){var i=this;r.id="tx-listener-"+(0,_retailSDKUtil.getRandomId)(),e.prototype.on.call(this,t,r),Log.debug(function(){return"Listener: "+i.id+" Added '"+r.id+"' for '"+t+"' "+i.id+". ListenerCount: "+i.listenerCount(t)})},t.prototype.emit=function(t){var r,i=this;Log.debug(function(){return"Listener: "+i.id+" Emitting '"+t+"' event to "+i.listenerCount(t)+" listener(s). '"+i.id+"'"});for(var n=this.listeners(t),a=Array.isArray(n),o=0,n=a?n:n[Symbol.iterator]();;){var c;if("break"===function(){if(a){if(o>=n.length)return"break";c=n[o++]}else{if(o=n.next(),o.done)return"break";c=o.value}var e=c;Log.debug(function(){return"   "+i.id+" Emitting to '"+e.id+"' listener"})}())break}for(var s=arguments.length,l=Array(s>1?s-1:0),d=1;d<s;d++)l[d-1]=arguments[d];(r=e.prototype.emit).call.apply(r,[this,t].concat(l))},t.prototype.removeListener=function(t,r){var i=this;e.prototype.removeListener.call(this,t,r),Log.debug(function(){return"Listener: "+i.id+" Removed listener '"+r.id+"' for '"+t+"'. '"+i.id+"'.  Remaining listeners: "+i.listenerCount(t)})},t.prototype.clear=function(e){var t=this;if(this._state.getPaymentState()===_transactionStates.PaymentState.inProgress)return Log.debug(function(){return"Cannot CLEAR transaction "+t.id+" as card was presented"}),void e(_sdkErrors.transaction.cannotClearActiveTransaction);Log.debug(function(){return"CLEAR "+t.id+". Will drop all listeners"}),this._cancel(function(){t.dropHandlers(),e()})},t.prototype.isPaymentInRetryOrProgress=function(){return this._state.getPaymentState()===_transactionStates.PaymentState.retry||this._state.getPaymentState()===_transactionStates.PaymentState.inProgress},t.prototype.requestPaymentCancellation=function(){throw new Error("NOT IMPLEMENTED")},t.prototype._cancel=function(e){var t=this,r=this.deviceController.selectedDevice;Log.debug(function(){return"CANCEL "+t.id+" for active device '"+(r?r.id:"<no device>")+"'. Will drop all listeners"}),this._state.getTippingState()===_transactionStates.TippingState.inProgress&&(Log.debug("The tip flow was cancelled"),this.tippingFlow&&this.tippingFlow.abort()),this._deferredActivateOptions=null,_retailPaymentDevice.PaymentDevice.Events.removeListener(_retailPaymentDevice.PaymentDevice.Event.selected,this._deferredBeginHandler),this.deviceController.abort(function(r){Log.debug(function(){return"Aborted tx on "+(r?r.id:"<no device>")+" for "+t.id}),t.deviceController.startPollingForBattery();var i=[_retailPaymentDevice.FormFactor.Chip,_retailPaymentDevice.FormFactor.EmvCertifiedContactless,_retailPaymentDevice.FormFactor.MagneticCardSwipe];t.deactivateFormFactors(i,function(){Log.debug(function(){return t.id+" was successfully cancelled. Active ff: '"+(0,_manticoreUtil.getPropertyName)(_retailPaymentDevice.FormFactor,[].concat(_toConsumableArray(t.getSetOfActiveFormFactors())))+"'"}),e()})})},t.prototype.dropHandlers=function(){var e=this;Log.debug(function(){return"Dropping all response handlers for "+e.id}),this.completedHandler=null,this.cardPresentedHandler=null,this.timeoutHandler=null,this.cardInsertedHandler=null,this.receiptHandler=null;for(var t in _transactionEvent2.default)if({}.hasOwnProperty.call(_transactionEvent2.default,t))for(var r=_transactionEvent2.default[t],i=this.listeners(r),n=Array.isArray(i),a=0,i=n?i:i[Symbol.iterator]();;){var o;if(n){if(a>=i.length)break;o=i[a++]}else{if(a=i.next(),a.done)break;o=a.value}var c=o;this.removeListener(r,c)}},t.prototype.setPaymentFlowStarted=function(){this._state.setPaymentFlowStartedState(!0)},t.prototype.getPaymentFlowStarted=function(){return this._state.getPaymentFlowStartState()},t.prototype.setPaymentInProgress=function(){var e=this;this._state.setPaymentState(_transactionStates.PaymentState.inProgress),Log.debug(function(){return"TransactionContext.active="+e.id}),t.active=this},t.prototype.discardPresentedCard=function(e){if(e){if(this._state.getPaymentState()===_transactionStates.PaymentState.inProgress){var t=_sdkErrors.transaction.cannotDiscardCard.withDevMessage("Cannot discard when payment is in progress");throw Log.error("discardPresentedCard failed with error: "+t),t}if(e.formFactor===_retailPaymentDevice.FormFactor.Chip||e.formFactor===_retailPaymentDevice.FormFactor.EmvCertifiedContactless){var r=_sdkErrors.transaction.cannotDiscardCard.withDevMessage("Can only discard non EMV payments after card data read");throw Log.error("discardPresentedCard failed with error: "+r),r}Log.debug(function(){return"Will discard presented card "+e}),this.card=null}},t.prototype.continueWithCard=function(e){var t=this;if(this._state.getPaymentFlowStartState())return void Log.warn(this.id+" Will not process continueWithCard as payment is in progress");if(Log.debug(function(){return"Continue with CARD invoked for "+t.id}),e){if(Log.info(this.id+" Card (type: "+e.constructor.name+") with formFactor '"+(0,_manticoreUtil.getPropertyName)(_retailPaymentDevice.FormFactor,e.formFactor)+"' was presented "+e),e.isContactlessMSD||e.formFactor!==_retailPaymentDevice.FormFactor.Chip&&e.formFactor!==_retailPaymentDevice.FormFactor.EmvCertifiedContactless?e.formFactor===_retailPaymentDevice.FormFactor.MagneticCardSwipe?_retailPageTracker.Tracker.publishPageView(null,_retailPageTracker.pages.swipe):e.formFactor===_retailPaymentDevice.FormFactor.ManualCardEntry&&_retailPageTracker.Tracker.publishPageView(null,_retailPageTracker.pages.keyIn):_retailPageTracker.Tracker.publishPageView(null,_retailPageTracker.pages.emv),e.formFactor===_retailPaymentDevice.FormFactor.ManualCardEntry){this.card=e;var r=null;if(this.isInvoiceAmountBelowAllowedMinimum()?r=_sdkErrors.transaction.amountTooLow:this.isInvoiceAmountAboveAllowedMaximum()&&(r=_sdkErrors.transaction.amountTooHigh),r){var i=new _PaymentErrorHandler2.default(this);i.handle(r,e.formFactor,this.deviceController.selectedDevice,function(){return t.processErrorHandlerResponse(r,null,e.formFactor)})}else this._continuePayment(_PaymentType2.default.keyIn);return}}else Log.debug(function(){return"No card presented "+t.id});var n=function(){t.setPaymentInProgress(),t.deviceController.removeListeners()},a=function(r,i,n,a){Log[r?"error":"info"]("Transaction flow complete handler was invoked with action: '"+i+"' and error "+r+" "+t.id),i&&i!==ErrorAction.abort?(t._state.setPaymentFlowStartedState(!1),t.processErrorHandlerResponse(r,i,e.formFactor,a)):t.end(r,n)};if(this.type===_retailPaymentDevice.TransactionType.Sale){this.card=e,e instanceof _retailPaymentDevice.MagneticCard&&(Log.debug(function(){return"Magnetic card detected. isMSRFallbackAllowed: "+e.isMSRFallbackAllowed}),e.isSignatureRequired=e.isMSRFallbackAllowed||this.invoice.total.greaterThanOrEqualTo(_Merchant2.default.active.signatureRequiredAbove)),this.paymentType=_PaymentType2.default.card;var o=require("./../flows/CreditCardFlow").default;this.paymentOptions.tippingOnReaderEnabled&&e&&e.formFactor===_retailPaymentDevice.FormFactor.MagneticCardSwipe&&(this._state.getPaymentState()===_transactionStates.PaymentState.retry||this._state.getTippingState()===_transactionStates.TippingState.notStarted)?this._beginTippingOnReader(this.paymentOptions.amountBasedTipping,!1,function(){Log.debug(function(){return"After tipping, started the credit card flow for "+t.id}),n(),t.flow=new o(e,t,a)}):(Log.debug(function(){return t.id+" Will not start tipping flow tippingOnReaderEnabled="+t.paymentOptions.tippingOnReaderEnabled+", state="+t._state}),n(),this.flow=new o(e,this,a))}else{n(),this.card=e;var c=require("./../flows/refundFlow").default;this.flow=new c(e,this,a)}},t.prototype.startInvoiceSync=function(){this.deviceController.syncInvoice()},t.prototype.syncInvoiceOnce=function(){this.deviceController.syncOnce()},t.prototype._stopInvoiceSync=function(){this.deviceController.stopInvoiceSync()},t.prototype.continueWithCash=function(){var e=this;Log.debug(function(){return"Continue with CASH invoked for "+e.id}),this._continuePayment(_PaymentType2.default.cash)},t.prototype.continueWithCheck=function(){var e=this;Log.debug(function(){return"Continue with CHECK invoked for "+e.id}),this._continuePayment(_PaymentType2.default.check)},t.prototype._continuePayment=function(e){var t=this;if(this._state.getPaymentFlowStartState())return void Log.warn(this.id+" Will not process _continuePayment as payment is in progress");this.setPaymentInProgress(),this.deactivateFormFactors([_retailPaymentDevice.FormFactor.EmvCertifiedContactless],function(){t.deviceController.removeListeners(),t.paymentType=e,t._stopInvoiceSync();var r=require("./../flows/PaymentFlow").default;t.flow=new r(t,function(e,r,i){return t.end(e,i)})})},t.prototype.setSignatureCollector=function(e){this._signatureCollector=e},t.prototype.setTokenExpiredHandler=function(e){var t=this;if(!e)return void(this.timeoutHandler=null);var r=function r(i){Log.debug(function(){return"Invoking token expiration handler "+r.id+" for "+t.id}),e(i)};r.id="timeout-"+(0,_retailSDKUtil.getRandomId)(),this.timeoutHandler=r,Log.debug(function(){return"Set token expiration handler to "+r.id+" for "+t.id})},t.prototype.setCardInsertedHandler=function(e){var t=this;if(!e)return void(this.cardInsertedHandler=null);var r=function r(i){Log.debug(function(){return"Invoking card inserted handler "+r.id+" for "+t.id});var n=new _retailPaymentDevice.CardInsertedHandler(function(){Log.debug("Card Inserted Handler : about to read card data."),t.deviceController.cardInsertDetected(),t.deviceController.stopPollingForBattery(),t._stopInvoiceSync(),i.continueWithCardDataRead()});n.dismissSDKUIPrompt=function(){t.alert&&t.alert.dismiss()},e(n)};r.id="cardInserted-"+(0,_retailSDKUtil.getRandomId)(),this.cardInsertedHandler=r,Log.debug(function(){return"Set card inserted handler to "+r.id+" for "+t.id})},t.prototype.setCardPresentedHandler=function(e){var t=this;if(!e)return void(this.cardPresentedHandler=null);var r=function r(i){Log.debug(function(){return"Invoking card PRESENTED handler "+r.id+" for "+t.id}),e(i)};r.id="cardPresented-"+(0,_retailSDKUtil.getRandomId)(),this.cardPresentedHandler=r,Log.debug(function(){return"Set card presented handler to "+r.id+" for "+t.id})},t.prototype.setCompletedHandler=function(e){var t=this;if(!e)return void(this.completedHandler=null);var r=function r(i,n){Log.debug(function(){return"Invoking COMPLETION handler "+r.id+" for "+t.id}),e(i,n)}
;r.id="completed-"+(0,_retailSDKUtil.getRandomId)(),this.completedHandler=r,Log.debug(function(){return"Set completed handler to "+r.id+" for "+t.id})},t.prototype.setAdditionalReceiptOptions=function(e,t){var r=this;if(!t)return void(this.receiptHandler=null);var i=function e(i,n,a){Log.debug(function(){return"Invoking additional receipt options handler "+e.id+" for "+r.id+" with index: "+i+", name: "+n}),t(i,n,a)};i.id="receiptOptions-"+(0,_retailSDKUtil.getRandomId)(),this.receiptHandler=i,this.additionalReceiptOptions=e,Log.debug(function(){return"Set additional receipt options handler to "+i.id+" for "+r.id})},_createClass(t,[{key:"totalDisplayFooter",get:function(){return this._totalDisplayFooter},set:function(e){this._totalDisplayFooter=e,this.emit(_transactionEvent2.default.invoiceDisplayFooterUpdated)}},{key:"allowInProgressPaymentCancel",get:function(){return this.card&&this.card.formFactor!==_retailPaymentDevice.FormFactor.MagneticCardSwipe&&!this.card.isContactlessMSD}}]),t}(_events.EventEmitter);exports.default=TransactionContext;

},{"../common/Merchant":3,"../common/l10n":13,"../common/retailSDKUtil":17,"../common/sdkErrors":18,"../flows/OfferReceiptFlow":23,"../flows/OfflineDeclineFlow":24,"../flows/PaymentErrorHandler":25,"../flows/messageHelper":28,"../paymentDevice/DeviceSelector":62,"./../flows/CreditCardFlow":22,"./../flows/PaymentFlow":26,"./../flows/ReaderTippingFlow":27,"./../flows/refundFlow":29,"./DeviceController":74,"./PaymentType":78,"./TransactionBeginOptions":84,"./TransactionStateManager":87,"./transactionEvent":89,"./transactionStates":90,"async":92,"events":200,"manticore":213,"manticore-log":208,"manticore-util":212,"paypal-invoicing":279,"retail-page-tracker":324,"retail-payment-device":356}],86:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _interopRequireWildcard(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _manticoreUtil=require("manticore-util"),util=_interopRequireWildcard(_manticoreUtil),_Payer=require("./Payer"),_Payer2=_interopRequireDefault(_Payer),_ReceiptDestination=require("./ReceiptDestination"),TransactionRecord=function(){function e(t){_classCallCheck(this,e),util.assignSome(this,t,["correlationId","transactionNumber","invoiceId","transactionHandle","responseCode","authCode","errorCode"]),t.payerInfo&&(this.payer=new _Payer2.default(t.payerInfo)),t.id&&(this.transactionNumber=t.id),t.txnHandle&&!this.transactionHandle&&(this.transactionHandle=t.txnHandle),t.invoiceId&&(this.invoiceId=t.invoiceId),this.receiptDestination=new _ReceiptDestination.ReceiptDestination}return e.prototype.updateFromFinalize=function(e){this.transactionNumber||(this.transactionNumber=e.transactionNumber),e.correlationId&&this.correlationId?this.correlationId=this.correlationId+","+e.correlationId:e.correlationId&&(this.correlationId=e.correlationId),e.payerInfo&&(this.payer=new _Payer2.default(e.payerInfo))},e.prototype.toString=function(){return"invoiceId: "+this.invoiceId+", transactionNumber: "+this.transactionNumber+", transactionHandle: "+this.transactionHandle+", responseCode: "+this.responseCode+", correlationId: "+this.correlationId},e}();exports.default=TransactionRecord,TransactionRecord.Error={ContactlessNotAcceptable:600075,IncorrectOnlinePin:6000164};

},{"./Payer":77,"./ReceiptDestination":80,"manticore-util":212}],87:[function(require,module,exports){
"use strict";function _interopRequireDefault(t){return t&&t.__esModule?t:{default:t}}function _toConsumableArray(t){if(Array.isArray(t)){for(var e=0,a=Array(t.length);e<t.length;e++)a[e]=t[e];return a}return Array.from(t)}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_manticoreUtil=require("manticore-util"),_retailPaymentDevice=require("retail-payment-device"),_transactionStates=require("./transactionStates"),_DeviceSelector=require("../paymentDevice/DeviceSelector"),_DeviceSelector2=_interopRequireDefault(_DeviceSelector),Log=(0,_manticoreLog2.default)("transaction.State"),TransactionStateManager=function(){function t(e){_classCallCheck(this,t),this._paymentState=_transactionStates.PaymentState.idle,this._tippingState=_transactionStates.TippingState.notStarted,this._sActiveFormFactors=new Set,this._context=e}return t.prototype.toString=function(){return JSON.stringify(this.toJSON())},t.prototype.toJSON=function(){return{paymentState:(0,_manticoreUtil.getPropertyName)(_transactionStates.PaymentState,this.getPaymentState()),tippingState:(0,_manticoreUtil.getPropertyName)(_transactionStates.TippingState,this.getTippingState()),connectedDevices:_retailPaymentDevice.PaymentDevice.devices.length,selectedDevice:_DeviceSelector2.default.selectedDevice?_DeviceSelector2.default.selectedDevice.id:"<none>",activeFormFactors:(0,_manticoreUtil.getPropertyName)(_retailPaymentDevice.FormFactor,[].concat(_toConsumableArray(this.getSetOfActiveFormFactors())))}},t.prototype.getPaymentState=function(){return this._paymentState},t.prototype.setPaymentState=function(t){var e=this;this._paymentState=t,Log.debug(function(){return"Setting PAYMENT state of "+e._context.id+" to "+(0,_manticoreUtil.getPropertyName)(_transactionStates.PaymentState,t)})},t.prototype.getTippingState=function(){return this._tippingState},t.prototype.setTippingState=function(t){var e=this;this._tippingState=t,Log.debug(function(){return"Setting TIPPING state of "+e._context.id+" to "+(0,_manticoreUtil.getPropertyName)(_transactionStates.TippingState,t)})},t.prototype.setPaymentFlowStartedState=function(t){var e=this;this._paymentFlowStarted=t,Log.debug(function(){return"Setting PaymentFlowStarted state of "+e._context.id+" to "+t})},t.prototype.getPaymentFlowStartState=function(){return this._paymentFlowStarted},t.prototype.getSetOfActiveFormFactors=function(){return _DeviceSelector2.default.selectedDevice?_DeviceSelector2.default.selectedDevice.getSetOfActiveFormFactors():new Set},t.prototype.isFormFactorActive=function(t){return!!_DeviceSelector2.default.selectedDevice&&_DeviceSelector2.default.selectedDevice.isFormFactorActive(t)},t}();exports.default=TransactionStateManager;

},{"../paymentDevice/DeviceSelector":62,"./transactionStates":90,"manticore-log":208,"manticore-util":212,"retail-payment-device":356}],88:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var _Payer=require("./Payer"),_Payer2=_interopRequireDefault(_Payer),_TransactionRecord=require("./TransactionRecord"),_TransactionRecord2=_interopRequireDefault(_TransactionRecord),_TransactionBeginOptions=require("./TransactionBeginOptions"),_TransactionBeginOptions2=_interopRequireDefault(_TransactionBeginOptions),_ReceiptDestination=require("./ReceiptDestination");module.exports={Payer:_Payer2.default,ReceiptDestinationType:_ReceiptDestination.ReceiptDestinationType,ReceiptDestination:_ReceiptDestination.ReceiptDestination,TransactionRecord:_TransactionRecord2.default,TransactionBeginOptions:_TransactionBeginOptions2.default};

},{"./Payer":77,"./ReceiptDestination":80,"./TransactionBeginOptions":84,"./TransactionRecord":86}],89:[function(require,module,exports){
"use strict";exports.__esModule=!0;var TransactionEvent={didCompleteSignature:"didCompleteSignature",willPresentSignature:"willPresentSignature",invoiceDisplayFooterUpdated:"invoiceDisplayFooterUpdated",formFactorAdded:"formFactorAdded",contactlessReaderDeactivated:"contactlessReaderDeactivated",readerTippingCompleted:"readerTippingCompleted",refundAmountEntered:"refundAmountEntered"};exports.default=TransactionEvent;

},{}],90:[function(require,module,exports){
"use strict";exports.__esModule=!0;var PaymentState=exports.PaymentState={idle:0,inProgress:1,retry:2,complete:3},TippingState=exports.TippingState={notStarted:0,inProgress:1,complete:2};

},{}],91:[function(require,module,exports){
(function (global){
"use strict";function compare(e,t){if(e===t)return 0;for(var r=e.length,n=t.length,i=0,a=Math.min(r,n);i<a;++i)if(e[i]!==t[i]){r=e[i],n=t[i];break}return r<n?-1:n<r?1:0}function isBuffer(e){return global.Buffer&&"function"==typeof global.Buffer.isBuffer?global.Buffer.isBuffer(e):!(null==e||!e._isBuffer)}function pToString(e){return Object.prototype.toString.call(e)}function isView(e){return!isBuffer(e)&&("function"==typeof global.ArrayBuffer&&("function"==typeof ArrayBuffer.isView?ArrayBuffer.isView(e):!!e&&(e instanceof DataView||!!(e.buffer&&e.buffer instanceof ArrayBuffer))))}function getName(e){if(util.isFunction(e)){if(functionsHaveNames)return e.name;var t=e.toString(),r=t.match(regex);return r&&r[1]}}function truncate(e,t){return"string"==typeof e?e.length<t?e:e.slice(0,t):e}function inspect(e){if(functionsHaveNames||!util.isFunction(e))return util.inspect(e);var t=getName(e);return"[Function"+(t?": "+t:"")+"]"}function getMessage(e){return truncate(inspect(e.actual),128)+" "+e.operator+" "+truncate(inspect(e.expected),128)}function fail(e,t,r,n,i){throw new assert.AssertionError({message:r,actual:e,expected:t,operator:n,stackStartFunction:i})}function ok(e,t){e||fail(e,!0,t,"==",assert.ok)}function _deepEqual(e,t,r,n){if(e===t)return!0;if(isBuffer(e)&&isBuffer(t))return 0===compare(e,t);if(util.isDate(e)&&util.isDate(t))return e.getTime()===t.getTime();if(util.isRegExp(e)&&util.isRegExp(t))return e.source===t.source&&e.global===t.global&&e.multiline===t.multiline&&e.lastIndex===t.lastIndex&&e.ignoreCase===t.ignoreCase;if(null!==e&&"object"==typeof e||null!==t&&"object"==typeof t){if(isView(e)&&isView(t)&&pToString(e)===pToString(t)&&!(e instanceof Float32Array||e instanceof Float64Array))return 0===compare(new Uint8Array(e.buffer),new Uint8Array(t.buffer));if(isBuffer(e)!==isBuffer(t))return!1;n=n||{actual:[],expected:[]};var i=n.actual.indexOf(e);return-1!==i&&i===n.expected.indexOf(t)||(n.actual.push(e),n.expected.push(t),objEquiv(e,t,r,n))}return r?e===t:e==t}function isArguments(e){return"[object Arguments]"==Object.prototype.toString.call(e)}function objEquiv(e,t,r,n){if(null===e||void 0===e||null===t||void 0===t)return!1;if(util.isPrimitive(e)||util.isPrimitive(t))return e===t;if(r&&Object.getPrototypeOf(e)!==Object.getPrototypeOf(t))return!1;var i=isArguments(e),a=isArguments(t);if(i&&!a||!i&&a)return!1;if(i)return e=pSlice.call(e),t=pSlice.call(t),_deepEqual(e,t,r);var s,u,o=objectKeys(e),f=objectKeys(t);if(o.length!==f.length)return!1;for(o.sort(),f.sort(),u=o.length-1;u>=0;u--)if(o[u]!==f[u])return!1;for(u=o.length-1;u>=0;u--)if(s=o[u],!_deepEqual(e[s],t[s],r,n))return!1;return!0}function notDeepStrictEqual(e,t,r){_deepEqual(e,t,!0)&&fail(e,t,r,"notDeepStrictEqual",notDeepStrictEqual)}function expectedException(e,t){if(!e||!t)return!1;if("[object RegExp]"==Object.prototype.toString.call(t))return t.test(e);try{if(e instanceof t)return!0}catch(e){}return!Error.isPrototypeOf(t)&&!0===t.call({},e)}function _tryBlock(e){var t;try{e()}catch(e){t=e}return t}function _throws(e,t,r,n){var i;if("function"!=typeof t)throw new TypeError('"block" argument must be a function');"string"==typeof r&&(n=r,r=null),i=_tryBlock(t),n=(r&&r.name?" ("+r.name+").":".")+(n?" "+n:"."),e&&!i&&fail(i,r,"Missing expected exception"+n);var a="string"==typeof n,s=!e&&util.isError(i),u=!e&&i&&!r;if((s&&a&&expectedException(i,r)||u)&&fail(i,r,"Got unwanted exception"+n),e&&i&&r&&!expectedException(i,r)||!e&&i)throw i}var util=require("util/"),hasOwn=Object.prototype.hasOwnProperty,pSlice=Array.prototype.slice,functionsHaveNames=function(){return"foo"===function(){}.name}(),assert=module.exports=ok,regex=/\s*function\s+([^\(\s]*)\s*/;assert.AssertionError=function(e){this.name="AssertionError",this.actual=e.actual,this.expected=e.expected,this.operator=e.operator,e.message?(this.message=e.message,this.generatedMessage=!1):(this.message=getMessage(this),this.generatedMessage=!0);var t=e.stackStartFunction||fail;if(Error.captureStackTrace)Error.captureStackTrace(this,t);else{var r=new Error;if(r.stack){var n=r.stack,i=getName(t),a=n.indexOf("\n"+i);if(a>=0){var s=n.indexOf("\n",a+1);n=n.substring(s+1)}this.stack=n}}},util.inherits(assert.AssertionError,Error),assert.fail=fail,assert.ok=ok,assert.equal=function(e,t,r){e!=t&&fail(e,t,r,"==",assert.equal)},assert.notEqual=function(e,t,r){e==t&&fail(e,t,r,"!=",assert.notEqual)},assert.deepEqual=function(e,t,r){_deepEqual(e,t,!1)||fail(e,t,r,"deepEqual",assert.deepEqual)},assert.deepStrictEqual=function(e,t,r){_deepEqual(e,t,!0)||fail(e,t,r,"deepStrictEqual",assert.deepStrictEqual)},assert.notDeepEqual=function(e,t,r){_deepEqual(e,t,!1)&&fail(e,t,r,"notDeepEqual",assert.notDeepEqual)},assert.notDeepStrictEqual=notDeepStrictEqual,assert.strictEqual=function(e,t,r){e!==t&&fail(e,t,r,"===",assert.strictEqual)},assert.notStrictEqual=function(e,t,r){e===t&&fail(e,t,r,"!==",assert.notStrictEqual)},assert.throws=function(e,t,r){_throws(!0,e,t,r)},assert.doesNotThrow=function(e,t,r){_throws(!1,e,t,r)},assert.ifError=function(e){if(e)throw e};var objectKeys=Object.keys||function(e){var t=[];for(var r in e)hasOwn.call(e,r)&&t.push(r);return t};

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"util/":370}],92:[function(require,module,exports){
(function (process,global){
!function(){function n(){}function t(n){return n}function e(n){return!!n}function r(n){return!n}function u(n){return function(){if(null===n)throw new Error("Callback was already called.");n.apply(this,arguments),n=null}}function i(n){return function(){null!==n&&(n.apply(this,arguments),n=null)}}function o(n){return M(n)||"number"==typeof n.length&&n.length>=0&&n.length%1==0}function c(n,t){for(var e=-1,r=n.length;++e<r;)t(n[e],e,n)}function f(n,t){for(var e=-1,r=n.length,u=Array(r);++e<r;)u[e]=t(n[e],e,n);return u}function a(n){return f(Array(n),function(n,t){return t})}function l(n,t,e){return c(n,function(n,r,u){e=t(e,n,r,u)}),e}function s(n,t){c(W(n),function(e){t(n[e],e)})}function p(n,t){for(var e=0;e<n.length;e++)if(n[e]===t)return e;return-1}function h(n){var t,e,r=-1;return o(n)?(t=n.length,function(){return r++,r<t?r:null}):(e=W(n),t=e.length,function(){return r++,r<t?e[r]:null})}function y(n,t){return t=null==t?n.length-1:+t,function(){for(var e=Math.max(arguments.length-t,0),r=Array(e),u=0;u<e;u++)r[u]=arguments[u+t];switch(t){case 0:return n.call(this,r);case 1:return n.call(this,arguments[0],r)}}}function m(n){return function(t,e,r){return n(t,r)}}function d(t){return function(e,r,o){o=i(o||n),e=e||[];var c=h(e);if(t<=0)return o(null);var f=!1,a=0,l=!1;!function n(){if(f&&a<=0)return o(null);for(;a<t&&!l;){var i=c();if(null===i)return f=!0,void(a<=0&&o(null));a+=1,r(e[i],i,u(function(t){a-=1,t?(o(t),l=!0):n()}))}}()}}function v(n){return function(t,e,r){return n(P.eachOf,t,e,r)}}function g(n){return function(t,e,r,u){return n(d(e),t,r,u)}}function k(n){return function(t,e,r){return n(P.eachOfSeries,t,e,r)}}function b(t,e,r,u){u=i(u||n),e=e||[];var c=o(e)?[]:{};t(e,function(n,t,e){r(n,function(n,r){c[t]=r,e(n)})},function(n){u(n,c)})}function w(n,t,e,r){var u=[];n(t,function(n,t,r){e(n,function(e){e&&u.push({index:t,value:n}),r()})},function(){r(f(u.sort(function(n,t){return n.index-t.index}),function(n){return n.value}))})}function O(n,t,e,r){w(n,t,function(n,t){e(n,function(n){t(!n)})},r)}function S(n,t,e){return function(r,u,i,o){function c(){o&&o(e(!1,void 0))}function f(n,r,u){if(!o)return u();i(n,function(r){o&&t(r)&&(o(e(!0,n)),o=i=!1),u()})}arguments.length>3?n(r,u,f,c):(o=i,i=u,n(r,f,c))}}function E(n,t){return t}function L(t,e,r){r=r||n;var u=o(e)?[]:{};t(e,function(n,t,e){n(y(function(n,r){r.length<=1&&(r=r[0]),u[t]=r,e(n)}))},function(n){r(n,u)})}function j(n,t,e,r){var u=[];n(t,function(n,t,r){e(n,function(n,t){u=u.concat(t||[]),r(n)})},function(n){r(n,u)})}function I(t,e,r){function i(t,e,r,u){if(null!=u&&"function"!=typeof u)throw new Error("task callback must be a function");if(t.started=!0,M(e)||(e=[e]),0===e.length&&t.idle())return P.setImmediate(function(){t.drain()});c(e,function(e){var i={data:e,callback:u||n};r?t.tasks.unshift(i):t.tasks.push(i),t.tasks.length===t.concurrency&&t.saturated()}),P.setImmediate(t.process)}function o(n,t){return function(){a-=1;var e=!1,r=arguments;c(t,function(n){c(l,function(t,r){t!==n||e||(l.splice(r,1),e=!0)}),n.callback.apply(n,r)}),n.tasks.length+a===0&&n.drain(),n.process()}}if(null==e)e=1;else if(0===e)throw new Error("Concurrency must not be zero");var a=0,l=[],s={tasks:[],concurrency:e,payload:r,saturated:n,empty:n,drain:n,started:!1,paused:!1,push:function(n,t){i(s,n,!1,t)},kill:function(){s.drain=n,s.tasks=[]},unshift:function(n,t){i(s,n,!0,t)},process:function(){for(;!s.paused&&a<s.concurrency&&s.tasks.length;){var n=s.payload?s.tasks.splice(0,s.payload):s.tasks.splice(0,s.tasks.length),e=f(n,function(n){return n.data});0===s.tasks.length&&s.empty(),a+=1,l.push(n[0]);var r=u(o(s,n));t(e,r)}},length:function(){return s.tasks.length},running:function(){return a},workersList:function(){return l},idle:function(){return s.tasks.length+a===0},pause:function(){s.paused=!0},resume:function(){if(!1!==s.paused){s.paused=!1;for(var n=Math.min(s.concurrency,s.tasks.length),t=1;t<=n;t++)P.setImmediate(s.process)}}};return s}function x(n){return y(function(t,e){t.apply(null,e.concat([y(function(t,e){"object"==typeof console&&(t?console.error&&console.error(t):console[n]&&c(e,function(t){console[n](t)}))})]))})}function A(n){return function(t,e,r){n(a(t),e,r)}}function T(n){return y(function(t,e){var r=y(function(e){var r=this,u=e.pop();return n(t,function(n,t,u){n.apply(r,e.concat([u]))},u)});return e.length?r.apply(this,e):r})}function z(n){return y(function(t){var e=t.pop();t.push(function(){var n=arguments;r?P.setImmediate(function(){e.apply(null,n)}):e.apply(null,n)});var r=!0;n.apply(this,t),r=!1})}var q,P={},C="object"==typeof self&&self.self===self&&self||"object"==typeof global&&global.global===global&&global||this;null!=C&&(q=C.async),P.noConflict=function(){return C.async=q,P};var H=Object.prototype.toString,M=Array.isArray||function(n){return"[object Array]"===H.call(n)},U=function(n){var t=typeof n;return"function"===t||"object"===t&&!!n},W=Object.keys||function(n){var t=[];for(var e in n)n.hasOwnProperty(e)&&t.push(e);return t},B="function"==typeof setImmediate&&setImmediate,D=B?function(n){B(n)}:function(n){setTimeout(n,0)};"object"==typeof process&&"function"==typeof process.nextTick?P.nextTick=process.nextTick:P.nextTick=D,P.setImmediate=B?D:P.nextTick,P.forEach=P.each=function(n,t,e){return P.eachOf(n,m(t),e)},P.forEachSeries=P.eachSeries=function(n,t,e){return P.eachOfSeries(n,m(t),e)},P.forEachLimit=P.eachLimit=function(n,t,e,r){return d(t)(n,m(e),r)},P.forEachOf=P.eachOf=function(t,e,r){function o(n){a--,n?r(n):null===c&&a<=0&&r(null)}r=i(r||n),t=t||[];for(var c,f=h(t),a=0;null!=(c=f());)a+=1,e(t[c],c,u(o));0===a&&r(null)},P.forEachOfSeries=P.eachOfSeries=function(t,e,r){function o(){var n=!0;if(null===f)return r(null);e(t[f],f,u(function(t){if(t)r(t);else{if(null===(f=c()))return r(null);n?P.setImmediate(o):o()}})),n=!1}r=i(r||n),t=t||[];var c=h(t),f=c();o()},P.forEachOfLimit=P.eachOfLimit=function(n,t,e,r){d(t)(n,e,r)},P.map=v(b),P.mapSeries=k(b),P.mapLimit=g(b),P.inject=P.foldl=P.reduce=function(n,t,e,r){P.eachOfSeries(n,function(n,r,u){e(t,n,function(n,e){t=e,u(n)})},function(n){r(n,t)})},P.foldr=P.reduceRight=function(n,e,r,u){var i=f(n,t).reverse();P.reduce(i,e,r,u)},P.transform=function(n,t,e,r){3===arguments.length&&(r=e,e=t,t=M(n)?[]:{}),P.eachOf(n,function(n,r,u){e(t,n,r,u)},function(n){r(n,t)})},P.select=P.filter=v(w),P.selectLimit=P.filterLimit=g(w),P.selectSeries=P.filterSeries=k(w),P.reject=v(O),P.rejectLimit=g(O),P.rejectSeries=k(O),P.any=P.some=S(P.eachOf,e,t),P.someLimit=S(P.eachOfLimit,e,t),P.all=P.every=S(P.eachOf,r,r),P.everyLimit=S(P.eachOfLimit,r,r),P.detect=S(P.eachOf,t,E),P.detectSeries=S(P.eachOfSeries,t,E),P.detectLimit=S(P.eachOfLimit,t,E),P.sortBy=function(n,t,e){function r(n,t){var e=n.criteria,r=t.criteria;return e<r?-1:e>r?1:0}P.map(n,function(n,e){t(n,function(t,r){t?e(t):e(null,{value:n,criteria:r})})},function(n,t){if(n)return e(n);e(null,f(t.sort(r),function(n){return n.value}))})},P.auto=function(t,e,r){function u(n){g.unshift(n)}function o(n){var t=p(g,n);t>=0&&g.splice(t,1)}function f(){h--,c(g.slice(0),function(n){n()})}"function"==typeof arguments[1]&&(r=e,e=null),r=i(r||n);var a=W(t),h=a.length;if(!h)return r(null);e||(e=h);var m={},d=0,v=!1,g=[];u(function(){h||r(null,m)}),c(a,function(n){function i(){return d<e&&l(k,function(n,t){return n&&m.hasOwnProperty(t)},!0)&&!m.hasOwnProperty(n)}function c(){i()&&(d++,o(c),h[h.length-1](g,m))}if(!v){for(var a,h=M(t[n])?t[n]:[t[n]],g=y(function(t,e){if(d--,e.length<=1&&(e=e[0]),t){var u={};s(m,function(n,t){u[t]=n}),u[n]=e,v=!0,r(t,u)}else m[n]=e,P.setImmediate(f)}),k=h.slice(0,h.length-1),b=k.length;b--;){if(!(a=t[k[b]]))throw new Error("Has nonexistent dependency in "+k.join(", "));if(M(a)&&p(a,n)>=0)throw new Error("Has cyclic dependencies")}i()?(d++,h[h.length-1](g,m)):u(c)}})},P.retry=function(n,t,e){function r(n,t){for(;c.times;){var e=!(c.times-=1);o.push(function(n,e){return function(r){n(function(n,t){r(!n||e,{err:n,result:t})},t)}}(c.task,e)),!e&&c.interval>0&&o.push(function(n){return function(t){setTimeout(function(){t(null)},n)}}(c.interval))}P.series(o,function(t,e){e=e[e.length-1],(n||c.callback)(e.err,e.result)})}var u=5,i=0,o=[],c={times:u,interval:i},f=arguments.length;if(f<1||f>3)throw new Error("Invalid arguments - must be either (task), (task, callback), (times, task) or (times, task, callback)");return f<=2&&"function"==typeof n&&(e=t,t=n),"function"!=typeof n&&function(n,t){if("number"==typeof t)n.times=parseInt(t,10)||u;else{if("object"!=typeof t)throw new Error("Unsupported argument type for 'times': "+typeof t);n.times=parseInt(t.times,10)||u,n.interval=parseInt(t.interval,10)||i}}(c,n),c.callback=e,c.task=t,c.callback?r():r},P.waterfall=function(t,e){function r(n){return y(function(t,u){if(t)e.apply(null,[t].concat(u));else{var i=n.next();i?u.push(r(i)):u.push(e),z(n).apply(null,u)}})}if(e=i(e||n),!M(t)){var u=new Error("First argument to waterfall must be an array of functions");return e(u)}if(!t.length)return e();r(P.iterator(t))()},P.parallel=function(n,t){L(P.eachOf,n,t)},P.parallelLimit=function(n,t,e){L(d(t),n,e)},P.series=function(n,t){L(P.eachOfSeries,n,t)},P.iterator=function(n){function t(e){function r(){return n.length&&n[e].apply(null,arguments),r.next()}return r.next=function(){return e<n.length-1?t(e+1):null},r}return t(0)},P.apply=y(function(n,t){return y(function(e){return n.apply(null,t.concat(e))})}),P.concat=v(j),P.concatSeries=k(j),P.whilst=function(t,e,r){if(r=r||n,t()){var u=y(function(n,i){n?r(n):t.apply(this,i)?e(u):r.apply(null,[null].concat(i))});e(u)}else r(null)},P.doWhilst=function(n,t,e){var r=0;return P.whilst(function(){return++r<=1||t.apply(this,arguments)},n,e)},P.until=function(n,t,e){return P.whilst(function(){return!n.apply(this,arguments)},t,e)},P.doUntil=function(n,t,e){return P.doWhilst(n,function(){return!t.apply(this,arguments)},e)},P.during=function(t,e,r){r=r||n;var u=y(function(n,e){n?r(n):(e.push(i),t.apply(this,e))}),i=function(n,t){n?r(n):t?e(u):r(null)};t(i)},P.doDuring=function(n,t,e){var r=0;P.during(function(n){r++<1?n(null,!0):t.apply(this,arguments)},n,e)},P.queue=function(n,t){return I(function(t,e){n(t[0],e)},t,1)},P.priorityQueue=function(t,e){function r(n,t){return n.priority-t.priority}function u(n,t,e){for(var r=-1,u=n.length-1;r<u;){var i=r+(u-r+1>>>1);e(t,n[i])>=0?r=i:u=i-1}return r}function i(t,e,i,o){if(null!=o&&"function"!=typeof o)throw new Error("task callback must be a function");if(t.started=!0,M(e)||(e=[e]),0===e.length)return P.setImmediate(function(){t.drain()});c(e,function(e){var c={data:e,priority:i,callback:"function"==typeof o?o:n};t.tasks.splice(u(t.tasks,c,r)+1,0,c),t.tasks.length===t.concurrency&&t.saturated(),P.setImmediate(t.process)})}var o=P.queue(t,e);return o.push=function(n,t,e){i(o,n,t,e)},delete o.unshift,o},P.cargo=function(n,t){return I(n,1,t)},P.log=x("log"),P.dir=x("dir"),P.memoize=function(n,e){var r={},u={},i=Object.prototype.hasOwnProperty;e=e||t;var o=y(function(t){var o=t.pop(),c=e.apply(null,t);i.call(r,c)?P.setImmediate(function(){o.apply(null,r[c])}):i.call(u,c)?u[c].push(o):(u[c]=[o],n.apply(null,t.concat([y(function(n){r[c]=n;var t=u[c];delete u[c];for(var e=0,i=t.length;e<i;e++)t[e].apply(null,n)})])))});return o.memo=r,o.unmemoized=n,o},P.unmemoize=function(n){return function(){return(n.unmemoized||n).apply(null,arguments)}},P.times=A(P.map),P.timesSeries=A(P.mapSeries),P.timesLimit=function(n,t,e,r){return P.mapLimit(a(n),t,e,r)},P.seq=function(){var t=arguments;return y(function(e){var r=this,u=e[e.length-1];"function"==typeof u?e.pop():u=n,P.reduce(t,e,function(n,t,e){t.apply(r,n.concat([y(function(n,t){e(n,t)})]))},function(n,t){u.apply(r,[n].concat(t))})})},P.compose=function(){return P.seq.apply(null,Array.prototype.reverse.call(arguments))},P.applyEach=T(P.eachOf),P.applyEachSeries=T(P.eachOfSeries),P.forever=function(t,e){function r(n){if(n)return i(n);o(r)}var i=u(e||n),o=z(t);r()},P.ensureAsync=z,P.constant=y(function(n){var t=[null].concat(n);return function(n){return n.apply(this,t)}}),P.wrapSync=P.asyncify=function(n){return y(function(t){var e,r=t.pop();try{e=n.apply(this,t)}catch(n){return r(n)}U(e)&&"function"==typeof e.then?e.then(function(n){r(null,n)}).catch(function(n){r(n.message?n:new Error(n))}):r(null,e)})},"object"==typeof module&&module.exports?module.exports=P:"function"==typeof define&&define.amd?define([],function(){return P}):C.async=P}();

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"_process":320}],93:[function(require,module,exports){
(function (process,global){
!function(t){"use strict";function r(t,r,e,o){var i=Object.create((r||n).prototype),a=new h(o||[]);return i._invoke=f(t,e,a),i}function e(t,r,e){try{return{type:"normal",arg:t.call(r,e)}}catch(t){return{type:"throw",arg:t}}}function n(){}function o(){}function i(){}function a(t){["next","throw","return"].forEach(function(r){t[r]=function(t){return this._invoke(r,t)}})}function c(t){this.arg=t}function u(t){function r(r,e){var n=t[r](e),a=n.value;return a instanceof c?Promise.resolve(a.arg).then(o,i):Promise.resolve(a).then(function(t){return n.value=t,n})}function e(t,e){function o(){return r(t,e)}return n=n?n.then(o,o):new Promise(function(t){t(o())})}"object"==typeof process&&process.domain&&(r=process.domain.bind(r));var n,o=r.bind(t,"next"),i=r.bind(t,"throw");r.bind(t,"return");this._invoke=e}function f(t,r,n){var o=L;return function(i,a){if(o===b)throw new Error("Generator is already running");if(o===E){if("throw"===i)throw a;return y()}for(;;){var c=n.delegate;if(c){if("return"===i||"throw"===i&&c.iterator[i]===v){n.delegate=null;var u=c.iterator.return;if(u){var f=e(u,c.iterator,a);if("throw"===f.type){i="throw",a=f.arg;continue}}if("return"===i)continue}var f=e(c.iterator[i],c.iterator,a);if("throw"===f.type){n.delegate=null,i="throw",a=f.arg;continue}i="next",a=v;var l=f.arg;if(!l.done)return o=x,l;n[c.resultName]=l.value,n.next=c.nextLoc,n.delegate=null}if("next"===i)n._sent=a,n.sent=o===x?a:v;else if("throw"===i){if(o===L)throw o=E,a;n.dispatchException(a)&&(i="next",a=v)}else"return"===i&&n.abrupt("return",a);o=b;var f=e(t,r,n);if("normal"===f.type){o=n.done?E:x;var l={value:f.arg,done:n.done};if(f.arg!==j)return l;n.delegate&&"next"===i&&(a=v)}else"throw"===f.type&&(o=E,i="throw",a=f.arg)}}}function l(t){var r={tryLoc:t[0]};1 in t&&(r.catchLoc=t[1]),2 in t&&(r.finallyLoc=t[2],r.afterLoc=t[3]),this.tryEntries.push(r)}function s(t){var r=t.completion||{};r.type="normal",delete r.arg,t.completion=r}function h(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(l,this),this.reset(!0)}function p(t){if(t){var r=t[g];if(r)return r.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var e=-1,n=function r(){for(;++e<t.length;)if(d.call(t,e))return r.value=t[e],r.done=!1,r;return r.value=v,r.done=!0,r};return n.next=n}}return{next:y}}function y(){return{value:v,done:!0}}var v,d=Object.prototype.hasOwnProperty,g="function"==typeof Symbol&&Symbol.iterator||"@@iterator",w="object"==typeof module,m=t.regeneratorRuntime;if(m)return void(w&&(module.exports=m));m=t.regeneratorRuntime=w?module.exports:{},m.wrap=r;var L="suspendedStart",x="suspendedYield",b="executing",E="completed",j={},k=i.prototype=n.prototype;o.prototype=k.constructor=i,i.constructor=o,o.displayName="GeneratorFunction",m.isGeneratorFunction=function(t){var r="function"==typeof t&&t.constructor;return!!r&&(r===o||"GeneratorFunction"===(r.displayName||r.name))},m.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,i):t.__proto__=i,t.prototype=Object.create(k),t},m.awrap=function(t){return new c(t)},a(u.prototype),m.async=function(t,e,n,o){var i=new u(r(t,e,n,o));return m.isGeneratorFunction(e)?i:i.next().then(function(t){return t.done?t.value:i.next()})},a(k),k[g]=function(){return this},k.toString=function(){return"[object Generator]"},m.keys=function(t){var r=[];for(var e in t)r.push(e);return r.reverse(),function e(){for(;r.length;){var n=r.pop();if(n in t)return e.value=n,e.done=!1,e}return e.done=!0,e}},m.values=p,h.prototype={constructor:h,reset:function(t){if(this.prev=0,this.next=0,this.sent=v,this.done=!1,this.delegate=null,this.tryEntries.forEach(s),!t)for(var r in this)"t"===r.charAt(0)&&d.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=v)},stop:function(){this.done=!0;var t=this.tryEntries[0],r=t.completion;if("throw"===r.type)throw r.arg;return this.rval},dispatchException:function(t){function r(r,n){return i.type="throw",i.arg=t,e.next=r,!!n}if(this.done)throw t;for(var e=this,n=this.tryEntries.length-1;n>=0;--n){var o=this.tryEntries[n],i=o.completion;if("root"===o.tryLoc)return r("end");if(o.tryLoc<=this.prev){var a=d.call(o,"catchLoc"),c=d.call(o,"finallyLoc");if(a&&c){if(this.prev<o.catchLoc)return r(o.catchLoc,!0);if(this.prev<o.finallyLoc)return r(o.finallyLoc)}else if(a){if(this.prev<o.catchLoc)return r(o.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return r(o.finallyLoc)}}}},abrupt:function(t,r){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.tryLoc<=this.prev&&d.call(n,"finallyLoc")&&this.prev<n.finallyLoc){var o=n;break}}o&&("break"===t||"continue"===t)&&o.tryLoc<=r&&r<=o.finallyLoc&&(o=null);var i=o?o.completion:{};return i.type=t,i.arg=r,o?this.next=o.finallyLoc:this.complete(i),j},complete:function(t,r){if("throw"===t.type)throw t.arg;"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=t.arg,this.next="end"):"normal"===t.type&&r&&(this.next=r)},finish:function(t){for(var r=this.tryEntries.length-1;r>=0;--r){var e=this.tryEntries[r];if(e.finallyLoc===t)return this.complete(e.completion,e.afterLoc),s(e),j}},catch:function(t){for(var r=this.tryEntries.length-1;r>=0;--r){var e=this.tryEntries[r];if(e.tryLoc===t){var n=e.completion;if("throw"===n.type){var o=n.arg;s(e)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(t,r,e){return this.delegate={iterator:p(t),resultName:r,nextLoc:e},j}}}("object"==typeof global?global:"object"==typeof window?window:"object"==typeof self?self:this);

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"_process":320}],94:[function(require,module,exports){
"use strict";function placeHoldersCount(o){var r=o.length;if(r%4>0)throw new Error("Invalid string. Length must be a multiple of 4");return"="===o[r-2]?2:"="===o[r-1]?1:0}function byteLength(o){return 3*o.length/4-placeHoldersCount(o)}function toByteArray(o){var r,e,t,u,n,p=o.length;u=placeHoldersCount(o),n=new Arr(3*p/4-u),e=u>0?p-4:p;var a=0;for(r=0;r<e;r+=4)t=revLookup[o.charCodeAt(r)]<<18|revLookup[o.charCodeAt(r+1)]<<12|revLookup[o.charCodeAt(r+2)]<<6|revLookup[o.charCodeAt(r+3)],n[a++]=t>>16&255,n[a++]=t>>8&255,n[a++]=255&t;return 2===u?(t=revLookup[o.charCodeAt(r)]<<2|revLookup[o.charCodeAt(r+1)]>>4,n[a++]=255&t):1===u&&(t=revLookup[o.charCodeAt(r)]<<10|revLookup[o.charCodeAt(r+1)]<<4|revLookup[o.charCodeAt(r+2)]>>2,n[a++]=t>>8&255,n[a++]=255&t),n}function tripletToBase64(o){return lookup[o>>18&63]+lookup[o>>12&63]+lookup[o>>6&63]+lookup[63&o]}function encodeChunk(o,r,e){for(var t,u=[],n=r;n<e;n+=3)t=(o[n]<<16)+(o[n+1]<<8)+o[n+2],u.push(tripletToBase64(t));return u.join("")}function fromByteArray(o){for(var r,e=o.length,t=e%3,u="",n=[],p=0,a=e-t;p<a;p+=16383)n.push(encodeChunk(o,p,p+16383>a?a:p+16383));return 1===t?(r=o[e-1],u+=lookup[r>>2],u+=lookup[r<<4&63],u+="=="):2===t&&(r=(o[e-2]<<8)+o[e-1],u+=lookup[r>>10],u+=lookup[r>>4&63],u+=lookup[r<<2&63],u+="="),n.push(u),n.join("")}exports.byteLength=byteLength,exports.toByteArray=toByteArray,exports.fromByteArray=fromByteArray;for(var lookup=[],revLookup=[],Arr="undefined"!=typeof Uint8Array?Uint8Array:Array,code="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",i=0,len=code.length;i<len;++i)lookup[i]=code[i],revLookup[code.charCodeAt(i)]=i;revLookup["-".charCodeAt(0)]=62,revLookup["_".charCodeAt(0)]=63;

},{}],95:[function(require,module,exports){
!function(e){"use strict";function n(e){function E(e,n){var t,r,i,o,u,s,f=this;if(!(f instanceof E))return j&&L(26,"constructor call without new",e),new E(e,n);if(null!=n&&H(n,2,64,M,"base")){if(n|=0,s=e+"",10==n)return f=new E(e instanceof E?e:s),U(f,P+f.e+1,k);if((o="number"==typeof e)&&0*e!=0||!new RegExp("^-?"+(t="["+N.slice(0,n)+"]+")+"(?:\\."+t+")?$",n<37?"i":"").test(s))return h(f,s,o,n);o?(f.s=1/e<0?(s=s.slice(1),-1):1,j&&s.replace(/^0\.0*|\./,"").length>15&&L(M,v,e),o=!1):f.s=45===s.charCodeAt(0)?(s=s.slice(1),-1):1,s=D(s,10,n,f.s)}else{if(e instanceof E)return f.s=e.s,f.e=e.e,f.c=(e=e.c)?e.slice():e,void(M=0);if((o="number"==typeof e)&&0*e==0){if(f.s=1/e<0?(e=-e,-1):1,e===~~e){for(r=0,i=e;i>=10;i/=10,r++);return f.e=r,f.c=[e],void(M=0)}s=e+""}else{if(!g.test(s=e+""))return h(f,s,o);f.s=45===s.charCodeAt(0)?(s=s.slice(1),-1):1}}for((r=s.indexOf("."))>-1&&(s=s.replace(".","")),(i=s.search(/e/i))>0?(r<0&&(r=i),r+=+s.slice(i+1),s=s.substring(0,i)):r<0&&(r=s.length),i=0;48===s.charCodeAt(i);i++);for(u=s.length;48===s.charCodeAt(--u););if(s=s.slice(i,u+1))if(u=s.length,o&&j&&u>15&&(e>y||e!==d(e))&&L(M,v,f.s*e),(r=r-i-1)>z)f.c=f.e=null;else if(r<G)f.c=[f.e=0];else{if(f.e=r,f.c=[],i=(r+1)%O,r<0&&(i+=O),i<u){for(i&&f.c.push(+s.slice(0,i)),u-=O;i<u;)f.c.push(+s.slice(i,i+=O));s=s.slice(i),i=O-s.length}else i-=u;for(;i--;s+="0");f.c.push(+s)}else f.c=[f.e=0];M=0}function D(e,n,t,i){var o,u,f,c,a,h,g,p=e.indexOf("."),d=P,m=k;for(t<37&&(e=e.toLowerCase()),p>=0&&(f=J,J=0,e=e.replace(".",""),g=new E(t),a=g.pow(e.length-p),J=f,g.c=s(l(r(a.c),a.e),10,n),g.e=g.c.length),h=s(e,t,n),u=f=h.length;0==h[--f];h.pop());if(!h[0])return"0";if(p<0?--u:(a.c=h,a.e=u,a.s=i,a=C(a,g,d,m,n),h=a.c,c=a.r,u=a.e),o=u+d+1,p=h[o],f=n/2,c=c||o<0||null!=h[o+1],c=m<4?(null!=p||c)&&(0==m||m==(a.s<0?3:2)):p>f||p==f&&(4==m||c||6==m&&1&h[o-1]||m==(a.s<0?8:7)),o<1||!h[0])e=c?l("1",-d):"0";else{if(h.length=o,c)for(--n;++h[--o]>n;)h[o]=0,o||(++u,h.unshift(1));for(f=h.length;!h[--f];);for(p=0,e="";p<=f;e+=N.charAt(h[p++]));e=l(e,u)}return e}function F(e,n,t,i){var o,u,s,c,a;if(t=null!=t&&H(t,0,8,i,w)?0|t:k,!e.c)return e.toString();if(o=e.c[0],s=e.e,null==n)a=r(e.c),a=19==i||24==i&&s<=B?f(a,s):l(a,s);else if(e=U(new E(e),n,t),u=e.e,a=r(e.c),c=a.length,19==i||24==i&&(n<=u||u<=B)){for(;c<n;a+="0",c++);a=f(a,u)}else if(n-=s,a=l(a,u),u+1>c){if(--n>0)for(a+=".";n--;a+="0");}else if((n+=u-c)>0)for(u+1==c&&(a+=".");n--;a+="0");return e.s<0&&o?"-"+a:a}function _(e,n){var t,r,i=0;for(u(e[0])&&(e=e[0]),t=new E(e[0]);++i<e.length;){if(r=new E(e[i]),!r.s){t=r;break}n.call(t,r)&&(t=r)}return t}function x(e,n,t,r,i){return(e<n||e>t||e!=c(e))&&L(r,(i||"decimal places")+(e<n||e>t?" out of range":" not an integer"),e),!0}function I(e,n,t){for(var r=1,i=n.length;!n[--i];n.pop());for(i=n[0];i>=10;i/=10,r++);return(t=r+t*O-1)>z?e.c=e.e=null:t<G?e.c=[e.e=0]:(e.e=t,e.c=n),e}function L(e,n,t){var r=new Error(["new BigNumber","cmp","config","div","divToInt","eq","gt","gte","lt","lte","minus","mod","plus","precision","random","round","shift","times","toDigits","toExponential","toFixed","toFormat","toFraction","pow","toPrecision","toString","BigNumber"][e]+"() "+n+": "+t);throw r.name="BigNumber Error",M=0,r}function U(e,n,t,r){var i,o,u,s,f,l,c,a=e.c,h=S;if(a){e:{for(i=1,s=a[0];s>=10;s/=10,i++);if((o=n-i)<0)o+=O,u=n,f=a[l=0],c=f/h[i-u-1]%10|0;else if((l=p((o+1)/O))>=a.length){if(!r)break e;for(;a.length<=l;a.push(0));f=c=0,i=1,o%=O,u=o-O+1}else{for(f=s=a[l],i=1;s>=10;s/=10,i++);o%=O,u=o-O+i,c=u<0?0:f/h[i-u-1]%10|0}if(r=r||n<0||null!=a[l+1]||(u<0?f:f%h[i-u-1]),r=t<4?(c||r)&&(0==t||t==(e.s<0?3:2)):c>5||5==c&&(4==t||r||6==t&&(o>0?u>0?f/h[i-u]:0:a[l-1])%10&1||t==(e.s<0?8:7)),n<1||!a[0])return a.length=0,r?(n-=e.e+1,a[0]=h[(O-n%O)%O],e.e=-n||0):a[0]=e.e=0,e;if(0==o?(a.length=l,s=1,l--):(a.length=l+1,s=h[O-o],a[l]=u>0?d(f/h[i-u]%h[u])*s:0),r)for(;;){if(0==l){for(o=1,u=a[0];u>=10;u/=10,o++);for(u=a[0]+=s,s=1;u>=10;u/=10,s++);o!=s&&(e.e++,a[0]==b&&(a[0]=1));break}if(a[l]+=s,a[l]!=b)break;a[l--]=0,s=1}for(o=a.length;0===a[--o];a.pop());}e.e>z?e.c=e.e=null:e.e<G&&(e.c=[e.e=0])}return e}var C,M=0,T=E.prototype,q=new E(1),P=20,k=4,B=-7,$=21,G=-1e7,z=1e7,j=!0,H=x,V=!1,W=1,J=100,X={decimalSeparator:".",groupSeparator:",",groupSize:3,secondaryGroupSize:0,fractionGroupSeparator:" ",fractionGroupSize:0};return E.another=n,E.ROUND_UP=0,E.ROUND_DOWN=1,E.ROUND_CEIL=2,E.ROUND_FLOOR=3,E.ROUND_HALF_UP=4,E.ROUND_HALF_DOWN=5,E.ROUND_HALF_EVEN=6,E.ROUND_HALF_CEIL=7,E.ROUND_HALF_FLOOR=8,E.EUCLID=9,E.config=function(){var e,n,t=0,r={},i=arguments,s=i[0],f=s&&"object"==typeof s?function(){if(s.hasOwnProperty(n))return null!=(e=s[n])}:function(){if(i.length>t)return null!=(e=i[t++])};return f(n="DECIMAL_PLACES")&&H(e,0,A,2,n)&&(P=0|e),r[n]=P,f(n="ROUNDING_MODE")&&H(e,0,8,2,n)&&(k=0|e),r[n]=k,f(n="EXPONENTIAL_AT")&&(u(e)?H(e[0],-A,0,2,n)&&H(e[1],0,A,2,n)&&(B=0|e[0],$=0|e[1]):H(e,-A,A,2,n)&&(B=-($=0|(e<0?-e:e)))),r[n]=[B,$],f(n="RANGE")&&(u(e)?H(e[0],-A,-1,2,n)&&H(e[1],1,A,2,n)&&(G=0|e[0],z=0|e[1]):H(e,-A,A,2,n)&&(0|e?G=-(z=0|(e<0?-e:e)):j&&L(2,n+" cannot be zero",e))),r[n]=[G,z],f(n="ERRORS")&&(e===!!e||1===e||0===e?(M=0,H=(j=!!e)?x:o):j&&L(2,n+m,e)),r[n]=j,f(n="CRYPTO")&&(e===!!e||1===e||0===e?(V=!(!e||!a),e&&!V&&j&&L(2,"crypto unavailable",a)):j&&L(2,n+m,e)),r[n]=V,f(n="MODULO_MODE")&&H(e,0,9,2,n)&&(W=0|e),r[n]=W,f(n="POW_PRECISION")&&H(e,0,A,2,n)&&(J=0|e),r[n]=J,f(n="FORMAT")&&("object"==typeof e?X=e:j&&L(2,n+" not an object",e)),r[n]=X,r},E.max=function(){return _(arguments,T.lt)},E.min=function(){return _(arguments,T.gt)},E.random=function(){var e=9007199254740992*Math.random()&2097151?function(){return d(9007199254740992*Math.random())}:function(){return 8388608*(1073741824*Math.random()|0)+(8388608*Math.random()|0)};return function(n){var t,r,i,o,u,s=0,f=[],l=new E(q);if(n=null!=n&&H(n,0,A,14)?0|n:P,o=p(n/O),V)if(a&&a.getRandomValues){for(t=a.getRandomValues(new Uint32Array(o*=2));s<o;)u=131072*t[s]+(t[s+1]>>>11),u>=9e15?(r=a.getRandomValues(new Uint32Array(2)),t[s]=r[0],t[s+1]=r[1]):(f.push(u%1e14),s+=2);s=o/2}else if(a&&a.randomBytes){for(t=a.randomBytes(o*=7);s<o;)u=281474976710656*(31&t[s])+1099511627776*t[s+1]+4294967296*t[s+2]+16777216*t[s+3]+(t[s+4]<<16)+(t[s+5]<<8)+t[s+6],u>=9e15?a.randomBytes(7).copy(t,s):(f.push(u%1e14),s+=7);s=o/7}else j&&L(14,"crypto unavailable",a);if(!s)for(;s<o;)(u=e())<9e15&&(f[s++]=u%1e14);for(o=f[--s],n%=O,o&&n&&(u=S[O-n],f[s]=d(o/u)*u);0===f[s];f.pop(),s--);if(s<0)f=[i=0];else{for(i=-1;0===f[0];f.shift(),i-=O);for(s=1,u=f[0];u>=10;u/=10,s++);s<O&&(i-=O-s)}return l.e=i,l.c=f,l}}(),C=function(){function e(e,n,t){var r,i,o,u,s=0,f=e.length,l=n%R,c=n/R|0;for(e=e.slice();f--;)o=e[f]%R,u=e[f]/R|0,r=c*o+u*l,i=l*o+r%R*R+s,s=(i/t|0)+(r/R|0)+c*u,e[f]=i%t;return s&&e.unshift(s),e}function n(e,n,t,r){var i,o;if(t!=r)o=t>r?1:-1;else for(i=o=0;i<t;i++)if(e[i]!=n[i]){o=e[i]>n[i]?1:-1;break}return o}function r(e,n,t,r){for(var i=0;t--;)e[t]-=i,i=e[t]<n[t]?1:0,e[t]=i*r+e[t]-n[t];for(;!e[0]&&e.length>1;e.shift());}return function(i,o,u,s,f){var l,c,a,h,g,p,m,w,v,N,y,S,R,A,D,F,_,x=i.s==o.s?1:-1,I=i.c,L=o.c;if(!(I&&I[0]&&L&&L[0]))return new E(i.s&&o.s&&(I?!L||I[0]!=L[0]:L)?I&&0==I[0]||!L?0*x:x/0:NaN);for(w=new E(x),v=w.c=[],c=i.e-o.e,x=u+c+1,f||(f=b,c=t(i.e/O)-t(o.e/O),x=x/O|0),a=0;L[a]==(I[a]||0);a++);if(L[a]>(I[a]||0)&&c--,x<0)v.push(1),h=!0;else{for(A=I.length,F=L.length,a=0,x+=2,g=d(f/(L[0]+1)),g>1&&(L=e(L,g,f),I=e(I,g,f),F=L.length,A=I.length),R=F,N=I.slice(0,F),y=N.length;y<F;N[y++]=0);_=L.slice(),_.unshift(0),D=L[0],L[1]>=f/2&&D++;do{if(g=0,(l=n(L,N,F,y))<0){if(S=N[0],F!=y&&(S=S*f+(N[1]||0)),(g=d(S/D))>1)for(g>=f&&(g=f-1),p=e(L,g,f),m=p.length,y=N.length;1==n(p,N,m,y);)g--,r(p,F<m?_:L,m,f),m=p.length,l=1;else 0==g&&(l=g=1),p=L.slice(),m=p.length;if(m<y&&p.unshift(0),r(N,p,y,f),y=N.length,-1==l)for(;n(L,N,F,y)<1;)g++,r(N,F<y?_:L,y,f),y=N.length}else 0===l&&(g++,N=[0]);v[a++]=g,N[0]?N[y++]=I[R]||0:(N=[I[R]],y=1)}while((R++<A||null!=N[0])&&x--);h=null!=N[0],v[0]||v.shift()}if(f==b){for(a=1,x=v[0];x>=10;x/=10,a++);U(w,u+(w.e=a+c*O-1)+1,s,h)}else w.e=c,w.r=+h;return w}}(),h=function(){var e=/^(-?)0([xbo])(?=\w[\w.]*$)/i,n=/^([^.]+)\.$/,t=/^\.([^.]+)$/,r=/^-?(Infinity|NaN)$/,i=/^\s*\+(?=[\w.])|^\s+|\s+$/g;return function(o,u,s,f){var l,c=s?u:u.replace(i,"");if(r.test(c))o.s=isNaN(c)?null:c<0?-1:1;else{if(!s&&(c=c.replace(e,function(e,n,t){return l="x"==(t=t.toLowerCase())?16:"b"==t?2:8,f&&f!=l?e:n}),f&&(l=f,c=c.replace(n,"$1").replace(t,"0.$1")),u!=c))return new E(c,l);j&&L(M,"not a"+(f?" base "+f:"")+" number",u),o.s=null}o.c=o.e=null,M=0}}(),T.absoluteValue=T.abs=function(){var e=new E(this);return e.s<0&&(e.s=1),e},T.ceil=function(){return U(new E(this),this.e+1,2)},T.comparedTo=T.cmp=function(e,n){return M=1,i(this,new E(e,n))},T.decimalPlaces=T.dp=function(){var e,n,r=this.c;if(!r)return null;if(e=((n=r.length-1)-t(this.e/O))*O,n=r[n])for(;n%10==0;n/=10,e--);return e<0&&(e=0),e},T.dividedBy=T.div=function(e,n){return M=3,C(this,new E(e,n),P,k)},T.dividedToIntegerBy=T.divToInt=function(e,n){return M=4,C(this,new E(e,n),0,1)},T.equals=T.eq=function(e,n){return M=5,0===i(this,new E(e,n))},T.floor=function(){return U(new E(this),this.e+1,3)},T.greaterThan=T.gt=function(e,n){return M=6,i(this,new E(e,n))>0},T.greaterThanOrEqualTo=T.gte=function(e,n){return M=7,1===(n=i(this,new E(e,n)))||0===n},T.isFinite=function(){return!!this.c},T.isInteger=T.isInt=function(){return!!this.c&&t(this.e/O)>this.c.length-2},T.isNaN=function(){return!this.s},T.isNegative=T.isNeg=function(){return this.s<0},T.isZero=function(){return!!this.c&&0==this.c[0]},T.lessThan=T.lt=function(e,n){return M=8,i(this,new E(e,n))<0},T.lessThanOrEqualTo=T.lte=function(e,n){return M=9,-1===(n=i(this,new E(e,n)))||0===n},T.minus=T.sub=function(e,n){var r,i,o,u,s=this,f=s.s;if(M=10,e=new E(e,n),n=e.s,!f||!n)return new E(NaN);if(f!=n)return e.s=-n,s.plus(e);var l=s.e/O,c=e.e/O,a=s.c,h=e.c;if(!l||!c){if(!a||!h)return a?(e.s=-n,e):new E(h?s:NaN);if(!a[0]||!h[0])return h[0]?(e.s=-n,e):new E(a[0]?s:3==k?-0:0)}if(l=t(l),c=t(c),a=a.slice(),f=l-c){for((u=f<0)?(f=-f,o=a):(c=l,o=h),o.reverse(),n=f;n--;o.push(0));o.reverse()}else for(i=(u=(f=a.length)<(n=h.length))?f:n,f=n=0;n<i;n++)if(a[n]!=h[n]){u=a[n]<h[n];break}if(u&&(o=a,a=h,h=o,e.s=-e.s),(n=(i=h.length)-(r=a.length))>0)for(;n--;a[r++]=0);for(n=b-1;i>f;){if(a[--i]<h[i]){for(r=i;r&&!a[--r];a[r]=n);--a[r],a[i]+=b}a[i]-=h[i]}for(;0==a[0];a.shift(),--c);return a[0]?I(e,a,c):(e.s=3==k?-1:1,e.c=[e.e=0],e)},T.modulo=T.mod=function(e,n){var t,r,i=this;return M=11,e=new E(e,n),!i.c||!e.s||e.c&&!e.c[0]?new E(NaN):!e.c||i.c&&!i.c[0]?new E(i):(9==W?(r=e.s,e.s=1,t=C(i,e,0,3),e.s=r,t.s*=r):t=C(i,e,0,W),i.minus(t.times(e)))},T.negated=T.neg=function(){var e=new E(this);return e.s=-e.s||null,e},T.plus=T.add=function(e,n){var r,i=this,o=i.s;if(M=12,e=new E(e,n),n=e.s,!o||!n)return new E(NaN);if(o!=n)return e.s=-n,i.minus(e);var u=i.e/O,s=e.e/O,f=i.c,l=e.c;if(!u||!s){if(!f||!l)return new E(o/0);if(!f[0]||!l[0])return l[0]?e:new E(f[0]?i:0*o)}if(u=t(u),s=t(s),f=f.slice(),o=u-s){for(o>0?(s=u,r=l):(o=-o,r=f),r.reverse();o--;r.push(0));r.reverse()}for(o=f.length,n=l.length,o-n<0&&(r=l,l=f,f=r,n=o),o=0;n;)o=(f[--n]=f[n]+l[n]+o)/b|0,f[n]%=b;return o&&(f.unshift(o),++s),I(e,f,s)},T.precision=T.sd=function(e){var n,t,r=this,i=r.c;if(null!=e&&e!==!!e&&1!==e&&0!==e&&(j&&L(13,"argument"+m,e),e!=!!e&&(e=null)),!i)return null;if(t=i.length-1,n=t*O+1,t=i[t]){for(;t%10==0;t/=10,n--);for(t=i[0];t>=10;t/=10,n++);}return e&&r.e+1>n&&(n=r.e+1),n},T.round=function(e,n){var t=new E(this);return(null==e||H(e,0,A,15))&&U(t,~~e+this.e+1,null!=n&&H(n,0,8,15,w)?0|n:k),t},T.shift=function(e){var n=this;return H(e,-y,y,16,"argument")?n.times("1e"+c(e)):new E(n.c&&n.c[0]&&(e<-y||e>y)?n.s*(e<0?0:1/0):n)},T.squareRoot=T.sqrt=function(){var e,n,i,o,u,s=this,f=s.c,l=s.s,c=s.e,a=P+4,h=new E("0.5");if(1!==l||!f||!f[0])return new E(!l||l<0&&(!f||f[0])?NaN:f?s:1/0);if(l=Math.sqrt(+s),0==l||l==1/0?(n=r(f),(n.length+c)%2==0&&(n+="0"),l=Math.sqrt(n),c=t((c+1)/2)-(c<0||c%2),l==1/0?n="1e"+c:(n=l.toExponential(),n=n.slice(0,n.indexOf("e")+1)+c),i=new E(n)):i=new E(l+""),i.c[0])for(c=i.e,l=c+a,l<3&&(l=0);;)if(u=i,i=h.times(u.plus(C(s,u,a,1))),r(u.c).slice(0,l)===(n=r(i.c)).slice(0,l)){if(i.e<c&&--l,"9999"!=(n=n.slice(l-3,l+1))&&(o||"4999"!=n)){+n&&(+n.slice(1)||"5"!=n.charAt(0))||(U(i,i.e+P+2,1),e=!i.times(i).eq(s));break}if(!o&&(U(u,u.e+P+2,0),u.times(u).eq(s))){i=u;break}a+=4,l+=4,o=1}return U(i,i.e+P+1,k,e)},T.times=T.mul=function(e,n){var r,i,o,u,s,f,l,c,a,h,g,p,d,m,w,v=this,N=v.c,y=(M=17,e=new E(e,n)).c;if(!(N&&y&&N[0]&&y[0]))return!v.s||!e.s||N&&!N[0]&&!y||y&&!y[0]&&!N?e.c=e.e=e.s=null:(e.s*=v.s,N&&y?(e.c=[0],e.e=0):e.c=e.e=null),e;for(i=t(v.e/O)+t(e.e/O),e.s*=v.s,l=N.length,h=y.length,l<h&&(d=N,N=y,y=d,o=l,l=h,h=o),o=l+h,d=[];o--;d.push(0));for(m=b,w=R,o=h;--o>=0;){for(r=0,g=y[o]%w,p=y[o]/w|0,s=l,u=o+s;u>o;)c=N[--s]%w,a=N[s]/w|0,f=p*c+a*g,c=g*c+f%w*w+d[u]+r,r=(c/m|0)+(f/w|0)+p*a,d[u--]=c%m;d[u]=r}return r?++i:d.shift(),I(e,d,i)},T.toDigits=function(e,n){var t=new E(this);return e=null!=e&&H(e,1,A,18,"precision")?0|e:null,n=null!=n&&H(n,0,8,18,w)?0|n:k,e?U(t,e,n):t},T.toExponential=function(e,n){return F(this,null!=e&&H(e,0,A,19)?1+~~e:null,n,19)},T.toFixed=function(e,n){return F(this,null!=e&&H(e,0,A,20)?~~e+this.e+1:null,n,20)},T.toFormat=function(e,n){var t=F(this,null!=e&&H(e,0,A,21)?~~e+this.e+1:null,n,21);if(this.c){var r,i=t.split("."),o=+X.groupSize,u=+X.secondaryGroupSize,s=X.groupSeparator,f=i[0],l=i[1],c=this.s<0,a=c?f.slice(1):f,h=a.length;if(u&&(r=o,o=u,u=r,h-=r),o>0&&h>0){for(r=h%o||o,f=a.substr(0,r);r<h;r+=o)f+=s+a.substr(r,o);u>0&&(f+=s+a.slice(r)),c&&(f="-"+f)}t=l?f+X.decimalSeparator+((u=+X.fractionGroupSize)?l.replace(new RegExp("\\d{"+u+"}\\B","g"),"$&"+X.fractionGroupSeparator):l):f}return t},T.toFraction=function(e){var n,t,i,o,u,s,f,l,c,a=j,h=this,g=h.c,p=new E(q),d=t=new E(q),m=f=new E(q);if(null!=e&&(j=!1,s=new E(e),j=a,(a=s.isInt())&&!s.lt(q)||(j&&L(22,"max denominator "+(a?"out of range":"not an integer"),e),e=!a&&s.c&&U(s,s.e+1,1).gte(q)?s:null)),!g)return h.toString();for(c=r(g),o=p.e=c.length-h.e-1,p.c[0]=S[(u=o%O)<0?O+u:u],e=!e||s.cmp(p)>0?o>0?p:d:s,u=z,z=1/0,s=new E(c),f.c[0]=0;l=C(s,p,0,1),i=t.plus(l.times(m)),1!=i.cmp(e);)t=m,m=i,d=f.plus(l.times(i=d)),f=i,p=s.minus(l.times(i=p)),s=i;return i=C(e.minus(t),m,0,1),f=f.plus(i.times(d)),t=t.plus(i.times(m)),f.s=d.s=h.s,o*=2,n=C(d,m,o,k).minus(h).abs().cmp(C(f,t,o,k).minus(h).abs())<1?[d.toString(),m.toString()]:[f.toString(),t.toString()],z=u,n},T.toNumber=function(){return+this},T.toPower=T.pow=function(e,n){var t,r,i,o=d(e<0?-e:+e),u=this;if(null!=n&&(M=23,n=new E(n)),!H(e,-y,y,23,"exponent")&&(!isFinite(e)||o>y&&(e/=0)||parseFloat(e)!=e&&!(e=NaN))||0==e)return t=Math.pow(+u,e),new E(n?t%n:t);for(n?e>1&&u.gt(q)&&u.isInt()&&n.gt(q)&&n.isInt()?u=u.mod(n):(i=n,n=null):J&&(t=p(J/O+2)),r=new E(q);;){if(o%2){if(r=r.times(u),!r.c)break;t?r.c.length>t&&(r.c.length=t):n&&(r=r.mod(n))}if(!(o=d(o/2)))break;u=u.times(u),t?u.c&&u.c.length>t&&(u.c.length=t):n&&(u=u.mod(n))}return n?r:(e<0&&(r=q.div(r)),i?r.mod(i):t?U(r,J,k):r)},T.toPrecision=function(e,n){return F(this,null!=e&&H(e,1,A,24,"precision")?0|e:null,n,24)},T.toString=function(e){var n,t=this,i=t.s,o=t.e;return null===o?i?(n="Infinity",i<0&&(n="-"+n)):n="NaN":(n=r(t.c),n=null!=e&&H(e,2,64,25,"base")?D(l(n,o),0|e,10,i):o<=B||o>=$?f(n,o):l(n,o),i<0&&t.c[0]&&(n="-"+n)),n},T.truncated=T.trunc=function(){return U(new E(this),this.e+1,1)},T.valueOf=T.toJSON=function(){var e,n=this,t=n.e;return null===t?n.toString():(e=r(n.c),e=t<=B||t>=$?f(e,t):l(e,t),n.s<0?"-"+e:e)},null!=e&&E.config(e),E}function t(e){var n=0|e;return e>0||e===n?n:n-1}function r(e){for(var n,t,r=1,i=e.length,o=e[0]+"";r<i;){for(n=e[r++]+"",t=O-n.length;t--;n="0"+n);o+=n}for(i=o.length;48===o.charCodeAt(--i););return o.slice(0,i+1||1)}function i(e,n){var t,r,i=e.c,o=n.c,u=e.s,s=n.s,f=e.e,l=n.e;if(!u||!s)return null;if(t=i&&!i[0],r=o&&!o[0],t||r)return t?r?0:-s:u;if(u!=s)return u;if(t=u<0,r=f==l,!i||!o)return r?0:!i^t?1:-1;if(!r)return f>l^t?1:-1;for(s=(f=i.length)<(l=o.length)?f:l,u=0;u<s;u++)if(i[u]!=o[u])return i[u]>o[u]^t?1:-1;return f==l?0:f>l^t?1:-1}function o(e,n,t){return(e=c(e))>=n&&e<=t}function u(e){return"[object Array]"==Object.prototype.toString.call(e)}function s(e,n,t){for(var r,i,o=[0],u=0,s=e.length;u<s;){for(i=o.length;i--;o[i]*=n);for(o[r=0]+=N.indexOf(e.charAt(u++));r<o.length;r++)o[r]>t-1&&(null==o[r+1]&&(o[r+1]=0),o[r+1]+=o[r]/t|0,o[r]%=t)}return o.reverse()}function f(e,n){return(e.length>1?e.charAt(0)+"."+e.slice(1):e)+(n<0?"e":"e+")+n}function l(e,n){var t,r;if(n<0){for(r="0.";++n;r+="0");e=r+e}else if(t=e.length,++n>t){for(r="0",n-=t;--n;r+="0");e+=r}else n<t&&(e=e.slice(0,n)+"."+e.slice(n));return e}function c(e){return e=parseFloat(e),e<0?p(e):d(e)}var a,h,g=/^-?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,p=Math.ceil,d=Math.floor,m=" not a boolean or binary digit",w="rounding mode",v="number type has more than 15 significant digits",N="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_",b=1e14,O=14,y=9007199254740991,S=[1,10,100,1e3,1e4,1e5,1e6,1e7,1e8,1e9,1e10,1e11,1e12,1e13],R=1e7,A=1e9;if("undefined"!=typeof crypto&&(a=crypto),"function"==typeof define&&define.amd)define(function(){return n()});else if("undefined"!=typeof module&&module.exports){if(module.exports=n(),!a)try{a=require("crypto")}catch(e){}}else e||(e="undefined"!=typeof self?self:Function("return this")()),e.BigNumber=n()}(this);

},{"crypto":undefined}],96:[function(require,module,exports){
(function (global){
"use strict";function typedArraySupport(){try{var t=new Uint8Array(1);return t.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===t.foo()&&"function"==typeof t.subarray&&0===t.subarray(1,1).byteLength}catch(t){return!1}}function kMaxLength(){return Buffer.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function createBuffer(t,e){if(kMaxLength()<e)throw new RangeError("Invalid typed array length");return Buffer.TYPED_ARRAY_SUPPORT?(t=new Uint8Array(e),t.__proto__=Buffer.prototype):(null===t&&(t=new Buffer(e)),t.length=e),t}function Buffer(t,e,r){if(!(Buffer.TYPED_ARRAY_SUPPORT||this instanceof Buffer))return new Buffer(t,e,r);if("number"==typeof t){if("string"==typeof e)throw new Error("If encoding is specified then the first argument must be a string");return allocUnsafe(this,t)}return from(this,t,e,r)}function from(t,e,r,n){if("number"==typeof e)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&e instanceof ArrayBuffer?fromArrayBuffer(t,e,r,n):"string"==typeof e?fromString(t,e,r):fromObject(t,e)}function assertSize(t){if("number"!=typeof t)throw new TypeError('"size" argument must be a number');if(t<0)throw new RangeError('"size" argument must not be negative')}function alloc(t,e,r,n){return assertSize(e),e<=0?createBuffer(t,e):void 0!==r?"string"==typeof n?createBuffer(t,e).fill(r,n):createBuffer(t,e).fill(r):createBuffer(t,e)}function allocUnsafe(t,e){if(assertSize(e),t=createBuffer(t,e<0?0:0|checked(e)),!Buffer.TYPED_ARRAY_SUPPORT)for(var r=0;r<e;++r)t[r]=0;return t}function fromString(t,e,r){if("string"==typeof r&&""!==r||(r="utf8"),!Buffer.isEncoding(r))throw new TypeError('"encoding" must be a valid string encoding');var n=0|byteLength(e,r);t=createBuffer(t,n);var f=t.write(e,r);return f!==n&&(t=t.slice(0,f)),t}function fromArrayLike(t,e){var r=e.length<0?0:0|checked(e.length);t=createBuffer(t,r);for(var n=0;n<r;n+=1)t[n]=255&e[n];return t}function fromArrayBuffer(t,e,r,n){if(e.byteLength,r<0||e.byteLength<r)throw new RangeError("'offset' is out of bounds");if(e.byteLength<r+(n||0))throw new RangeError("'length' is out of bounds");return e=void 0===r&&void 0===n?new Uint8Array(e):void 0===n?new Uint8Array(e,r):new Uint8Array(e,r,n),Buffer.TYPED_ARRAY_SUPPORT?(t=e,t.__proto__=Buffer.prototype):t=fromArrayLike(t,e),t}function fromObject(t,e){if(Buffer.isBuffer(e)){var r=0|checked(e.length);return t=createBuffer(t,r),0===t.length?t:(e.copy(t,0,0,r),t)}if(e){if("undefined"!=typeof ArrayBuffer&&e.buffer instanceof ArrayBuffer||"length"in e)return"number"!=typeof e.length||isnan(e.length)?createBuffer(t,0):fromArrayLike(t,e);if("Buffer"===e.type&&isArray(e.data))return fromArrayLike(t,e.data)}throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}function checked(t){if(t>=kMaxLength())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+kMaxLength().toString(16)+" bytes");return 0|t}function SlowBuffer(t){return+t!=t&&(t=0),Buffer.alloc(+t)}function byteLength(t,e){if(Buffer.isBuffer(t))return t.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(t)||t instanceof ArrayBuffer))return t.byteLength;"string"!=typeof t&&(t=""+t);var r=t.length;if(0===r)return 0;for(var n=!1;;)switch(e){case"ascii":case"latin1":case"binary":return r;case"utf8":case"utf-8":case void 0:return utf8ToBytes(t).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*r;case"hex":return r>>>1;case"base64":return base64ToBytes(t).length;default:if(n)return utf8ToBytes(t).length;e=(""+e).toLowerCase(),n=!0}}function slowToString(t,e,r){var n=!1;if((void 0===e||e<0)&&(e=0),e>this.length)return"";if((void 0===r||r>this.length)&&(r=this.length),r<=0)return"";if(r>>>=0,e>>>=0,r<=e)return"";for(t||(t="utf8");;)switch(t){case"hex":return hexSlice(this,e,r);case"utf8":case"utf-8":return utf8Slice(this,e,r);case"ascii":return asciiSlice(this,e,r);case"latin1":case"binary":return latin1Slice(this,e,r);case"base64":return base64Slice(this,e,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return utf16leSlice(this,e,r);default:if(n)throw new TypeError("Unknown encoding: "+t);t=(t+"").toLowerCase(),n=!0}}function swap(t,e,r){var n=t[e];t[e]=t[r],t[r]=n}function bidirectionalIndexOf(t,e,r,n,f){if(0===t.length)return-1;if("string"==typeof r?(n=r,r=0):r>2147483647?r=2147483647:r<-2147483648&&(r=-2147483648),r=+r,isNaN(r)&&(r=f?0:t.length-1),r<0&&(r=t.length+r),r>=t.length){if(f)return-1;r=t.length-1}else if(r<0){if(!f)return-1;r=0}if("string"==typeof e&&(e=Buffer.from(e,n)),Buffer.isBuffer(e))return 0===e.length?-1:arrayIndexOf(t,e,r,n,f);if("number"==typeof e)return e&=255,Buffer.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?f?Uint8Array.prototype.indexOf.call(t,e,r):Uint8Array.prototype.lastIndexOf.call(t,e,r):arrayIndexOf(t,[e],r,n,f);throw new TypeError("val must be string, number or Buffer")}function arrayIndexOf(t,e,r,n,f){function i(t,e){return 1===o?t[e]:t.readUInt16BE(e*o)}var o=1,u=t.length,s=e.length;if(void 0!==n&&("ucs2"===(n=String(n).toLowerCase())||"ucs-2"===n||"utf16le"===n||"utf-16le"===n)){if(t.length<2||e.length<2)return-1;o=2,u/=2,s/=2,r/=2}var a;if(f){var h=-1;for(a=r;a<u;a++)if(i(t,a)===i(e,-1===h?0:a-h)){if(-1===h&&(h=a),a-h+1===s)return h*o}else-1!==h&&(a-=a-h),h=-1}else for(r+s>u&&(r=u-s),a=r;a>=0;a--){for(var c=!0,l=0;l<s;l++)if(i(t,a+l)!==i(e,l)){c=!1;break}if(c)return a}return-1}function hexWrite(t,e,r,n){r=Number(r)||0;var f=t.length-r;n?(n=Number(n))>f&&(n=f):n=f;var i=e.length;if(i%2!=0)throw new TypeError("Invalid hex string");n>i/2&&(n=i/2);for(var o=0;o<n;++o){var u=parseInt(e.substr(2*o,2),16);if(isNaN(u))return o;t[r+o]=u}return o}function utf8Write(t,e,r,n){return blitBuffer(utf8ToBytes(e,t.length-r),t,r,n)}function asciiWrite(t,e,r,n){return blitBuffer(asciiToBytes(e),t,r,n)}function latin1Write(t,e,r,n){return asciiWrite(t,e,r,n)}function base64Write(t,e,r,n){return blitBuffer(base64ToBytes(e),t,r,n)}function ucs2Write(t,e,r,n){return blitBuffer(utf16leToBytes(e,t.length-r),t,r,n)}function base64Slice(t,e,r){return 0===e&&r===t.length?base64.fromByteArray(t):base64.fromByteArray(t.slice(e,r))}function utf8Slice(t,e,r){r=Math.min(t.length,r);for(var n=[],f=e;f<r;){var i=t[f],o=null,u=i>239?4:i>223?3:i>191?2:1;if(f+u<=r){var s,a,h,c;switch(u){case 1:i<128&&(o=i);break;case 2:s=t[f+1],128==(192&s)&&(c=(31&i)<<6|63&s)>127&&(o=c);break;case 3:s=t[f+1],a=t[f+2],128==(192&s)&&128==(192&a)&&(c=(15&i)<<12|(63&s)<<6|63&a)>2047&&(c<55296||c>57343)&&(o=c);break;case 4:s=t[f+1],a=t[f+2],h=t[f+3],128==(192&s)&&128==(192&a)&&128==(192&h)&&(c=(15&i)<<18|(63&s)<<12|(63&a)<<6|63&h)>65535&&c<1114112&&(o=c)}}null===o?(o=65533,u=1):o>65535&&(o-=65536,n.push(o>>>10&1023|55296),o=56320|1023&o),n.push(o),f+=u}return decodeCodePointsArray(n)}function decodeCodePointsArray(t){var e=t.length;if(e<=MAX_ARGUMENTS_LENGTH)return String.fromCharCode.apply(String,t);for(var r="",n=0;n<e;)r+=String.fromCharCode.apply(String,t.slice(n,n+=MAX_ARGUMENTS_LENGTH));return r}function asciiSlice(t,e,r){var n="";r=Math.min(t.length,r);for(var f=e;f<r;++f)n+=String.fromCharCode(127&t[f]);return n}function latin1Slice(t,e,r){var n="";r=Math.min(t.length,r);for(var f=e;f<r;++f)n+=String.fromCharCode(t[f]);return n}function hexSlice(t,e,r){var n=t.length;(!e||e<0)&&(e=0),(!r||r<0||r>n)&&(r=n);for(var f="",i=e;i<r;++i)f+=toHex(t[i]);return f}function utf16leSlice(t,e,r){for(var n=t.slice(e,r),f="",i=0;i<n.length;i+=2)f+=String.fromCharCode(n[i]+256*n[i+1]);return f}function checkOffset(t,e,r){if(t%1!=0||t<0)throw new RangeError("offset is not uint");if(t+e>r)throw new RangeError("Trying to access beyond buffer length")}function checkInt(t,e,r,n,f,i){if(!Buffer.isBuffer(t))throw new TypeError('"buffer" argument must be a Buffer instance');if(e>f||e<i)throw new RangeError('"value" argument is out of bounds');if(r+n>t.length)throw new RangeError("Index out of range")}function objectWriteUInt16(t,e,r,n){e<0&&(e=65535+e+1);for(var f=0,i=Math.min(t.length-r,2);f<i;++f)t[r+f]=(e&255<<8*(n?f:1-f))>>>8*(n?f:1-f)}function objectWriteUInt32(t,e,r,n){e<0&&(e=4294967295+e+1);for(var f=0,i=Math.min(t.length-r,4);f<i;++f)t[r+f]=e>>>8*(n?f:3-f)&255}function checkIEEE754(t,e,r,n,f,i){if(r+n>t.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("Index out of range")}function writeFloat(t,e,r,n,f){return f||checkIEEE754(t,e,r,4,3.4028234663852886e38,-3.4028234663852886e38),ieee754.write(t,e,r,n,23,4),r+4}function writeDouble(t,e,r,n,f){return f||checkIEEE754(t,e,r,8,1.7976931348623157e308,-1.7976931348623157e308),ieee754.write(t,e,r,n,52,8),r+8}function base64clean(t){if(t=stringtrim(t).replace(INVALID_BASE64_RE,""),t.length<2)return"";for(;t.length%4!=0;)t+="=";return t}function stringtrim(t){return t.trim?t.trim():t.replace(/^\s+|\s+$/g,"")}function toHex(t){return t<16?"0"+t.toString(16):t.toString(16)}function utf8ToBytes(t,e){e=e||1/0;for(var r,n=t.length,f=null,i=[],o=0;o<n;++o){if((r=t.charCodeAt(o))>55295&&r<57344){if(!f){if(r>56319){(e-=3)>-1&&i.push(239,191,189);continue}if(o+1===n){(e-=3)>-1&&i.push(239,191,189);continue}f=r;continue}if(r<56320){(e-=3)>-1&&i.push(239,191,189),f=r;continue}r=65536+(f-55296<<10|r-56320)}else f&&(e-=3)>-1&&i.push(239,191,189);if(f=null,r<128){if((e-=1)<0)break;i.push(r)}else if(r<2048){if((e-=2)<0)break;i.push(r>>6|192,63&r|128)}else if(r<65536){if((e-=3)<0)break;i.push(r>>12|224,r>>6&63|128,63&r|128)}else{if(!(r<1114112))throw new Error("Invalid code point");if((e-=4)<0)break;i.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}}return i}function asciiToBytes(t){for(var e=[],r=0;r<t.length;++r)e.push(255&t.charCodeAt(r));return e}function utf16leToBytes(t,e){for(var r,n,f,i=[],o=0;o<t.length&&!((e-=2)<0);++o)r=t.charCodeAt(o),n=r>>8,f=r%256,i.push(f),i.push(n);return i}function base64ToBytes(t){return base64.toByteArray(base64clean(t))}function blitBuffer(t,e,r,n){for(var f=0;f<n&&!(f+r>=e.length||f>=t.length);++f)e[f+r]=t[f];return f}function isnan(t){return t!==t}var base64=require("base64-js"),ieee754=require("ieee754"),isArray=require("isarray");exports.Buffer=Buffer,exports.SlowBuffer=SlowBuffer,exports.INSPECT_MAX_BYTES=50,Buffer.TYPED_ARRAY_SUPPORT=void 0!==global.TYPED_ARRAY_SUPPORT?global.TYPED_ARRAY_SUPPORT:typedArraySupport(),exports.kMaxLength=kMaxLength(),Buffer.poolSize=8192,Buffer._augment=function(t){return t.__proto__=Buffer.prototype,t},Buffer.from=function(t,e,r){return from(null,t,e,r)},Buffer.TYPED_ARRAY_SUPPORT&&(Buffer.prototype.__proto__=Uint8Array.prototype,Buffer.__proto__=Uint8Array,"undefined"!=typeof Symbol&&Symbol.species&&Buffer[Symbol.species]===Buffer&&Object.defineProperty(Buffer,Symbol.species,{value:null,configurable:!0})),Buffer.alloc=function(t,e,r){return alloc(null,t,e,r)},Buffer.allocUnsafe=function(t){return allocUnsafe(null,t)},Buffer.allocUnsafeSlow=function(t){return allocUnsafe(null,t)},Buffer.isBuffer=function(t){return!(null==t||!t._isBuffer)},Buffer.compare=function(t,e){if(!Buffer.isBuffer(t)||!Buffer.isBuffer(e))throw new TypeError("Arguments must be Buffers");if(t===e)return 0;for(var r=t.length,n=e.length,f=0,i=Math.min(r,n);f<i;++f)if(t[f]!==e[f]){r=t[f],n=e[f];break}return r<n?-1:n<r?1:0},Buffer.isEncoding=function(t){switch(String(t).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},Buffer.concat=function(t,e){if(!isArray(t))throw new TypeError('"list" argument must be an Array of Buffers');if(0===t.length)return Buffer.alloc(0);var r;if(void 0===e)for(e=0,r=0;r<t.length;++r)e+=t[r].length;var n=Buffer.allocUnsafe(e),f=0;for(r=0;r<t.length;++r){var i=t[r];if(!Buffer.isBuffer(i))throw new TypeError('"list" argument must be an Array of Buffers');i.copy(n,f),f+=i.length}return n},Buffer.byteLength=byteLength,Buffer.prototype._isBuffer=!0,Buffer.prototype.swap16=function(){var t=this.length;if(t%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var e=0;e<t;e+=2)swap(this,e,e+1);return this},Buffer.prototype.swap32=function(){var t=this.length;if(t%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var e=0;e<t;e+=4)swap(this,e,e+3),swap(this,e+1,e+2);return this},Buffer.prototype.swap64=function(){var t=this.length;if(t%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var e=0;e<t;e+=8)swap(this,e,e+7),swap(this,e+1,e+6),swap(this,e+2,e+5),swap(this,e+3,e+4);return this},Buffer.prototype.toString=function(){var t=0|this.length;return 0===t?"":0===arguments.length?utf8Slice(this,0,t):slowToString.apply(this,arguments)},Buffer.prototype.equals=function(t){if(!Buffer.isBuffer(t))throw new TypeError("Argument must be a Buffer");return this===t||0===Buffer.compare(this,t)},Buffer.prototype.inspect=function(){var t="",e=exports.INSPECT_MAX_BYTES;return this.length>0&&(t=this.toString("hex",0,e).match(/.{2}/g).join(" "),this.length>e&&(t+=" ... ")),"<Buffer "+t+">"},Buffer.prototype.compare=function(t,e,r,n,f){if(!Buffer.isBuffer(t))throw new TypeError("Argument must be a Buffer");if(void 0===e&&(e=0),void 0===r&&(r=t?t.length:0),void 0===n&&(n=0),void 0===f&&(f=this.length),e<0||r>t.length||n<0||f>this.length)throw new RangeError("out of range index");if(n>=f&&e>=r)return 0;if(n>=f)return-1;if(e>=r)return 1;if(e>>>=0,r>>>=0,n>>>=0,f>>>=0,this===t)return 0;for(var i=f-n,o=r-e,u=Math.min(i,o),s=this.slice(n,f),a=t.slice(e,r),h=0;h<u;++h)if(s[h]!==a[h]){i=s[h],o=a[h];break}return i<o?-1:o<i?1:0},Buffer.prototype.includes=function(t,e,r){return-1!==this.indexOf(t,e,r)},Buffer.prototype.indexOf=function(t,e,r){return bidirectionalIndexOf(this,t,e,r,!0)},Buffer.prototype.lastIndexOf=function(t,e,r){return bidirectionalIndexOf(this,t,e,r,!1)},Buffer.prototype.write=function(t,e,r,n){if(void 0===e)n="utf8",r=this.length,e=0;else if(void 0===r&&"string"==typeof e)n=e,r=this.length,e=0;else{if(!isFinite(e))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");e|=0,isFinite(r)?(r|=0,void 0===n&&(n="utf8")):(n=r,r=void 0)}var f=this.length-e;if((void 0===r||r>f)&&(r=f),t.length>0&&(r<0||e<0)||e>this.length)throw new RangeError("Attempt to write outside buffer bounds");n||(n="utf8");for(var i=!1;;)switch(n){case"hex":return hexWrite(this,t,e,r);case"utf8":case"utf-8":return utf8Write(this,t,e,r);case"ascii":return asciiWrite(this,t,e,r);case"latin1":case"binary":return latin1Write(this,t,e,r);case"base64":return base64Write(this,t,e,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return ucs2Write(this,t,e,r);default:if(i)throw new TypeError("Unknown encoding: "+n);n=(""+n).toLowerCase(),i=!0}},Buffer.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var MAX_ARGUMENTS_LENGTH=4096;Buffer.prototype.slice=function(t,e){var r=this.length;t=~~t,e=void 0===e?r:~~e,t<0?(t+=r)<0&&(t=0):t>r&&(t=r),e<0?(e+=r)<0&&(e=0):e>r&&(e=r),e<t&&(e=t);var n;if(Buffer.TYPED_ARRAY_SUPPORT)n=this.subarray(t,e),n.__proto__=Buffer.prototype;else{var f=e-t;n=new Buffer(f,void 0);for(var i=0;i<f;++i)n[i]=this[i+t]}return n},Buffer.prototype.readUIntLE=function(t,e,r){t|=0,e|=0,r||checkOffset(t,e,this.length);for(var n=this[t],f=1,i=0;++i<e&&(f*=256);)n+=this[t+i]*f;return n},Buffer.prototype.readUIntBE=function(t,e,r){t|=0,e|=0,r||checkOffset(t,e,this.length);for(var n=this[t+--e],f=1;e>0&&(f*=256);)n+=this[t+--e]*f;return n},Buffer.prototype.readUInt8=function(t,e){return e||checkOffset(t,1,this.length),this[t]},Buffer.prototype.readUInt16LE=function(t,e){return e||checkOffset(t,2,this.length),this[t]|this[t+1]<<8},Buffer.prototype.readUInt16BE=function(t,e){return e||checkOffset(t,2,this.length),this[t]<<8|this[t+1]},Buffer.prototype.readUInt32LE=function(t,e){return e||checkOffset(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},Buffer.prototype.readUInt32BE=function(t,e){return e||checkOffset(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},Buffer.prototype.readIntLE=function(t,e,r){t|=0,e|=0,r||checkOffset(t,e,this.length);for(var n=this[t],f=1,i=0;++i<e&&(f*=256);)n+=this[t+i]*f;return f*=128,n>=f&&(n-=Math.pow(2,8*e)),n},Buffer.prototype.readIntBE=function(t,e,r){t|=0,e|=0,r||checkOffset(t,e,this.length);for(var n=e,f=1,i=this[t+--n];n>0&&(f*=256);)i+=this[t+--n]*f;return f*=128,i>=f&&(i-=Math.pow(2,8*e)),i},Buffer.prototype.readInt8=function(t,e){return e||checkOffset(t,1,this.length),128&this[t]?-1*(255-this[t]+1):this[t]},Buffer.prototype.readInt16LE=function(t,e){e||checkOffset(t,2,this.length);var r=this[t]|this[t+1]<<8;return 32768&r?4294901760|r:r},Buffer.prototype.readInt16BE=function(t,e){e||checkOffset(t,2,this.length);var r=this[t+1]|this[t]<<8;return 32768&r?4294901760|r:r},Buffer.prototype.readInt32LE=function(t,e){return e||checkOffset(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},Buffer.prototype.readInt32BE=function(t,e){return e||checkOffset(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},Buffer.prototype.readFloatLE=function(t,e){return e||checkOffset(t,4,this.length),ieee754.read(this,t,!0,23,4)},Buffer.prototype.readFloatBE=function(t,e){return e||checkOffset(t,4,this.length),ieee754.read(this,t,!1,23,4)},Buffer.prototype.readDoubleLE=function(t,e){return e||checkOffset(t,8,this.length),ieee754.read(this,t,!0,52,8)},Buffer.prototype.readDoubleBE=function(t,e){return e||checkOffset(t,8,this.length),ieee754.read(this,t,!1,52,8)},Buffer.prototype.writeUIntLE=function(t,e,r,n){if(t=+t,e|=0,r|=0,!n){checkInt(this,t,e,r,Math.pow(2,8*r)-1,0)}var f=1,i=0;for(this[e]=255&t;++i<r&&(f*=256);)this[e+i]=t/f&255;return e+r},Buffer.prototype.writeUIntBE=function(t,e,r,n){if(t=+t,e|=0,r|=0,!n){checkInt(this,t,e,r,Math.pow(2,8*r)-1,0)}var f=r-1,i=1;for(this[e+f]=255&t;--f>=0&&(i*=256);)this[e+f]=t/i&255;return e+r},Buffer.prototype.writeUInt8=function(t,e,r){return t=+t,e|=0,r||checkInt(this,t,e,1,255,0),Buffer.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),this[e]=255&t,e+1},Buffer.prototype.writeUInt16LE=function(t,e,r){return t=+t,e|=0,r||checkInt(this,t,e,2,65535,0),Buffer.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8):objectWriteUInt16(this,t,e,!0),e+2},Buffer.prototype.writeUInt16BE=function(t,e,r){return t=+t,e|=0,r||checkInt(this,t,e,2,65535,0),Buffer.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=255&t):objectWriteUInt16(this,t,e,!1),e+2},Buffer.prototype.writeUInt32LE=function(t,e,r){return t=+t,e|=0,r||checkInt(this,t,e,4,4294967295,0),Buffer.TYPED_ARRAY_SUPPORT?(this[e+3]=t>>>24,this[e+2]=t>>>16,this[e+1]=t>>>8,this[e]=255&t):objectWriteUInt32(this,t,e,!0),e+4},Buffer.prototype.writeUInt32BE=function(t,e,r){return t=+t,e|=0,r||checkInt(this,t,e,4,4294967295,0),Buffer.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t):objectWriteUInt32(this,t,e,!1),e+4},Buffer.prototype.writeIntLE=function(t,e,r,n){if(t=+t,e|=0,!n){var f=Math.pow(2,8*r-1);checkInt(this,t,e,r,f-1,-f)}var i=0,o=1,u=0;for(this[e]=255&t;++i<r&&(o*=256);)t<0&&0===u&&0!==this[e+i-1]&&(u=1),this[e+i]=(t/o>>0)-u&255;return e+r},Buffer.prototype.writeIntBE=function(t,e,r,n){if(t=+t,e|=0,!n){var f=Math.pow(2,8*r-1);checkInt(this,t,e,r,f-1,-f)}var i=r-1,o=1,u=0;for(this[e+i]=255&t;--i>=0&&(o*=256);)t<0&&0===u&&0!==this[e+i+1]&&(u=1),this[e+i]=(t/o>>0)-u&255;return e+r},Buffer.prototype.writeInt8=function(t,e,r){return t=+t,e|=0,r||checkInt(this,t,e,1,127,-128),Buffer.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),t<0&&(t=255+t+1),this[e]=255&t,e+1},Buffer.prototype.writeInt16LE=function(t,e,r){return t=+t,e|=0,r||checkInt(this,t,e,2,32767,-32768),Buffer.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8):objectWriteUInt16(this,t,e,!0),e+2},Buffer.prototype.writeInt16BE=function(t,e,r){return t=+t,e|=0,r||checkInt(this,t,e,2,32767,-32768),Buffer.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=255&t):objectWriteUInt16(this,t,e,!1),e+2},Buffer.prototype.writeInt32LE=function(t,e,r){return t=+t,e|=0,r||checkInt(this,t,e,4,2147483647,-2147483648),Buffer.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8,this[e+2]=t>>>16,this[e+3]=t>>>24):objectWriteUInt32(this,t,e,!0),e+4},Buffer.prototype.writeInt32BE=function(t,e,r){return t=+t,e|=0,r||checkInt(this,t,e,4,2147483647,-2147483648),t<0&&(t=4294967295+t+1),Buffer.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t):objectWriteUInt32(this,t,e,!1),e+4},Buffer.prototype.writeFloatLE=function(t,e,r){return writeFloat(this,t,e,!0,r)},Buffer.prototype.writeFloatBE=function(t,e,r){return writeFloat(this,t,e,!1,r)},Buffer.prototype.writeDoubleLE=function(t,e,r){return writeDouble(this,t,e,!0,r)},Buffer.prototype.writeDoubleBE=function(t,e,r){return writeDouble(this,t,e,!1,r)},Buffer.prototype.copy=function(t,e,r,n){if(r||(r=0),n||0===n||(n=this.length),e>=t.length&&(e=t.length),e||(e=0),n>0&&n<r&&(n=r),n===r)return 0;if(0===t.length||0===this.length)return 0;if(e<0)throw new RangeError("targetStart out of bounds");if(r<0||r>=this.length)throw new RangeError("sourceStart out of bounds");if(n<0)throw new RangeError("sourceEnd out of bounds");n>this.length&&(n=this.length),t.length-e<n-r&&(n=t.length-e+r);var f,i=n-r;if(this===t&&r<e&&e<n)for(f=i-1;f>=0;--f)t[f+e]=this[f+r];else if(i<1e3||!Buffer.TYPED_ARRAY_SUPPORT)for(f=0;f<i;++f)t[f+e]=this[f+r];else Uint8Array.prototype.set.call(t,this.subarray(r,r+i),e);return i},Buffer.prototype.fill=function(t,e,r,n){if("string"==typeof t){if("string"==typeof e?(n=e,e=0,r=this.length):"string"==typeof r&&(n=r,r=this.length),1===t.length){var f=t.charCodeAt(0);f<256&&(t=f)}if(void 0!==n&&"string"!=typeof n)throw new TypeError("encoding must be a string");if("string"==typeof n&&!Buffer.isEncoding(n))throw new TypeError("Unknown encoding: "+n)}else"number"==typeof t&&(t&=255);if(e<0||this.length<e||this.length<r)throw new RangeError("Out of range index");if(r<=e)return this;e>>>=0,r=void 0===r?this.length:r>>>0,t||(t=0);var i;if("number"==typeof t)for(i=e;i<r;++i)this[i]=t;else{var o=Buffer.isBuffer(t)?t:utf8ToBytes(new Buffer(t,n).toString()),u=o.length;for(i=0;i<r-e;++i)this[i+e]=o[i%u]}return this};var INVALID_BASE64_RE=/[^+\/0-9A-Za-z-_]/g;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"base64-js":94,"ieee754":201,"isarray":203}],97:[function(require,module,exports){
var charenc={utf8:{stringToBytes:function(n){return charenc.bin.stringToBytes(unescape(encodeURIComponent(n)))},bytesToString:function(n){return decodeURIComponent(escape(charenc.bin.bytesToString(n)))}},bin:{stringToBytes:function(n){for(var e=[],r=0;r<n.length;r++)e.push(255&n.charCodeAt(r));return e},bytesToString:function(n){for(var e=[],r=0;r<n.length;r++)e.push(String.fromCharCode(n[r]));return e.join("")}}};module.exports=charenc;

},{}],98:[function(require,module,exports){
require("../modules/es6.object.to-string"),require("../modules/es6.string.iterator"),require("../modules/web.dom.iterable"),require("../modules/es6.set"),module.exports=require("../modules/_core").Set;

},{"../modules/_core":119,"../modules/es6.object.to-string":190,"../modules/es6.set":191,"../modules/es6.string.iterator":193,"../modules/web.dom.iterable":195}],99:[function(require,module,exports){
require("../modules/es6.symbol"),require("../modules/es6.object.to-string"),module.exports=require("../modules/_core").Symbol;

},{"../modules/_core":119,"../modules/es6.object.to-string":190,"../modules/es6.symbol":194}],100:[function(require,module,exports){
require("../../modules/es6.array.find-index"),module.exports=require("../../modules/_core").Array.findIndex;

},{"../../modules/_core":119,"../../modules/es6.array.find-index":184}],101:[function(require,module,exports){
require("../../modules/es6.array.find"),module.exports=require("../../modules/_core").Array.find;

},{"../../modules/_core":119,"../../modules/es6.array.find":185}],102:[function(require,module,exports){
require("../../modules/es6.string.iterator"),require("../../modules/es6.array.from"),module.exports=require("../../modules/_core").Array.from;

},{"../../modules/_core":119,"../../modules/es6.array.from":186,"../../modules/es6.string.iterator":193}],103:[function(require,module,exports){
require("../../modules/es6.array.of"),module.exports=require("../../modules/_core").Array.of;

},{"../../modules/_core":119,"../../modules/es6.array.of":188}],104:[function(require,module,exports){
require("../../modules/es6.object.is"),module.exports=require("../../modules/_core").Object.is;

},{"../../modules/_core":119,"../../modules/es6.object.is":189}],105:[function(require,module,exports){
require("../../modules/es6.string.includes"),module.exports=require("../../modules/_core").String.includes;
},{"../../modules/_core":119,"../../modules/es6.string.includes":192}],106:[function(require,module,exports){
require("../../modules/es6.string.iterator"),require("../../modules/web.dom.iterable"),module.exports=require("../../modules/_wks-ext").f("iterator");

},{"../../modules/_wks-ext":181,"../../modules/es6.string.iterator":193,"../../modules/web.dom.iterable":195}],107:[function(require,module,exports){
module.exports=function(o){if("function"!=typeof o)throw TypeError(o+" is not a function!");return o};

},{}],108:[function(require,module,exports){
var UNSCOPABLES=require("./_wks")("unscopables"),ArrayProto=Array.prototype;void 0==ArrayProto[UNSCOPABLES]&&require("./_hide")(ArrayProto,UNSCOPABLES,{}),module.exports=function(r){ArrayProto[UNSCOPABLES][r]=!0};

},{"./_hide":133,"./_wks":182}],109:[function(require,module,exports){
module.exports=function(o,n,r,i){if(!(o instanceof n)||void 0!==i&&i in o)throw TypeError(r+": incorrect invocation!");return o};

},{}],110:[function(require,module,exports){
var isObject=require("./_is-object");module.exports=function(e){if(!isObject(e))throw TypeError(e+" is not an object!");return e};

},{"./_is-object":140}],111:[function(require,module,exports){
var toIObject=require("./_to-iobject"),toLength=require("./_to-length"),toAbsoluteIndex=require("./_to-absolute-index");module.exports=function(e){return function(t,o,r){var n,u=toIObject(t),i=toLength(u.length),f=toAbsoluteIndex(r,i);if(e&&o!=o){for(;i>f;)if((n=u[f++])!=n)return!0}else for(;i>f;f++)if((e||f in u)&&u[f]===o)return e||f||0;return!e&&-1}};

},{"./_to-absolute-index":172,"./_to-iobject":174,"./_to-length":175}],112:[function(require,module,exports){
var ctx=require("./_ctx"),IObject=require("./_iobject"),toObject=require("./_to-object"),toLength=require("./_to-length"),asc=require("./_array-species-create");module.exports=function(e,r){var t=1==e,c=2==e,i=3==e,n=4==e,u=6==e,o=5==e||u,s=r||asc;return function(r,a,f){for(var b,h,j=toObject(r),l=IObject(j),q=ctx(a,f,3),_=toLength(l.length),g=0,v=t?s(r,_):c?s(r,0):void 0;_>g;g++)if((o||g in l)&&(b=l[g],h=q(b,g,j),e))if(t)v[g]=h;else if(h)switch(e){case 3:return!0;case 5:return b;case 6:return g;case 2:v.push(b)}else if(n)return!1;return u?-1:i||n?n:v}};

},{"./_array-species-create":114,"./_ctx":121,"./_iobject":137,"./_to-length":175,"./_to-object":176}],113:[function(require,module,exports){
var isObject=require("./_is-object"),isArray=require("./_is-array"),SPECIES=require("./_wks")("species");module.exports=function(r){var e;return isArray(r)&&(e=r.constructor,"function"!=typeof e||e!==Array&&!isArray(e.prototype)||(e=void 0),isObject(e)&&null===(e=e[SPECIES])&&(e=void 0)),void 0===e?Array:e};
},{"./_is-array":139,"./_is-object":140,"./_wks":182}],114:[function(require,module,exports){
var speciesConstructor=require("./_array-species-constructor");module.exports=function(r,e){return new(speciesConstructor(r))(e)};

},{"./_array-species-constructor":113}],115:[function(require,module,exports){
var cof=require("./_cof"),TAG=require("./_wks")("toStringTag"),ARG="Arguments"==cof(function(){return arguments}()),tryGet=function(t,e){try{return t[e]}catch(t){}};module.exports=function(t){var e,r,n;return void 0===t?"Undefined":null===t?"Null":"string"==typeof(r=tryGet(e=Object(t),TAG))?r:ARG?cof(e):"Object"==(n=cof(e))&&"function"==typeof e.callee?"Arguments":n};

},{"./_cof":116,"./_wks":182}],116:[function(require,module,exports){
var toString={}.toString;module.exports=function(t){return toString.call(t).slice(8,-1)};
},{}],117:[function(require,module,exports){
"use strict";var dP=require("./_object-dp").f,create=require("./_object-create"),redefineAll=require("./_redefine-all"),ctx=require("./_ctx"),anInstance=require("./_an-instance"),forOf=require("./_for-of"),$iterDefine=require("./_iter-define"),step=require("./_iter-step"),setSpecies=require("./_set-species"),DESCRIPTORS=require("./_descriptors"),fastKey=require("./_meta").fastKey,validate=require("./_validate-collection"),SIZE=DESCRIPTORS?"_s":"size",getEntry=function(e,t){var r,i=fastKey(t);if("F"!==i)return e._i[i];for(r=e._f;r;r=r.n)if(r.k==t)return r};module.exports={getConstructor:function(e,t,r,i){var n=e(function(e,f){anInstance(e,n,t,"_i"),e._t=t,e._i=create(null),e._f=void 0,e._l=void 0,e[SIZE]=0,void 0!=f&&forOf(f,r,e[i],e)});return redefineAll(n.prototype,{clear:function(){for(var e=validate(this,t),r=e._i,i=e._f;i;i=i.n)i.r=!0,i.p&&(i.p=i.p.n=void 0),delete r[i.i];e._f=e._l=void 0,e[SIZE]=0},delete:function(e){var r=validate(this,t),i=getEntry(r,e);if(i){var n=i.n,f=i.p;delete r._i[i.i],i.r=!0,f&&(f.n=n),n&&(n.p=f),r._f==i&&(r._f=n),r._l==i&&(r._l=f),r[SIZE]--}return!!i},forEach:function(e){validate(this,t);for(var r,i=ctx(e,arguments.length>1?arguments[1]:void 0,3);r=r?r.n:this._f;)for(i(r.v,r.k,this);r&&r.r;)r=r.p},has:function(e){return!!getEntry(validate(this,t),e)}}),DESCRIPTORS&&dP(n.prototype,"size",{get:function(){return validate(this,t)[SIZE]}}),n},def:function(e,t,r){var i,n,f=getEntry(e,t);return f?f.v=r:(e._l=f={i:n=fastKey(t,!0),k:t,v:r,p:i=e._l,n:void 0,r:!1},e._f||(e._f=f),i&&(i.n=f),e[SIZE]++,"F"!==n&&(e._i[n]=f)),e},getEntry:getEntry,setStrong:function(e,t,r){$iterDefine(e,t,function(e,r){this._t=validate(e,t),this._k=r,this._l=void 0},function(){for(var e=this,t=e._k,r=e._l;r&&r.r;)r=r.p;return e._t&&(e._l=r=r?r.n:e._t._f)?"keys"==t?step(0,r.k):"values"==t?step(0,r.v):step(0,[r.k,r.v]):(e._t=void 0,step(1))},r?"entries":"values",!r,!0),setSpecies(t)}};

},{"./_an-instance":109,"./_ctx":121,"./_descriptors":123,"./_for-of":130,"./_iter-define":144,"./_iter-step":146,"./_meta":149,"./_object-create":150,"./_object-dp":151,"./_redefine-all":162,"./_set-species":166,"./_validate-collection":179}],118:[function(require,module,exports){
"use strict";var global=require("./_global"),$export=require("./_export"),redefine=require("./_redefine"),redefineAll=require("./_redefine-all"),meta=require("./_meta"),forOf=require("./_for-of"),anInstance=require("./_an-instance"),isObject=require("./_is-object"),fails=require("./_fails"),$iterDetect=require("./_iter-detect"),setToStringTag=require("./_set-to-string-tag"),inheritIfRequired=require("./_inherit-if-required");module.exports=function(e,t,r,i,n,o){var a=global[e],u=a,f=n?"set":"add",s=u&&u.prototype,c={},l=function(e){var t=s[e];redefine(s,e,"delete"==e?function(e){return!(o&&!isObject(e))&&t.call(this,0===e?0:e)}:"has"==e?function(e){return!(o&&!isObject(e))&&t.call(this,0===e?0:e)}:"get"==e?function(e){return o&&!isObject(e)?void 0:t.call(this,0===e?0:e)}:"add"==e?function(e){return t.call(this,0===e?0:e),this}:function(e,r){return t.call(this,0===e?0:e,r),this})};if("function"==typeof u&&(o||s.forEach&&!fails(function(){(new u).entries().next()}))){var d=new u,h=d[f](o?{}:-0,1)!=d,q=fails(function(){d.has(1)}),p=$iterDetect(function(e){new u(e)}),g=!o&&fails(function(){for(var e=new u,t=5;t--;)e[f](t,t);return!e.has(-0)});p||(u=t(function(t,r){anInstance(t,u,e);var i=inheritIfRequired(new a,t,u);return void 0!=r&&forOf(r,n,i[f],i),i}),u.prototype=s,s.constructor=u),(q||g)&&(l("delete"),l("has"),n&&l("get")),(g||h)&&l(f),o&&s.clear&&delete s.clear}else u=i.getConstructor(t,e,n,f),redefineAll(u.prototype,r),meta.NEED=!0;return setToStringTag(u,e),c[e]=u,$export($export.G+$export.W+$export.F*(u!=a),c),o||i.setStrong(u,e,n),u};

},{"./_an-instance":109,"./_export":127,"./_fails":129,"./_for-of":130,"./_global":131,"./_inherit-if-required":136,"./_is-object":140,"./_iter-detect":145,"./_meta":149,"./_redefine":163,"./_redefine-all":162,"./_set-to-string-tag":167}],119:[function(require,module,exports){
var core=module.exports={version:"2.5.3"};"number"==typeof __e&&(__e=core);

},{}],120:[function(require,module,exports){
"use strict";var $defineProperty=require("./_object-dp"),createDesc=require("./_property-desc");module.exports=function(e,r,t){r in e?$defineProperty.f(e,r,createDesc(0,t)):e[r]=t};

},{"./_object-dp":151,"./_property-desc":161}],121:[function(require,module,exports){
var aFunction=require("./_a-function");module.exports=function(n,r,t){if(aFunction(n),void 0===r)return n;switch(t){case 1:return function(t){return n.call(r,t)};case 2:return function(t,u){return n.call(r,t,u)};case 3:return function(t,u,e){return n.call(r,t,u,e)}}return function(){return n.apply(r,arguments)}};

},{"./_a-function":107}],122:[function(require,module,exports){
module.exports=function(o){if(void 0==o)throw TypeError("Can't call method on  "+o);return o};

},{}],123:[function(require,module,exports){
module.exports=!require("./_fails")(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a});

},{"./_fails":129}],124:[function(require,module,exports){
var isObject=require("./_is-object"),document=require("./_global").document,is=isObject(document)&&isObject(document.createElement);module.exports=function(e){return is?document.createElement(e):{}};

},{"./_global":131,"./_is-object":140}],125:[function(require,module,exports){
module.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",");

},{}],126:[function(require,module,exports){
var getKeys=require("./_object-keys"),gOPS=require("./_object-gops"),pIE=require("./_object-pie");module.exports=function(e){var r=getKeys(e),t=gOPS.f;if(t)for(var o,u=t(e),g=pIE.f,i=0;u.length>i;)g.call(e,o=u[i++])&&r.push(o);return r};

},{"./_object-gops":156,"./_object-keys":159,"./_object-pie":160}],127:[function(require,module,exports){
var global=require("./_global"),core=require("./_core"),hide=require("./_hide"),redefine=require("./_redefine"),ctx=require("./_ctx"),PROTOTYPE="prototype",$export=function(e,o,r){var t,x,p,l,i=e&$export.F,$=e&$export.G,c=e&$export.S,a=e&$export.P,n=e&$export.B,P=$?global:c?global[o]||(global[o]={}):(global[o]||{})[PROTOTYPE],u=$?core:core[o]||(core[o]={}),b=u[PROTOTYPE]||(u[PROTOTYPE]={});$&&(r=o);for(t in r)x=!i&&P&&void 0!==P[t],p=(x?P:r)[t],l=n&&x?ctx(p,global):a&&"function"==typeof p?ctx(Function.call,p):p,P&&redefine(P,t,p,e&$export.U),u[t]!=p&&hide(u,t,l),a&&b[t]!=p&&(b[t]=p)};global.core=core,$export.F=1,$export.G=2,$export.S=4,$export.P=8,$export.B=16,$export.W=32,$export.U=64,$export.R=128,module.exports=$export;

},{"./_core":119,"./_ctx":121,"./_global":131,"./_hide":133,"./_redefine":163}],128:[function(require,module,exports){
var MATCH=require("./_wks")("match");module.exports=function(r){var t=/./;try{"/./"[r](t)}catch(c){try{return t[MATCH]=!1,!"/./"[r](t)}catch(r){}}return!0};
},{"./_wks":182}],129:[function(require,module,exports){
module.exports=function(r){try{return!!r()}catch(r){return!0}};

},{}],130:[function(require,module,exports){
var ctx=require("./_ctx"),call=require("./_iter-call"),isArrayIter=require("./_is-array-iter"),anObject=require("./_an-object"),toLength=require("./_to-length"),getIterFn=require("./core.get-iterator-method"),BREAK={},RETURN={},exports=module.exports=function(e,r,t,o,i){var n,a,R,c,l=i?function(){return e}:getIterFn(e),u=ctx(t,o,r?2:1),E=0;if("function"!=typeof l)throw TypeError(e+" is not iterable!");if(isArrayIter(l)){for(n=toLength(e.length);n>E;E++)if((c=r?u(anObject(a=e[E])[0],a[1]):u(e[E]))===BREAK||c===RETURN)return c}else for(R=l.call(e);!(a=R.next()).done;)if((c=call(R,u,a.value,r))===BREAK||c===RETURN)return c};exports.BREAK=BREAK,exports.RETURN=RETURN;

},{"./_an-object":110,"./_ctx":121,"./_is-array-iter":138,"./_iter-call":142,"./_to-length":175,"./core.get-iterator-method":183}],131:[function(require,module,exports){
var global=module.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=global);

},{}],132:[function(require,module,exports){
var hasOwnProperty={}.hasOwnProperty;module.exports=function(r,e){return hasOwnProperty.call(r,e)};

},{}],133:[function(require,module,exports){
var dP=require("./_object-dp"),createDesc=require("./_property-desc");module.exports=require("./_descriptors")?function(e,r,t){return dP.f(e,r,createDesc(1,t))}:function(e,r,t){return e[r]=t,e};

},{"./_descriptors":123,"./_object-dp":151,"./_property-desc":161}],134:[function(require,module,exports){
var document=require("./_global").document;module.exports=document&&document.documentElement;

},{"./_global":131}],135:[function(require,module,exports){
module.exports=!require("./_descriptors")&&!require("./_fails")(function(){return 7!=Object.defineProperty(require("./_dom-create")("div"),"a",{get:function(){return 7}}).a});

},{"./_descriptors":123,"./_dom-create":124,"./_fails":129}],136:[function(require,module,exports){
var isObject=require("./_is-object"),setPrototypeOf=require("./_set-proto").set;module.exports=function(t,e,o){var r,p=e.constructor;return p!==o&&"function"==typeof p&&(r=p.prototype)!==o.prototype&&isObject(r)&&setPrototypeOf&&setPrototypeOf(t,r),t};

},{"./_is-object":140,"./_set-proto":165}],137:[function(require,module,exports){
var cof=require("./_cof");module.exports=Object("z").propertyIsEnumerable(0)?Object:function(e){return"String"==cof(e)?e.split(""):Object(e)};

},{"./_cof":116}],138:[function(require,module,exports){
var Iterators=require("./_iterators"),ITERATOR=require("./_wks")("iterator"),ArrayProto=Array.prototype;module.exports=function(r){return void 0!==r&&(Iterators.Array===r||ArrayProto[ITERATOR]===r)};

},{"./_iterators":147,"./_wks":182}],139:[function(require,module,exports){
var cof=require("./_cof");module.exports=Array.isArray||function(r){return"Array"==cof(r)};

},{"./_cof":116}],140:[function(require,module,exports){
module.exports=function(o){return"object"==typeof o?null!==o:"function"==typeof o};

},{}],141:[function(require,module,exports){
var isObject=require("./_is-object"),cof=require("./_cof"),MATCH=require("./_wks")("match");module.exports=function(e){var r;return isObject(e)&&(void 0!==(r=e[MATCH])?!!r:"RegExp"==cof(e))};
},{"./_cof":116,"./_is-object":140,"./_wks":182}],142:[function(require,module,exports){
var anObject=require("./_an-object");module.exports=function(r,t,e,a){try{return a?t(anObject(e)[0],e[1]):t(e)}catch(t){var c=r.return;throw void 0!==c&&anObject(c.call(r)),t}};

},{"./_an-object":110}],143:[function(require,module,exports){
"use strict";var create=require("./_object-create"),descriptor=require("./_property-desc"),setToStringTag=require("./_set-to-string-tag"),IteratorPrototype={};require("./_hide")(IteratorPrototype,require("./_wks")("iterator"),function(){return this}),module.exports=function(r,t,e){r.prototype=create(IteratorPrototype,{next:descriptor(1,e)}),setToStringTag(r,t+" Iterator")};

},{"./_hide":133,"./_object-create":150,"./_property-desc":161,"./_set-to-string-tag":167,"./_wks":182}],144:[function(require,module,exports){
"use strict";var LIBRARY=require("./_library"),$export=require("./_export"),redefine=require("./_redefine"),hide=require("./_hide"),has=require("./_has"),Iterators=require("./_iterators"),$iterCreate=require("./_iter-create"),setToStringTag=require("./_set-to-string-tag"),getPrototypeOf=require("./_object-gpo"),ITERATOR=require("./_wks")("iterator"),BUGGY=!([].keys&&"next"in[].keys()),FF_ITERATOR="@@iterator",KEYS="keys",VALUES="values",returnThis=function(){return this};module.exports=function(e,r,t,i,n,o,s){$iterCreate(t,r,i);var u,a,T,R=function(e){if(!BUGGY&&e in f)return f[e];switch(e){case KEYS:case VALUES:return function(){return new t(this,e)}}return function(){return new t(this,e)}},A=r+" Iterator",E=n==VALUES,c=!1,f=e.prototype,h=f[ITERATOR]||f[FF_ITERATOR]||n&&f[n],I=!BUGGY&&h||R(n),p=n?E?R("entries"):I:void 0,_="Array"==r?f.entries||h:h;if(_&&(T=getPrototypeOf(_.call(new e)))!==Object.prototype&&T.next&&(setToStringTag(T,A,!0),LIBRARY||has(T,ITERATOR)||hide(T,ITERATOR,returnThis)),E&&h&&h.name!==VALUES&&(c=!0,I=function(){return h.call(this)}),LIBRARY&&!s||!BUGGY&&!c&&f[ITERATOR]||hide(f,ITERATOR,I),Iterators[r]=I,Iterators[A]=returnThis,n)if(u={values:E?I:R(VALUES),keys:o?I:R(KEYS),entries:p},s)for(a in u)a in f||redefine(f,a,u[a]);else $export($export.P+$export.F*(BUGGY||c),r,u);return u};

},{"./_export":127,"./_has":132,"./_hide":133,"./_iter-create":143,"./_iterators":147,"./_library":148,"./_object-gpo":157,"./_redefine":163,"./_set-to-string-tag":167,"./_wks":182}],145:[function(require,module,exports){
var ITERATOR=require("./_wks")("iterator"),SAFE_CLOSING=!1;try{var riter=[7][ITERATOR]();riter.return=function(){SAFE_CLOSING=!0},Array.from(riter,function(){throw 2})}catch(r){}module.exports=function(r,t){if(!t&&!SAFE_CLOSING)return!1;var n=!1;try{var e=[7],u=e[ITERATOR]();u.next=function(){return{done:n=!0}},e[ITERATOR]=function(){return u},r(e)}catch(r){}return n};

},{"./_wks":182}],146:[function(require,module,exports){
module.exports=function(e,n){return{value:n,done:!!e}};

},{}],147:[function(require,module,exports){
module.exports={};

},{}],148:[function(require,module,exports){
module.exports=!1;

},{}],149:[function(require,module,exports){
var META=require("./_uid")("meta"),isObject=require("./_is-object"),has=require("./_has"),setDesc=require("./_object-dp").f,id=0,isExtensible=Object.isExtensible||function(){return!0},FREEZE=!require("./_fails")(function(){return isExtensible(Object.preventExtensions({}))}),setMeta=function(e){setDesc(e,META,{value:{i:"O"+ ++id,w:{}}})},fastKey=function(e,t){if(!isObject(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!has(e,META)){if(!isExtensible(e))return"F";if(!t)return"E";setMeta(e)}return e[META].i},getWeak=function(e,t){if(!has(e,META)){if(!isExtensible(e))return!0;if(!t)return!1;setMeta(e)}return e[META].w},onFreeze=function(e){return FREEZE&&meta.NEED&&isExtensible(e)&&!has(e,META)&&setMeta(e),e},meta=module.exports={KEY:META,NEED:!1,fastKey:fastKey,getWeak:getWeak,onFreeze:onFreeze};

},{"./_fails":129,"./_has":132,"./_is-object":140,"./_object-dp":151,"./_uid":178}],150:[function(require,module,exports){
var anObject=require("./_an-object"),dPs=require("./_object-dps"),enumBugKeys=require("./_enum-bug-keys"),IE_PROTO=require("./_shared-key")("IE_PROTO"),Empty=function(){},PROTOTYPE="prototype",createDict=function(){var e,t=require("./_dom-create")("iframe"),r=enumBugKeys.length;for(t.style.display="none",require("./_html").appendChild(t),t.src="javascript:",e=t.contentWindow.document,e.open(),e.write("<script>document.F=Object<\/script>"),e.close(),createDict=e.F;r--;)delete createDict[PROTOTYPE][enumBugKeys[r]];return createDict()};module.exports=Object.create||function(e,t){var r;return null!==e?(Empty[PROTOTYPE]=anObject(e),r=new Empty,Empty[PROTOTYPE]=null,r[IE_PROTO]=e):r=createDict(),void 0===t?r:dPs(r,t)};

},{"./_an-object":110,"./_dom-create":124,"./_enum-bug-keys":125,"./_html":134,"./_object-dps":152,"./_shared-key":168}],151:[function(require,module,exports){
var anObject=require("./_an-object"),IE8_DOM_DEFINE=require("./_ie8-dom-define"),toPrimitive=require("./_to-primitive"),dP=Object.defineProperty;exports.f=require("./_descriptors")?Object.defineProperty:function(e,r,t){if(anObject(e),r=toPrimitive(r,!0),anObject(t),IE8_DOM_DEFINE)try{return dP(e,r,t)}catch(e){}if("get"in t||"set"in t)throw TypeError("Accessors not supported!");return"value"in t&&(e[r]=t.value),e};

},{"./_an-object":110,"./_descriptors":123,"./_ie8-dom-define":135,"./_to-primitive":177}],152:[function(require,module,exports){
var dP=require("./_object-dp"),anObject=require("./_an-object"),getKeys=require("./_object-keys");module.exports=require("./_descriptors")?Object.defineProperties:function(e,r){anObject(e);for(var t,o=getKeys(r),c=o.length,i=0;c>i;)dP.f(e,t=o[i++],r[t]);return e};

},{"./_an-object":110,"./_descriptors":123,"./_object-dp":151,"./_object-keys":159}],153:[function(require,module,exports){
var pIE=require("./_object-pie"),createDesc=require("./_property-desc"),toIObject=require("./_to-iobject"),toPrimitive=require("./_to-primitive"),has=require("./_has"),IE8_DOM_DEFINE=require("./_ie8-dom-define"),gOPD=Object.getOwnPropertyDescriptor;exports.f=require("./_descriptors")?gOPD:function(e,r){if(e=toIObject(e),r=toPrimitive(r,!0),IE8_DOM_DEFINE)try{return gOPD(e,r)}catch(e){}if(has(e,r))return createDesc(!pIE.f.call(e,r),e[r])};

},{"./_descriptors":123,"./_has":132,"./_ie8-dom-define":135,"./_object-pie":160,"./_property-desc":161,"./_to-iobject":174,"./_to-primitive":177}],154:[function(require,module,exports){
var toIObject=require("./_to-iobject"),gOPN=require("./_object-gopn").f,toString={}.toString,windowNames="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[],getWindowNames=function(e){try{return gOPN(e)}catch(e){return windowNames.slice()}};module.exports.f=function(e){return windowNames&&"[object Window]"==toString.call(e)?getWindowNames(e):gOPN(toIObject(e))};

},{"./_object-gopn":155,"./_to-iobject":174}],155:[function(require,module,exports){
var $keys=require("./_object-keys-internal"),hiddenKeys=require("./_enum-bug-keys").concat("length","prototype");exports.f=Object.getOwnPropertyNames||function(e){return $keys(e,hiddenKeys)};

},{"./_enum-bug-keys":125,"./_object-keys-internal":158}],156:[function(require,module,exports){
exports.f=Object.getOwnPropertySymbols;

},{}],157:[function(require,module,exports){
var has=require("./_has"),toObject=require("./_to-object"),IE_PROTO=require("./_shared-key")("IE_PROTO"),ObjectProto=Object.prototype;module.exports=Object.getPrototypeOf||function(t){return t=toObject(t),has(t,IE_PROTO)?t[IE_PROTO]:"function"==typeof t.constructor&&t instanceof t.constructor?t.constructor.prototype:t instanceof Object?ObjectProto:null};

},{"./_has":132,"./_shared-key":168,"./_to-object":176}],158:[function(require,module,exports){
var has=require("./_has"),toIObject=require("./_to-iobject"),arrayIndexOf=require("./_array-includes")(!1),IE_PROTO=require("./_shared-key")("IE_PROTO");module.exports=function(r,e){var a,t=toIObject(r),u=0,O=[];for(a in t)a!=IE_PROTO&&has(t,a)&&O.push(a);for(;e.length>u;)has(t,a=e[u++])&&(~arrayIndexOf(O,a)||O.push(a));return O};

},{"./_array-includes":111,"./_has":132,"./_shared-key":168,"./_to-iobject":174}],159:[function(require,module,exports){
var $keys=require("./_object-keys-internal"),enumBugKeys=require("./_enum-bug-keys");module.exports=Object.keys||function(e){return $keys(e,enumBugKeys)};

},{"./_enum-bug-keys":125,"./_object-keys-internal":158}],160:[function(require,module,exports){
exports.f={}.propertyIsEnumerable;

},{}],161:[function(require,module,exports){
module.exports=function(e,r){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:r}};

},{}],162:[function(require,module,exports){
var redefine=require("./_redefine");module.exports=function(e,r,n){for(var i in r)redefine(e,i,r[i],n);return e};

},{"./_redefine":163}],163:[function(require,module,exports){
var global=require("./_global"),hide=require("./_hide"),has=require("./_has"),SRC=require("./_uid")("src"),TO_STRING="toString",$toString=Function[TO_STRING],TPL=(""+$toString).split(TO_STRING);require("./_core").inspectSource=function(e){return $toString.call(e)},(module.exports=function(e,i,t,r){var n="function"==typeof t;n&&(has(t,"name")||hide(t,"name",i)),e[i]!==t&&(n&&(has(t,SRC)||hide(t,SRC,e[i]?""+e[i]:TPL.join(String(i)))),e===global?e[i]=t:r?e[i]?e[i]=t:hide(e,i,t):(delete e[i],hide(e,i,t)))})(Function.prototype,TO_STRING,function(){return"function"==typeof this&&this[SRC]||$toString.call(this)});

},{"./_core":119,"./_global":131,"./_has":132,"./_hide":133,"./_uid":178}],164:[function(require,module,exports){
module.exports=Object.is||function(e,t){return e===t?0!==e||1/e==1/t:e!=e&&t!=t};

},{}],165:[function(require,module,exports){
var isObject=require("./_is-object"),anObject=require("./_an-object"),check=function(t,e){if(anObject(t),!isObject(e)&&null!==e)throw TypeError(e+": can't set as prototype!")};module.exports={set:Object.setPrototypeOf||("__proto__"in{}?function(t,e,c){try{c=require("./_ctx")(Function.call,require("./_object-gopd").f(Object.prototype,"__proto__").set,2),c(t,[]),e=!(t instanceof Array)}catch(t){e=!0}return function(t,r){return check(t,r),e?t.__proto__=r:c(t,r),t}}({},!1):void 0),check:check};

},{"./_an-object":110,"./_ctx":121,"./_is-object":140,"./_object-gopd":153}],166:[function(require,module,exports){
"use strict";var global=require("./_global"),dP=require("./_object-dp"),DESCRIPTORS=require("./_descriptors"),SPECIES=require("./_wks")("species");module.exports=function(e){var r=global[e];DESCRIPTORS&&r&&!r[SPECIES]&&dP.f(r,SPECIES,{configurable:!0,get:function(){return this}})};

},{"./_descriptors":123,"./_global":131,"./_object-dp":151,"./_wks":182}],167:[function(require,module,exports){
var def=require("./_object-dp").f,has=require("./_has"),TAG=require("./_wks")("toStringTag");module.exports=function(e,r,o){e&&!has(e=o?e:e.prototype,TAG)&&def(e,TAG,{configurable:!0,value:r})};

},{"./_has":132,"./_object-dp":151,"./_wks":182}],168:[function(require,module,exports){
var shared=require("./_shared")("keys"),uid=require("./_uid");module.exports=function(e){return shared[e]||(shared[e]=uid(e))};

},{"./_shared":169,"./_uid":178}],169:[function(require,module,exports){
var global=require("./_global"),SHARED="__core-js_shared__",store=global[SHARED]||(global[SHARED]={});module.exports=function(o){return store[o]||(store[o]={})};

},{"./_global":131}],170:[function(require,module,exports){
var toInteger=require("./_to-integer"),defined=require("./_defined");module.exports=function(e){return function(r,t){var n,i,d=String(defined(r)),o=toInteger(t),u=d.length;return o<0||o>=u?e?"":void 0:(n=d.charCodeAt(o),n<55296||n>56319||o+1===u||(i=d.charCodeAt(o+1))<56320||i>57343?e?d.charAt(o):n:e?d.slice(o,o+2):i-56320+(n-55296<<10)+65536)}};

},{"./_defined":122,"./_to-integer":173}],171:[function(require,module,exports){
var isRegExp=require("./_is-regexp"),defined=require("./_defined");module.exports=function(e,r,i){if(isRegExp(r))throw TypeError("String#"+i+" doesn't accept regex!");return String(defined(e))};

},{"./_defined":122,"./_is-regexp":141}],172:[function(require,module,exports){
var toInteger=require("./_to-integer"),max=Math.max,min=Math.min;module.exports=function(e,t){return e=toInteger(e),e<0?max(e+t,0):min(e,t)};

},{"./_to-integer":173}],173:[function(require,module,exports){
var ceil=Math.ceil,floor=Math.floor;module.exports=function(o){return isNaN(o=+o)?0:(o>0?floor:ceil)(o)};

},{}],174:[function(require,module,exports){
var IObject=require("./_iobject"),defined=require("./_defined");module.exports=function(e){return IObject(defined(e))};

},{"./_defined":122,"./_iobject":137}],175:[function(require,module,exports){
var toInteger=require("./_to-integer"),min=Math.min;module.exports=function(e){return e>0?min(toInteger(e),9007199254740991):0};

},{"./_to-integer":173}],176:[function(require,module,exports){
var defined=require("./_defined");module.exports=function(e){return Object(defined(e))};

},{"./_defined":122}],177:[function(require,module,exports){
var isObject=require("./_is-object");module.exports=function(t,e){if(!isObject(t))return t;var r,i;if(e&&"function"==typeof(r=t.toString)&&!isObject(i=r.call(t)))return i;if("function"==typeof(r=t.valueOf)&&!isObject(i=r.call(t)))return i;if(!e&&"function"==typeof(r=t.toString)&&!isObject(i=r.call(t)))return i;throw TypeError("Can't convert object to primitive value")};

},{"./_is-object":140}],178:[function(require,module,exports){
var id=0,px=Math.random();module.exports=function(o){return"Symbol(".concat(void 0===o?"":o,")_",(++id+px).toString(36))};

},{}],179:[function(require,module,exports){
var isObject=require("./_is-object");module.exports=function(e,r){if(!isObject(e)||e._t!==r)throw TypeError("Incompatible receiver, "+r+" required!");return e};

},{"./_is-object":140}],180:[function(require,module,exports){
var global=require("./_global"),core=require("./_core"),LIBRARY=require("./_library"),wksExt=require("./_wks-ext"),defineProperty=require("./_object-dp").f;module.exports=function(e){var r=core.Symbol||(core.Symbol=LIBRARY?{}:global.Symbol||{});"_"==e.charAt(0)||e in r||defineProperty(r,e,{value:wksExt.f(e)})};

},{"./_core":119,"./_global":131,"./_library":148,"./_object-dp":151,"./_wks-ext":181}],181:[function(require,module,exports){
exports.f=require("./_wks");

},{"./_wks":182}],182:[function(require,module,exports){
var store=require("./_shared")("wks"),uid=require("./_uid"),Symbol=require("./_global").Symbol,USE_SYMBOL="function"==typeof Symbol,$exports=module.exports=function(o){return store[o]||(store[o]=USE_SYMBOL&&Symbol[o]||(USE_SYMBOL?Symbol:uid)("Symbol."+o))};$exports.store=store;

},{"./_global":131,"./_shared":169,"./_uid":178}],183:[function(require,module,exports){
var classof=require("./_classof"),ITERATOR=require("./_wks")("iterator"),Iterators=require("./_iterators");module.exports=require("./_core").getIteratorMethod=function(r){if(void 0!=r)return r[ITERATOR]||r["@@iterator"]||Iterators[classof(r)]};

},{"./_classof":115,"./_core":119,"./_iterators":147,"./_wks":182}],184:[function(require,module,exports){
"use strict";var $export=require("./_export"),$find=require("./_array-methods")(6),KEY="findIndex",forced=!0;KEY in[]&&Array(1)[KEY](function(){forced=!1}),$export($export.P+$export.F*forced,"Array",{findIndex:function(r){return $find(this,r,arguments.length>1?arguments[1]:void 0)}}),require("./_add-to-unscopables")(KEY);

},{"./_add-to-unscopables":108,"./_array-methods":112,"./_export":127}],185:[function(require,module,exports){
"use strict";var $export=require("./_export"),$find=require("./_array-methods")(5),KEY="find",forced=!0;KEY in[]&&Array(1)[KEY](function(){forced=!1}),$export($export.P+$export.F*forced,"Array",{find:function(r){return $find(this,r,arguments.length>1?arguments[1]:void 0)}}),require("./_add-to-unscopables")(KEY);

},{"./_add-to-unscopables":108,"./_array-methods":112,"./_export":127}],186:[function(require,module,exports){
"use strict";var ctx=require("./_ctx"),$export=require("./_export"),toObject=require("./_to-object"),call=require("./_iter-call"),isArrayIter=require("./_is-array-iter"),toLength=require("./_to-length"),createProperty=require("./_create-property"),getIterFn=require("./core.get-iterator-method");$export($export.S+$export.F*!require("./_iter-detect")(function(e){Array.from(e)}),"Array",{from:function(e){var r,t,o,i,a=toObject(e),c="function"==typeof this?this:Array,n=arguments.length,u=n>1?arguments[1]:void 0,l=void 0!==u,y=0,p=getIterFn(a);if(l&&(u=ctx(u,n>2?arguments[2]:void 0,2)),void 0==p||c==Array&&isArrayIter(p))for(r=toLength(a.length),t=new c(r);r>y;y++)createProperty(t,y,l?u(a[y],y):a[y]);else for(i=p.call(a),t=new c;!(o=i.next()).done;y++)createProperty(t,y,l?call(i,u,[o.value,y],!0):o.value);return t.length=y,t}});

},{"./_create-property":120,"./_ctx":121,"./_export":127,"./_is-array-iter":138,"./_iter-call":142,"./_iter-detect":145,"./_to-length":175,"./_to-object":176,"./core.get-iterator-method":183}],187:[function(require,module,exports){
"use strict";var addToUnscopables=require("./_add-to-unscopables"),step=require("./_iter-step"),Iterators=require("./_iterators"),toIObject=require("./_to-iobject");module.exports=require("./_iter-define")(Array,"Array",function(e,t){this._t=toIObject(e),this._i=0,this._k=t},function(){var e=this._t,t=this._k,s=this._i++;return!e||s>=e.length?(this._t=void 0,step(1)):"keys"==t?step(0,s):"values"==t?step(0,e[s]):step(0,[s,e[s]])},"values"),Iterators.Arguments=Iterators.Array,addToUnscopables("keys"),addToUnscopables("values"),addToUnscopables("entries");

},{"./_add-to-unscopables":108,"./_iter-define":144,"./_iter-step":146,"./_iterators":147,"./_to-iobject":174}],188:[function(require,module,exports){
"use strict";var $export=require("./_export"),createProperty=require("./_create-property");$export($export.S+$export.F*require("./_fails")(function(){function r(){}return!(Array.of.call(r)instanceof r)}),"Array",{of:function(){for(var r=0,e=arguments.length,t=new("function"==typeof this?this:Array)(e);e>r;)createProperty(t,r,arguments[r++]);return t.length=e,t}});
},{"./_create-property":120,"./_export":127,"./_fails":129}],189:[function(require,module,exports){
var $export=require("./_export");$export($export.S,"Object",{is:require("./_same-value")});

},{"./_export":127,"./_same-value":164}],190:[function(require,module,exports){
"use strict";var classof=require("./_classof"),test={};test[require("./_wks")("toStringTag")]="z",test+""!="[object z]"&&require("./_redefine")(Object.prototype,"toString",function(){return"[object "+classof(this)+"]"},!0);

},{"./_classof":115,"./_redefine":163,"./_wks":182}],191:[function(require,module,exports){
"use strict";var strong=require("./_collection-strong"),validate=require("./_validate-collection"),SET="Set";module.exports=require("./_collection")(SET,function(t){return function(){return t(this,arguments.length>0?arguments[0]:void 0)}},{add:function(t){return strong.def(validate(this,SET),t=0===t?0:t,t)}},strong);

},{"./_collection":118,"./_collection-strong":117,"./_validate-collection":179}],192:[function(require,module,exports){
"use strict";var $export=require("./_export"),context=require("./_string-context"),INCLUDES="includes";$export($export.P+$export.F*require("./_fails-is-regexp")(INCLUDES),"String",{includes:function(e){return!!~context(this,e,INCLUDES).indexOf(e,arguments.length>1?arguments[1]:void 0)}});

},{"./_export":127,"./_fails-is-regexp":128,"./_string-context":171}],193:[function(require,module,exports){
"use strict";var $at=require("./_string-at")(!0);require("./_iter-define")(String,"String",function(t){this._t=String(t),this._i=0},function(){var t,i=this._t,e=this._i;return e>=i.length?{value:void 0,done:!0}:(t=$at(i,e),this._i+=t.length,{value:t,done:!1})});

},{"./_iter-define":144,"./_string-at":170}],194:[function(require,module,exports){
"use strict";var global=require("./_global"),has=require("./_has"),DESCRIPTORS=require("./_descriptors"),$export=require("./_export"),redefine=require("./_redefine"),META=require("./_meta").KEY,$fails=require("./_fails"),shared=require("./_shared"),setToStringTag=require("./_set-to-string-tag"),uid=require("./_uid"),wks=require("./_wks"),wksExt=require("./_wks-ext"),wksDefine=require("./_wks-define"),enumKeys=require("./_enum-keys"),isArray=require("./_is-array"),anObject=require("./_an-object"),isObject=require("./_is-object"),toIObject=require("./_to-iobject"),toPrimitive=require("./_to-primitive"),createDesc=require("./_property-desc"),_create=require("./_object-create"),gOPNExt=require("./_object-gopn-ext"),$GOPD=require("./_object-gopd"),$DP=require("./_object-dp"),$keys=require("./_object-keys"),gOPD=$GOPD.f,dP=$DP.f,gOPN=gOPNExt.f,$Symbol=global.Symbol,$JSON=global.JSON,_stringify=$JSON&&$JSON.stringify,PROTOTYPE="prototype",HIDDEN=wks("_hidden"),TO_PRIMITIVE=wks("toPrimitive"),isEnum={}.propertyIsEnumerable,SymbolRegistry=shared("symbol-registry"),AllSymbols=shared("symbols"),OPSymbols=shared("op-symbols"),ObjectProto=Object[PROTOTYPE],USE_NATIVE="function"==typeof $Symbol,QObject=global.QObject,setter=!QObject||!QObject[PROTOTYPE]||!QObject[PROTOTYPE].findChild,setSymbolDesc=DESCRIPTORS&&$fails(function(){return 7!=_create(dP({},"a",{get:function(){return dP(this,"a",{value:7}).a}})).a})?function(e,r,t){var o=gOPD(ObjectProto,r);o&&delete ObjectProto[r],dP(e,r,t),o&&e!==ObjectProto&&dP(ObjectProto,r,o)}:dP,wrap=function(e){var r=AllSymbols[e]=_create($Symbol[PROTOTYPE]);return r._k=e,r},isSymbol=USE_NATIVE&&"symbol"==typeof $Symbol.iterator?function(e){return"symbol"==typeof e}:function(e){return e instanceof $Symbol},$defineProperty=function(e,r,t){return e===ObjectProto&&$defineProperty(OPSymbols,r,t),anObject(e),r=toPrimitive(r,!0),anObject(t),has(AllSymbols,r)?(t.enumerable?(has(e,HIDDEN)&&e[HIDDEN][r]&&(e[HIDDEN][r]=!1),t=_create(t,{enumerable:createDesc(0,!1)})):(has(e,HIDDEN)||dP(e,HIDDEN,createDesc(1,{})),e[HIDDEN][r]=!0),setSymbolDesc(e,r,t)):dP(e,r,t)},$defineProperties=function(e,r){anObject(e);for(var t,o=enumKeys(r=toIObject(r)),i=0,s=o.length;s>i;)$defineProperty(e,t=o[i++],r[t]);return e},$create=function(e,r){return void 0===r?_create(e):$defineProperties(_create(e),r)},$propertyIsEnumerable=function(e){var r=isEnum.call(this,e=toPrimitive(e,!0));return!(this===ObjectProto&&has(AllSymbols,e)&&!has(OPSymbols,e))&&(!(r||!has(this,e)||!has(AllSymbols,e)||has(this,HIDDEN)&&this[HIDDEN][e])||r)},$getOwnPropertyDescriptor=function(e,r){if(e=toIObject(e),r=toPrimitive(r,!0),e!==ObjectProto||!has(AllSymbols,r)||has(OPSymbols,r)){var t=gOPD(e,r);return!t||!has(AllSymbols,r)||has(e,HIDDEN)&&e[HIDDEN][r]||(t.enumerable=!0),t}},$getOwnPropertyNames=function(e){for(var r,t=gOPN(toIObject(e)),o=[],i=0;t.length>i;)has(AllSymbols,r=t[i++])||r==HIDDEN||r==META||o.push(r);return o},$getOwnPropertySymbols=function(e){for(var r,t=e===ObjectProto,o=gOPN(t?OPSymbols:toIObject(e)),i=[],s=0;o.length>s;)!has(AllSymbols,r=o[s++])||t&&!has(ObjectProto,r)||i.push(AllSymbols[r]);return i};USE_NATIVE||($Symbol=function(){if(this instanceof $Symbol)throw TypeError("Symbol is not a constructor!");var e=uid(arguments.length>0?arguments[0]:void 0),r=function(t){this===ObjectProto&&r.call(OPSymbols,t),has(this,HIDDEN)&&has(this[HIDDEN],e)&&(this[HIDDEN][e]=!1),setSymbolDesc(this,e,createDesc(1,t))};return DESCRIPTORS&&setter&&setSymbolDesc(ObjectProto,e,{configurable:!0,set:r}),wrap(e)},redefine($Symbol[PROTOTYPE],"toString",function(){return this._k}),$GOPD.f=$getOwnPropertyDescriptor,$DP.f=$defineProperty,require("./_object-gopn").f=gOPNExt.f=$getOwnPropertyNames,require("./_object-pie").f=$propertyIsEnumerable,require("./_object-gops").f=$getOwnPropertySymbols,DESCRIPTORS&&!require("./_library")&&redefine(ObjectProto,"propertyIsEnumerable",$propertyIsEnumerable,!0),wksExt.f=function(e){return wrap(wks(e))}),$export($export.G+$export.W+$export.F*!USE_NATIVE,{Symbol:$Symbol});for(var es6Symbols="hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","),j=0;es6Symbols.length>j;)wks(es6Symbols[j++]);for(var wellKnownSymbols=$keys(wks.store),k=0;wellKnownSymbols.length>k;)wksDefine(wellKnownSymbols[k++]);$export($export.S+$export.F*!USE_NATIVE,"Symbol",{for:function(e){return has(SymbolRegistry,e+="")?SymbolRegistry[e]:SymbolRegistry[e]=$Symbol(e)},keyFor:function(e){if(!isSymbol(e))throw TypeError(e+" is not a symbol!");for(var r in SymbolRegistry)if(SymbolRegistry[r]===e)return r},useSetter:function(){setter=!0},useSimple:function(){setter=!1}}),$export($export.S+$export.F*!USE_NATIVE,"Object",{create:$create,defineProperty:$defineProperty,defineProperties:$defineProperties,getOwnPropertyDescriptor:$getOwnPropertyDescriptor,getOwnPropertyNames:$getOwnPropertyNames,getOwnPropertySymbols:$getOwnPropertySymbols}),$JSON&&$export($export.S+$export.F*(!USE_NATIVE||$fails(function(){var e=$Symbol();return"[null]"!=_stringify([e])||"{}"!=_stringify({a:e})||"{}"!=_stringify(Object(e))})),"JSON",{stringify:function(e){for(var r,t,o=[e],i=1;arguments.length>i;)o.push(arguments[i++]);if(t=r=o[1],(isObject(r)||void 0!==e)&&!isSymbol(e))return isArray(r)||(r=function(e,r){if("function"==typeof t&&(r=t.call(this,e,r)),!isSymbol(r))return r}),o[1]=r,_stringify.apply($JSON,o)}}),$Symbol[PROTOTYPE][TO_PRIMITIVE]||require("./_hide")($Symbol[PROTOTYPE],TO_PRIMITIVE,$Symbol[PROTOTYPE].valueOf),setToStringTag($Symbol,"Symbol"),setToStringTag(Math,"Math",!0),setToStringTag(global.JSON,"JSON",!0);

},{"./_an-object":110,"./_descriptors":123,"./_enum-keys":126,"./_export":127,"./_fails":129,"./_global":131,"./_has":132,"./_hide":133,"./_is-array":139,"./_is-object":140,"./_library":148,"./_meta":149,"./_object-create":150,"./_object-dp":151,"./_object-gopd":153,"./_object-gopn":155,"./_object-gopn-ext":154,"./_object-gops":156,"./_object-keys":159,"./_object-pie":160,"./_property-desc":161,"./_redefine":163,"./_set-to-string-tag":167,"./_shared":169,"./_to-iobject":174,"./_to-primitive":177,"./_uid":178,"./_wks":182,"./_wks-define":180,"./_wks-ext":181}],195:[function(require,module,exports){
for(var $iterators=require("./es6.array.iterator"),getKeys=require("./_object-keys"),redefine=require("./_redefine"),global=require("./_global"),hide=require("./_hide"),Iterators=require("./_iterators"),wks=require("./_wks"),ITERATOR=wks("iterator"),TO_STRING_TAG=wks("toStringTag"),ArrayValues=Iterators.Array,DOMIterables={CSSRuleList:!0,CSSStyleDeclaration:!1,CSSValueList:!1,ClientRectList:!1,DOMRectList:!1,DOMStringList:!1,DOMTokenList:!0,DataTransferItemList:!1,FileList:!1,HTMLAllCollection:!1,HTMLCollection:!1,HTMLFormElement:!1,HTMLSelectElement:!1,MediaList:!0,MimeTypeArray:!1,NamedNodeMap:!1,NodeList:!0,PaintRequestList:!1,Plugin:!1,PluginArray:!1,SVGLengthList:!1,SVGNumberList:!1,SVGPathSegList:!1,SVGPointList:!1,SVGStringList:!1,SVGTransformList:!1,SourceBufferList:!1,StyleSheetList:!0,TextTrackCueList:!1,TextTrackList:!1,TouchList:!1},collections=getKeys(DOMIterables),i=0;i<collections.length;i++){var NAME=collections[i],explicit=DOMIterables[NAME],Collection=global[NAME],proto=Collection&&Collection.prototype,key;if(proto&&(proto[ITERATOR]||hide(proto,ITERATOR,ArrayValues),proto[TO_STRING_TAG]||hide(proto,TO_STRING_TAG,NAME),Iterators[NAME]=ArrayValues,explicit))for(key in $iterators)proto[key]||redefine(proto,key,$iterators[key],!0)}

},{"./_global":131,"./_hide":133,"./_iterators":147,"./_object-keys":159,"./_redefine":163,"./_wks":182,"./es6.array.iterator":187}],196:[function(require,module,exports){
!function(){var r="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",t={rotl:function(r,t){return r<<t|r>>>32-t},rotr:function(r,t){return r<<32-t|r>>>t},endian:function(r){if(r.constructor==Number)return 16711935&t.rotl(r,8)|4278255360&t.rotl(r,24);for(var n=0;n<r.length;n++)r[n]=t.endian(r[n]);return r},randomBytes:function(r){for(var t=[];r>0;r--)t.push(Math.floor(256*Math.random()));return t},bytesToWords:function(r){for(var t=[],n=0,o=0;n<r.length;n++,o+=8)t[o>>>5]|=r[n]<<24-o%32;return t},wordsToBytes:function(r){for(var t=[],n=0;n<32*r.length;n+=8)t.push(r[n>>>5]>>>24-n%32&255);return t},bytesToHex:function(r){for(var t=[],n=0;n<r.length;n++)t.push((r[n]>>>4).toString(16)),t.push((15&r[n]).toString(16));return t.join("")},hexToBytes:function(r){for(var t=[],n=0;n<r.length;n+=2)t.push(parseInt(r.substr(n,2),16));return t},bytesToBase64:function(t){for(var n=[],o=0;o<t.length;o+=3)for(var e=t[o]<<16|t[o+1]<<8|t[o+2],u=0;u<4;u++)8*o+6*u<=8*t.length?n.push(r.charAt(e>>>6*(3-u)&63)):n.push("=");return n.join("")},base64ToBytes:function(t){t=t.replace(/[^A-Z0-9+\/]/gi,"");for(var n=[],o=0,e=0;o<t.length;e=++o%4)0!=e&&n.push((r.indexOf(t.charAt(o-1))&Math.pow(2,-2*e+8)-1)<<2*e|r.indexOf(t.charAt(o))>>>6-2*e);return n}};module.exports=t}();
},{}],197:[function(require,module,exports){
function isUndefinedOrNull(e){return null===e||void 0===e}function isBuffer(e){return!(!e||"object"!=typeof e||"number"!=typeof e.length)&&("function"==typeof e.copy&&"function"==typeof e.slice&&!(e.length>0&&"number"!=typeof e[0]))}function objEquiv(e,t,r){var n,i;if(isUndefinedOrNull(e)||isUndefinedOrNull(t))return!1;if(e.prototype!==t.prototype)return!1;if(isArguments(e))return!!isArguments(t)&&(e=pSlice.call(e),t=pSlice.call(t),deepEqual(e,t,r));if(isBuffer(e)){if(!isBuffer(t))return!1;if(e.length!==t.length)return!1;for(n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}try{var u=objectKeys(e),o=objectKeys(t)}catch(e){return!1}if(u.length!=o.length)return!1;for(u.sort(),o.sort(),n=u.length-1;n>=0;n--)if(u[n]!=o[n])return!1;for(n=u.length-1;n>=0;n--)if(i=u[n],!deepEqual(e[i],t[i],r))return!1;return typeof e==typeof t}var pSlice=Array.prototype.slice,objectKeys=require("./lib/keys.js"),isArguments=require("./lib/is_arguments.js"),deepEqual=module.exports=function(e,t,r){return r||(r={}),e===t||(e instanceof Date&&t instanceof Date?e.getTime()===t.getTime():!e||!t||"object"!=typeof e&&"object"!=typeof t?r.strict?e===t:e==t:objEquiv(e,t,r))};
},{"./lib/is_arguments.js":198,"./lib/keys.js":199}],198:[function(require,module,exports){
function supported(t){return"[object Arguments]"==Object.prototype.toString.call(t)}function unsupported(t){return t&&"object"==typeof t&&"number"==typeof t.length&&Object.prototype.hasOwnProperty.call(t,"callee")&&!Object.prototype.propertyIsEnumerable.call(t,"callee")||!1}var supportsArgumentsClass="[object Arguments]"==function(){return Object.prototype.toString.call(arguments)}();exports=module.exports=supportsArgumentsClass?supported:unsupported,exports.supported=supported,exports.unsupported=unsupported;
},{}],199:[function(require,module,exports){
function shim(e){var s=[];for(var t in e)s.push(t);return s}exports=module.exports="function"==typeof Object.keys?Object.keys:shim,exports.shim=shim;

},{}],200:[function(require,module,exports){
function EventEmitter(){this._events=this._events||{},this._maxListeners=this._maxListeners||void 0}function isFunction(e){return"function"==typeof e}function isNumber(e){return"number"==typeof e}function isObject(e){return"object"==typeof e&&null!==e}function isUndefined(e){return void 0===e}module.exports=EventEmitter,EventEmitter.EventEmitter=EventEmitter,EventEmitter.prototype._events=void 0,EventEmitter.prototype._maxListeners=void 0,EventEmitter.defaultMaxListeners=10,EventEmitter.prototype.setMaxListeners=function(e){if(!isNumber(e)||e<0||isNaN(e))throw TypeError("n must be a positive number");return this._maxListeners=e,this},EventEmitter.prototype.emit=function(e){var t,i,n,s,r,o;if(this._events||(this._events={}),"error"===e&&(!this._events.error||isObject(this._events.error)&&!this._events.error.length)){if((t=arguments[1])instanceof Error)throw t;var h=new Error('Uncaught, unspecified "error" event. ('+t+")");throw h.context=t,h}if(i=this._events[e],isUndefined(i))return!1;if(isFunction(i))switch(arguments.length){case 1:i.call(this);break;case 2:i.call(this,arguments[1]);break;case 3:i.call(this,arguments[1],arguments[2]);break;default:s=Array.prototype.slice.call(arguments,1),i.apply(this,s)}else if(isObject(i))for(s=Array.prototype.slice.call(arguments,1),o=i.slice(),n=o.length,r=0;r<n;r++)o[r].apply(this,s);return!0},EventEmitter.prototype.addListener=function(e,t){var i;if(!isFunction(t))throw TypeError("listener must be a function");return this._events||(this._events={}),this._events.newListener&&this.emit("newListener",e,isFunction(t.listener)?t.listener:t),this._events[e]?isObject(this._events[e])?this._events[e].push(t):this._events[e]=[this._events[e],t]:this._events[e]=t,isObject(this._events[e])&&!this._events[e].warned&&(i=isUndefined(this._maxListeners)?EventEmitter.defaultMaxListeners:this._maxListeners)&&i>0&&this._events[e].length>i&&(this._events[e].warned=!0,console.error("(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.",this._events[e].length),"function"==typeof console.trace&&console.trace()),this},EventEmitter.prototype.on=EventEmitter.prototype.addListener,EventEmitter.prototype.once=function(e,t){function i(){this.removeListener(e,i),n||(n=!0,t.apply(this,arguments))}if(!isFunction(t))throw TypeError("listener must be a function");var n=!1;return i.listener=t,this.on(e,i),this},EventEmitter.prototype.removeListener=function(e,t){var i,n,s,r;if(!isFunction(t))throw TypeError("listener must be a function");if(!this._events||!this._events[e])return this;if(i=this._events[e],s=i.length,n=-1,i===t||isFunction(i.listener)&&i.listener===t)delete this._events[e],this._events.removeListener&&this.emit("removeListener",e,t);else if(isObject(i)){for(r=s;r-- >0;)if(i[r]===t||i[r].listener&&i[r].listener===t){n=r;break}if(n<0)return this;1===i.length?(i.length=0,delete this._events[e]):i.splice(n,1),this._events.removeListener&&this.emit("removeListener",e,t)}return this},EventEmitter.prototype.removeAllListeners=function(e){var t,i;if(!this._events)return this;if(!this._events.removeListener)return 0===arguments.length?this._events={}:this._events[e]&&delete this._events[e],this;if(0===arguments.length){for(t in this._events)"removeListener"!==t&&this.removeAllListeners(t);return this.removeAllListeners("removeListener"),this._events={},this}if(i=this._events[e],isFunction(i))this.removeListener(e,i);else if(i)for(;i.length;)this.removeListener(e,i[i.length-1]);return delete this._events[e],this},EventEmitter.prototype.listeners=function(e){return this._events&&this._events[e]?isFunction(this._events[e])?[this._events[e]]:this._events[e].slice():[]},EventEmitter.prototype.listenerCount=function(e){if(this._events){var t=this._events[e];if(isFunction(t))return 1;if(t)return t.length}return 0},EventEmitter.listenerCount=function(e,t){return e.listenerCount(t)};

},{}],201:[function(require,module,exports){
exports.read=function(a,o,t,r,h){var M,p,w=8*h-r-1,f=(1<<w)-1,e=f>>1,i=-7,N=t?h-1:0,n=t?-1:1,s=a[o+N];for(N+=n,M=s&(1<<-i)-1,s>>=-i,i+=w;i>0;M=256*M+a[o+N],N+=n,i-=8);for(p=M&(1<<-i)-1,M>>=-i,i+=r;i>0;p=256*p+a[o+N],N+=n,i-=8);if(0===M)M=1-e;else{if(M===f)return p?NaN:1/0*(s?-1:1);p+=Math.pow(2,r),M-=e}return(s?-1:1)*p*Math.pow(2,M-r)},exports.write=function(a,o,t,r,h,M){var p,w,f,e=8*M-h-1,i=(1<<e)-1,N=i>>1,n=23===h?Math.pow(2,-24)-Math.pow(2,-77):0,s=r?0:M-1,u=r?1:-1,l=o<0||0===o&&1/o<0?1:0;for(o=Math.abs(o),isNaN(o)||o===1/0?(w=isNaN(o)?1:0,p=i):(p=Math.floor(Math.log(o)/Math.LN2),o*(f=Math.pow(2,-p))<1&&(p--,f*=2),o+=p+N>=1?n/f:n*Math.pow(2,1-N),o*f>=2&&(p++,f/=2),p+N>=i?(w=0,p=i):p+N>=1?(w=(o*f-1)*Math.pow(2,h),p+=N):(w=o*Math.pow(2,N-1)*Math.pow(2,h),p=0));h>=8;a[t+s]=255&w,s+=u,w/=256,h-=8);for(p=p<<h|w,e+=h;e>0;a[t+s]=255&p,s+=u,p/=256,e-=8);a[t+s-u]|=128*l};

},{}],202:[function(require,module,exports){
function isBuffer(f){return!!f.constructor&&"function"==typeof f.constructor.isBuffer&&f.constructor.isBuffer(f)}function isSlowBuffer(f){return"function"==typeof f.readFloatLE&&"function"==typeof f.slice&&isBuffer(f.slice(0,0))}module.exports=function(f){return null!=f&&(isBuffer(f)||isSlowBuffer(f)||!!f._isBuffer)};
},{}],203:[function(require,module,exports){
var toString={}.toString;module.exports=Array.isArray||function(r){return"[object Array]"==toString.call(r)};

},{}],204:[function(require,module,exports){
"use strict";function subst(t,r){for(var e=parse(t),s=e.literals,u=[],n=0,l=s.length-1;n<l;n++){u.push(s[n]);var o=null===e.substitutions[n]||void 0===e.substitutions[n]?"":e.substitutions[n];o=0===o.indexOf("l10n(")?module.exports(o.match(fnPattern)[1],r):null===r[o]||void 0===r[o]?"":r[o],u.push(o)}return u.push(s[s.length-1]),u.join("")}var parse=require("es6-template-strings/compile"),Log=require("manticore-log")("l10n"),cultureOrder=["en-US","en"];module.exports=function(t){return function(r,e){for(var s=r.split("."),u=r,n=0;n<cultureOrder.length;n++){var l=t[cultureOrder[n]];if(l){var o=l,i=0;for(i=0;i<s.length&&o;i++)o=o[s[i]];if(i===s.length&&o){u=o;break}}}return e?subst(u,e):u}};var fnPattern=/^\s*l10n\s*\(\s*['"](.*)['"]\s*\)\s*$/;module.exports.setCultures=function(t){cultureOrder=t},module.exports.subst=subst;

},{"es6-template-strings/compile":205,"manticore-log":208}],205:[function(require,module,exports){
"use strict";var current,literals,substitutions,sOut,sEscape,sAhead,sIn,sInEscape;sOut=function(t){return"\\"===t?sEscape:"$"===t?sAhead:(current+=t,sOut)},sEscape=function(t){return"\\"!==t&&"$"!==t&&(current+="\\"),current+=t,sOut},sAhead=function(t){return"{"===t?(literals.push(current),current="",sIn):"$"===t?(current+="$",sAhead):(current+="$"+t,sOut)},sIn=function(t){return"\\"===t?sInEscape:"}"===t?(substitutions.push(current),current="",sOut):(current+=t,sIn)},sInEscape=function(t){return"\\"!==t&&"}"!==t&&(current+="\\"),current+=t,sIn},module.exports=function(t){var s,r,u,n;for(current="",literals=[],substitutions=[],t=String(t),s=t.length,r=sOut,u=0;u<s;++u)r=r(t[u]);return r===sOut?literals.push(current):r===sEscape?literals.push(current+"\\"):r===sAhead?literals.push(current+"$"):r===sIn?literals[literals.length-1]+="${"+current:r===sInEscape&&(literals[literals.length-1]+="${"+current+"\\"),n={literals:literals,substitutions:substitutions},literals=substitutions=null,n};

},{}],206:[function(require,module,exports){
(function (global){
(function(){function n(n,t){if(n!==t){var r=null===n,e=n===b,u=n===n,i=null===t,o=t===b,f=t===t;if(n>t&&!i||!u||r&&!o&&f||e&&f)return 1;if(n<t&&!r||!f||i&&!e&&u||o&&u)return-1}return 0}function t(n,t,r){for(var e=n.length,u=r?e:-1;r?u--:++u<e;)if(t(n[u],u,n))return u;return-1}function r(n,t,r){if(t!==t)return h(n,r);for(var e=r-1,u=n.length;++e<u;)if(n[e]===t)return e;return-1}function e(n){return"function"==typeof n||!1}function u(n){return null==n?"":n+""}function i(n,t){for(var r=-1,e=n.length;++r<e&&t.indexOf(n.charAt(r))>-1;);return r}function o(n,t){for(var r=n.length;r--&&t.indexOf(n.charAt(r))>-1;);return r}function f(t,r){return n(t.criteria,r.criteria)||t.index-r.index}function a(t,r,e){for(var u=-1,i=t.criteria,o=r.criteria,f=i.length,a=e.length;++u<f;){var c=n(i[u],o[u]);if(c){if(u>=a)return c;var l=e[u];return c*("asc"===l||!0===l?1:-1)}}return t.index-r.index}function c(n){return Bn[n]}function l(n){return zn[n]}function s(n,t,r){return t?n=qn[n]:r&&(n=Pn[n]),"\\"+n}function p(n){return"\\"+Pn[n]}function h(n,t,r){for(var e=n.length,u=t+(r?0:-1);r?u--:++u<e;){var i=n[u];if(i!==i)return u}return-1}function v(n){return!!n&&"object"==typeof n}function _(n){return n<=160&&n>=9&&n<=13||32==n||160==n||5760==n||6158==n||n>=8192&&(n<=8202||8232==n||8233==n||8239==n||8287==n||12288==n||65279==n)}function g(n,t){for(var r=-1,e=n.length,u=-1,i=[];++r<e;)n[r]===t&&(n[r]=D,i[++u]=r);return i}function y(n,t){for(var r,e=-1,u=n.length,i=-1,o=[];++e<u;){var f=n[e],a=t?t(f,e,n):f;e&&r===a||(r=a,o[++i]=f)}return o}function d(n){for(var t=-1,r=n.length;++t<r&&_(n.charCodeAt(t)););return t}function w(n){for(var t=n.length;t--&&_(n.charCodeAt(t)););return t}function m(n){return Dn[n]}function x(_){function Bn(n){if(v(n)&&!Cf(n)&&!(n instanceof Mn)){if(n instanceof Dn)return n;if(no.call(n,"__chain__")&&no.call(n,"__wrapped__"))return he(n)}return new Dn(n)}function zn(){}function Dn(n,t,r){this.__wrapped__=n,this.__actions__=r||[],this.__chain__=!!t}function Mn(n){this.__wrapped__=n,this.__actions__=[],this.__dir__=1,this.__filtered__=!1,this.__iteratees__=[],this.__takeCount__=Oo,this.__views__=[]}function qn(){var n=new Mn(this.__wrapped__);return n.__actions__=et(this.__actions__),n.__dir__=this.__dir__,n.__filtered__=this.__filtered__,n.__iteratees__=et(this.__iteratees__),n.__takeCount__=this.__takeCount__,n.__views__=et(this.__views__),n}function Pn(){if(this.__filtered__){var n=new Mn(this);n.__dir__=-1,n.__filtered__=!0}else n=this.clone(),n.__dir__*=-1;return n}function Kn(){var n=this.__wrapped__.value(),t=this.__dir__,r=Cf(n),e=t<0,u=r?n.length:0,i=Vr(0,u,this.__views__),o=i.start,f=i.end,a=f-o,c=e?f:o-1,l=this.__iteratees__,s=l.length,p=0,h=Ao(a,this.__takeCount__);if(!r||u<T||u==a&&h==a)return er(e&&r?n.reverse():n,this.__actions__);var v=[];n:for(;a--&&p<h;){c+=t;for(var _=-1,g=n[c];++_<s;){var y=l[_],d=y.iteratee,w=y.type,m=d(g);if(w==B)g=m;else if(!m){if(w==L)continue n;break n}}v[p++]=g}return v}function Vn(){this.__data__={}}function Yn(n){return this.has(n)&&delete this.__data__[n]}function Gn(n){return"__proto__"==n?b:this.__data__[n]}function Jn(n){return"__proto__"!=n&&no.call(this.__data__,n)}function Xn(n,t){return"__proto__"!=n&&(this.__data__[n]=t),this}function Qn(n){var t=n?n.length:0;for(this.data={hash:go(null),set:new lo};t--;)this.push(n[t])}function nt(n,t){var r=n.data;return("string"==typeof t||$u(t)?r.set.has(t):r.hash[t])?0:-1}function tt(n){var t=this.data;"string"==typeof n||$u(n)?t.set.add(n):t.hash[n]=!0}function rt(n,t){for(var r=-1,e=n.length,u=-1,i=t.length,o=zi(e+i);++r<e;)o[r]=n[r];for(;++u<i;)o[r++]=t[u];return o}function et(n,t){var r=-1,e=n.length;for(t||(t=zi(e));++r<e;)t[r]=n[r];return t}function ut(n,t){for(var r=-1,e=n.length;++r<e&&!1!==t(n[r],r,n););return n}function it(n,t){for(var r=n.length;r--&&!1!==t(n[r],r,n););return n}function ot(n,t){for(var r=-1,e=n.length;++r<e;)if(!t(n[r],r,n))return!1;return!0}function ft(n,t,r,e){for(var u=-1,i=n.length,o=e,f=o;++u<i;){var a=n[u],c=+t(a);r(c,o)&&(o=c,f=a)}return f}function at(n,t){for(var r=-1,e=n.length,u=-1,i=[];++r<e;){var o=n[r];t(o,r,n)&&(i[++u]=o)}return i}function ct(n,t){for(var r=-1,e=n.length,u=zi(e);++r<e;)u[r]=t(n[r],r,n);return u}function lt(n,t){for(var r=-1,e=t.length,u=n.length;++r<e;)n[u+r]=t[r];return n}function st(n,t,r,e){var u=-1,i=n.length;for(e&&i&&(r=n[++u]);++u<i;)r=t(r,n[u],u,n);return r}function pt(n,t,r,e){var u=n.length;for(e&&u&&(r=n[--u]);u--;)r=t(r,n[u],u,n);return r}function ht(n,t){for(var r=-1,e=n.length;++r<e;)if(t(n[r],r,n))return!0;return!1}function vt(n,t){for(var r=n.length,e=0;r--;)e+=+t(n[r])||0;return e}function _t(n,t){return n===b?t:n}function gt(n,t,r,e){return n!==b&&no.call(e,r)?n:t}function yt(n,t,r){for(var e=-1,u=Df(t),i=u.length;++e<i;){var o=u[e],f=n[o],a=r(f,t[o],o,n,t);(a===a?a===f:f!==f)&&(f!==b||o in n)||(n[o]=a)}return n}function dt(n,t){return null==t?n:mt(t,Df(t),n)}function wt(n,t){for(var r=-1,e=null==n,u=!e&&Zr(n),i=u?n.length:0,o=t.length,f=zi(o);++r<o;){var a=t[r];f[r]=u?Hr(a,i)?n[a]:b:e?b:n[a]}return f}function mt(n,t,r){r||(r={});for(var e=-1,u=t.length;++e<u;){var i=t[e];r[i]=n[i]}return r}function xt(n,t,r){var e=typeof n;return"function"==e?t===b?n:or(n,t,r):null==n?Ri:"object"==e?zt(n):t===b?Wi(n):Dt(n,t)}function bt(n,t,r,e,u,i,o){var f;if(r&&(f=u?r(n,e,u):r(n)),f!==b)return f;if(!$u(n))return n;var a=Cf(n);if(a){if(f=Yr(n),!t)return et(n,f)}else{var c=ro.call(n),l=c==Y;if(c!=J&&c!=M&&(!l||u))return Ln[c]?Jr(n,c,t):u?n:{};if(f=Gr(l?{}:n),!t)return dt(f,n)}i||(i=[]),o||(o=[]);for(var s=i.length;s--;)if(i[s]==n)return o[s];return i.push(n),o.push(f),(a?ut:Ut)(n,function(e,u){f[u]=bt(e,t,r,u,n,i,o)}),f}function At(n,t,r){if("function"!=typeof n)throw new Ji(z);return so(function(){n.apply(b,r)},t)}function jt(n,t){var e=n?n.length:0,u=[];if(!e)return u;var i=-1,o=qr(),f=o==r,a=f&&t.length>=T?_r(t):null,c=t.length;a&&(o=nt,f=!1,t=a);n:for(;++i<e;){var l=n[i];if(f&&l===l){for(var s=c;s--;)if(t[s]===l)continue n;u.push(l)}else o(t,l,0)<0&&u.push(l)}return u}function kt(n,t){var r=!0;return No(n,function(n,e,u){return r=!!t(n,e,u)}),r}function It(n,t,r,e){var u=e,i=u;return No(n,function(n,o,f){var a=+t(n,o,f);(r(a,u)||a===e&&a===i)&&(u=a,i=n)}),i}function Rt(n,t,r,e){var u=n.length;for(r=null==r?0:+r||0,r<0&&(r=-r>u?0:u+r),e=e===b||e>u?u:+e||0,e<0&&(e+=u),u=r>e?0:e>>>0,r>>>=0;r<u;)n[r++]=t;return n}function Ot(n,t){var r=[];return No(n,function(n,e,u){t(n,e,u)&&r.push(n)}),r}function Et(n,t,r,e){var u;return r(n,function(n,r,i){if(t(n,r,i))return u=e?r:n,!1}),u}function Ct(n,t,r,e){e||(e=[]);for(var u=-1,i=n.length;++u<i;){var o=n[u];v(o)&&Zr(o)&&(r||Cf(o)||ku(o))?t?Ct(o,t,r,e):lt(e,o):r||(e[e.length]=o)}return e}function St(n,t){return Lo(n,t,ni)}function Ut(n,t){return Lo(n,t,Df)}function Wt(n,t){return Bo(n,t,Df)}function $t(n,t){for(var r=-1,e=t.length,u=-1,i=[];++r<e;){var o=t[r];Wu(n[o])&&(i[++u]=o)}return i}function Ft(n,t,r){if(null!=n){r!==b&&r in se(n)&&(t=[r]);for(var e=0,u=t.length;null!=n&&e<u;)n=n[t[e++]];return e&&e==u?n:b}}function Nt(n,t,r,e,u,i){return n===t||(null==n||null==t||!$u(n)&&!v(t)?n!==n&&t!==t:Tt(n,t,Nt,r,e,u,i))}function Tt(n,t,r,e,u,i,o){var f=Cf(n),a=Cf(t),c=q,l=q;f||(c=ro.call(n),c==M?c=J:c!=J&&(f=qu(n))),a||(l=ro.call(t),l==M?l=J:l!=J&&(a=qu(t)));var s=c==J,p=l==J,h=c==l;if(h&&!f&&!s)return Br(n,t,c);if(!u){var v=s&&no.call(n,"__wrapped__"),_=p&&no.call(t,"__wrapped__");if(v||_)return r(v?n.value():n,_?t.value():t,e,u,i,o)}if(!h)return!1;i||(i=[]),o||(o=[]);for(var g=i.length;g--;)if(i[g]==n)return o[g]==t;i.push(n),o.push(t);var y=(f?Lr:zr)(n,t,r,e,u,i,o);return i.pop(),o.pop(),y}function Lt(n,t,r){var e=t.length,u=e,i=!r;if(null==n)return!u;for(n=se(n);e--;){var o=t[e];if(i&&o[2]?o[1]!==n[o[0]]:!(o[0]in n))return!1}for(;++e<u;){o=t[e];var f=o[0],a=n[f],c=o[1];if(i&&o[2]){if(a===b&&!(f in n))return!1}else{var l=r?r(a,c,f):b;if(!(l===b?Nt(c,a,r,!0):l))return!1}}return!0}function Bt(n,t){var r=-1,e=Zr(n)?zi(n.length):[];return No(n,function(n,u,i){e[++r]=t(n,u,i)}),e}function zt(n){var t=Pr(n);if(1==t.length&&t[0][2]){var r=t[0][0],e=t[0][1];return function(n){return null!=n&&(n[r]===e&&(e!==b||r in se(n)))}}return function(n){return Lt(n,t)}}function Dt(n,t){var r=Cf(n),e=ne(n)&&ee(t),u=n+"";return n=pe(n),function(i){if(null==i)return!1;var o=u;if(i=se(i),(r||!e)&&!(o in i)){if(null==(i=1==n.length?i:Ft(i,Jt(n,0,-1))))return!1;o=Ie(n),i=se(i)}return i[o]===t?t!==b||o in i:Nt(t,i[o],b,!0)}}function Mt(n,t,r,e,u){if(!$u(n))return n;var i=Zr(t)&&(Cf(t)||qu(t)),o=i?b:Df(t);return ut(o||t,function(f,a){if(o&&(a=f,f=t[a]),v(f))e||(e=[]),u||(u=[]),qt(n,t,a,Mt,r,e,u);else{var c=n[a],l=r?r(c,f,a,n,t):b,s=l===b;s&&(l=f),l===b&&(!i||a in n)||!s&&(l===l?l===c:c!==c)||(n[a]=l)}}),n}function qt(n,t,r,e,u,i,o){for(var f=i.length,a=t[r];f--;)if(i[f]==a)return void(n[r]=o[f]);var c=n[r],l=u?u(c,a,r,n,t):b,s=l===b;s&&(l=a,Zr(a)&&(Cf(a)||qu(a))?l=Cf(c)?c:Zr(c)?et(c):[]:zu(a)||ku(a)?l=ku(c)?Gu(c):zu(c)?c:{}:s=!1),i.push(a),o.push(l),s?n[r]=e(l,a,u,i,o):(l===l?l!==c:c===c)&&(n[r]=l)}function Pt(n){return function(t){return null==t?b:t[n]}}function Kt(n){var t=n+"";return n=pe(n),function(r){return Ft(r,n,t)}}function Vt(n,t){for(var r=n?t.length:0;r--;){var e=t[r];if(e!=u&&Hr(e)){var u=e;po.call(n,e,1)}}return n}function Yt(n,t){return n+yo(Io()*(t-n+1))}function Gt(n,t,r,e,u){return u(n,function(n,u,i){r=e?(e=!1,n):t(r,n,u,i)}),r}function Jt(n,t,r){var e=-1,u=n.length;t=null==t?0:+t||0,t<0&&(t=-t>u?0:u+t),r=r===b||r>u?u:+r||0,r<0&&(r+=u),u=t>r?0:r-t>>>0,t>>>=0;for(var i=zi(u);++e<u;)i[e]=n[e+t];return i}function Xt(n,t){var r;return No(n,function(n,e,u){return!(r=t(n,e,u))}),!!r}function Zt(n,t){var r=n.length;for(n.sort(t);r--;)n[r]=n[r].value;return n}function Ht(n,t,r){var e=Dr(),u=-1;return t=ct(t,function(n){return e(n)}),Zt(Bt(n,function(n){return{criteria:ct(t,function(t){return t(n)}),index:++u,value:n}}),function(n,t){return a(n,t,r)})}function Qt(n,t){var r=0;return No(n,function(n,e,u){r+=+t(n,e,u)||0}),r}function nr(n,t){var e=-1,u=qr(),i=n.length,o=u==r,f=o&&i>=T,a=f?_r():null,c=[];a?(u=nt,o=!1):(f=!1,a=t?[]:c);n:for(;++e<i;){var l=n[e],s=t?t(l,e,n):l;if(o&&l===l){for(var p=a.length;p--;)if(a[p]===s)continue n;t&&a.push(s),c.push(l)}else u(a,s,0)<0&&((t||f)&&a.push(s),c.push(l))}return c}function tr(n,t){for(var r=-1,e=t.length,u=zi(e);++r<e;)u[r]=n[t[r]];return u}function rr(n,t,r,e){for(var u=n.length,i=e?u:-1;(e?i--:++i<u)&&t(n[i],i,n););return r?Jt(n,e?0:i,e?i+1:u):Jt(n,e?i+1:0,e?u:i)}function er(n,t){var r=n;r instanceof Mn&&(r=r.value());for(var e=-1,u=t.length;++e<u;){var i=t[e];r=i.func.apply(i.thisArg,lt([r],i.args))}return r}function ur(n,t,r){var e=0,u=n?n.length:e;if("number"==typeof t&&t===t&&u<=So){for(;e<u;){var i=e+u>>>1,o=n[i];(r?o<=t:o<t)&&null!==o?e=i+1:u=i}return u}return ir(n,t,Ri,r)}function ir(n,t,r,e){t=r(t);for(var u=0,i=n?n.length:0,o=t!==t,f=null===t,a=t===b;u<i;){var c=yo((u+i)/2),l=r(n[c]),s=l!==b,p=l===l;if(o)var h=p||e;else h=f?p&&s&&(e||null!=l):a?p&&(e||s):null!=l&&(e?l<=t:l<t);h?u=c+1:i=c}return Ao(i,Co)}function or(n,t,r){if("function"!=typeof n)return Ri;if(t===b)return n;switch(r){case 1:return function(r){return n.call(t,r)};case 3:return function(r,e,u){return n.call(t,r,e,u)};case 4:return function(r,e,u,i){return n.call(t,r,e,u,i)};case 5:return function(r,e,u,i,o){return n.call(t,r,e,u,i,o)}}return function(){return n.apply(t,arguments)}}function fr(n){var t=new io(n.byteLength);return new ho(t).set(new ho(n)),t}function ar(n,t,r){for(var e=r.length,u=-1,i=bo(n.length-e,0),o=-1,f=t.length,a=zi(f+i);++o<f;)a[o]=t[o];for(;++u<e;)a[r[u]]=n[u];for(;i--;)a[o++]=n[u++];return a}function cr(n,t,r){for(var e=-1,u=r.length,i=-1,o=bo(n.length-u,0),f=-1,a=t.length,c=zi(o+a);++i<o;)c[i]=n[i];for(var l=i;++f<a;)c[l+f]=t[f];for(;++e<u;)c[l+r[e]]=n[i++];return c}function lr(n,t){return function(r,e,u){var i=t?t():{};if(e=Dr(e,u,3),Cf(r))for(var o=-1,f=r.length;++o<f;){var a=r[o];n(i,a,e(a,o,r),r)}else No(r,function(t,r,u){n(i,t,e(t,r,u),u)});return i}}function sr(n){return yu(function(t,r){var e=-1,u=null==t?0:r.length,i=u>2?r[u-2]:b,o=u>2?r[2]:b,f=u>1?r[u-1]:b;for("function"==typeof i?(i=or(i,f,5),u-=2):(i="function"==typeof f?f:b,u-=i?1:0),o&&Qr(r[0],r[1],o)&&(i=u<3?b:i,u=1);++e<u;){var a=r[e];a&&n(t,a,i)}return t})}function pr(n,t){return function(r,e){var u=r?Mo(r):0;if(!re(u))return n(r,e);for(var i=t?u:-1,o=se(r);(t?i--:++i<u)&&!1!==e(o[i],i,o););return r}}function hr(n){return function(t,r,e){for(var u=se(t),i=e(t),o=i.length,f=n?o:-1;n?f--:++f<o;){var a=i[f];if(!1===r(u[a],a,u))break}return t}}function vr(n,t){function r(){return(this&&this!==Zn&&this instanceof r?e:n).apply(t,arguments)}var e=yr(n);return r}function _r(n){return go&&lo?new Qn(n):null}function gr(n){return function(t){for(var r=-1,e=ji(li(t)),u=e.length,i="";++r<u;)i=n(i,e[r],r);return i}}function yr(n){return function(){var t=arguments;switch(t.length){case 0:return new n;case 1:return new n(t[0]);case 2:return new n(t[0],t[1]);case 3:return new n(t[0],t[1],t[2]);case 4:return new n(t[0],t[1],t[2],t[3]);case 5:return new n(t[0],t[1],t[2],t[3],t[4]);case 6:return new n(t[0],t[1],t[2],t[3],t[4],t[5]);case 7:return new n(t[0],t[1],t[2],t[3],t[4],t[5],t[6])}var r=Fo(n.prototype),e=n.apply(r,t);return $u(e)?e:r}}function dr(n){function t(r,e,u){u&&Qr(r,e,u)&&(e=b);var i=Tr(r,n,b,b,b,b,b,e);return i.placeholder=t.placeholder,i}return t}function wr(n,t){return yu(function(r){var e=r[0];return null==e?e:(r.push(t),n.apply(b,r))})}function mr(n,t){return function(r,e,u){if(u&&Qr(r,e,u)&&(e=b),e=Dr(e,u,3),1==e.length){r=Cf(r)?r:le(r);var i=ft(r,e,n,t);if(!r.length||i!==t)return i}return It(r,e,n,t)}}function xr(n,r){return function(e,u,i){if(u=Dr(u,i,3),Cf(e)){var o=t(e,u,r);return o>-1?e[o]:b}return Et(e,u,n)}}function br(n){return function(r,e,u){return r&&r.length?(e=Dr(e,u,3),t(r,e,n)):-1}}function Ar(n){return function(t,r,e){return r=Dr(r,e,3),Et(t,r,n,!0)}}function jr(n){return function(){for(var t,r=arguments.length,e=n?r:-1,u=0,i=zi(r);n?e--:++e<r;){var o=i[u++]=arguments[e];if("function"!=typeof o)throw new Ji(z);!t&&Dn.prototype.thru&&"wrapper"==Mr(o)&&(t=new Dn([],!0))}for(e=t?-1:r;++e<r;){o=i[e];var f=Mr(o),a="wrapper"==f?Do(o):b;t=a&&te(a[0])&&a[1]==(S|R|E|U)&&!a[4].length&&1==a[9]?t[Mr(a[0])].apply(t,a[3]):1==o.length&&te(o)?t[f]():t.thru(o)}return function(){var n=arguments,e=n[0];if(t&&1==n.length&&Cf(e)&&e.length>=T)return t.plant(e).value();for(var u=0,o=r?i[u].apply(this,n):e;++u<r;)o=i[u].call(this,o);return o}}}function kr(n,t){return function(r,e,u){return"function"==typeof e&&u===b&&Cf(r)?n(r,e):t(r,or(e,u,3))}}function Ir(n){return function(t,r,e){return"function"==typeof r&&e===b||(r=or(r,e,3)),n(t,r,ni)}}function Rr(n){return function(t,r,e){return"function"==typeof r&&e===b||(r=or(r,e,3)),n(t,r)}}function Or(n){return function(t,r,e){var u={};return r=Dr(r,e,3),Ut(t,function(t,e,i){var o=r(t,e,i);e=n?o:e,t=n?t:o,u[e]=t}),u}}function Er(n){return function(t,r,e){return t=u(t),(n?t:"")+Wr(t,r,e)+(n?"":t)}}function Cr(n){var t=yu(function(r,e){var u=g(e,t.placeholder);return Tr(r,n,b,e,u)});return t}function Sr(n,t){return function(r,e,u,i){var o=arguments.length<3;return"function"==typeof e&&i===b&&Cf(r)?n(r,e,u,o):Gt(r,Dr(e,i,4),u,o,t)}}function Ur(n,t,r,e,u,i,o,f,a,c){function l(){for(var w=arguments.length,m=w,x=zi(w);m--;)x[m]=arguments[m];if(e&&(x=ar(x,e,u)),i&&(x=cr(x,i,o)),v||y){var A=l.placeholder,I=g(x,A);if((w-=I.length)<c){var R=f?et(f):b,O=bo(c-w,0),S=v?I:b,U=v?b:I,W=v?x:b,$=v?b:x;t|=v?E:C,t&=~(v?C:E),_||(t&=~(j|k));var F=[n,t,r,W,S,$,U,R,a,O],N=Ur.apply(b,F);return te(n)&&qo(N,F),N.placeholder=A,N}}var T=p?r:this,L=h?T[n]:n;return f&&(x=ae(x,f)),s&&a<x.length&&(x.length=a),this&&this!==Zn&&this instanceof l&&(L=d||yr(n)),L.apply(T,x)}var s=t&S,p=t&j,h=t&k,v=t&R,_=t&I,y=t&O,d=h?b:yr(n);return l}function Wr(n,t,r){var e=n.length;if(t=+t,e>=t||!mo(t))return"";var u=t-e;return r=null==r?" ":r+"",gi(r,_o(u/r.length)).slice(0,u)}function $r(n,t,r,e){function u(){for(var t=-1,f=arguments.length,a=-1,c=e.length,l=zi(c+f);++a<c;)l[a]=e[a];for(;f--;)l[a++]=arguments[++t];return(this&&this!==Zn&&this instanceof u?o:n).apply(i?r:this,l)}var i=t&j,o=yr(n);return u}function Fr(n){var t=Pi[n];return function(n,r){return r=r===b?0:+r||0,r?(r=ao(10,r),t(n*r)/r):t(n)}}function Nr(n){return function(t,r,e,u){var i=Dr(e);return null==e&&i===xt?ur(t,r,n):ir(t,r,i(e,u,1),n)}}function Tr(n,t,r,e,u,i,o,f){var a=t&k;if(!a&&"function"!=typeof n)throw new Ji(z);var c=e?e.length:0;if(c||(t&=~(E|C),e=u=b),c-=u?u.length:0,t&C){var l=e,s=u;e=u=b}var p=a?b:Do(n),h=[n,t,r,e,u,l,s,i,o,f];if(p&&(ue(h,p),t=h[1],f=h[9]),h[9]=null==f?a?0:n.length:bo(f-c,0)||0,t==j)var v=vr(h[0],h[2]);else v=t!=E&&t!=(j|E)||h[4].length?Ur.apply(b,h):$r.apply(b,h);return(p?zo:qo)(v,h)}function Lr(n,t,r,e,u,i,o){var f=-1,a=n.length,c=t.length;if(a!=c&&!(u&&c>a))return!1;for(;++f<a;){var l=n[f],s=t[f],p=e?e(u?s:l,u?l:s,f):b;if(p!==b){if(p)continue;return!1}if(u){if(!ht(t,function(n){return l===n||r(l,n,e,u,i,o)}))return!1}else if(l!==s&&!r(l,s,e,u,i,o))return!1}return!0}function Br(n,t,r){switch(r){case P:case K:return+n==+t;case V:return n.name==t.name&&n.message==t.message;case G:return n!=+n?t!=+t:n==+t;case X:case Z:return n==t+""}return!1}function zr(n,t,r,e,u,i,o){var f=Df(n),a=f.length;if(a!=Df(t).length&&!u)return!1;for(var c=a;c--;){var l=f[c];if(!(u?l in t:no.call(t,l)))return!1}for(var s=u;++c<a;){l=f[c];var p=n[l],h=t[l],v=e?e(u?h:p,u?p:h,l):b;if(!(v===b?r(p,h,e,u,i,o):v))return!1;s||(s="constructor"==l)}if(!s){var _=n.constructor,g=t.constructor;if(_!=g&&"constructor"in n&&"constructor"in t&&!("function"==typeof _&&_ instanceof _&&"function"==typeof g&&g instanceof g))return!1}return!0}function Dr(n,t,r){var e=Bn.callback||ki;return e=e===ki?xt:e,r?e(n,t,r):e}function Mr(n){for(var t=n.name,r=$o[t],e=r?r.length:0;e--;){var u=r[e],i=u.func;if(null==i||i==n)return u.name}return t}function qr(n,t,e){var u=Bn.indexOf||je;return u=u===je?r:u,n?u(n,t,e):u}function Pr(n){for(var t=ti(n),r=t.length;r--;)t[r][2]=ee(t[r][1]);return t}function Kr(n,t){var r=null==n?b:n[t];return Tu(r)?r:b}function Vr(n,t,r){for(var e=-1,u=r.length;++e<u;){var i=r[e],o=i.size;switch(i.type){case"drop":n+=o;break;case"dropRight":t-=o;break;case"take":t=Ao(t,n+o);break;case"takeRight":n=bo(n,t-o)}}return{start:n,end:t}}function Yr(n){var t=n.length,r=new n.constructor(t);return t&&"string"==typeof n[0]&&no.call(n,"index")&&(r.index=n.index,r.input=n.input),r}function Gr(n){var t=n.constructor;return"function"==typeof t&&t instanceof t||(t=Vi),new t}function Jr(n,t,r){var e=n.constructor;switch(t){case H:return fr(n);case P:case K:return new e(+n);case Q:case nn:case tn:case rn:case en:case un:case on:case fn:case an:var u=n.buffer;return new e(r?fr(u):u,n.byteOffset,n.length);case G:case Z:return new e(n);case X:var i=new e(n.source,Rn.exec(n));i.lastIndex=n.lastIndex}return i}function Xr(n,t,r){null==n||ne(t,n)||(t=pe(t),n=1==t.length?n:Ft(n,Jt(t,0,-1)),t=Ie(t));var e=null==n?n:n[t];return null==e?b:e.apply(n,r)}function Zr(n){return null!=n&&re(Mo(n))}function Hr(n,t){return n="number"==typeof n||Cn.test(n)?+n:-1,t=null==t?Uo:t,n>-1&&n%1==0&&n<t}function Qr(n,t,r){if(!$u(r))return!1;var e=typeof t;if("number"==e?Zr(r)&&Hr(t,r.length):"string"==e&&t in r){var u=r[t];return n===n?n===u:u!==u}return!1}function ne(n,t){var r=typeof n;return!!("string"==r&&mn.test(n)||"number"==r)||!Cf(n)&&(!wn.test(n)||null!=t&&n in se(t))}function te(n){var t=Mr(n);if(!(t in Mn.prototype))return!1;var r=Bn[t];if(n===r)return!0;var e=Do(r);return!!e&&n===e[0]}function re(n){return"number"==typeof n&&n>-1&&n%1==0&&n<=Uo}function ee(n){return n===n&&!$u(n)}function ue(n,t){var r=n[1],e=t[1],u=r|e,i=u<S,o=e==S&&r==R||e==S&&r==U&&n[7].length<=t[8]||e==(S|U)&&r==R;if(!i&&!o)return n;e&j&&(n[2]=t[2],u|=r&j?0:I);var f=t[3];if(f){var a=n[3];n[3]=a?ar(a,f,t[4]):et(f),n[4]=a?g(n[3],D):et(t[4])}return f=t[5],f&&(a=n[5],n[5]=a?cr(a,f,t[6]):et(f),n[6]=a?g(n[5],D):et(t[6])),f=t[7],f&&(n[7]=et(f)),e&S&&(n[8]=null==n[8]?t[8]:Ao(n[8],t[8])),null==n[9]&&(n[9]=t[9]),n[0]=t[0],n[1]=u,n}function ie(n,t){return n===b?t:Sf(n,t,ie)}function oe(n,t){n=se(n);for(var r=-1,e=t.length,u={};++r<e;){var i=t[r];i in n&&(u[i]=n[i])}return u}function fe(n,t){var r={};return St(n,function(n,e,u){t(n,e,u)&&(r[e]=n)}),r}function ae(n,t){for(var r=n.length,e=Ao(t.length,r),u=et(n);e--;){var i=t[e];n[e]=Hr(i,r)?u[i]:b}return n}function ce(n){for(var t=ni(n),r=t.length,e=r&&n.length,u=!!e&&re(e)&&(Cf(n)||ku(n)),i=-1,o=[];++i<r;){var f=t[i];(u&&Hr(f,e)||no.call(n,f))&&o.push(f)}return o}function le(n){return null==n?[]:Zr(n)?$u(n)?n:Vi(n):ii(n)}function se(n){return $u(n)?n:Vi(n)}function pe(n){if(Cf(n))return n;var t=[];return u(n).replace(xn,function(n,r,e,u){t.push(e?u.replace(kn,"$1"):r||n)}),t}function he(n){return n instanceof Mn?n.clone():new Dn(n.__wrapped__,n.__chain__,et(n.__actions__))}function ve(n,t,r){t=(r?Qr(n,t,r):null==t)?1:bo(yo(t)||1,1);for(var e=0,u=n?n.length:0,i=-1,o=zi(_o(u/t));e<u;)o[++i]=Jt(n,e,e+=t);return o}function _e(n){for(var t=-1,r=n?n.length:0,e=-1,u=[];++t<r;){var i=n[t];i&&(u[++e]=i)}return u}function ge(n,t,r){return(n?n.length:0)?((r?Qr(n,t,r):null==t)&&(t=1),Jt(n,t<0?0:t)):[]}function ye(n,t,r){var e=n?n.length:0;return e?((r?Qr(n,t,r):null==t)&&(t=1),t=e-(+t||0),Jt(n,0,t<0?0:t)):[]}function de(n,t,r){return n&&n.length?rr(n,Dr(t,r,3),!0,!0):[]}function we(n,t,r){return n&&n.length?rr(n,Dr(t,r,3),!0):[]}function me(n,t,r,e){var u=n?n.length:0;return u?(r&&"number"!=typeof r&&Qr(n,t,r)&&(r=0,e=u),Rt(n,t,r,e)):[]}function xe(n){return n?n[0]:b}function be(n,t,r){var e=n?n.length:0;return r&&Qr(n,t,r)&&(t=!1),e?Ct(n,t):[]}function Ae(n){return(n?n.length:0)?Ct(n,!0):[]}function je(n,t,e){var u=n?n.length:0;if(!u)return-1;if("number"==typeof e)e=e<0?bo(u+e,0):e;else if(e){var i=ur(n,t);return i<u&&(t===t?t===n[i]:n[i]!==n[i])?i:-1}return r(n,t,e||0)}function ke(n){return ye(n,1)}function Ie(n){var t=n?n.length:0;return t?n[t-1]:b}function Re(n,t,r){var e=n?n.length:0;if(!e)return-1;var u=e;if("number"==typeof r)u=(r<0?bo(e+r,0):Ao(r||0,e-1))+1;else if(r){u=ur(n,t,!0)-1;var i=n[u];return(t===t?t===i:i!==i)?u:-1}if(t!==t)return h(n,u,!0);for(;u--;)if(n[u]===t)return u;return-1}function Oe(){var n=arguments,t=n[0];if(!t||!t.length)return t;for(var r=0,e=qr(),u=n.length;++r<u;)for(var i=0,o=n[r];(i=e(t,o,i))>-1;)po.call(t,i,1);return t}function Ee(n,t,r){var e=[];if(!n||!n.length)return e;var u=-1,i=[],o=n.length;for(t=Dr(t,r,3);++u<o;){var f=n[u];t(f,u,n)&&(e.push(f),i.push(u))}return Vt(n,i),e}function Ce(n){return ge(n,1)}function Se(n,t,r){var e=n?n.length:0;return e?(r&&"number"!=typeof r&&Qr(n,t,r)&&(t=0,r=e),Jt(n,t,r)):[]}function Ue(n,t,r){return(n?n.length:0)?((r?Qr(n,t,r):null==t)&&(t=1),Jt(n,0,t<0?0:t)):[]}function We(n,t,r){var e=n?n.length:0;return e?((r?Qr(n,t,r):null==t)&&(t=1),t=e-(+t||0),Jt(n,t<0?0:t)):[]}function $e(n,t,r){return n&&n.length?rr(n,Dr(t,r,3),!1,!0):[]}function Fe(n,t,r){return n&&n.length?rr(n,Dr(t,r,3)):[]}function Ne(n,t,e,u){if(!(n?n.length:0))return[];null!=t&&"boolean"!=typeof t&&(u=e,e=Qr(n,t,u)?b:t,t=!1);var i=Dr();return null==e&&i===xt||(e=i(e,u,3)),t&&qr()==r?y(n,e):nr(n,e)}function Te(n){if(!n||!n.length)return[];var t=-1,r=0;n=at(n,function(n){if(Zr(n))return r=bo(n.length,r),!0});for(var e=zi(r);++t<r;)e[t]=ct(n,Pt(t));return e}function Le(n,t,r){if(!(n?n.length:0))return[];var e=Te(n);return null==t?e:(t=or(t,r,4),ct(e,function(n){return st(n,t,b,!0)}))}function Be(){for(var n=-1,t=arguments.length;++n<t;){var r=arguments[n];if(Zr(r))var e=e?lt(jt(e,r),jt(r,e)):r}return e?nr(e):[]}function ze(n,t){var r=-1,e=n?n.length:0,u={};for(!e||t||Cf(n[0])||(t=[]);++r<e;){var i=n[r];t?u[i]=t[r]:i&&(u[i[0]]=i[1])}return u}function De(n){var t=Bn(n);return t.__chain__=!0,t}function Me(n,t,r){return t.call(r,n),n}function qe(n,t,r){return t.call(r,n)}function Pe(){return De(this)}function Ke(){return new Dn(this.value(),this.__chain__)}function Ve(n){for(var t,r=this;r instanceof zn;){var e=he(r);t?u.__wrapped__=e:t=e;var u=e;r=r.__wrapped__}return u.__wrapped__=n,t}function Ye(){var n=this.__wrapped__,t=function(n){return r&&r.__dir__<0?n:n.reverse()};if(n instanceof Mn){var r=n;return this.__actions__.length&&(r=new Mn(this)),r=r.reverse(),r.__actions__.push({func:qe,args:[t],thisArg:b}),new Dn(r,this.__chain__)}return this.thru(t)}function Ge(){return this.value()+""}function Je(){return er(this.__wrapped__,this.__actions__)}function Xe(n,t,r){var e=Cf(n)?ot:kt;return r&&Qr(n,t,r)&&(t=b),"function"==typeof t&&r===b||(t=Dr(t,r,3)),e(n,t)}function Ze(n,t,r){var e=Cf(n)?at:Ot;return t=Dr(t,r,3),e(n,t)}function He(n,t){return uf(n,zt(t))}function Qe(n,t,r,e){var u=n?Mo(n):0;return re(u)||(n=ii(n),u=n.length),r="number"!=typeof r||e&&Qr(t,r,e)?0:r<0?bo(u+r,0):r||0,"string"==typeof n||!Cf(n)&&Mu(n)?r<=u&&n.indexOf(t,r)>-1:!!u&&qr(n,t,r)>-1}function nu(n,t,r){var e=Cf(n)?ct:Bt;return t=Dr(t,r,3),e(n,t)}function tu(n,t){return nu(n,Wi(t))}function ru(n,t,r){var e=Cf(n)?at:Ot;return t=Dr(t,r,3),e(n,function(n,r,e){return!t(n,r,e)})}function eu(n,t,r){if(r?Qr(n,t,r):null==t){n=le(n);var e=n.length;return e>0?n[Yt(0,e-1)]:b}var u=-1,i=Yu(n),e=i.length,o=e-1;for(t=Ao(t<0?0:+t||0,e);++u<t;){var f=Yt(u,o),a=i[f];i[f]=i[u],i[u]=a}return i.length=t,i}function uu(n){return eu(n,Oo)}function iu(n){var t=n?Mo(n):0;return re(t)?t:Df(n).length}function ou(n,t,r){var e=Cf(n)?ht:Xt;return r&&Qr(n,t,r)&&(t=b),"function"==typeof t&&r===b||(t=Dr(t,r,3)),e(n,t)}function fu(n,t,r){if(null==n)return[];r&&Qr(n,t,r)&&(t=b);var e=-1;return t=Dr(t,r,3),Zt(Bt(n,function(n,r,u){return{criteria:t(n,r,u),index:++e,value:n}}),f)}function au(n,t,r,e){return null==n?[]:(e&&Qr(t,r,e)&&(r=b),Cf(t)||(t=null==t?[]:[t]),Cf(r)||(r=null==r?[]:[r]),Ht(n,t,r))}function cu(n,t){return Ze(n,zt(t))}function lu(n,t){if("function"!=typeof t){if("function"!=typeof n)throw new Ji(z);var r=n;n=t,t=r}return n=mo(n=+n)?n:0,function(){if(--n<1)return t.apply(this,arguments)}}function su(n,t,r){return r&&Qr(n,t,r)&&(t=b),t=n&&null==t?n.length:bo(+t||0,0),Tr(n,S,b,b,b,b,t)}function pu(n,t){var r;if("function"!=typeof t){if("function"!=typeof n)throw new Ji(z);var e=n;n=t,t=e}return function(){return--n>0&&(r=t.apply(this,arguments)),n<=1&&(t=b),r}}function hu(n,t,r){function e(){h&&oo(h),c&&oo(c),_=0,c=h=v=b}function u(t,r){r&&oo(r),c=h=v=b,t&&(_=gf(),l=n.apply(p,a),h||c||(a=p=b))}function i(){var n=t-(gf()-s);n<=0||n>t?u(v,c):h=so(i,n)}function o(){u(y,h)}function f(){if(a=arguments,s=gf(),p=this,v=y&&(h||!d),!1===g)var r=d&&!h;else{c||d||(_=s);var e=g-(s-_),u=e<=0||e>g;u?(c&&(c=oo(c)),_=s,l=n.apply(p,a)):c||(c=so(o,e))}return u&&h?h=oo(h):h||t===g||(h=so(i,t)),r&&(u=!0,l=n.apply(p,a)),!u||h||c||(a=p=b),l}var a,c,l,s,p,h,v,_=0,g=!1,y=!0;if("function"!=typeof n)throw new Ji(z);if(t=t<0?0:+t||0,!0===r){var d=!0;y=!1}else $u(r)&&(d=!!r.leading,g="maxWait"in r&&bo(+r.maxWait||0,t),y="trailing"in r?!!r.trailing:y);return f.cancel=e,f}function vu(n,t){if("function"!=typeof n||t&&"function"!=typeof t)throw new Ji(z);var r=function(){var e=arguments,u=t?t.apply(this,e):e[0],i=r.cache;if(i.has(u))return i.get(u);var o=n.apply(this,e);return r.cache=i.set(u,o),o};return r.cache=new vu.Cache,r}function _u(n){if("function"!=typeof n)throw new Ji(z);return function(){return!n.apply(this,arguments)}}function gu(n){return pu(2,n)}function yu(n,t){if("function"!=typeof n)throw new Ji(z);return t=bo(t===b?n.length-1:+t||0,0),function(){for(var r=arguments,e=-1,u=bo(r.length-t,0),i=zi(u);++e<u;)i[e]=r[t+e];switch(t){case 0:return n.call(this,i);case 1:return n.call(this,r[0],i);case 2:return n.call(this,r[0],r[1],i)}var o=zi(t+1);for(e=-1;++e<t;)o[e]=r[e];return o[t]=i,n.apply(this,o)}}function du(n){if("function"!=typeof n)throw new Ji(z);return function(t){return n.apply(this,t)}}function wu(n,t,r){var e=!0,u=!0;if("function"!=typeof n)throw new Ji(z);return!1===r?e=!1:$u(r)&&(e="leading"in r?!!r.leading:e,u="trailing"in r?!!r.trailing:u),hu(n,t,{leading:e,maxWait:+t,trailing:u})}function mu(n,t){return t=null==t?Ri:t,Tr(t,E,b,[n],[])}function xu(n,t,r,e){return t&&"boolean"!=typeof t&&Qr(n,t,r)?t=!1:"function"==typeof t&&(e=r,r=t,t=!1),"function"==typeof r?bt(n,t,or(r,e,1)):bt(n,t)}function bu(n,t,r){return"function"==typeof t?bt(n,!0,or(t,r,1)):bt(n,!0)}function Au(n,t){return n>t}function ju(n,t){return n>=t}function ku(n){return v(n)&&Zr(n)&&no.call(n,"callee")&&!co.call(n,"callee")}function Iu(n){return!0===n||!1===n||v(n)&&ro.call(n)==P}function Ru(n){return v(n)&&ro.call(n)==K}function Ou(n){return!!n&&1===n.nodeType&&v(n)&&!zu(n)}function Eu(n){return null==n||(Zr(n)&&(Cf(n)||Mu(n)||ku(n)||v(n)&&Wu(n.splice))?!n.length:!Df(n).length)}function Cu(n,t,r,e){r="function"==typeof r?or(r,e,3):b;var u=r?r(n,t):b;return u===b?Nt(n,t,r):!!u}function Su(n){return v(n)&&"string"==typeof n.message&&ro.call(n)==V}function Uu(n){return"number"==typeof n&&mo(n)}function Wu(n){return $u(n)&&ro.call(n)==Y}function $u(n){var t=typeof n;return!!n&&("object"==t||"function"==t)}function Fu(n,t,r,e){return r="function"==typeof r?or(r,e,3):b,Lt(n,Pr(t),r)}function Nu(n){return Bu(n)&&n!=+n}function Tu(n){return null!=n&&(Wu(n)?uo.test(Qi.call(n)):v(n)&&En.test(n))}function Lu(n){return null===n}function Bu(n){return"number"==typeof n||v(n)&&ro.call(n)==G}function zu(n){var t;if(!v(n)||ro.call(n)!=J||ku(n)||!no.call(n,"constructor")&&"function"==typeof(t=n.constructor)&&!(t instanceof t))return!1;var r;return St(n,function(n,t){r=t}),r===b||no.call(n,r)}function Du(n){return $u(n)&&ro.call(n)==X}function Mu(n){return"string"==typeof n||v(n)&&ro.call(n)==Z}function qu(n){return v(n)&&re(n.length)&&!!Tn[ro.call(n)]}function Pu(n){return n===b}function Ku(n,t){return n<t}function Vu(n,t){return n<=t}function Yu(n){var t=n?Mo(n):0;return re(t)?t?et(n):[]:ii(n)}function Gu(n){return mt(n,ni(n))}function Ju(n,t,r){var e=Fo(n);return r&&Qr(n,t,r)&&(t=b),t?dt(e,t):e}function Xu(n){return $t(n,ni(n))}function Zu(n,t,r){var e=null==n?b:Ft(n,pe(t),t+"");return e===b?r:e}function Hu(n,t){if(null==n)return!1;var r=no.call(n,t);if(!r&&!ne(t)){if(t=pe(t),null==(n=1==t.length?n:Ft(n,Jt(t,0,-1))))return!1;t=Ie(t),r=no.call(n,t)}return r||re(n.length)&&Hr(t,n.length)&&(Cf(n)||ku(n))}function Qu(n,t,r){r&&Qr(n,t,r)&&(t=b);for(var e=-1,u=Df(n),i=u.length,o={};++e<i;){var f=u[e],a=n[f];t?no.call(o,a)?o[a].push(f):o[a]=[f]:o[a]=f}return o}function ni(n){if(null==n)return[];$u(n)||(n=Vi(n));var t=n.length;t=t&&re(t)&&(Cf(n)||ku(n))&&t||0;for(var r=n.constructor,e=-1,u="function"==typeof r&&r.prototype===n,i=zi(t),o=t>0;++e<t;)i[e]=e+"";for(var f in n)o&&Hr(f,t)||"constructor"==f&&(u||!no.call(n,f))||i.push(f);return i}function ti(n){n=se(n);for(var t=-1,r=Df(n),e=r.length,u=zi(e);++t<e;){var i=r[t];u[t]=[i,n[i]]}return u}function ri(n,t,r){var e=null==n?b:n[t];return e===b&&(null==n||ne(t,n)||(t=pe(t),n=1==t.length?n:Ft(n,Jt(t,0,-1)),e=null==n?b:n[Ie(t)]),e=e===b?r:e),Wu(e)?e.call(n):e}function ei(n,t,r){if(null==n)return n;var e=t+"";t=null!=n[e]||ne(t,n)?[e]:pe(t);for(var u=-1,i=t.length,o=i-1,f=n;null!=f&&++u<i;){var a=t[u];$u(f)&&(u==o?f[a]=r:null==f[a]&&(f[a]=Hr(t[u+1])?[]:{})),f=f[a]}return n}function ui(n,t,r,e){var u=Cf(n)||qu(n);if(t=Dr(t,e,4),null==r)if(u||$u(n)){var i=n.constructor;r=u?Cf(n)?new i:[]:Fo(Wu(i)?i.prototype:b)}else r={};return(u?ut:Ut)(n,function(n,e,u){return t(r,n,e,u)}),r}function ii(n){return tr(n,Df(n))}function oi(n){return tr(n,ni(n))}function fi(n,t,r){return t=+t||0,r===b?(r=t,t=0):r=+r||0,n>=Ao(t,r)&&n<bo(t,r)}function ai(n,t,r){r&&Qr(n,t,r)&&(t=r=b);var e=null==n,u=null==t;if(null==r&&(u&&"boolean"==typeof n?(r=n,n=1):"boolean"==typeof t&&(r=t,u=!0)),e&&u&&(t=1,u=!1),n=+n||0,u?(t=n,n=0):t=+t||0,r||n%1||t%1){var i=Io();return Ao(n+i*(t-n+fo("1e-"+((i+"").length-1))),t)}return Yt(n,t)}function ci(n){return(n=u(n))&&n.charAt(0).toUpperCase()+n.slice(1)}function li(n){return(n=u(n))&&n.replace(Sn,c).replace(jn,"")}function si(n,t,r){n=u(n),t+="";var e=n.length;return r=r===b?e:Ao(r<0?0:+r||0,e),
(r-=t.length)>=0&&n.indexOf(t,r)==r}function pi(n){return n=u(n),n&&_n.test(n)?n.replace(hn,l):n}function hi(n){return n=u(n),n&&An.test(n)?n.replace(bn,s):n||"(?:)"}function vi(n,t,r){n=u(n),t=+t;var e=n.length;if(e>=t||!mo(t))return n;var i=(t-e)/2,o=yo(i);return r=Wr("",_o(i),r),r.slice(0,o)+n+r}function _i(n,t,r){return(r?Qr(n,t,r):null==t)?t=0:t&&(t=+t),n=wi(n),ko(n,t||(On.test(n)?16:10))}function gi(n,t){var r="";if(n=u(n),(t=+t)<1||!n||!mo(t))return r;do{t%2&&(r+=n),t=yo(t/2),n+=n}while(t);return r}function yi(n,t,r){return n=u(n),r=null==r?0:Ao(r<0?0:+r||0,n.length),n.lastIndexOf(t,r)==r}function di(n,t,r){var e=Bn.templateSettings;r&&Qr(n,t,r)&&(t=r=b),n=u(n),t=yt(dt({},r||t),e,gt);var i,o,f=yt(dt({},t.imports),e.imports,gt),a=Df(f),c=tr(f,a),l=0,s=t.interpolate||Un,h="__p += '",v=Yi((t.escape||Un).source+"|"+s.source+"|"+(s===dn?In:Un).source+"|"+(t.evaluate||Un).source+"|$","g"),_="//# sourceURL="+("sourceURL"in t?t.sourceURL:"lodash.templateSources["+ ++Nn+"]")+"\n";n.replace(v,function(t,r,e,u,f,a){return e||(e=u),h+=n.slice(l,a).replace(Wn,p),r&&(i=!0,h+="' +\n__e("+r+") +\n'"),f&&(o=!0,h+="';\n"+f+";\n__p += '"),e&&(h+="' +\n((__t = ("+e+")) == null ? '' : __t) +\n'"),l=a+t.length,t}),h+="';\n";var g=t.variable;g||(h="with (obj) {\n"+h+"\n}\n"),h=(o?h.replace(cn,""):h).replace(ln,"$1").replace(sn,"$1;"),h="function("+(g||"obj")+") {\n"+(g?"":"obj || (obj = {});\n")+"var __t, __p = ''"+(i?", __e = _.escape":"")+(o?", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n":";\n")+h+"return __p\n}";var y=Hf(function(){return qi(a,_+"return "+h).apply(b,c)});if(y.source=h,Su(y))throw y;return y}function wi(n,t,r){var e=n;return(n=u(n))?(r?Qr(e,t,r):null==t)?n.slice(d(n),w(n)+1):(t+="",n.slice(i(n,t),o(n,t)+1)):n}function mi(n,t,r){var e=n;return n=u(n),n?(r?Qr(e,t,r):null==t)?n.slice(d(n)):n.slice(i(n,t+"")):n}function xi(n,t,r){var e=n;return n=u(n),n?(r?Qr(e,t,r):null==t)?n.slice(0,w(n)+1):n.slice(0,o(n,t+"")+1):n}function bi(n,t,r){r&&Qr(n,t,r)&&(t=b);var e=W,i=$;if(null!=t)if($u(t)){var o="separator"in t?t.separator:o;e="length"in t?+t.length||0:e,i="omission"in t?u(t.omission):i}else e=+t||0;if(n=u(n),e>=n.length)return n;var f=e-i.length;if(f<1)return i;var a=n.slice(0,f);if(null==o)return a+i;if(Du(o)){if(n.slice(f).search(o)){var c,l,s=n.slice(0,f);for(o.global||(o=Yi(o.source,(Rn.exec(o)||"")+"g")),o.lastIndex=0;c=o.exec(s);)l=c.index;a=a.slice(0,null==l?f:l)}}else if(n.indexOf(o,f)!=f){var p=a.lastIndexOf(o);p>-1&&(a=a.slice(0,p))}return a+i}function Ai(n){return n=u(n),n&&vn.test(n)?n.replace(pn,m):n}function ji(n,t,r){return r&&Qr(n,t,r)&&(t=b),n=u(n),n.match(t||$n)||[]}function ki(n,t,r){return r&&Qr(n,t,r)&&(t=b),v(n)?Oi(n):xt(n,t)}function Ii(n){return function(){return n}}function Ri(n){return n}function Oi(n){return zt(bt(n,!0))}function Ei(n,t){return Dt(n,bt(t,!0))}function Ci(n,t,r){if(null==r){var e=$u(t),u=e?Df(t):b,i=u&&u.length?$t(t,u):b;(i?i.length:e)||(i=!1,r=t,t=n,n=this)}i||(i=$t(t,Df(t)));var o=!0,f=-1,a=Wu(n),c=i.length;!1===r?o=!1:$u(r)&&"chain"in r&&(o=r.chain);for(;++f<c;){var l=i[f],s=t[l];n[l]=s,a&&(n.prototype[l]=function(t){return function(){var r=this.__chain__;if(o||r){var e=n(this.__wrapped__);return(e.__actions__=et(this.__actions__)).push({func:t,args:arguments,thisArg:n}),e.__chain__=r,e}return t.apply(n,lt([this.value()],arguments))}}(s))}return n}function Si(){return Zn._=eo,this}function Ui(){}function Wi(n){return ne(n)?Pt(n):Kt(n)}function $i(n){return function(t){return Ft(n,pe(t),t+"")}}function Fi(n,t,r){r&&Qr(n,t,r)&&(t=r=b),n=+n||0,r=null==r?1:+r||0,null==t?(t=n,n=0):t=+t||0;for(var e=-1,u=bo(_o((t-n)/(r||1)),0),i=zi(u);++e<u;)i[e]=n,n+=r;return i}function Ni(n,t,r){if((n=yo(n))<1||!mo(n))return[];var e=-1,u=zi(Ao(n,Eo));for(t=or(t,r,1);++e<n;)e<Eo?u[e]=t(e):t(e);return u}function Ti(n){var t=++to;return u(n)+t}function Li(n,t){return(+n||0)+(+t||0)}function Bi(n,t,r){return r&&Qr(n,t,r)&&(t=b),t=Dr(t,r,3),1==t.length?vt(Cf(n)?n:le(n),t):Qt(n,t)}_=_?Hn.defaults(Zn.Object(),_,Hn.pick(Zn,Fn)):Zn;var zi=_.Array,Di=_.Date,Mi=_.Error,qi=_.Function,Pi=_.Math,Ki=_.Number,Vi=_.Object,Yi=_.RegExp,Gi=_.String,Ji=_.TypeError,Xi=zi.prototype,Zi=Vi.prototype,Hi=Gi.prototype,Qi=qi.prototype.toString,no=Zi.hasOwnProperty,to=0,ro=Zi.toString,eo=Zn._,uo=Yi("^"+Qi.call(no).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),io=_.ArrayBuffer,oo=_.clearTimeout,fo=_.parseFloat,ao=Pi.pow,co=Zi.propertyIsEnumerable,lo=Kr(_,"Set"),so=_.setTimeout,po=Xi.splice,ho=_.Uint8Array,vo=Kr(_,"WeakMap"),_o=Pi.ceil,go=Kr(Vi,"create"),yo=Pi.floor,wo=Kr(zi,"isArray"),mo=_.isFinite,xo=Kr(Vi,"keys"),bo=Pi.max,Ao=Pi.min,jo=Kr(Di,"now"),ko=_.parseInt,Io=Pi.random,Ro=Ki.NEGATIVE_INFINITY,Oo=Ki.POSITIVE_INFINITY,Eo=4294967295,Co=Eo-1,So=Eo>>>1,Uo=9007199254740991,Wo=vo&&new vo,$o={};Bn.support={};Bn.templateSettings={escape:gn,evaluate:yn,interpolate:dn,variable:"",imports:{_:Bn}};var Fo=function(){function n(){}return function(t){if($u(t)){n.prototype=t;var r=new n;n.prototype=b}return r||{}}}(),No=pr(Ut),To=pr(Wt,!0),Lo=hr(),Bo=hr(!0),zo=Wo?function(n,t){return Wo.set(n,t),n}:Ri,Do=Wo?function(n){return Wo.get(n)}:Ui,Mo=Pt("length"),qo=function(){var n=0,t=0;return function(r,e){var u=gf(),i=N-(u-t);if(t=u,i>0){if(++n>=F)return r}else n=0;return zo(r,e)}}(),Po=yu(function(n,t){return v(n)&&Zr(n)?jt(n,Ct(t,!1,!0)):[]}),Ko=br(),Vo=br(!0),Yo=yu(function(n){for(var t=n.length,e=t,u=zi(s),i=qr(),o=i==r,f=[];e--;){var a=n[e]=Zr(a=n[e])?a:[];u[e]=o&&a.length>=120?_r(e&&a):null}var c=n[0],l=-1,s=c?c.length:0,p=u[0];n:for(;++l<s;)if(a=c[l],(p?nt(p,a):i(f,a,0))<0){for(var e=t;--e;){var h=u[e];if((h?nt(h,a):i(n[e],a,0))<0)continue n}p&&p.push(a),f.push(a)}return f}),Go=yu(function(t,r){r=Ct(r);var e=wt(t,r);return Vt(t,r.sort(n)),e}),Jo=Nr(),Xo=Nr(!0),Zo=yu(function(n){return nr(Ct(n,!1,!0))}),Ho=yu(function(n,t){return Zr(n)?jt(n,t):[]}),Qo=yu(Te),nf=yu(function(n){var t=n.length,r=t>2?n[t-2]:b,e=t>1?n[t-1]:b;return t>2&&"function"==typeof r?t-=2:(r=t>1&&"function"==typeof e?(--t,e):b,e=b),n.length=t,Le(n,r,e)}),tf=yu(function(n){return n=Ct(n),this.thru(function(t){return rt(Cf(t)?t:[se(t)],n)})}),rf=yu(function(n,t){return wt(n,Ct(t))}),ef=lr(function(n,t,r){no.call(n,r)?++n[r]:n[r]=1}),uf=xr(No),of=xr(To,!0),ff=kr(ut,No),af=kr(it,To),cf=lr(function(n,t,r){no.call(n,r)?n[r].push(t):n[r]=[t]}),lf=lr(function(n,t,r){n[r]=t}),sf=yu(function(n,t,r){var e=-1,u="function"==typeof t,i=ne(t),o=Zr(n)?zi(n.length):[];return No(n,function(n){var f=u?t:i&&null!=n?n[t]:b;o[++e]=f?f.apply(n,r):Xr(n,t,r)}),o}),pf=lr(function(n,t,r){n[r?0:1].push(t)},function(){return[[],[]]}),hf=Sr(st,No),vf=Sr(pt,To),_f=yu(function(n,t){if(null==n)return[];var r=t[2];return r&&Qr(t[0],t[1],r)&&(t.length=1),Ht(n,Ct(t),[])}),gf=jo||function(){return(new Di).getTime()},yf=yu(function(n,t,r){var e=j;if(r.length){var u=g(r,yf.placeholder);e|=E}return Tr(n,e,t,r,u)}),df=yu(function(n,t){t=t.length?Ct(t):Xu(n);for(var r=-1,e=t.length;++r<e;){var u=t[r];n[u]=Tr(n[u],j,n)}return n}),wf=yu(function(n,t,r){var e=j|k;if(r.length){var u=g(r,wf.placeholder);e|=E}return Tr(t,e,n,r,u)}),mf=dr(R),xf=dr(O),bf=yu(function(n,t){return At(n,1,t)}),Af=yu(function(n,t,r){return At(n,t,r)}),jf=jr(),kf=jr(!0),If=yu(function(n,t){if(t=Ct(t),"function"!=typeof n||!ot(t,e))throw new Ji(z);var r=t.length;return yu(function(e){for(var u=Ao(e.length,r);u--;)e[u]=t[u](e[u]);return n.apply(this,e)})}),Rf=Cr(E),Of=Cr(C),Ef=yu(function(n,t){return Tr(n,U,b,b,b,Ct(t))}),Cf=wo||function(n){return v(n)&&re(n.length)&&ro.call(n)==q},Sf=sr(Mt),Uf=sr(function(n,t,r){return r?yt(n,t,r):dt(n,t)}),Wf=wr(Uf,_t),$f=wr(Sf,ie),Ff=Ar(Ut),Nf=Ar(Wt),Tf=Ir(Lo),Lf=Ir(Bo),Bf=Rr(Ut),zf=Rr(Wt),Df=xo?function(n){var t=null==n?b:n.constructor;return"function"==typeof t&&t.prototype===n||"function"!=typeof n&&Zr(n)?ce(n):$u(n)?xo(n):[]}:ce,Mf=Or(!0),qf=Or(),Pf=yu(function(n,t){if(null==n)return{};if("function"!=typeof t[0]){var t=ct(Ct(t),Gi);return oe(n,jt(ni(n),t))}var r=or(t[0],t[1],3);return fe(n,function(n,t,e){return!r(n,t,e)})}),Kf=yu(function(n,t){return null==n?{}:"function"==typeof t[0]?fe(n,or(t[0],t[1],3)):oe(n,Ct(t))}),Vf=gr(function(n,t,r){return t=t.toLowerCase(),n+(r?t.charAt(0).toUpperCase()+t.slice(1):t)}),Yf=gr(function(n,t,r){return n+(r?"-":"")+t.toLowerCase()}),Gf=Er(),Jf=Er(!0),Xf=gr(function(n,t,r){return n+(r?"_":"")+t.toLowerCase()}),Zf=gr(function(n,t,r){return n+(r?" ":"")+(t.charAt(0).toUpperCase()+t.slice(1))}),Hf=yu(function(n,t){try{return n.apply(b,t)}catch(n){return Su(n)?n:new Mi(n)}}),Qf=yu(function(n,t){return function(r){return Xr(r,n,t)}}),na=yu(function(n,t){return function(r){return Xr(n,r,t)}}),ta=Fr("ceil"),ra=Fr("floor"),ea=mr(Au,Ro),ua=mr(Ku,Oo),ia=Fr("round");return Bn.prototype=zn.prototype,Dn.prototype=Fo(zn.prototype),Dn.prototype.constructor=Dn,Mn.prototype=Fo(zn.prototype),Mn.prototype.constructor=Mn,Vn.prototype.delete=Yn,Vn.prototype.get=Gn,Vn.prototype.has=Jn,Vn.prototype.set=Xn,Qn.prototype.push=tt,vu.Cache=Vn,Bn.after=lu,Bn.ary=su,Bn.assign=Uf,Bn.at=rf,Bn.before=pu,Bn.bind=yf,Bn.bindAll=df,Bn.bindKey=wf,Bn.callback=ki,Bn.chain=De,Bn.chunk=ve,Bn.compact=_e,Bn.constant=Ii,Bn.countBy=ef,Bn.create=Ju,Bn.curry=mf,Bn.curryRight=xf,Bn.debounce=hu,Bn.defaults=Wf,Bn.defaultsDeep=$f,Bn.defer=bf,Bn.delay=Af,Bn.difference=Po,Bn.drop=ge,Bn.dropRight=ye,Bn.dropRightWhile=de,Bn.dropWhile=we,Bn.fill=me,Bn.filter=Ze,Bn.flatten=be,Bn.flattenDeep=Ae,Bn.flow=jf,Bn.flowRight=kf,Bn.forEach=ff,Bn.forEachRight=af,Bn.forIn=Tf,Bn.forInRight=Lf,Bn.forOwn=Bf,Bn.forOwnRight=zf,Bn.functions=Xu,Bn.groupBy=cf,Bn.indexBy=lf,Bn.initial=ke,Bn.intersection=Yo,Bn.invert=Qu,Bn.invoke=sf,Bn.keys=Df,Bn.keysIn=ni,Bn.map=nu,Bn.mapKeys=Mf,Bn.mapValues=qf,Bn.matches=Oi,Bn.matchesProperty=Ei,Bn.memoize=vu,Bn.merge=Sf,Bn.method=Qf,Bn.methodOf=na,Bn.mixin=Ci,Bn.modArgs=If,Bn.negate=_u,Bn.omit=Pf,Bn.once=gu,Bn.pairs=ti,Bn.partial=Rf,Bn.partialRight=Of,Bn.partition=pf,Bn.pick=Kf,Bn.pluck=tu,Bn.property=Wi,Bn.propertyOf=$i,Bn.pull=Oe,Bn.pullAt=Go,Bn.range=Fi,Bn.rearg=Ef,Bn.reject=ru,Bn.remove=Ee,Bn.rest=Ce,Bn.restParam=yu,Bn.set=ei,Bn.shuffle=uu,Bn.slice=Se,Bn.sortBy=fu,Bn.sortByAll=_f,Bn.sortByOrder=au,Bn.spread=du,Bn.take=Ue,Bn.takeRight=We,Bn.takeRightWhile=$e,Bn.takeWhile=Fe,Bn.tap=Me,Bn.throttle=wu,Bn.thru=qe,Bn.times=Ni,Bn.toArray=Yu,Bn.toPlainObject=Gu,Bn.transform=ui,Bn.union=Zo,Bn.uniq=Ne,Bn.unzip=Te,Bn.unzipWith=Le,Bn.values=ii,Bn.valuesIn=oi,Bn.where=cu,Bn.without=Ho,Bn.wrap=mu,Bn.xor=Be,Bn.zip=Qo,Bn.zipObject=ze,Bn.zipWith=nf,Bn.backflow=kf,Bn.collect=nu,Bn.compose=kf,Bn.each=ff,Bn.eachRight=af,Bn.extend=Uf,Bn.iteratee=ki,Bn.methods=Xu,Bn.object=ze,Bn.select=Ze,Bn.tail=Ce,Bn.unique=Ne,Ci(Bn,Bn),Bn.add=Li,Bn.attempt=Hf,Bn.camelCase=Vf,Bn.capitalize=ci,Bn.ceil=ta,Bn.clone=xu,Bn.cloneDeep=bu,Bn.deburr=li,Bn.endsWith=si,Bn.escape=pi,Bn.escapeRegExp=hi,Bn.every=Xe,Bn.find=uf,Bn.findIndex=Ko,Bn.findKey=Ff,Bn.findLast=of,Bn.findLastIndex=Vo,Bn.findLastKey=Nf,Bn.findWhere=He,Bn.first=xe,Bn.floor=ra,Bn.get=Zu,Bn.gt=Au,Bn.gte=ju,Bn.has=Hu,Bn.identity=Ri,Bn.includes=Qe,Bn.indexOf=je,Bn.inRange=fi,Bn.isArguments=ku,Bn.isArray=Cf,Bn.isBoolean=Iu,Bn.isDate=Ru,Bn.isElement=Ou,Bn.isEmpty=Eu,Bn.isEqual=Cu,Bn.isError=Su,Bn.isFinite=Uu,Bn.isFunction=Wu,Bn.isMatch=Fu,Bn.isNaN=Nu,Bn.isNative=Tu,Bn.isNull=Lu,Bn.isNumber=Bu,Bn.isObject=$u,Bn.isPlainObject=zu,Bn.isRegExp=Du,Bn.isString=Mu,Bn.isTypedArray=qu,Bn.isUndefined=Pu,Bn.kebabCase=Yf,Bn.last=Ie,Bn.lastIndexOf=Re,Bn.lt=Ku,Bn.lte=Vu,Bn.max=ea,Bn.min=ua,Bn.noConflict=Si,Bn.noop=Ui,Bn.now=gf,Bn.pad=vi,Bn.padLeft=Gf,Bn.padRight=Jf,Bn.parseInt=_i,Bn.random=ai,Bn.reduce=hf,Bn.reduceRight=vf,Bn.repeat=gi,Bn.result=ri,Bn.round=ia,Bn.runInContext=x,Bn.size=iu,Bn.snakeCase=Xf,Bn.some=ou,Bn.sortedIndex=Jo,Bn.sortedLastIndex=Xo,Bn.startCase=Zf,Bn.startsWith=yi,Bn.sum=Bi,Bn.template=di,Bn.trim=wi,Bn.trimLeft=mi,Bn.trimRight=xi,Bn.trunc=bi,Bn.unescape=Ai,Bn.uniqueId=Ti,Bn.words=ji,Bn.all=Xe,Bn.any=ou,Bn.contains=Qe,Bn.eq=Cu,Bn.detect=uf,Bn.foldl=hf,Bn.foldr=vf,Bn.head=xe,Bn.include=Qe,Bn.inject=hf,Ci(Bn,function(){var n={};return Ut(Bn,function(t,r){Bn.prototype[r]||(n[r]=t)}),n}(),!1),Bn.sample=eu,Bn.prototype.sample=function(n){return this.__chain__||null!=n?this.thru(function(t){return eu(t,n)}):eu(this.value())},Bn.VERSION=A,ut(["bind","bindKey","curry","curryRight","partial","partialRight"],function(n){Bn[n].placeholder=Bn}),ut(["drop","take"],function(n,t){Mn.prototype[n]=function(r){var e=this.__filtered__;if(e&&!t)return new Mn(this);r=null==r?1:bo(yo(r)||0,0);var u=this.clone();return e?u.__takeCount__=Ao(u.__takeCount__,r):u.__views__.push({size:r,type:n+(u.__dir__<0?"Right":"")}),u},Mn.prototype[n+"Right"]=function(t){return this.reverse()[n](t).reverse()}}),ut(["filter","map","takeWhile"],function(n,t){var r=t+1,e=r!=B;Mn.prototype[n]=function(n,t){var u=this.clone();return u.__iteratees__.push({iteratee:Dr(n,t,1),type:r}),u.__filtered__=u.__filtered__||e,u}}),ut(["first","last"],function(n,t){var r="take"+(t?"Right":"");Mn.prototype[n]=function(){return this[r](1).value()[0]}}),ut(["initial","rest"],function(n,t){var r="drop"+(t?"":"Right");Mn.prototype[n]=function(){return this.__filtered__?new Mn(this):this[r](1)}}),ut(["pluck","where"],function(n,t){var r=t?"filter":"map",e=t?zt:Wi;Mn.prototype[n]=function(n){return this[r](e(n))}}),Mn.prototype.compact=function(){return this.filter(Ri)},Mn.prototype.reject=function(n,t){return n=Dr(n,t,1),this.filter(function(t){return!n(t)})},Mn.prototype.slice=function(n,t){n=null==n?0:+n||0;var r=this;return r.__filtered__&&(n>0||t<0)?new Mn(r):(n<0?r=r.takeRight(-n):n&&(r=r.drop(n)),t!==b&&(t=+t||0,r=t<0?r.dropRight(-t):r.take(t-n)),r)},Mn.prototype.takeRightWhile=function(n,t){return this.reverse().takeWhile(n,t).reverse()},Mn.prototype.toArray=function(){return this.take(Oo)},Ut(Mn.prototype,function(n,t){var r=/^(?:filter|map|reject)|While$/.test(t),e=/^(?:first|last)$/.test(t),u=Bn[e?"take"+("last"==t?"Right":""):t];u&&(Bn.prototype[t]=function(){var t=e?[1]:arguments,i=this.__chain__,o=this.__wrapped__,f=!!this.__actions__.length,a=o instanceof Mn,c=t[0],l=a||Cf(o);l&&r&&"function"==typeof c&&1!=c.length&&(a=l=!1);var s=function(n){return e&&i?u(n,1)[0]:u.apply(b,lt([n],t))},p={func:qe,args:[s],thisArg:b},h=a&&!f;if(e&&!i)return h?(o=o.clone(),o.__actions__.push(p),n.call(o)):u.call(b,this.value())[0];if(!e&&l){o=h?o:new Mn(this);var v=n.apply(o,t);return v.__actions__.push(p),new Dn(v,i)}return this.thru(s)})}),ut(["join","pop","push","replace","shift","sort","splice","split","unshift"],function(n){var t=(/^(?:replace|split)$/.test(n)?Hi:Xi)[n],r=/^(?:push|sort|unshift)$/.test(n)?"tap":"thru",e=/^(?:join|pop|replace|shift)$/.test(n);Bn.prototype[n]=function(){var n=arguments;return e&&!this.__chain__?t.apply(this.value(),n):this[r](function(r){return t.apply(r,n)})}}),Ut(Mn.prototype,function(n,t){var r=Bn[t];if(r){var e=r.name;($o[e]||($o[e]=[])).push({name:t,func:r})}}),$o[Ur(b,k).name]=[{name:"wrapper",func:b}],Mn.prototype.clone=qn,Mn.prototype.reverse=Pn,Mn.prototype.value=Kn,Bn.prototype.chain=Pe,Bn.prototype.commit=Ke,Bn.prototype.concat=tf,Bn.prototype.plant=Ve,Bn.prototype.reverse=Ye,Bn.prototype.toString=Ge,Bn.prototype.run=Bn.prototype.toJSON=Bn.prototype.valueOf=Bn.prototype.value=Je,Bn.prototype.collect=Bn.prototype.map,Bn.prototype.head=Bn.prototype.first,Bn.prototype.select=Bn.prototype.filter,Bn.prototype.tail=Bn.prototype.rest,Bn}var b,A="3.10.1",j=1,k=2,I=4,R=8,O=16,E=32,C=64,S=128,U=256,W=30,$="...",F=150,N=16,T=200,L=1,B=2,z="Expected a function",D="__lodash_placeholder__",M="[object Arguments]",q="[object Array]",P="[object Boolean]",K="[object Date]",V="[object Error]",Y="[object Function]",G="[object Number]",J="[object Object]",X="[object RegExp]",Z="[object String]",H="[object ArrayBuffer]",Q="[object Float32Array]",nn="[object Float64Array]",tn="[object Int8Array]",rn="[object Int16Array]",en="[object Int32Array]",un="[object Uint8Array]",on="[object Uint8ClampedArray]",fn="[object Uint16Array]",an="[object Uint32Array]",cn=/\b__p \+= '';/g,ln=/\b(__p \+=) '' \+/g,sn=/(__e\(.*?\)|\b__t\)) \+\n'';/g,pn=/&(?:amp|lt|gt|quot|#39|#96);/g,hn=/[&<>"'`]/g,vn=RegExp(pn.source),_n=RegExp(hn.source),gn=/<%-([\s\S]+?)%>/g,yn=/<%([\s\S]+?)%>/g,dn=/<%=([\s\S]+?)%>/g,wn=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\n\\]|\\.)*?\1)\]/,mn=/^\w*$/,xn=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\n\\]|\\.)*?)\2)\]/g,bn=/^[:!,]|[\\^$.*+?()[\]{}|\/]|(^[0-9a-fA-Fnrtuvx])|([\n\r\u2028\u2029])/g,An=RegExp(bn.source),jn=/[\u0300-\u036f\ufe20-\ufe23]/g,kn=/\\(\\)?/g,In=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,Rn=/\w*$/,On=/^0[xX]/,En=/^\[object .+?Constructor\]$/,Cn=/^\d+$/,Sn=/[\xc0-\xd6\xd8-\xde\xdf-\xf6\xf8-\xff]/g,Un=/($^)/,Wn=/['\n\r\u2028\u2029\\]/g,$n=function(){var n="[A-Z\\xc0-\\xd6\\xd8-\\xde]",t="[a-z\\xdf-\\xf6\\xf8-\\xff]+";return RegExp(n+"+(?="+n+t+")|"+n+"?"+t+"|"+n+"+|[0-9]+","g")}(),Fn=["Array","ArrayBuffer","Date","Error","Float32Array","Float64Array","Function","Int8Array","Int16Array","Int32Array","Math","Number","Object","RegExp","Set","String","_","clearTimeout","isFinite","parseFloat","parseInt","setTimeout","TypeError","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","WeakMap"],Nn=-1,Tn={};Tn[Q]=Tn[nn]=Tn[tn]=Tn[rn]=Tn[en]=Tn[un]=Tn[on]=Tn[fn]=Tn[an]=!0,Tn[M]=Tn[q]=Tn[H]=Tn[P]=Tn[K]=Tn[V]=Tn[Y]=Tn["[object Map]"]=Tn[G]=Tn[J]=Tn[X]=Tn["[object Set]"]=Tn[Z]=Tn["[object WeakMap]"]=!1;var Ln={};Ln[M]=Ln[q]=Ln[H]=Ln[P]=Ln[K]=Ln[Q]=Ln[nn]=Ln[tn]=Ln[rn]=Ln[en]=Ln[G]=Ln[J]=Ln[X]=Ln[Z]=Ln[un]=Ln[on]=Ln[fn]=Ln[an]=!0,Ln[V]=Ln[Y]=Ln["[object Map]"]=Ln["[object Set]"]=Ln["[object WeakMap]"]=!1;var Bn={"À":"A","Á":"A","Â":"A","Ã":"A","Ä":"A","Å":"A","à":"a","á":"a","â":"a","ã":"a","ä":"a","å":"a","Ç":"C","ç":"c","Ð":"D","ð":"d","È":"E","É":"E","Ê":"E","Ë":"E","è":"e","é":"e","ê":"e","ë":"e","Ì":"I","Í":"I","Î":"I","Ï":"I","ì":"i","í":"i","î":"i","ï":"i","Ñ":"N","ñ":"n","Ò":"O","Ó":"O","Ô":"O","Õ":"O","Ö":"O","Ø":"O","ò":"o","ó":"o","ô":"o","õ":"o","ö":"o","ø":"o","Ù":"U","Ú":"U","Û":"U","Ü":"U","ù":"u","ú":"u","û":"u","ü":"u","Ý":"Y","ý":"y","ÿ":"y","Æ":"Ae","æ":"ae","Þ":"Th","þ":"th","ß":"ss"},zn={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","`":"&#96;"},Dn={"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"',"&#39;":"'","&#96;":"`"},Mn={function:!0,object:!0},qn={0:"x30",1:"x31",2:"x32",3:"x33",4:"x34",5:"x35",6:"x36",7:"x37",8:"x38",9:"x39",A:"x41",B:"x42",C:"x43",D:"x44",E:"x45",F:"x46",a:"x61",b:"x62",c:"x63",d:"x64",e:"x65",f:"x66",n:"x6e",r:"x72",t:"x74",u:"x75",v:"x76",x:"x78"},Pn={"\\":"\\","'":"'","\n":"n","\r":"r","\u2028":"u2028","\u2029":"u2029"},Kn=Mn[typeof exports]&&exports&&!exports.nodeType&&exports,Vn=Mn[typeof module]&&module&&!module.nodeType&&module,Yn=Kn&&Vn&&"object"==typeof global&&global&&global.Object&&global,Gn=Mn[typeof self]&&self&&self.Object&&self,Jn=Mn[typeof window]&&window&&window.Object&&window,Xn=Vn&&Vn.exports===Kn&&Kn,Zn=Yn||Jn!==(this&&this.window)&&Jn||Gn||this,Hn=x();"function"==typeof define&&"object"==typeof define.amd&&define.amd?(Zn._=Hn,define(function(){return Hn})):Kn&&Vn?Xn?(Vn.exports=Hn)._=Hn:Kn._=Hn:Zn._=Hn}).call(this);
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],207:[function(require,module,exports){
!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e(require("lodash")):"function"==typeof define&&define.amd?define(["lodash"],e):"object"==typeof exports?exports.machina=e(require("lodash")):t.machina=e(t._)}(this,function(t){return function(t){function e(i){if(n[i])return n[i].exports;var s=n[i]={exports:{},id:i,loaded:!1};return t[i].call(s.exports,s,s.exports,e),s.loaded=!0,s.exports}var n={};return e.m=t,e.c=n,e.p="",e(0)}([function(t,e,n){var i=n(1),s=n(2);t.exports=i.merge(s.instance,{Fsm:n(5),BehavioralFsm:n(6),utils:n(3),eventListeners:{newFsm:[]}})},function(e,n){e.exports=t},function(t,e,n){function i(){return{emit:function(t){var e=s.getLeaklessArgs(arguments);this.eventListeners["*"]&&a.each(this.eventListeners["*"],function(t){if(this.useSafeEmit)try{t.apply(this,e)}catch(t){console&&void 0!==console.log&&console.log(t.stack)}else t.apply(this,e)},this),this.eventListeners[t]&&a.each(this.eventListeners[t],function(t){if(this.useSafeEmit)try{t.apply(this,e.slice(1))}catch(t){console&&void 0!==console.log&&console.log(t.stack)}else t.apply(this,e.slice(1))},this)},on:function(t,e){var n=this;return n.eventListeners=n.eventListeners||{"*":[]},n.eventListeners[t]||(n.eventListeners[t]=[]),n.eventListeners[t].push(e),{eventName:t,callback:e,off:function(){n.off(t,e)}}},off:function(t,e){this.eventListeners=this.eventListeners||{"*":[]},t?this.eventListeners[t]=e?a.without(this.eventListeners[t],e):[]:this.eventListeners={}}}}var s=n(3),a=n(1);t.exports={getInstance:i,instance:i()}},function(t,e,n){function i(){return{initialState:"uninitialized",eventListeners:{"*":[]},states:{},namespace:p(),useSafeEmit:!1,hierarchy:{},pendingDelegations:{}}}function s(){return{inputQueue:[],targetReplayState:"",state:void 0,priorState:void 0,priorAction:"",currentAction:"",currentActionArgs:void 0,inExitHandler:!1}}function a(t,e){for(var n=[],i=e||0;i<t.length;i++)n[i]=t[i];return n}function r(t){if(t){var e={};return"object"==typeof t?t.factory?(e=t,e.instance=e.factory()):e.factory=function(){return t}:"function"==typeof t&&(e.factory=t),e.instance=e.factory(),e}}function o(t,e){return e.on("*",function(e,n){switch(e){case l.NO_HANDLER:n.ticket||n.delegated||n.namespace===t.namespace||(n.args[1].bubbling=!0),"_reset"!==n.inputType&&t.handle.apply(t,n.args);break;case l.HANDLING:var i=n.ticket;i&&t.pendingDelegations[i]&&delete t.pendingDelegations[i],t.emit(e,n);break;default:t.emit(e,n)}})}function c(){for(var t=[],e="0123456789abcdef",n=0;n<36;n++)t[n]=e.substr(Math.floor(16*Math.random()),1);return t[14]="4",t[19]=e.substr(3&t[19]|8,1),t[8]=t[13]=t[18]=t[23]="-",t.join("")}var u=[].slice,l=n(4),h=n(1),p=function(){var t=0;return function(){return"fsm."+t++}}(),f=["states","initialState"],d=function(t,e){var n,i=this,s={},a=function(){};return n=t&&t.hasOwnProperty("constructor")?t.constructor:function(){var t=u.call(arguments,0);t[0]=t[0]||{};var e,n=t[0].states||{};e=h.merge(h.cloneDeep(s),{states:n}),e.initialState=t[0].initialState||this.initialState,h.extend(t[0],e),i.apply(this,t)},h.merge(n,i),a.prototype=i.prototype,n.prototype=new a,t&&(h.extend(n.prototype,t),h.merge(s,h.transform(t,function(t,e,n){-1!==f.indexOf(n)&&(t[n]=e)}))),e&&h.merge(n,e),n.prototype.constructor=n,n.__super__=i.prototype,n};t.exports={createUUID:c,extend:d,getDefaultBehavioralOptions:i,getDefaultOptions:i,getDefaultClientMeta:s,getChildFsmInstance:r,getLeaklessArgs:a,listenToChild:o,makeFsmNamespace:p}},function(t,e){t.exports={NEXT_TRANSITION:"transition",HANDLING:"handling",HANDLED:"handled",NO_HANDLER:"nohandler",TRANSITION:"transition",TRANSITIONED:"transitioned",INVALID_STATE:"invalidstate",DEFERRED:"deferred",NEW_FSM:"newfsm"}},function(t,e,n){var i=n(6),s=n(3),a=n(1),r={constructor:function(){i.apply(this,arguments),this.ensureClientMeta()},initClient:function(){var t=this.initialState;if(!t)throw new Error("You must specify an initial state for this FSM");if(!this.states[t])throw new Error("The initial state specified does not exist in the states object.");this.transition(t)},ensureClientMeta:function(){return this._stamped||(this._stamped=!0,a.defaults(this,a.cloneDeep(s.getDefaultClientMeta())),this.initClient()),this},ensureClientArg:function(t){var e=t;return"object"!=typeof e[0]||"inputType"in e[0]||e[0]===this?("object"!=typeof e[0]||"object"==typeof e[0]&&"inputType"in e[0])&&e.unshift(this):e.splice(0,1,this),e},getHandlerArgs:function(t,e){var n=t,i=n[1];return"object"==typeof inputType&&n.splice(1,1,i.inputType),e?n.slice(1):n.slice(2)},getSystemHandlerArgs:function(t,e){return t},buildEventPayload:function(){var t=this.ensureClientArg(s.getLeaklessArgs(arguments)),e=t[1];return a.isPlainObject(e)?a.extend(e,{namespace:this.namespace}):{data:e||null,namespace:this.namespace}}};a.each(["handle","transition","deferUntilTransition","processQueue","clearQueue"],function(t){r[t]=function(){var e=this.ensureClientArg(s.getLeaklessArgs(arguments));return i.prototype[t].apply(this,e)}}),r=i.extend(r),t.exports=r},function(t,e,n){function i(t){s.extend(this,t),s.defaults(this,a.getDefaultBehavioralOptions()),this.initialize.apply(this,arguments),o.emit(c.NEW_FSM,this)}var s=n(1),a=n(3),r=n(2),o=r.instance,c=n(4);s.extend(i.prototype,{initialize:function(){},initClient:function(t){var e=this.initialState;if(!e)throw new Error("You must specify an initial state for this FSM");if(!this.states[e])throw new Error("The initial state specified does not exist in the states object.");this.transition(t,e)},configForState:function(t){var e,n=this.states[t];return s.each(this.hierarchy,function(t,e){t&&"function"==typeof t.off&&t.off()}),n._child&&(n._child=a.getChildFsmInstance(n._child),e=n._child&&n._child.instance,this.hierarchy[e.namespace]=a.listenToChild(this,e)),e},ensureClientMeta:function(t){if("object"!=typeof t)throw new Error("An FSM client must be an object.");return t.__machina__=t.__machina__||{},t.__machina__[this.namespace]||(t.__machina__[this.namespace]=s.cloneDeep(a.getDefaultClientMeta()),this.initClient(t)),t.__machina__[this.namespace]},buildEventPayload:function(t,e){return s.isPlainObject(e)?s.extend(e,{client:t,namespace:this.namespace}):{client:t,data:e||null,namespace:this.namespace}},getHandlerArgs:function(t,e){var n=t.slice(0),i=n[1];return"object"==typeof i&&n.splice(1,1,i.inputType),e?n:[n[0]].concat(n.slice(2))},getSystemHandlerArgs:function(t,e){return[e].concat(t)},handle:function(t,e){var n=e;if(void 0===e)throw new Error("The input argument passed to the FSM's handle method is undefined. Did you forget to pass the input name?");"string"==typeof e&&(n={inputType:e,delegated:!1,ticket:void 0});var i=this.ensureClientMeta(t),r=a.getLeaklessArgs(arguments);"object"!=typeof e&&r.splice(1,1,n),i.currentActionArgs=r.slice(1);var o,u,l,h,p,f=i.state,d=this.states[f],g=!1;if(!i.inExitHandler)if(!(l=this.configForState(f))||this.pendingDelegations[n.ticket]||n.bubbling){n.ticket&&this.pendingDelegations[n.ticket]&&delete this.pendingDelegations[n.ticket],o=d[n.inputType]?n.inputType:"*",g="*"===o,u=d[o]||this[o]||this["*"],p=i.state+"."+o,i.currentAction=p;var y=this.buildEventPayload(t,{inputType:n.inputType,delegated:n.delegated,ticket:n.ticket});u?(this.emit(c.HANDLING,y),"function"==typeof u?h=u.apply(this,this.getHandlerArgs(r,g)):(h=u,this.transition(t,u)),this.emit(c.HANDLED,y)):this.emit(c.NO_HANDLER,s.extend({args:r},y)),i.priorAction=i.currentAction,i.currentAction="",i.currentActionArgs=void 0}else n.ticket=n.ticket||a.createUUID(),n.delegated=!0,this.pendingDelegations[n.ticket]={delegatedTo:l.namespace},h=l.handle.apply(l,r);return h},transition:function(t,e){var n,i=this.ensureClientMeta(t),s=i.state,r=this.states[s],o=this.states[e],u=a.getLeaklessArgs(arguments).slice(2);if(!i.inExitHandler&&e!==s){if(o){n=this.configForState(e),r&&r._onExit&&(i.inExitHandler=!0,r._onExit.call(this,t),i.inExitHandler=!1),i.targetReplayState=e,i.priorState=s,i.state=e;var l=this.buildEventPayload(t,{fromState:i.priorState,action:i.currentAction,toState:e});return this.emit(c.TRANSITION,l),o._onEnter&&(o._onEnter.apply(this,this.getSystemHandlerArgs(u,t)),this.emit(c.TRANSITIONED,l)),n&&n.handle(t,"_reset"),void(i.targetReplayState===e&&this.processQueue(t,c.NEXT_TRANSITION))}this.emit(c.INVALID_STATE,this.buildEventPayload(t,{state:i.state,attemptedState:e}))}},deferUntilTransition:function(t,e){var n=this.ensureClientMeta(t);if(n.currentActionArgs){var i={type:c.NEXT_TRANSITION,untilState:e,args:n.currentActionArgs};n.inputQueue.push(i);var s=this.buildEventPayload(t,{state:n.state,queuedArgs:i});this.emit(c.DEFERRED,s)}},deferAndTransition:function(t,e){this.deferUntilTransition(t,e),this.transition(t,e)},processQueue:function(t){var e=this.ensureClientMeta(t),n=function(t){return!t.untilState||t.untilState===e.state},i=s.filter(e.inputQueue,n);e.inputQueue=s.difference(e.inputQueue,i),s.each(i,function(e){this.handle.apply(this,[t].concat(e.args))},this)},clearQueue:function(t,e){var n=this.ensureClientMeta(t);if(e){var i=function(t){return!e||t.untilState!==e};n.inputQueue=s.filter(n.inputQueue,i)}else n.inputQueue=[]},compositeState:function(t){var e=this.ensureClientMeta(t),n=e.state,i=this.states[n]._child&&this.states[n]._child.instance;return i&&(n+="."+i.compositeState(t)),n}},r.getInstance()),i.extend=a.extend,t.exports=i}])});

},{"lodash":206}],208:[function(require,module,exports){
"use strict";function manticoreLogger(e,o,n,r){manticore.log(e,o.name,n,r)}function componentLogger(e){for(var o,n=e.split("."),r=RootLogger,t=RootLogger,g=0;g<n.length;g++)o?o+="."+n[g]:o=n[g],r.children[n[g]]||(r.children[n[g]]={name:o,children:{},parent:t}),r=r.children[n[g]],t=r;var i={debug:function(e,o){log(Ranks.DEBUG,r,e,o)},info:function(e,o){log(Ranks.INFO,r,e,o)},warn:function(e,o){log(Ranks.WARN,r,e,o)},error:function(e,o){log(Ranks.ERROR,r,e,o)},withContext:function(e){return makeContextualLogger(i,e)},Config:r,Root:RootLogger};return i}function makeContextualLogger(e,o){var n={context:o,debug:function(n,r){e.debug(n,extend(r,o))},info:function(n,r){e.info(n,extend(r,o))},warn:function(n,r){e.warn(n,extend(r,o))},error:function(n,r){e.error(n,extend(r,o))},withContext:function(e){return makeContextualLogger(n,e)},Config:e.Config,Root:RootLogger};return n}function extend(e,o){if(!e&&!o)return null;if(!e||!o)return e||o;for(var n in o)Object.prototype.hasOwnProperty.call(e,n)||(e[n]=o[n]);return e}function configLogging(e,o){o=o||RootLogger;for(var n in e){var r=e[n],t=o.children[n];t||(t=o.children[n]={}),t.name=r.name||n,t.parent=o,t.children=t.children||{},r.level?t.level=r.level:delete t.level,r.children&&configLogging(r.children,t)}}function log(e,o,n,r){if(e>=levelFor(o)){"function"==typeof n&&(n=n()),n=n.toString();for(var t=Names[e],g=0,i=LogWriters.length;g<i;g++)LogWriters[g](t,o,n,r)}}function levelFor(e){for(var o,n=e;n&&!(o=n.level);)n=n.parent;return Ranks[o||RootLogger.level]||0}var manticore=require("manticore"),Level={DEBUG:"DEBUG",INFO:"INFO",WARN:"WARN",ERROR:"ERROR"},Ranks={DEBUG:1,INFO:2,WARN:3,ERROR:4,QUIET:5},Names={1:"DEBUG",2:"INFO",3:"WARN",4:"ERROR",5:"QUIET"},RootLogger={name:"*",level:"DEBUG",children:{}},LogWriters=[manticoreLogger];module.exports=componentLogger,module.exports.configure=configLogging,module.exports.Config=module.exports.Root=RootLogger,module.exports.Level=Level,module.exports.Ranks=Ranks,module.exports.addLogger=function(e){LogWriters.push(e)},module.exports.removeLogger=function(e){var o=LogWriters.indexOf(e);o>=0&&LogWriters.splice(o,1)},module.exports.levelFor=levelFor;
},{"manticore":213}],209:[function(require,module,exports){
"use strict";function _interopRequireDefault(r){return r&&r.__esModule?r:{default:r}}Object.defineProperty(exports,"__esModule",{value:!0});var _PayPalError=require("./src/PayPalError");Object.defineProperty(exports,"PayPalError",{enumerable:!0,get:function(){return _interopRequireDefault(_PayPalError).default}});var _PayPalErrorInfo=require("./src/PayPalErrorInfo");Object.defineProperty(exports,"PayPalErrorInfo",{enumerable:!0,get:function(){return _interopRequireDefault(_PayPalErrorInfo).default}});

},{"./src/PayPalError":210,"./src/PayPalErrorInfo":211}],210:[function(require,module,exports){
"use strict";function _classCallCheck(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function e(e,r){for(var n=0;n<r.length;n++){var a=r[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(r,n,a){return n&&e(r.prototype,n),a&&e(r,a),r}}(),PayPalError=function(){function e(){throw _classCallCheck(this,e),new Error("Do no construct PayPalError.")}return _createClass(e,[{key:"equals",value:function(e){return e&&this.domain===e.domain&&this.code===e.code}},{key:"withDevMessage",value:function(e){return this.developerMessage=e,this}},{key:"withDebugId",value:function(e){return this.debugId=e,this}}],[{key:"makeError",value:function(e,r){var n=e||new Error(r.message);return n.message=r.message||n.message,n.code=r.code||n.code,n.domain=r.domain||n.domain,n.debugId=r.debugId||n.debugId,n.developerMessage=r.developerMessage||n.developerMessage,n.withDevMessage=function(e){return n.developerMessage=e,n},n.withDebugId=function(e){return n.debugId=e,n},n.equals=function(e){return e&&e.domain===n.domain&&e.code===n.code},n}}]),e}();exports.default=PayPalError;

},{}],211:[function(require,module,exports){
"use strict";function _classCallCheck(a,e){if(!(a instanceof e))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(exports,"__esModule",{value:!0});var PayPalErrorInfo=function a(){_classCallCheck(this,a)};exports.default=PayPalErrorInfo;

},{}],212:[function(require,module,exports){
"use strict";function getPropertyName(e,r){var o=function(r){for(var o in e)if(e.hasOwnProperty(o)&&e[o]===r)return o;return null};if(Array.isArray(r)){var t=[],n=!0,i=!1,a=void 0;try{for(var f,u=r[Symbol.iterator]();!(n=(f=u.next()).done);n=!0){var y=f.value,s=o(y);s&&t.push(s)}}catch(e){i=!0,a=e}finally{try{!n&&u.return&&u.return()}finally{if(i)throw a}}return t.join()}return o(r)}function extend(e,r){var o=arguments.length>2&&void 0!==arguments[2]&&arguments[2];for(var t in r)o?e[t]=r[t]:Object.prototype.hasOwnProperty.call(e,t)||(e[t]=r[t]);return e}function assignSome(e,r,o){var t=!0,n=!1,i=void 0;try{for(var a,f=o[Symbol.iterator]();!(t=(a=f.next()).done);t=!0){var u=a.value;r.hasOwnProperty(u)&&(e[u]=r[u])}}catch(e){n=!0,i=e}finally{try{!t&&f.return&&f.return()}finally{if(n)throw i}}return e}function assignExcept(e,r,o){for(var t in r)"_"!==t[0]&&r.hasOwnProperty(t)&&o.indexOf(t)<0&&(e[t]=r[t]);return e}function reverseKeysAndValues(e){if(!e)return e;var r={};for(var o in e)e.hasOwnProperty(o)&&(r[e[o]]=o);return r}function clone(e){var r=void 0;if(null===e||"object"!==(void 0===e?"undefined":_typeof(e)))return e;if(e instanceof Date)return r=new Date,r.setTime(e.getTime()),r;if(e instanceof Array){r=[];for(var o=0,t=e.length;o<t;o++)r[o]=clone(e[o]);return r}if(e instanceof Object){r={};for(var n in e)e.hasOwnProperty(n)&&(r[n]=clone(e[n]));return r}throw new Error("Unable to copy obj! Its type isn't supported.")}function deepToJSON(e){if(null===e||"object"!==(void 0===e?"undefined":_typeof(e)))return e;if(e&&"function"==typeof e.toJSON)return deepToJSON(e.toJSON());var r=void 0;if(e instanceof Array){r=[];for(var o=0,t=e.length;o<t;o++)r[o]=deepToJSON(e[o]);return r}if(e instanceof Object){r={};for(var n in e)e.hasOwnProperty(n)&&(r[n]=deepToJSON(e[n]));return r}throw new Error("Unable to deepToJSON obj! Its type isn't supported.")}function callbackToPromise(e){for(var r=arguments.length,o=Array(r>1?r-1:0),t=1;t<r;t++)o[t-1]=arguments[t];return new Promise(function(r,t){return e.apply(void 0,o.concat([function(e,o){e?t(e):r(o)}]))})}var _typeof2="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};Object.defineProperty(exports,"__esModule",{value:!0});var _typeof="function"==typeof Symbol&&"symbol"===_typeof2(Symbol.iterator)?function(e){return void 0===e?"undefined":_typeof2(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":void 0===e?"undefined":_typeof2(e)};exports.getPropertyName=getPropertyName,exports.extend=extend,exports.assignSome=assignSome,exports.assignExcept=assignExcept,exports.reverseKeysAndValues=reverseKeysAndValues,exports.clone=clone,exports.deepToJSON=deepToJSON,exports.callbackToPromise=callbackToPromise;

},{}],213:[function(require,module,exports){
module.exports=manticore;

},{}],214:[function(require,module,exports){
!function(){var r=require("crypt"),n=require("charenc").utf8,e=require("is-buffer"),t=require("charenc").bin,i=function(o,u){o.constructor==String?o=u&&"binary"===u.encoding?t.stringToBytes(o):n.stringToBytes(o):e(o)?o=Array.prototype.slice.call(o,0):Array.isArray(o)||(o=o.toString());for(var a=r.bytesToWords(o),s=8*o.length,c=1732584193,f=-271733879,g=-1732584194,l=271733878,y=0;y<a.length;y++)a[y]=16711935&(a[y]<<8|a[y]>>>24)|4278255360&(a[y]<<24|a[y]>>>8);a[s>>>5]|=128<<s%32,a[14+(s+64>>>9<<4)]=s;for(var h=i._ff,v=i._gg,_=i._hh,b=i._ii,y=0;y<a.length;y+=16){var d=c,T=f,p=g,q=l;c=h(c,f,g,l,a[y+0],7,-680876936),l=h(l,c,f,g,a[y+1],12,-389564586),g=h(g,l,c,f,a[y+2],17,606105819),f=h(f,g,l,c,a[y+3],22,-1044525330),c=h(c,f,g,l,a[y+4],7,-176418897),l=h(l,c,f,g,a[y+5],12,1200080426),g=h(g,l,c,f,a[y+6],17,-1473231341),f=h(f,g,l,c,a[y+7],22,-45705983),c=h(c,f,g,l,a[y+8],7,1770035416),l=h(l,c,f,g,a[y+9],12,-1958414417),g=h(g,l,c,f,a[y+10],17,-42063),f=h(f,g,l,c,a[y+11],22,-1990404162),c=h(c,f,g,l,a[y+12],7,1804603682),l=h(l,c,f,g,a[y+13],12,-40341101),g=h(g,l,c,f,a[y+14],17,-1502002290),f=h(f,g,l,c,a[y+15],22,1236535329),c=v(c,f,g,l,a[y+1],5,-165796510),l=v(l,c,f,g,a[y+6],9,-1069501632),g=v(g,l,c,f,a[y+11],14,643717713),f=v(f,g,l,c,a[y+0],20,-373897302),c=v(c,f,g,l,a[y+5],5,-701558691),l=v(l,c,f,g,a[y+10],9,38016083),g=v(g,l,c,f,a[y+15],14,-660478335),f=v(f,g,l,c,a[y+4],20,-405537848),c=v(c,f,g,l,a[y+9],5,568446438),l=v(l,c,f,g,a[y+14],9,-1019803690),g=v(g,l,c,f,a[y+3],14,-187363961),f=v(f,g,l,c,a[y+8],20,1163531501),c=v(c,f,g,l,a[y+13],5,-1444681467),l=v(l,c,f,g,a[y+2],9,-51403784),g=v(g,l,c,f,a[y+7],14,1735328473),f=v(f,g,l,c,a[y+12],20,-1926607734),c=_(c,f,g,l,a[y+5],4,-378558),l=_(l,c,f,g,a[y+8],11,-2022574463),g=_(g,l,c,f,a[y+11],16,1839030562),f=_(f,g,l,c,a[y+14],23,-35309556),c=_(c,f,g,l,a[y+1],4,-1530992060),l=_(l,c,f,g,a[y+4],11,1272893353),g=_(g,l,c,f,a[y+7],16,-155497632),f=_(f,g,l,c,a[y+10],23,-1094730640),c=_(c,f,g,l,a[y+13],4,681279174),l=_(l,c,f,g,a[y+0],11,-358537222),g=_(g,l,c,f,a[y+3],16,-722521979),f=_(f,g,l,c,a[y+6],23,76029189),c=_(c,f,g,l,a[y+9],4,-640364487),l=_(l,c,f,g,a[y+12],11,-421815835),g=_(g,l,c,f,a[y+15],16,530742520),f=_(f,g,l,c,a[y+2],23,-995338651),c=b(c,f,g,l,a[y+0],6,-198630844),l=b(l,c,f,g,a[y+7],10,1126891415),g=b(g,l,c,f,a[y+14],15,-1416354905),f=b(f,g,l,c,a[y+5],21,-57434055),c=b(c,f,g,l,a[y+12],6,1700485571),l=b(l,c,f,g,a[y+3],10,-1894986606),g=b(g,l,c,f,a[y+10],15,-1051523),f=b(f,g,l,c,a[y+1],21,-2054922799),c=b(c,f,g,l,a[y+8],6,1873313359),l=b(l,c,f,g,a[y+15],10,-30611744),g=b(g,l,c,f,a[y+6],15,-1560198380),f=b(f,g,l,c,a[y+13],21,1309151649),c=b(c,f,g,l,a[y+4],6,-145523070),l=b(l,c,f,g,a[y+11],10,-1120210379),g=b(g,l,c,f,a[y+2],15,718787259),f=b(f,g,l,c,a[y+9],21,-343485551),c=c+d>>>0,f=f+T>>>0,g=g+p>>>0,l=l+q>>>0}return r.endian([c,f,g,l])};i._ff=function(r,n,e,t,i,o,u){var a=r+(n&e|~n&t)+(i>>>0)+u;return(a<<o|a>>>32-o)+n},i._gg=function(r,n,e,t,i,o,u){var a=r+(n&t|e&~t)+(i>>>0)+u;return(a<<o|a>>>32-o)+n},i._hh=function(r,n,e,t,i,o,u){var a=r+(n^e^t)+(i>>>0)+u;return(a<<o|a>>>32-o)+n},i._ii=function(r,n,e,t,i,o,u){var a=r+(e^(n|~t))+(i>>>0)+u;return(a<<o|a>>>32-o)+n},i._blocksize=16,i._digestsize=16,module.exports=function(n,e){if(void 0===n||null===n)throw new Error("Illegal argument "+n);var o=r.wordsToBytes(i(n,e));return e&&e.asBytes?o:e&&e.asString?t.bytesToString(o):r.bytesToHex(o)}}();
},{"charenc":97,"crypt":196,"is-buffer":202}],215:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _retailPaymentDevice=require("retail-payment-device"),_manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_Flow=require("./common/Flow"),_Flow2=_interopRequireDefault(_Flow),_MiuraTags=require("./MiuraTags"),_MiuraTags2=_interopRequireDefault(_MiuraTags),_MiuraDeviceUpdate=require("./SoftwareUpdate/MiuraDeviceUpdate"),_MiuraDeviceUpdate2=_interopRequireDefault(_MiuraDeviceUpdate),Log=(0,_manticoreLog2.default)("paymentDevice.miura.connectionFlow"),FullConnectValidityDurationMs=288e5,ConnectionFlow=function(){function e(t){_classCallCheck(this,e),this.device=t}return e.prototype.start=function(e){var t=this,i=new _Flow2.default(this,this._retrieveVersionInfo,this._displayReaderConnectingMessage,this._tryQuickConnect,this._setCardReaderToMerchant,this._getDeviceCapabilities,this._getDeviceConfig,this._queryBackendForSWModules,this._getP2PEStatus,this._getBatteryLevel);i.name="Miura Connection",i.on("completed",function(i){if(i)return void t.device.display({id:_retailPaymentDevice.PaymentDevice.Message.ConnectionFailed},function(){e(i)});t._readerConnected(e)}),i.start()},e.prototype._readerConnected=function(e){Log.debug("Completed connection sequence."),this.device.display({id:_retailPaymentDevice.PaymentDevice.Message.ReadyWithId,substitutions:{id:this.device.id},displaySystemIcons:!0},e)},e.prototype._setCardReaderToMerchant=function(e){this.device.setCardReaderToMerchant(this.device.serialNumber),e.next()},e.prototype._retrieveVersionInfo=function(e){this.device.getFirmwareVersionInfo(function(t){return e.nextOrAbort(t)})},e.prototype._displayReaderConnectingMessage=function(e){this.device.display({id:_retailPaymentDevice.PaymentDevice.Message.Connecting},function(){return e.next()})},e.prototype._tryQuickConnect=function(e){if(!this.device.fullConnectionExecutedOn)return void e.next();var t=Date.now()-this.device.fullConnectionExecutedOn.getTime();if(t<FullConnectValidityDurationMs)return Log.info("Skipping the full connection flow. Device was previously fully connected "+t+"ms ago. Will not check for firmware updates"),void e.completeFlow();Log.info("Redo a full connection as the device was previously fully connected "+t+"ms ago"),this.device.fullConnectionExecutedOn=null,e.next()},e.prototype._getDeviceCapabilities=function(e){var t=this;this.device.terminal.Config.getDeviceCapabilities(function(i,n){n&&n.caps&&(t.device.capabilities=n.caps,Log.debug(function(){return"Device caps: "+JSON.stringify(n.caps,null,"\t")})),e.nextOrAbort(i)})},e.prototype._getDeviceConfig=function(e){var t=this;this.device.terminal.Config.getConfiguration(function(i,n){var r=null;i||n.response.apdu.isSuccess?n&&(t.device.swInfo=n.caps,Log.debug(function(){return"Software Info: "+JSON.stringify(t.device.swInfo,null,"\t")})):r=_retailPaymentDevice.deviceError.dataRetrievalFailed.withDevMessage("Failed to get terminal configuration."),e.nextOrAbort(r)})},e.prototype._queryBackendForSWModules=function(e){this.exSerial===this.device.serialNumber&&this.serverSwInfo?e.next():(this.exSerial=this.device.serialNumber,this._fetchSWInfoFromServer(e))},e.prototype._getP2PEStatus=function(e){var t=this;this.device.terminal.Config.getP2PEStatus(function(i,n){if(i)return void e.abortFlow(i);var r=n.apdu.tlvs.find(_MiuraTags2.default.MiuraP2PEStatus);if(!r){var o=_retailPaymentDevice.deviceError.dataRetrievalFailed.withDevMessage("Unable to get encryption status for reader.");return void e.abortFlow(o)}r=r.bytes[0],t.device.p2pe=128&r?{error:t._p2peError(r)}:{init:!!(1&r),pin:!!(2&r),sred:!!(4&r)},t.finishedP2PE=!0,t.pendedUpdateInstruction?t._checkP2PEWithUpdate(t.pendedUpdateInstruction,e):e.next()})},e.prototype._getBatteryLevel=function(e){var t=this;this.device.getBatteryInfo(function(i,n){i||(t.device.fullConnectionExecutedOn=new Date,Log.debug(function(){return"Setting fullConnectionExecutedOn to "+t.device.fullConnectionExecutedOn}),t.device.lastKnownBatteryInfo=n),e.nextOrAbort(i)})},e.prototype._checkP2PEWithUpdate=function(e,t){Log.debug("Checking P2PE with update instructions"),_MiuraDeviceUpdate2.default.needsUpdate(this.device,e)&&(this.device.updates=e,this.updateRequired=!0,this._notifyReaderUpdateRequired()),t.next()},e.prototype._fetchSWInfoFromServer=function(e){var t=this,i=this._generateUpdateRequest(this.device);this.device.app.getFirmwareUpdates(i,this.device.manufacturer,this.device.model,function(i,n){return t.serverSwInfo=n,Log.debug(function(){return"Received firmware update response for this.device: "+t.device}),!i&&n&&n.body?t.finishedP2PE?304===n.statusCode?(Log.debug(function(){return t.device.id+" Software update not needed"}),void e.next()):void t._checkP2PEWithUpdate(n.body.modules,e):(Log.debug("Pending update instruction until P2PE is complete."),t.pendedUpdateInstruction=n.body&&n.body.modules,void e.next()):(Log.error("Unable to retrieve firmware update information for "+t.device.id+", manufacturer="+t.device.manufacturer+", model="+t.device.model+". Error: "+i),n&&n.body&&Log.warn(JSON.stringify(n.body,null,"\t")),void e.next())})},e.prototype._notifyReaderUpdateRequired=function(){Log.debug("notifying reader status"),(this.device.updates||this.device._isKeyInjectionRequired)&&(Log.info(this.device.id+" needs update.\nKeyInjectionRequired: "+this.device._isKeyInjectionRequired+"\nUpdates(Modules: "+(this.device.updates?this.device.updates.length:0)+")\n"+JSON.stringify(this.device.updates)),this.device.updateRequired(new _MiuraDeviceUpdate2.default(this.device)))},e.prototype._generateUpdateRequest=function(e){var t=[{name:"Miura_OS",version:e.os.id+"-"+e.os.ver},{name:"Miura_MPI",version:e.mpi.id+"-"+e.mpi.ver}];for(var i in e.swInfo)if({}.hasOwnProperty.call(e.swInfo,i)){var n=e.forceConfigUpdate?"0.0":e.swInfo[i];t.push({name:i,version:n})}return{components:t}},e.prototype._p2peError=function(e){switch(e){case 129:return"Root Certificate Error";case 130:return"Product Certificate Error";case 131:return"Terminal Certificate Error";case 132:return"Key Signing Key Error";case 133:return"Internal Error, Contact PayPal";default:return"Unknown Error ("+e+")"}},e}();exports.default=ConnectionFlow;

},{"./MiuraTags":217,"./SoftwareUpdate/MiuraDeviceUpdate":219,"./common/Flow":225,"manticore-log":208,"retail-payment-device":356}],216:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _interopRequireWildcard(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==(void 0===t?"undefined":_typeof(t))&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":_typeof(t)));e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}function _parseVersionInfo(e,t){var r=t&&t.match(/(\d+)-(\d+)/);return{id:e,ver:t,majorVer:r&&parseInt(r[1],10),minorVer:r&&parseInt(r[2],10)}}var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};exports.__esModule=!0;var _createClass=function(){function e(e,t){for(var r=0;r<t.length;r++){var a=t[r];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,r,a){return r&&e(t.prototype,r),a&&e(t,a),t}}(),_manticoreUtil=require("manticore-util"),Util=_interopRequireWildcard(_manticoreUtil),_paypalInvoicing=require("paypal-invoicing"),_retailPaymentDevice=require("retail-payment-device"),_manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_tlvlib=require("tlvlib"),_cardMetadataParser=require("./cardMetadataParser"),_cardMetadataParser2=_interopRequireDefault(_cardMetadataParser),_deviceState=require("./deviceState"),_deviceState2=_interopRequireDefault(_deviceState),_ConnectionFlow=require("./ConnectionFlow"),_ConnectionFlow2=_interopRequireDefault(_ConnectionFlow),_Terminal=require("./Terminal"),_TerminalStatus=require("./messages/TerminalStatus"),_TerminalStatus2=_interopRequireDefault(_TerminalStatus),_MiuraTags=require("./MiuraTags"),_MiuraTags2=_interopRequireDefault(_MiuraTags),_CardStatus=require("./messages/CardStatus"),_CardStatus2=_interopRequireDefault(_CardStatus),DeviceMessageId=_retailPaymentDevice.PaymentDevice.Message,Log=(0,_manticoreLog2.default)("paymentDevice.miura"),TerminalMessageId=_retailPaymentDevice.PaymentDevice.Message,MiuraDevice=function(e){function t(r,a,n,i,o){_classCallCheck(this,t);var c=_possibleConstructorReturn(this,e.call(this,r,a,n,i,o));return c.manufacturer=_retailPaymentDevice.deviceManufacturer.miura,c.terminal=new _Terminal.Terminal(function(e,t){return c.native.send(e,t)},c),c.terminal.isUsb=i,c.terminal.on(_Terminal.TerminalEvent.deviceEvent,function(e){return c._deviceEvent(e)}),c.terminal.on(_Terminal.TerminalEvent.cardPresented,function(e){var t=Util.getPropertyName(_retailPaymentDevice.FormFactor,e.formFactor);return c.isFormFactorActive(e.formFactor)?(Log.debug(function(){return"Card presented using form factor: '"+t+"'"}),e.reader=c,e.formFactor===_retailPaymentDevice.FormFactor.MagneticCardSwipe?(c._inTransactionState=e&&e.lastFourDigits,void c.emit(_retailPaymentDevice.PaymentDevice.Event.cardPresented,null,_retailPaymentDevice.CardPresentEvent.cardDataRead,_retailPaymentDevice.FormFactor.MagneticCardSwipe,{card:e})):void(e.formFactor===_retailPaymentDevice.FormFactor.Chip&&(Log.debug(function(){return"Card insert detected on "+c.id+". Will read EMV data from presented card"}),c.cardInSlot=!0,c.cardInsertedHandler?(Log.debug(function(){return"Invoke CardInsertHandler: "+c.context.id}),c.cardInsertedHandler(new _retailPaymentDevice.CardInsertedHandler(function(){c.emit(_retailPaymentDevice.PaymentDevice.Event.cardPresented,null,_retailPaymentDevice.CardPresentEvent.insertDetected,_retailPaymentDevice.FormFactor.Chip),Log.debug(function(){return"Continue CardDataRead: "+c.context.id}),c._readCardData(e,c.context)}))):(Log.debug(function(){return"No card inserted handler was registered... Will continue to read card data for "+c.context.id}),c.emit(_retailPaymentDevice.PaymentDevice.Event.cardPresented,null,_retailPaymentDevice.CardPresentEvent.insertDetected,_retailPaymentDevice.FormFactor.Chip),c._readCardData(e,c.context))))):void Log.warn("Reader not activated for '"+t+"'. Will ignore presented card event")}),c.terminal.on(_Terminal.TerminalEvent.cardRemoved,function(){c.cardInSlot=!1,c.emit(_retailPaymentDevice.PaymentDevice.Event.cardRemoved)}),c.terminal.on(_Terminal.TerminalEvent.error,function(e,t){return c.emit(_retailPaymentDevice.PaymentDevice.Event.cardPresented,e,_retailPaymentDevice.CardPresentEvent.cardDataRead,t)}),c.model=_retailPaymentDevice.ReaderModel.M010,c.type=_retailPaymentDevice.readerType.Emv,c.connectionType=_retailPaymentDevice.readerConnectionType.Bluetooth,c}return _inherits(t,e),t.prototype.listenForCardRemoval=function(e){e()},t.prototype.beginDeviceRemoved=function(e){this.native.removed(e)},t.prototype.beginDeviceConnect=function(e){var t=this;if(this.native.isConnected())return this.removeState(_deviceState2.default.hardResetting),Log.debug(function(){return"Connect called, but "+t.id+" is already connected."}),void e();Log.debug(function(){return"Connecting to Miura device "+t.id}),this.native.connect(function(r){if(r)return void e(r);t.removeState(_deviceState2.default.hardResetting),t.terminal.didConnect(),new _ConnectionFlow2.default(t).start(e)})},t.prototype.beginDeviceDisconnect=function(e){var t=this;if(!this.isConnected())return Log.debug("Device already disconnected. Will not attempt to invoke native.disconnect"),void e(null);this.isUsb?this.display({id:DeviceMessageId.NotConnected},function(){t.native.disconnect(e)},!0):this.native.disconnect(e)},t.prototype.getVersionInfo=function(){return{os:this.os?this.os.id+"-"+this.os.ver:"",mpi:this.mpi?this.mpi.id+"-"+this.mpi.ver:""}},t.prototype.received=function(e){this.terminal.received(e)},t.prototype.display=function(e,t){return this.isConnected()?this.model===_retailPaymentDevice.ReaderModel.M003&&t?void t():void this.terminal.display(e.id,e.substitutions,t,e.displaySystemIcons):void(t&&t(_retailPaymentDevice.deviceError.deviceNotConnected))},t.prototype.displayAsync=function(e){return regeneratorRuntime.async(function(t){for(;;)switch(t.prev=t.next){case 0:if(this.isConnected()){t.next=4;break}throw _retailPaymentDevice.deviceError.deviceNotConnected;case 4:if(this.model!==_retailPaymentDevice.ReaderModel.M003){t.next=6;break}return t.abrupt("return");case 6:return t.next=8,regeneratorRuntime.awrap(this.terminal.displayAsync(e.id,e.substitutions,e.displaySystemIcons));case 8:case"end":return t.stop()}},null,this)},t.prototype.requestForTip=function(e){return regeneratorRuntime.async(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,regeneratorRuntime.awrap(this._msgPrompts(_retailPaymentDevice.PaymentDevice.Message.RequestTip,e));case 2:case"end":return t.stop()}},null,this)},t.prototype.confirmTip=function(e){return regeneratorRuntime.async(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,regeneratorRuntime.awrap(this._msgPrompts(_retailPaymentDevice.PaymentDevice.Message.ConfirmTip,e));case 2:case"end":return t.stop()}},null,this)},t.prototype.promptForTip=function(e){return regeneratorRuntime.async(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,regeneratorRuntime.awrap(this.terminal.promptForTipEntry(e));case 2:return t.abrupt("return",t.sent);case 3:case"end":return t.stop()}},null,this)},t.prototype.abortTipping=function(){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(this.terminal.abortTransactionAsync());case 2:case"end":return e.stop()}},null,this)},t.prototype._msgPrompts=function(e,t){return regeneratorRuntime.async(function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,regeneratorRuntime.awrap(this.terminal.registerForKeyboardEventsAsync(!0));case 2:return r.next=4,regeneratorRuntime.awrap(this.displayAsync({id:e,substitutions:{amount:_paypalInvoicing.Currency.format(t.currency,t.total)}}));case 4:case"end":return r.stop()}},null,this)},t.prototype.doesHaveCapability=function(e){switch(e){case _retailPaymentDevice.deviceCapabilityType.display:case _retailPaymentDevice.deviceCapabilityType.contactless:return this.model===_retailPaymentDevice.ReaderModel.M010;default:return!1}},t.prototype.getFirmwareVersionInfo=function(e){var t=this;this.terminal.softReset(function(r,a){if(r)return void e(r);var n=a.tlvs&&a.tlvs.find(_tlvlib.Tags.InterfaceDeviceSerialNumber);if(!n)return void e(_retailPaymentDevice.deviceError.dataRetrievalFailed.withDevMessage("Failed to get serial number from "+t.id));t.serialNumber=n.parse();var i=t.serialNumber.substring(0,3);"130"!==i&&"030"!==i||(t.model=_retailPaymentDevice.ReaderModel.M003);for(var o=a.tlvs.values,c=Array.isArray(o),s=0,o=c?o:o[Symbol.iterator]();;){var d;if(c){if(s>=o.length)break;d=o[s++]}else{if(s=o.next(),s.done)break;d=s.value}var u=d;u.tagNumber===_MiuraTags2.default.MiuraSoftwareInformation.number&&t._readConfigPair(u)}t.pre76=t.os&&(t.os.majorVer<7||7===t.os.majorVer&&t.os.minorVer<=5),Log.info("Version: "+t.id+" Serial #: "+t.serialNumber+" OS: "+(t.os&&t.os.id+", "+t.os.ver)+" MPI: "+(t.mpi&&t.mpi.id+", "+t.mpi.ver)+" pre76: "+t.pre76),e(null,{mpi:t.mpi,os:t.os})})},t.prototype.extractReaderLogs=function(e){Log.debug("Extracting log file from reader"),this.terminal.Config.getLogFile(function(t,r){Log[t?"error":"debug"](function(){return"Miura log getFile complete. err: "+t+" Logs: "+r}),e(t)})},t.prototype.activateForPayment=function(t,r,a){var n=this;if(this._inTransactionState)return void Log.info("Transaction was previously activated/has not ended yet. Will ignore this activate call");Log.debug(function(){return"Activating '"+n.id+"' for formFactors: "+r+". "+t.id}),e.prototype.activateForPayment.call(this,t,r,a);var i=void 0,o=void 0;this.terminal.registerForCardEvents(!0,function(r){i=r,i?(Log.error("Failed to register for Miura card events: "+i.message),e.prototype.deactivateFormFactors.call(n,[_retailPaymentDevice.FormFactor.Chip,_retailPaymentDevice.FormFactor.MagneticCardSwipe]),n.emit(_retailPaymentDevice.PaymentDevice.Event.cardPresented,i,_retailPaymentDevice.CardPresentEvent.cardDataRead)):Log.debug(function(){return t.id+" Registered for card events"})}),this.terminal.registerForKeyboardEvents(!0,function(e){o=e,o?(Log.error("Failed to register for Miura keyboard events: "+o.message),n.emit(_retailPaymentDevice.PaymentDevice.Event.cardPresented,o,_retailPaymentDevice.CardPresentEvent.cardDataRead)):Log.debug(function(){return t.id+" Registered for keyboard events"})});var c=new Set(r);if(c.has(_retailPaymentDevice.FormFactor.EmvCertifiedContactless))return void this._startContactlessTx(t);if(a){var s=void 0;if(c.has(_retailPaymentDevice.FormFactor.MagneticCardSwipe)&&c.has(_retailPaymentDevice.FormFactor.Chip)?s=TerminalMessageId.ReadyForInsertAndSwipePayment:c.has(_retailPaymentDevice.FormFactor.MagneticCardSwipe)?s=TerminalMessageId.ReadyForSwipePayment:c.has(_retailPaymentDevice.FormFactor.Chip)&&(s=TerminalMessageId.ReadyForInsertPayment),s){var d=t.invoice,u={id:s,substitutions:{amount:_paypalInvoicing.Currency.format(d.currency,d.total)}};this.display(u,function(e){e&&Log.error("Unable to push message "+s+" to terminal")})}}},t.prototype.selectPaymentApplication=function(e,t){var r=this;this.terminal.selectApplication(e,function(e,a){if(e)return void r.emit(_retailPaymentDevice.PaymentDevice.Event.cardPresented,e,_retailPaymentDevice.CardPresentEvent.cardDataRead,_retailPaymentDevice.FormFactor.Chip);Log.debug(function(){return"Received ICC response from Application select (formFactor: "+Util.getPropertyName(_retailPaymentDevice.FormFactor,t.formFactor)+") "+a});var n=(0,_cardMetadataParser2.default)(t.formFactor,a);Util.extend(t,n,!0),Log.debug(function(){return"Card object updated with emv response: "+t}),r._inTransactionState=!0,r.emit(_retailPaymentDevice.PaymentDevice.Event.cardPresented,null,_retailPaymentDevice.CardPresentEvent.cardDataRead,t.formFactor,{card:t})})},t.prototype.completeTransaction=function(e,t){var r=this;if(!this.isConnected())return void(t&&t(_retailPaymentDevice.deviceError.deviceNotConnected));this.terminal.continueTransaction(e,function(e,a){r._inTransactionState=!1,t&&t(e,a)})},t.prototype.deactivateFormFactors=function(t,r){var a=this;if(!t||0===t.length)return void(r&&r());e.prototype.deactivateFormFactors.call(this,t),Log.debug(function(){return"Deactivating form factors ["+Util.getPropertyName(_retailPaymentDevice.FormFactor,t)+"] on '"+a.id+"'. Tx State: "+a._inTransactionState}),this._inTransactionState?(this._inTransactionState=!1,this.terminal.abortTransaction(function(){Log.debug(function(){return"Aborted contactless tx on "+a.id})})):Log.debug(function(){return"Device not in transaction state... Will not send abort to "+a.id});var n=new Set(t);(n.has(_retailPaymentDevice.FormFactor.MagneticCardSwipe)||n.has(_retailPaymentDevice.FormFactor.Chip))&&this.terminal.registerForCardEvents(!1,function(){Log.debug(function(){return"Deactivated swipe and chip on "+a.id})}),r&&r()},t.prototype.abortTransaction=function(t,r){var a=this;Log.debug(function(){return"Aborting tx on '"+a.id+"'"}),e.prototype.abortTransaction.call(this,t),this.isConnected()?this.deactivateFormFactors([_retailPaymentDevice.FormFactor.EmvCertifiedContactless],r):r&&r()},t.prototype.postTransactionCleanup=function(e){Log.debug("Soft-resetting the terminal as part of post-transaction cleanup"),this.terminal.softReset(function(t){e(t)})},t.prototype.getBatteryInfo=function(e){if(this.hasState(_deviceState2.default.softwareUpdate))return void(e&&e(_retailPaymentDevice.deviceError.cannotAcceptMessage));this.terminal.getBatteryLevel(function(t,r){t?Log.error("Could not retrieve battery info. Error: "+t):Log.debug(function(){return"Received battery information "+r}),e&&e(t,r)})},t.prototype.canPushCommands=function(){var e=this;return this.isConnected()?!this.hasState(_deviceState2.default.hardResetting)||(Log.debug(function(){return"Cannot push command to "+e.id+" as it is in a hard reset state"}),!1):(Log.debug(function(){return"Cannot push command to "+e.id+" as it is not connected"}),!1)},t.prototype._startContactlessTx=function(e){var t=this,r=e.invoice;this._inTransactionState=!0;var a=e.type===_retailPaymentDevice.TransactionType.Sale||e.type===_retailPaymentDevice.TransactionType.Auth?0:20,n=e.isRefund()?e.refundAmount:r.total;this.terminal.startContactlessTransaction(0,a,_paypalInvoicing.Currency.toCents(r.currency,n),_paypalInvoicing.Currency.getCurrency(r.currency).iso4217,function(r,a){if(t._inTransactionState=!1,r&&r===_retailPaymentDevice.deviceError.paymentCancelled)return Log.debug(function(){return"Contactless reader was deactivated on "+t.id+". Card reader is out of transaction state"}),void t.emit(_retailPaymentDevice.PaymentDevice.Event.contactlessReaderDeactivated,r);if(r&&(e.type===_retailPaymentDevice.TransactionType.Sale||e.type===_retailPaymentDevice.TransactionType.Auth||e.type===_retailPaymentDevice.TransactionType.Refund&&r.code!==_retailPaymentDevice.deviceError.nfcNotAllowed.code))return Log.debug(function(){return"Error received from starting contactless tx "+r}),void t.emit(_retailPaymentDevice.PaymentDevice.Event.cardPresented,r,_retailPaymentDevice.CardPresentEvent.cardDataRead,_retailPaymentDevice.FormFactor.EmvCertifiedContactless);Log.debug(function(){return"Received ICC response from card tap: "+a});var n=new _CardStatus2.default(a).getPresentedCard(t);Log.debug(function(){return"Card object updated with emv response: "+n}),t._inTransactionState=!0,t.emit(_retailPaymentDevice.PaymentDevice.Event.cardPresented,null,_retailPaymentDevice.CardPresentEvent.cardDataRead,_retailPaymentDevice.FormFactor.EmvCertifiedContactless,{card:n})})},t.prototype._readCardData=function(e,t){var r=this,a=_Terminal.MiuraTransactionType.SALE,n=t.invoice.total;t.type===_retailPaymentDevice.TransactionType.Refund&&(a=_Terminal.MiuraTransactionType.REFUND,n=t.refundAmount),this.terminal.startICCTransaction(0,a,_paypalInvoicing.Currency.toCents(t.invoice.currency,n).toString(),_paypalInvoicing.Currency.getCurrency(t.invoice.currency).iso4217,function(t,a){if(t){Log.error("Failed to start ICC transaction. Error: "+t);var n=t;return a&&a.apdu&&65===a.apdu.sw2&&(n=_retailPaymentDevice.deviceError.cancelReadCardData),void r.emit(_retailPaymentDevice.PaymentDevice.Event.cardPresented,n,_retailPaymentDevice.CardPresentEvent.cardDataRead,_retailPaymentDevice.FormFactor.Chip)}if(a instanceof _retailPaymentDevice.AvailableApplications)return r._inTransactionState=!0,void r.emit(_retailPaymentDevice.PaymentDevice.Event.cardPresented,null,_retailPaymentDevice.CardPresentEvent.appSelectionRequired,_retailPaymentDevice.FormFactor.Chip,{card:e,availableApps:a});Log.debug(function(){return"Received ICC response from card insert: "+a});var i=(0,_cardMetadataParser2.default)(e.formFactor,a);return Util.extend(e,i,!0),Log.debug(function(){return"Card object updated with emv response: "+e}),227===a.apdu.template?void r.emit(_retailPaymentDevice.PaymentDevice.Event.cardPresented,null,_retailPaymentDevice.CardPresentEvent.cardDataRead,_retailPaymentDevice.FormFactor.Chip,{card:e,offlineApproval:!0}):228===a.apdu.template?(r._inTransactionState=!0,void r.emit(_retailPaymentDevice.PaymentDevice.Event.cardPresented,null,_retailPaymentDevice.CardPresentEvent.cardDataRead,_retailPaymentDevice.FormFactor.Chip,{card:e})):(Log.warn("Contact tx Response from device was not handled "+a),void r.emit(_retailPaymentDevice.PaymentDevice.Event.cardPresented,_retailPaymentDevice.deviceError.badEmvData,_retailPaymentDevice.CardPresentEvent.cardDataRead,_retailPaymentDevice.FormFactor.Chip))})},t.prototype._deviceEvent=function(e){if(e instanceof _TerminalStatus2.default){if(e.changeType===_TerminalStatus2.default.Constants.PinEntryStateChange){var t=new _retailPaymentDevice.PinEvent;return t.digits=e.pinDigits,t.complete=e.pinComplete,t.correct=e.pinCorrect,t.isLastAttempt=e.lastPinAttempt,t.failureReason=e.pinFailureReason,void this.emit(_retailPaymentDevice.PaymentDevice.Event.cardPresented,null,_retailPaymentDevice.CardPresentEvent.pinEvent,_retailPaymentDevice.FormFactor.Chip,t)}if(e.changeType===_TerminalStatus2.default.Constants.SeePhone)return void this.app.display({audio:{file:"beep",playCount:2}},function(){})}27===e.keyCode?(Log.debug("X button on terminal was tapped. Will try to cancel an ongoing payment"),this.emit(_retailPaymentDevice.PaymentDevice.Event.cancelRequested)):13===e.keyCode&&(Log.debug("OK button was tapped on the terminal."),this.emit(_retailPaymentDevice.PaymentDevice.Event.proceed))},t.prototype._readConfigPair=function(e){for(var t=void 0,r=!0,a=e.parse().values,n=Array.isArray(a),i=0,a=n?a:a[Symbol.iterator]();;){var o;if(n){if(i>=a.length)break;o=a[i++]}else{if(i=a.next(),i.done)break;o=i.value}var c=o;c.tagNumber===_MiuraTags2.default.MiuraIdentifier.number?t=c.parse():c.tagNumber===_MiuraTags2.default.MiuraVersionInformation.number&&(r=c.parse())}t.indexOf("-MPI")>=0?this.mpi=_parseVersionInfo(t,r):t.indexOf("OS")>=0&&(this.os=_parseVersionInfo(t,r))},_createClass(t,[{key:"formFactors",get:function(){return this.terminal.formFactors}},{key:"_isKeyInjectionRequired",get:function(){return!!this.forceRki||(this.app.getMerchant()&&"AU"===this.app.getMerchant().country?!(this.p2pe.pin&&this.p2pe.sred):!(this.p2pe.pin||this.p2pe.sred))}}]),t}(_retailPaymentDevice.PaymentDevice);exports.default=MiuraDevice;

},{"./ConnectionFlow":215,"./MiuraTags":217,"./Terminal":220,"./cardMetadataParser":224,"./deviceState":226,"./messages/CardStatus":229,"./messages/TerminalStatus":232,"manticore-log":208,"manticore-util":212,"paypal-invoicing":234,"retail-payment-device":356,"tlvlib":269}],217:[function(require,module,exports){
"use strict";exports.__esModule=!0;var _tlvlib=require("tlvlib"),Tags={MiuraFileLength:new _tlvlib.DefinedTag("MiuraFileLength",128,_tlvlib.ValueFormat.Numeric),MiuraCommandData:new _tlvlib.DefinedTag("MiuraCommandData",224,_tlvlib.ValueFormat.TypeLengthValueList),MiuraConfigurationInformation:new _tlvlib.DefinedTag("MiuraConfigurationInformation",237,_tlvlib.ValueFormat.TypeLengthValueList),MiuraSoftwareInformation:new _tlvlib.DefinedTag("MiuraSoftwareInformation",239,_tlvlib.ValueFormat.TypeLengthValueList),MiuraIdentifier:new _tlvlib.DefinedTag("MiuraIdentifier",57101,_tlvlib.ValueFormat.Alpha),MiuraVersionInformation:new _tlvlib.DefinedTag("MiuraVersionInformation",57215,_tlvlib.ValueFormat.Alpha),MiuraStateChangeReason:new _tlvlib.DefinedTag("MiuraStateChangeReason",195,_tlvlib.ValueFormat.Binary,1),MiuraStateChangeText:new _tlvlib.DefinedTag("MiuraStateChangeText",196,_tlvlib.ValueFormat.Alpha),MiuraCardStatusInfo:new _tlvlib.DefinedTag("MiuraCardStatusInfo",72,_tlvlib.ValueFormat.Binary,2),MiuraSREDData:new _tlvlib.DefinedTag("MiuraSREDData",14659074,_tlvlib.ValueFormat.Binary),MiuraKSN:new _tlvlib.DefinedTag("MiuraKSN",14659075,_tlvlib.ValueFormat.Binary),MiuraMaskedICCTrack2:new _tlvlib.DefinedTag("MiuraMaskedICCTrack2",14659159,_tlvlib.ValueFormat.CompressedAlpha),MiuraMaskedPan:new _tlvlib.DefinedTag("MiuraMaskedPan",14659162,_tlvlib.ValueFormat.AlphaNumeric),MiuraMaskedTrack2:new _tlvlib.DefinedTag("MiuraMaskedTrack2",14659106,_tlvlib.ValueFormat.Alpha),MiuraMaskedContactlessTrack2:new _tlvlib.DefinedTag("MiuraMaskedContactlessTrack2",14659179,_tlvlib.ValueFormat.Alpha),MiuraKeyboardData:new _tlvlib.DefinedTag("MiuraKeyboardData",14656005,_tlvlib.ValueFormat.Binary,1),MiuraNumericData:new _tlvlib.DefinedTag("MiuraNumericData",14656008,_tlvlib.ValueFormat.AlphaNumeric),MiuraCardholderVerificationStatus:new _tlvlib.DefinedTag("MiuraCardholderVerificationStatus",57128,_tlvlib.ValueFormat.Binary,1),MiuraDigitsInPinBuffer:new _tlvlib.DefinedTag("MiuraDigitsInPinBuffer",14655745,_tlvlib.ValueFormat.Numeric),MiuraPinEntryStatus:new _tlvlib.DefinedTag("MiuraPinEntryStatus",14655746,_tlvlib.ValueFormat.Binary,1),MiuraP2PEStatus:new _tlvlib.DefinedTag("MiuraP2PEStatus",14659073,_tlvlib.ValueFormat.Binary,1),MiuraFileWriteOffset:new _tlvlib.DefinedTag("MiuraFileWriteOffset",14656257,_tlvlib.ValueFormat.Binary),MiuraFileWriteLength:new _tlvlib.DefinedTag("MiuraFileWriteLength",14656258,_tlvlib.ValueFormat.Binary),MiuraFileWriteTimeout:new _tlvlib.DefinedTag("MiuraFileWriteTimeout",14656259,_tlvlib.ValueFormat.Binary,1),MiuraFileMD5:new _tlvlib.DefinedTag("MiuraFileMD5",14656260,_tlvlib.ValueFormat.Binary),MiuraContactlessType:new _tlvlib.DefinedTag("MiuraContactlessType",57136,_tlvlib.ValueFormat.Binary,2),MiuraBatteryData:new _tlvlib.DefinedTag("MiuraBatteryData",14656009,_tlvlib.ValueFormat.Binary,1),MiuraImageData:new _tlvlib.DefinedTag("MiuraImageData",14658563,_tlvlib.ValueFormat.AlphaNumeric),MiuraTextData:new _tlvlib.DefinedTag("MiuraTextData",14658562,_tlvlib.ValueFormat.AlphaNumeric),MiuraMediaCoordinates:new _tlvlib.DefinedTag("MiuraMediaCoordinates",14658561,_tlvlib.ValueFormat.Numeric,2)};exports.default=Tags;

},{"tlvlib":269}],218:[function(require,module,exports){
(function (Buffer){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==(void 0===t?"undefined":_typeof(t))&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":_typeof(t)));e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}function verifyLrc(e){for(var t=0,r=0;r<e.length-1;r++)t^=e[r];if((t&=255)!==e[e.length-1])throw Log.warn("LRC did not match. Expected "+t.toString(16)+", got "+e[e.length-1].toString(16)+"\n"+e.toString("hex")),_retailPaymentDevice.deviceError.dataValidationError.withDevMessage("Miura packet error checking failed")}var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};exports.__esModule=!0,exports.MiuraParser=exports.ParserEvent=void 0;var _retailPaymentDevice=require("retail-payment-device"),_manticore=require("manticore"),_manticore2=_interopRequireDefault(_manticore),_events=require("events"),_manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_tlvlib=require("tlvlib"),Log=(0,_manticoreLog2.default)("miura.parser"),ParserEvent=exports.ParserEvent={unsolicited:"unsolicited",response:"response"},MiuraParser=exports.MiuraParser=function(e){function t(){_classCallCheck(this,t);var r=_possibleConstructorReturn(this,e.call(this));return r.partial=null,r}return _inherits(t,e),t.prototype.reset=function(){this.partial=null},t.prototype.received=function(e){var t=void 0;try{if(t=Buffer.isBuffer(e)?e:new Buffer(e,"base64"),this.incompletePacket&&(t=Buffer.concat([this.incompletePacket,t]),delete this.incompletePacket),t.length<3||t.length<t[2]+4)return this.incompletePacket=t,void Log.debug("Incomplete packet received.");this._completePacket(t)}catch(e){throw Log.error("Failed processing Miura packet: "+e.message+", stack: "+e.stack+", "+e),e}},t.prototype._emitAsync=function(e,t){var r=this;_manticore2.default.setTimeout(function(){r.emit(e,t)},0)},t.prototype._completePacket=function(e){var t=null;try{t=this._readResponse(e)}catch(e){Log.error(function(){return"Failed to read terminal response: "+e.message+"\n"+e.stack})}t&&(Log.debug(function(){return"Emitting "+(t.isUnsolicited?"UNSOLICITED":"RESPONSIVE")+" template "+(t.apdu.template?t.apdu.template.toString(16):"<empty>")+" SW1: "+t.apdu.sw1.toString(16)+" SW2: "+t.apdu.sw2.toString(16)+" Raw: "+t.raw.toString("hex")}),t.isUnsolicited?this._emitAsync(ParserEvent.unsolicited,t):this._emitAsync(ParserEvent.response,t))},t.prototype._readResponse=function(e){e=this._validateBuffer(e);var t=!1;if(64===e[1]&&(t=!0),1===e[1])return this._processPartial(e),null;var r=this._applyPartial(e[2],e);e=r.buffer;var n=new _retailPaymentDevice.CardReaderResponse(r.buffer,r.length,t);n.length+4!==e.length&&Log.warn(function(){return"Received response packet with non-matching length bytes. Expected "+(n.length+4)+", got "+e.length});var i=!t&&this.expectRawBytes;try{n.apdu=new _tlvlib.ApduResponse(e,3,n.length,i)}catch(t){Log.error("Failed to parse APDU from raw response: "+e.toString("hex")+"\nError: "+t.message)}return n},t.prototype._processPartial=function(e){Log.debug(function(){return"Received partial packet of "+(e.length-4)+" bytes "+e.toString("hex")}),null===this.partial&&(this.partial=[],this.partialLen=0,this.partial.push(new Buffer("000000","hex"))),this.partialLen+=e[2],this.partial.push(e.slice(3,e.length-1))},t.prototype._applyPartial=function(e,t){return this.partial&&(this.partial.push(t.slice(3,t.length-1)),this.partial.push(new Buffer("00","hex")),Log.debug(function(){return"Final packet of partial "+t.toString("hex")}),t=Buffer.concat(this.partial),e+=this.partialLen,Log.debug(function(){return"Reassembled "+t.length+" bytes ("+e+")."}),this.partial=null,this.partialLen=0),{buffer:t,length:e}},t.prototype._validateBuffer=function(e){var t=this;if(1!==e[0]&&Log.warn(function(){return"Received response packet with non-standard NAD byte: "+e[0]}),0!==e[1]&&64!==e[1]&&1!==e[1]&&Log.warn(function(){return"Received response packet with non-standard PCB byte: "+e[1]}),e.length>e[2]+4){var r=e.slice(e[2]+4,e.length);e=e.slice(0,e[2]+4),_manticore2.default.setTimeout(function(){t.received(r)},0)}return verifyLrc(e),e},t}(_events.EventEmitter);

}).call(this,require("buffer").Buffer)
},{"buffer":96,"events":200,"manticore":213,"manticore-log":208,"retail-payment-device":356,"tlvlib":269}],219:[function(require,module,exports){
(function (Buffer){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _toConsumableArray(e){if(Array.isArray(e)){for(var t=0,i=Array(e.length);t<e.length;t++)i[t]=e[t];return i}return Array.from(e)}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==(void 0===t?"undefined":_typeof(t))&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":_typeof(t)));e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}function miuraLogs(e){var t=require("manticore-log")("paymentDevice.miuraDevice");e&&switchedOff?(switchedOff=!1,lastMiuraLogState?t.Config.level=lastMiuraLogState:delete t.Config.level,delete Log.Config.level,Log.debug("Re-enabled logs.")):e||switchedOff||(Log.debug("Squelching Miura debug logs."),lastMiuraLogState=t.Config.level,switchedOff=!0,t.Config.level="INFO",Log.Config.level="DEBUG")}function fixMpiDynamic(e){var t=new Buffer(e.body,"base64").toString();t.indexOf("[USB]")||(t="[USB]\n\tdefault = serial\n"+t,e.body=new Buffer(t).toString("base64"))}function getNameFromUrl(e){var t=e.split("/");return t=t[t.length-1]}function pushModules(e,t){if(e)for(var i=t,r=Array.isArray(i),n=0,i=r?i:i[Symbol.iterator]();;){var a;if(r){if(n>=i.length)break;a=i[n++]}else{if(n=i.next(),n.done)break;a=n.value}var o=a;e.push(o)}}function getOne(e,t){var i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;_manticore2.default.getItem(e,blobStorage,function(r,n){if(n)return Log.debug(function(){return"Retrieved from CACHE "+e}),void _manticore2.default.setTimeout(function(){return t(null,n)},0);if(0===i){if(isProgressFileFetches[e])return Log.debug(function(){return"Waiting for existing fetch of "+e}),void isProgressFileFetches[e].push(t);isProgressFileFetches[e]=[t]}Log.debug(function(){return"Fetching firmware update file "+e});var a=new Date;_manticore2.default.http({url:e,format:"binary"},function(r,n){var o=new Date-a,s=Math.round(o%60);if(r?Log.error("Attempt "+(i||0)+"/"+maxAttempts+". Duration: "+s+"s. Download failed for "+e+" with error: "+r+")"):Log.debug(function(){return"Duration: "+s+"s. Done with "+e}),!r&&e.indexOf("MPI-Dynamic.cfg")>0&&fixMpiDynamic(n),r){if(i<maxAttempts)return Log.warn(function(){return"Fetch failed for "+e+". Starting retry #{retryCount+1}"}),void getOne(e,t,(i||0)+1)}else _manticore2.default.setItem(e,blobStorage,n.body,null);for(var d=isProgressFileFetches[e],l=Array.isArray(d),u=0,d=l?d:d[Symbol.iterator]();;){var c;if(l){if(u>=d.length)break;c=d[u++]}else{if(u=d.next(),u.done)break;c=u.value}c(r,n)}delete isProgressFileFetches[e]})})}function chunkItOut(e,t,i,r,n){var a=r||(new Date).getTime(),o=i||0,s=.75*o;if(e.file.length-o>FILE_CHUNK_SIZE){var d=e.file.substring(o,o+FILE_CHUNK_SIZE);Log.debug(function(){return"Pushing chunk of file: "+e.name+" "+.75*FILE_CHUNK_SIZE+"@"+s+" of "+.75*e.file.length}),e.device.terminal.Config.streamBinary(d,s,TERMINAL_STREAM_TIMEOUT,!1,function(i,r){if(i||!r.apdu.isSuccess)return void(n?(Log.error("Aborting file send early."),r&&Log.warn(r.toString()),t(i,r)):(Log.warn("Failed to push a chunk of file "+e.name+". Will retry. Response: "+r),_manticore2.default.setTimeout(function(){return chunkItOut(e,t,o,s,a,!0)},500)));var d=parseInt((e.done+o+FILE_CHUNK_SIZE)*(100/e.total),10);e.this.appAlert=e.device.app.display({title:_retailPaymentDevice.appMessage.SwUpdateInProgressWithDetails.title,message:{id:_retailPaymentDevice.appMessage.SwUpdateInProgressWithDetails.message,substitutions:{stage:e.stageId,progress:d}},showActivity:!0,replace:!0}),e.device.display({id:TerminalMessageId.SoftwareUpdateProgress,substitutions:{stage:e.stageId,progress:d}},function(){return chunkItOut(e,t,o+FILE_CHUNK_SIZE,a)})})}else{var l=e.file.substring(o);Log.debug(function(){return"Completing transfer of "+e.name}),e.device.terminal.Config.streamBinary(l,s,TERMINAL_STREAM_TIMEOUT,!1,t)}}function errorOrFailure(e,t){return e||t.apdu.isSuccess?e:_retailPaymentDevice.deviceError.failureResponse.withDevMessage("Miura response indicates failure: 0x"+t.apdu.sw1.toString(16)+" 0x"+t.apdu.sw2.toString(16))}var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};exports.__esModule=!0;var _retailPaymentDevice=require("retail-payment-device"),_manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_md=require("md5"),_md2=_interopRequireDefault(_md),_async=require("async"),_async2=_interopRequireDefault(_async),_manticore=require("manticore"),_manticore2=_interopRequireDefault(_manticore),_deviceState=require("../deviceState"),_deviceState2=_interopRequireDefault(_deviceState),_Flow=require("../common/Flow"),_Flow2=_interopRequireDefault(_Flow),Log=(0,_manticoreLog2.default)("paymentDevice.miura.firmwareUpdate"),deviceMessageId=_retailPaymentDevice.PaymentDevice.Message,TerminalMessageId=_retailPaymentDevice.PaymentDevice.Message,IKSN_BUFFER=new Buffer("IKSN: "),blobStorage="B",TERMINAL_STREAM_TIMEOUT=255,TERMINAL_CONNECTION_RETRY_LIMIT=20,TERMINAL_CONNECTION_RETRY_TIMEOUT=2e4,TERMINAL_CONNECTION_DEFAULT_RETRY_TIMEOUT=2500,MANTICORE_DEFAULT_SET_TIMEOUT=5e3,FILE_CHUNK_SIZE=131072,maxAttempts=2;if(FILE_CHUNK_SIZE%4)throw new Error("FILE_CHUNK_SIZE MUST BE DIVISIBLE BY 4!!!");var lastMiuraLogState=void 0,switchedOff=void 0,isProgressFileFetches={},MiuraDeviceUpdate=function(e){function t(i){_classCallCheck(this,t);var r=_possibleConstructorReturn(this,e.call(this,i));return r.files={},r.updates={},r}return _inherits(t,e),t.prototype.beginDeviceUpdate=function(e){var t=this;Log.info("Beginning SW Update on "+this.device.id),this._hardResetNeeded=!1,isProgressFileFetches={},this.appAlert=this.device.app.display({title:_retailPaymentDevice.appMessage.SwUpdateInProgress.title,message:_retailPaymentDevice.appMessage.SwUpdateInProgress.message,showActivity:!0});var i=[];this.device._isKeyInjectionRequired&&(Log.debug("Key injection required"),i.push(this.updateP2PE)),this.device.updates&&(Log.debug("Found "+this.device.updates.length+" module updates"),i.push(this.updateSWModules));var r=new _Flow2.default(this,i);r.name="Firmware Update",r.on("completed",function(i){var r=new Date,n=r-t.startTime,a=Math.round(n%60);i&&Log.error("SW Update on "+t.device.id+" failed with error: "+i+". Time taken: "+a+"s"),Log.info("Firmware update completed on "+t.device.id+". Time taken: "+a+"s"),t.appAlert&&t.appAlert.dismiss(),t.device.display({id:TerminalMessageId.SoftwareUpdateComplete},function(){}),e(i,!i)}),this.startTime=new Date,r.start()},t.prototype.validateUpdateEligibility=function(e){var t=this;if(!(this.device.lastKnownBatteryInfo&&this.device.lastKnownBatteryInfo.isLevelUpdateCritical))return void e();this.device.display({id:deviceMessageId.RechargeNow},function(){t.appAlert=t.device.app.display({title:_retailPaymentDevice.appMessage.SwUpdateFailed.title,message:_retailPaymentDevice.appMessage.SwUpdateFailed.messageBatteryLow,cancel:_retailPaymentDevice.appMessage.SwUpdate.buttons.ok},function(t){t.dismiss(),e(_retailPaymentDevice.deviceError.lowOnBattery)})})},t.prototype.updateP2PE=function(e){var t=new _Flow2.default(this,this._displayInitMessage,this._initP2PE,this._disableLogs,this._getP2PEFile("initial_ksn","suggested-iksn.txt"),this._getP2PEFile("signed_product_signing_cert","prod-sign.crt"),this._getP2PEFile("signed_terminal_cert","terminal.crt"),this._getP2PEFile("signed_key_loading_cert","temp-keyload.crt"),this._enableLogs,this._displayFetchMessage,this._retrieveP2PEFilesFromServer,this._writeP2PEFilesToTerminal,this._importP2PEKeys,this._displayCompleteMessage);t.name="P2PE Update Flow",t.on("completed",function(t){e.nextOrAbort(t)}),t.start()},t.prototype._disableLogs=function(e){Log.debug("Disabling miura logs"),miuraLogs(!1),e.next(null)},t.prototype._enableLogs=function(e){Log.debug("Enabling logs"),miuraLogs(!0),e.next(null)},t.prototype._displayInitMessage=function(e){this.appAlert=this.device.app.display({title:_retailPaymentDevice.appMessage.SwUpdateInitializing.title,message:_retailPaymentDevice.appMessage.SwUpdateInitializing.message,showActivity:!0}),this.device.display({id:TerminalMessageId.SoftwareUpdateProgress,substitutions:{stage:"EncryptInit"}},function(t){e.nextOrAbort(t)})},t.prototype._displayFetchMessage=function(e){Log.debug("Displaying Fetch message"),this.appAlert=this.device.app.display({title:_retailPaymentDevice.appMessage.SwUpdateValidatingSecurityKeys.title,message:_retailPaymentDevice.appMessage.SwUpdateValidatingSecurityKeys.message,showActivity:!0}),this.device.display({id:TerminalMessageId.SoftwareUpdateProgress,substitutions:{stage:"EncryptGet"}},function(t){e.nextOrAbort(t)})},t.prototype._displayCompleteMessage=function(e){Log.debug("Displaying complete message"),this.appAlert=this.device.app.display({title:_retailPaymentDevice.appMessage.SwUpdateSecurityKeysInstalled.title,message:_retailPaymentDevice.appMessage.SwUpdateSecurityKeysInstalled.message,showActivity:!0}),this.device.display({id:TerminalMessageId.SoftwareUpdateProgress,substitutions:{stage:"EncryptDone"}},function(t){e.nextOrAbort(t)})},t.prototype._initP2PE=function(e){if(Log.debug("Initializing P2PE on "+this.device.id),this.device.p2pe.init)return Log.debug("P2PE already initialized"),void e.next();this.device.terminal.Config.initializeP2PE(function(t,i){var r=null;t||i.apdu.isSuccess||(r=_retailPaymentDevice.deviceError.initializationFailed.withDevMessage("Failed to initialize device encryption keys.")),e.nextOrAbort(r)})},t.prototype._getP2PEFile=function(e,t){var i=this;return function(r){Log.debug(function(){return"Retrieving file "+t+" from "+i.device.id}),i.device.terminal.Config.getFile(t,function(n,a){if(n)return Log.error("Error on retrieving P2PE file "+t+" from "+i.device.id+":  "+n),void r.abortFlow(n);i.files[e]=a.toString(),r.next()})}},t.prototype._retrieveP2PEFilesFromServer=function(e){var t=this;Log.debug("Retrieving keys from "+this.device.id),this.files.initial_ksn=this.files.initial_ksn.replace(/\n/g,"").replace("IKSN: ",""),this.device.app.getRemoteCardReaderKeys(this.files,this.device.manufacturer,this.device.model,function(i,r){if(Log.debug(function(){return"Received RKI update response for this.device: "+t.device}),i)return void e.abortFlow(i);t.filesToWrite=[],t.fileWriteIndex=0;for(var n in r.body)({}).hasOwnProperty.call(r.body,n)&&t.filesToWrite.push(r.body[n]);Log.debug(function(){return"RKI Files to write:\n"+JSON.stringify(t.filesToWrite)}),e.next()})},t.prototype._writeP2PEFilesToTerminal=function(e){var t=this;if(this.filesToWrite.length>this.fileWriteIndex){var i=this.filesToWrite[this.fileWriteIndex];this.device.terminal.Config.selectFile(i.filename,!0,function(r){if(r)return void e.abortFlow(r);var n=new Buffer(i.content,"BASE64"===i.type?"base64":"utf8");i.filename.indexOf("-iksn-")>0&&(n.length<IKSN_BUFFER.length||!n.slice(0,IKSN_BUFFER.length).equals(IKSN_BUFFER))&&(n=Buffer.concat([IKSN_BUFFER,n],IKSN_BUFFER.length+n.length));var a=(0,_md2.default)(n);Log.debug(function(){return"Sending file: "+n.toString("hex")+" \nMD5: "+a}),t.device.terminal.Config.streamBinary(n,0,255,a,function(i,r){return i?void e.abortFlow(i):r.apdu.isSuccess?(t.fileWriteIndex+=1,void t._writeP2PEFilesToTerminal(e)):void e.abortFlow(_retailPaymentDevice.deviceError.initializationFailed.withDevMessage("Failed to update encryption keys."))})})}else e.next()},t.prototype._importP2PEKeys=function(e){Log.debug("Importing keys on "+this.device.id),this.device.terminal.Config.importP2PE(function(t,i){var r=null;t||i.apdu.isSuccess||(r=new Error(_retailPaymentDevice.deviceError.fileImportFailed.withDevMessage("Failed to import encryption keys."))),e.nextOrAbort(r)})},t.prototype.updateSWModules=function(e){var t=new _Flow2.default(this,this._gatherFiles,this._updateOs,this._hardResetCardReader,this._tryReconnect,this._updateMPI,this._hardResetCardReader,this._tryReconnect,this._updateConfig,this._hardResetCardReader,this._tryReconnect);t.name="Software Module Update Flow",t.on("completed",function(t){e.nextOrAbort(t)}),t.start()},t.prototype._generateSteps=function(e){var t=[];if(e.urls)for(var i=e.urls,r=Array.isArray(i),n=0,i=r?i:i[Symbol.iterator]();;){var a;if(r){if(n>=i.length)break;a=i[n++]}else{if(n=i.next(),n.done)break;a=n.value}var o=a;t.push({name:getNameFromUrl(o),url:o,version:e.version,reload:e.reload})}if(e.subcomponents)for(var s=e.subcomponents,d=Array.isArray(s),l=0,s=d?s:s[Symbol.iterator]();;){var u;if(d){if(l>=s.length)break;u=s[l++]}else{if(l=s.next(),l.done)break;u=l.value}var c=u;t.push.apply(t,_toConsumableArray(this._generateSteps(c)))}return t},t.prototype._gatherFiles=function(e){for(var t=this,i=this.device.updates,r=Array.isArray(i),n=0,i=r?i:i[Symbol.iterator]();;){var a;if("break"===function(){if(r){if(n>=i.length)return"break";a=i[n++]}else{if(n=i.next(),n.done)return"break";a=n.value}var e=a,o=t._generateSteps(e);t.updates[e.name]=o,Log.debug(function(){return"Gathered update "+e.name+"\n"+JSON.stringify(o)})}())break}this._fetchFiles(this.device,function(t){Log.debug("Ready for software update."),e.nextOrAbort(t)})},t.prototype._fetchFiles=function(e,i){var r=this,n=[],a=0;t.needsUpdate(e,e.updates,n),Log.debug(function(){return"Preparing to download "+n.length+" files"}),_async2.default.eachSeries(n,function(e,t){a+=1,r.appAlert=r.device.app.display({title:_retailPaymentDevice.appMessage.SwUpdateDownloading.title,message:{id:_retailPaymentDevice.appMessage.SwUpdateDownloading.message,substitutions:{count:a,total:n.length}},showActivity:!0}),r.device.display({id:TerminalMessageId.SoftwareUpdateDownloading,substitutions:{count:a,total:n.length}},function(){}),getOne(e,t)},i)},t.needsUpdate=function(e,t,i){for(var r=!1,n=t,a=Array.isArray(n),o=0,n=a?n:n[Symbol.iterator]();;){var s;if(a){if(o>=n.length)break;s=n[o++]}else{if(o=n.next(),o.done)break;s=o.value}var d=s;if("Miura_OS"===d.name)r=!0,Log.info(e.id+" OS will be updated from "+e.os.id+"-"+e.os.ver+" to "+d.version),pushModules(i,d.urls);else if("Miura_MPI"===d.name)r=!0,Log.info(e.id+" MPI will be updated from "+e.mpi.id+"-"+e.mpi.ver+" to "+d.version),pushModules(i,d.urls);else if("Miura_CONFIG"===d.name&&d.subcomponents){r=!0,Log.info(e.id+" CFG will be updated with "+d.subcomponents.length+" sub components");for(var l=d.subcomponents,u=Array.isArray(l),c=0,l=u?l:l[Symbol.iterator]();;){var p;if(u){if(c>=l.length)break;p=l[c++]}else{if(c=l.next(),c.done)break;p=c.value}var g=p;pushModules(i,g.urls)}}}return r||Log.debug(e.id+" does not need an upgrade."),r},t.prototype._sizeFiles=function(e,t){var i=this,r=0;_async2.default.each(e,function(e,t){var n=e.url;i._getCachedFile(n,function(e,i){i&&(r+=i.length),t()})},function(){return t(r)})},t.prototype._updateOs=function(e){var t=this.updates.Miura_OS;if(!t||0===t.length)return Log.debug("OS update not needed."),this._hardResetNeeded=!1,void e.next();this._hardResetNeeded=!0,this._updateModules("OS",t,e)},t.prototype._updateMPI=function(e){var t=this.updates.Miura_MPI;if(!t||0===t.length)return Log.debug("MPI update not needed."),this._hardResetNeeded=!1,void e.next();this._hardResetNeeded=!0,this._updateModules("MPI",t,e)},t.prototype._updateConfig=function(e){var t=this.updates.Miura_CONFIG;if(!t||0===t.length)return Log.debug("Config update not needed."),this._hardResetNeeded=!1,void e.next();this._hardResetNeeded=!0,this._updateModules("Config",t,e)},t.prototype._updateModules=function(e,t,i){var r=this;Log.info("Updating '"+e+"' with step(s)\n"+JSON.stringify(t)),this.appAlert=this.device.app.display({title:_retailPaymentDevice.appMessage.SwUpdateInProgressWithDetails.title,message:{id:_retailPaymentDevice.appMessage.SwUpdateInProgressWithDetails.message,substitutions:{stage:e,progress:0}},showActivity:!0}),this.device.display({id:TerminalMessageId.SoftwareUpdateProgress,substitutions:{stage:e,progress:"0"}},function(){r._writeFiles(t,e,i)})},t.prototype._writeFiles=function(e,t,i){var r=this;if(0===e.length)return Log.error("Attempting to write 0 files to device."),void i.next();Log.info("Writing "+e.length+" "+t+" firmware update file(s) to "+this.device.id);var n=0,a=0,o=0,s=!1,d=function d(){var l=e[n].url,u=e[n].name;Log.debug(function(){return"Retrieving file "+u+" from "+l}),r._getCachedFile(l,function(l,c){if(l||!c)return void i.abortFlow(l||_retailPaymentDevice.deviceError.swUpdateFailed);Log.info("Retrieved "+u+" size: "+c.length+". Will issue select file command"),r.device.terminal.Config.selectFile(u,!0,function(l,p){if(l){var g=errorOrFailure(l,p);return Log.error("selectFile command returned an error : "+g),miuraLogs(!0),void i.nextOrAbort(g)}Log.info("Successfully selected "+u+". Will push it to card reader"),miuraLogs(!1),chunkItOut({this:r,device:r.device,file:c,name:u,total:a,done:o,stageId:t},function(t,r){if(t){var a=errorOrFailure(t,r);return Log.error("Failed to write "+e[n].url+" to "+u+": "+a.message+". "+(s?"Will not retry":"Will retry")),void(s?(miuraLogs(!0),i.nextOrAbort(a)):d())}s=!1,o+=c.length,n+=1,n>=e.length?(miuraLogs(!0),i.nextOrAbort()):d()})})})};this._sizeFiles(e,function(e){a=e,d()})},t.prototype._tryReconnect=function(e){var t=this;if(!this.awaitRestart)return void e.next();Log.debug("Waiting for reconnect."),this.appAlert=this.device.app.display({title:_retailPaymentDevice.appMessage.SwUpdateReconnecting.title,message:_retailPaymentDevice.appMessage.SwUpdateReconnecting.message,showActivity:!0}),_manticore2.default.setTimeout(function(){t.device.needsRestart=!0,t._retryConnection(TERMINAL_CONNECTION_RETRY_LIMIT,TERMINAL_CONNECTION_RETRY_TIMEOUT,function(i){t.device.getFirmwareVersionInfo(function(){e.nextOrAbort(i)})})},MANTICORE_DEFAULT_SET_TIMEOUT),delete this.awaitRestart},t.prototype._hardResetCardReader=function(e){var t=this;if(!this._hardResetNeeded)return Log.debug("Will skip hard-reset as it is not needed"),void e.next();this.appAlert=this.device.app.display({title:_retailPaymentDevice.appMessage.SwUpdateRestarting.title,message:_retailPaymentDevice.appMessage.SwUpdateRestarting.message,showActivity:!0}),this.device.terminal.hardReset(function(i){t.awaitRestart=!0,t.device.addState(_deviceState2.default.hardResetting),Log.debug("Device was hard-reset. Will disconnect from it"),t.device.forceDisconnect(function(){Log.debug("Device was disconnected"),e.nextOrAbort(i)})})},t.prototype._retryConnection=function(e,t,i){var r=this;this.device.needsRestart&&(miuraLogs(!1),_manticore2.default.setTimeout(function(){Log.debug("Attempting connection with remaining retry attempts:  "+e);var n=r.device.rawConnect;r.device.rawConnect=!0,r.device.needsRestart&&r.device.connect(function(a){if(r.device.rawConnect=n,a){Log.warn("Reconnect failed with error "+a+". Remaining retry attempts: "+e);var o=e-1;o<=0?(miuraLogs(!0),Log.debug("Giving up!"),i(a)):r._retryConnection(o,t,i)}else Log.info(r.device.id+" was successfully connected after restart"),r.appAlert=r.device.app.display({title:_retailPaymentDevice.appMessage.SwUpdateConnected.title,message:_retailPaymentDevice.appMessage.SwUpdateConnected.message,showActivity:!0}),miuraLogs(!0),delete r.device.needsRestart,i()})},t||TERMINAL_CONNECTION_DEFAULT_RETRY_TIMEOUT))},t.prototype._getCachedFile=function(e,t){_manticore2.default.getItem(e,blobStorage,function(i,r){t(r?null:_retailPaymentDevice.deviceError.swUpdateFailed.withDevMessage("File with url: "+e+" was not found on the device"),r)})},t}(_retailPaymentDevice.DeviceUpdate);exports.default=MiuraDeviceUpdate;

}).call(this,require("buffer").Buffer)
},{"../common/Flow":225,"../deviceState":226,"async":92,"buffer":96,"manticore":213,"manticore-log":208,"md5":214,"retail-payment-device":356}],220:[function(require,module,exports){
(function (Buffer){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==(void 0===t?"undefined":_typeof(t))&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":_typeof(t)));e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}function startTxCommon(e,t,r,a){var n=new _tlvlib.TlvList,i=new Date;return n.add(_tlvlib.Tags.TransactionDate,i),n.add(_tlvlib.Tags.TransactionTime,i),n.add(_tlvlib.Tags.TransactionType,t),n.add(_tlvlib.Tags.AmountAuthorized,_tlvlib.Tags.AmountAuthorized.format.toBytes(r,6)),n.add(_tlvlib.Tags.TransactionCurrencyCode,a),n}function buildApps(e,t){for(var r=void 0,a=void 0,n=0;n<t.tlvs.values.length;n++){var i=t.tlvs.values[n];i.tag===_tlvlib.Tags.TerminalApplicationIdentifier?(r&&(e.apps.push([r,a]),a=null),r=i.parse()):i.tag===_tlvlib.Tags.ApplicationLabel&&(a&&r&&(e.apps.push([r,a]),r=null),a=i.parse())}r&&e.apps.push([r,a])}var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};exports.__esModule=!0,exports.Terminal=exports.TerminalEvent=exports.MiuraTransactionType=void 0;var _createClass=function(){function e(e,t){for(var r=0;r<t.length;r++){var a=t[r];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,r,a){return r&&e(t.prototype,r),a&&e(t,a),t}}(),_manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_events=require("events"),_tlvlib=require("tlvlib"),_retailPaymentDevice=require("retail-payment-device"),_MiuraTags=require("./MiuraTags"),_MiuraTags2=_interopRequireDefault(_MiuraTags),_Parser=require("./Parser"),_Writer=require("./Writer"),_BatteryStatus=require("./messages/BatteryStatus"),_BatteryStatus2=_interopRequireDefault(_BatteryStatus),_TerminalStatus=require("./messages/TerminalStatus"),_TerminalStatus2=_interopRequireDefault(_TerminalStatus),_CardStatus=require("./messages/CardStatus"),_CardStatus2=_interopRequireDefault(_CardStatus),_KeyStatus=require("./messages/KeyStatus"),_KeyStatus2=_interopRequireDefault(_KeyStatus),_TerminalConfig=require("./TerminalConfig"),_TerminalConfig2=_interopRequireDefault(_TerminalConfig),_TerminalDisplay=require("./TerminalDisplay"),_TerminalDisplay2=_interopRequireDefault(_TerminalDisplay),Log=(0,_manticoreLog2.default)("miura.terminal"),imageMatcherRegex=void 0,MiuraTransactionType=exports.MiuraTransactionType={SALE:0,REFUND:20},TerminalEvent=exports.TerminalEvent={unsolicited:_Parser.ParserEvent.unsolicited,deviceEvent:"deviceEvent",cardPresented:"cardPresented",cardRemoved:"cardRemoved",error:"error",seePhone:"seePhone"},Terminal=exports.Terminal=function(e){function t(r,a){_classCallCheck(this,t);var n=_possibleConstructorReturn(this,e.call(this));return n.reader=a,n.parser=new _Parser.MiuraParser,n.parser.on(TerminalEvent.unsolicited,function(e){n._emitUnsolicited(e)}),n.writer=new _Writer.Writer(n,r),n.Config=new _TerminalConfig2.default(n),n.displayController=new _TerminalDisplay2.default("M010"),n}return _inherits(t,e),t.prototype.didConnect=function(){this.parser.reset()},t.prototype.received=function(e){this.parser.received(e)},t.prototype.injectResponders=function(e){this.writer.responders=e.concat(this.writer.responders)},t.prototype._emitUnsolicited=function(e){this.emit(TerminalEvent.unsolicited,e);var t=e,r=e.apdu.template;230===e.apdu.template?t=new _TerminalStatus2.default(e):225===e.apdu.template&&(e.tlvs&&e.tlvs.find(_MiuraTags2.default.MiuraCardStatusInfo)?(t=new _CardStatus2.default(e),this._reflectCardStatus(t)):e.tlvs&&e.tlvs.find(_MiuraTags2.default.MiuraKeyboardData)&&(t=new _KeyStatus2.default(e))),Log.debug(function(){return"Unsolicited message: "+t}),this.emit(TerminalEvent.deviceEvent,t),r&&this.emit(TerminalEvent.deviceEvent+"."+r.toString(16),t),t instanceof _CardStatus2.default&&1==(1&t.magstripeFlags)&&(Log.debug(function(){return"EMV Card Swiped "+e.raw.toString("hex")}),this.emit(TerminalEvent.cardPresented,t.getPresentedCard(this.reader)))},t.prototype._reflectCardStatus=function(e){var t=this,r=this.cardStatus||_retailPaymentDevice.CardStatus.None;if(3==(3&e.chipFlags)?this.cardStatus=_retailPaymentDevice.CardStatus.EmvCard:1==(1&e.chipFlags)?this.cardStatus=_retailPaymentDevice.CardStatus.NonEmvCard:this.cardStatus=_retailPaymentDevice.CardStatus.None,Log.debug(function(){return"Previous card status "+r+". New Status "+t.cardStatus}),r!==this.cardStatus&&(3&this.cardStatus)>0||this.cardStatus===_retailPaymentDevice.CardStatus.EmvCard){var a=e.getPresentedCard(this.reader);if(a.failed&&a.formFactor===_retailPaymentDevice.FormFactor.Chip)return void this.emit(TerminalEvent.error,_retailPaymentDevice.deviceError.invalidChip,a.formFactor);a?this.emit(TerminalEvent.cardPresented,a):Log.warn("card is null so emitting nothing here!!!")}else r!==this.cardStatus&&this.cardStatus===_retailPaymentDevice.CardStatus.None?this.emit(TerminalEvent.cardRemoved):Log.debug("Neither cardPresented nor cardRemoved emitted!")},t.prototype.display=function(e,t,r,a){var n=this.displayController.formatMessage(e,t,a),i=this._parseMedia(n);return n?i?void this.displayImageAndText(i.imageId,i.msg,r):void this.showMessage(n,r,a):void r(_retailPaymentDevice.deviceError.dataValidationError.withDevMessage("Empty Message"))},t.prototype.displayAsync=function(e,t,r){var a,n;return regeneratorRuntime.async(function(i){for(;;)switch(i.prev=i.next){case 0:if(a=this.displayController.formatMessage(e,t),n=this._parseMedia(a),a){i.next=4;break}throw _retailPaymentDevice.deviceError.dataValidationError;case 4:if(!n){i.next=8;break}return i.next=7,regeneratorRuntime.awrap(this.displayImageAndTextAsync(n.imageId,n.msg));case 7:return i.abrupt("return");case 8:return i.next=10,regeneratorRuntime.awrap(this.showMessageAsync(a,r));case 10:case"end":return i.stop()}},null,this)},t.prototype._parseMedia=function(e){imageMatcherRegex||(imageMatcherRegex=/\$image\((.+)\)(?:\n)*(.*)/);var t=imageMatcherRegex.exec(e);return t?{imageId:t[1],msg:t[2]}:null},t.prototype.displayImage=function(e,r){var a=new _tlvlib.ApduCommand(210,210);a.appendString(t.Images[e]),this.writer.sendAndReceive("displayImage",a,r)},t.prototype.displayImageAndText=function(e,t,r){var a=new _tlvlib.TlvList,n=[_MiuraTags2.default.MiuraMediaCoordinates.valueToBytes(0),_MiuraTags2.default.MiuraMediaCoordinates.valueToBytes(0)];a.add(_MiuraTags2.default.MiuraMediaCoordinates,Buffer.concat(n)),a.add(_MiuraTags2.default.MiuraImageData,_MiuraTags2.default.MiuraImageData.valueToBytes(e));var i=[_MiuraTags2.default.MiuraMediaCoordinates.valueToBytes(0),_MiuraTags2.default.MiuraMediaCoordinates.valueToBytes(50)];a.add(_MiuraTags2.default.MiuraMediaCoordinates,Buffer.concat(i)),a.add(_MiuraTags2.default.MiuraTextData,_MiuraTags2.default.MiuraTextData.valueToBytes(t));var s=new _tlvlib.TlvList;s.add(_MiuraTags2.default.MiuraCommandData,a);var o=new _tlvlib.ApduCommand(210,32,0,128);o.appendBytes(s.toBytes()),this.writer.sendAndReceive("displayImageAndText",o,r)},t.prototype.displayImageAndTextAsync=function(e,t){var r,a,n,i,s,o,u,d,l;return regeneratorRuntime.async(function(c){for(;;)switch(c.prev=c.next){case 0:return r=0,a=10,n=0,i=0,s=new _tlvlib.TlvList,o=[_MiuraTags2.default.MiuraMediaCoordinates.valueToBytes(n),_MiuraTags2.default.MiuraMediaCoordinates.valueToBytes(i)],s.add(_MiuraTags2.default.MiuraMediaCoordinates,Buffer.concat(o)),s.add(_MiuraTags2.default.MiuraImageData,_MiuraTags2.default.MiuraImageData.valueToBytes(e)),u=[_MiuraTags2.default.MiuraMediaCoordinates.valueToBytes(r),_MiuraTags2.default.MiuraMediaCoordinates.valueToBytes(a)],s.add(_MiuraTags2.default.MiuraMediaCoordinates,Buffer.concat(u)),s.add(_MiuraTags2.default.MiuraTextData,_MiuraTags2.default.MiuraTextData.valueToBytes(t)),d=new _tlvlib.TlvList,d.add(_MiuraTags2.default.MiuraCommandData,s),l=new _tlvlib.ApduCommand(210,32,0,0),l.appendBytes(d.toBytes()),c.next=14,regeneratorRuntime.awrap(this.writer.sendAndReceiveP("displayImageAndTextAsync",l));case 14:case"end":return c.stop()}},null,this)},t.prototype.softReset=function(e){this.writer.sendAndReceive("softReset",new _tlvlib.ApduCommand(208,0),e)},t.prototype.hardReset=function(e){this.writer.sendAndReceive("hardReset",new _tlvlib.ApduCommand(208,0,1),e)},t.prototype.abortTransaction=function(e){this.writer.sendAndReceive("abortTransaction",new _tlvlib.ApduCommand(208,255),e)},t.prototype.abortTransactionAsync=function(){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(this.writer.sendAndReceiveP("abortTransactionAsync",new _tlvlib.ApduCommand(208,255)));case 2:case"end":return e.stop()}},null,this)},t.prototype.getResponseCheck=function(e,t,r,a){return function(n){var i=!1,s=n&&n.apdu&&n.apdu.template,o=r?"Ignored templates":"Acceptable Templates",u=!0;return a&&(u=!!(n&&n.tlvs&&n.tlvs.find(a))),s?(i=-1!==e.indexOf(s),i=r?!i:i,i=i&&u,Log.debug(function(){return"getResponseCheck "+t+". This is a response with template 0x"+s.toString(16)+". "+o+" = "+e+"."+(a?"tag["+a.name+"]="+u+".":"")+" Mine="+i})):Log.debug(function(){return"getResponseCheck "+t+" This is a response with no template. "+o+" = "+e+". Mine="+i}),[null,i]}},t.prototype.getBatteryLevel=function(e){var t=this.getResponseCheck([225],"getBatteryLevel",!1,_MiuraTags2.default.MiuraBatteryData);this.writer.sendAndReceive("getBatteryLevel",new _tlvlib.ApduCommand(208,98),{responseCheck:t},function(t,r){var a=null;r&&r.tlvs&&r.tlvs.find(_MiuraTags2.default.MiuraBatteryData)&&(a=new _BatteryStatus2.default(r).batteryInfo),e&&e(t,a)})},t.prototype.disconnectUsb=function(e){this.writer.sendAndReceive("disconnectUsb",new _tlvlib.ApduCommand(208,192),e)},t.prototype.registerForCardEvents=function(e,t){this.writer.sendAndReceive(e?"registerForCardEvents":"unRegisterForCardEvents",new _tlvlib.ApduCommand(208,96,e?15:0),{noResponse:!0},t)},t.prototype.registerForKeyboardEvents=function(e,t){this.writer.sendAndReceive(e?"registerForKeyboardEvents":"unRegisterForKeyboardEvents",new _tlvlib.ApduCommand(208,97,e?1:0),t)},t.prototype.registerForKeyboardEventsAsync=function(e){return regeneratorRuntime.async(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,regeneratorRuntime.awrap(this.writer.sendAndReceiveP(e?"registerForKeyboardEvents":"unRegisterForKeyboardEvents",new _tlvlib.ApduCommand(208,97,e?1:0)));case 2:case"end":return t.stop()}},null,this)},t.prototype.showMessage=function(e,t,r){var a=r?1:0,n=new _tlvlib.ApduCommand(210,1,a,128);n.appendString(e),Log.debug(function(){return"Displaying: '"+e+"' icons: "+!!r}),this.writer.sendAndReceive("displayMessage",n,t)},t.prototype.showMessageAsync=function(e,t){var r,a;return regeneratorRuntime.async(function(n){for(;;)switch(n.prev=n.next){case 0:return r=t?1:0,a=new _tlvlib.ApduCommand(210,1,r,128),a.appendString(e),n.next=5,regeneratorRuntime.awrap(this.writer.sendAndReceiveP("displayMessage",a));case 5:case"end":return n.stop()}},null,this)},t.prototype.promptForNumericEntry=function(e,t){this._numericPrompt(e).then(function(e){t(null,e)}).catch(function(e){t(e,null)})},t.prototype._numericPrompt=function(e){var t,r,a,n,i,s,o,u,d,l,c;return regeneratorRuntime.async(function(p){for(;;)switch(p.prev=p.next){case 0:if(t=void 0,r=void 0,a=void 0,n=0,e.entryType===_retailPaymentDevice.NumericEntryType.ExpirationDate?(t="000E001B0000",r="0400",n=1):e.entryType===_retailPaymentDevice.NumericEntryType.Cvv&&(t="0000000F0000",r="0500"),i=new Buffer(t,"hex"),s=new Buffer(r,"hex"),4===i.length||6===i.length){p.next=9;break}throw _retailPaymentDevice.deviceError.dataValidationError.withDevMessage("Prompt index array must be 4 or 6 hex bytes (8 or 12 characters) referencing the prompts.txt file.");case 9:if(2===s.length){p.next=11;break}throw _retailPaymentDevice.deviceError.dataValidationError.withDevMessage("Number format must be 2 hex bytes (4 characters)");case 11:return o=new _tlvlib.ApduCommand(210,4,n,1),u=new _tlvlib.TlvList,u.add(14656006,i),u.add(14656007,s),a&&u.add(14656008,new Buffer(a.toString(),"utf8")),d=new _tlvlib.TlvList,d.add(224,u.toBytes()),o.appendBytes(d.toBytes()),p.next=21,regeneratorRuntime.awrap(this.writer.sendAndReceiveP("numericPrompt",o));case 21:if(l=p.sent,l.tlvs){p.next=24;break}throw _retailPaymentDevice.deviceError.numericEntryFailed;case 24:return c=l.tlvs.find(_MiuraTags2.default.MiuraNumericData),p.abrupt("return",c.parse());case 26:case"end":return p.stop()}},null,this)},t.prototype.promptForSecureAccountNumber=function(e,t){this._securePrompt(e).then(function(e){t(null,e)}).catch(function(e){t(e,null)})},t.prototype._securePrompt=function(e){var t,r,a,n,i,s,o,u,d;return regeneratorRuntime.async(function(l){for(;;)switch(l.prev=l.next){case 0:if(t=new Buffer("00000004","hex"),4===t.length||6===t.length){l.next=3;break}throw _retailPaymentDevice.deviceError.dataValidationError.withDevMessage("Prompt index array must be 4 or 6 hex bytes (8 or 12 characters) referencing the prompts.txt file.");case 3:return r=new _tlvlib.ApduCommand(210,90,0,1),a=new _tlvlib.TlvList,a.add(14656006,t),n=new _tlvlib.TlvList,n.add(224,a.toBytes()),r.appendBytes(n.toBytes()),l.next=11,regeneratorRuntime.awrap(this.writer.sendAndReceiveP("securePrompt",r));case 11:if(i=l.sent,i.tlvs){l.next=14;break}throw _retailPaymentDevice.deviceError.secureEntryFailed;case 14:if(i.apdu.isSuccess){l.next=16;break}throw _retailPaymentDevice.deviceError.actionCancelled;case 16:if(s=i.tlvs.find(_MiuraTags2.default.MiuraNumericData),o=new _retailPaymentDevice.ManuallyEnteredCard,o.formFactor=_retailPaymentDevice.FormFactor.SecureManualEntry,o.emvData=i.apdu.data.toString("hex"),o.reader=this.reader,u=s.parse(),o.cardIssuer=_retailPaymentDevice.CardDataUtil.getCardIssuerFromCardNumber(u),o.lastFourDigits=u.substring(u.length-4),Log.debug("Card number entry complete"),!e.expiration){l.next=30;break}return l.next=28,regeneratorRuntime.awrap(this._numericPrompt({entryType:_retailPaymentDevice.NumericEntryType.ExpirationDate}));case 28:d=l.sent,o.expiration=""+d.substring(2)+d.substring(0,2);case 30:if(!e.cvv){l.next=36;break}return l.t0=o,l.next=34,regeneratorRuntime.awrap(this._numericPrompt({entryType:_retailPaymentDevice.NumericEntryType.Cvv}));case 34:l.t1=l.sent,l.t0.setCvv.call(l.t0,l.t1);case 36:return l.abrupt("return",o);case 37:case"end":return l.stop()}},null,this)},t.prototype.promptForTipEntry=function(e){return regeneratorRuntime.async(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,regeneratorRuntime.awrap(this._tipPrompt(e));case 2:return t.abrupt("return",t.sent);case 3:case"end":return t.stop()}},null,this)},t.prototype._tipPrompt=function(e){var t,r,a,n,i,s,o;return regeneratorRuntime.async(function(u){for(;;)switch(u.prev=u.next){case 0:return t=new Buffer([0,0,0,44,0,0]),r=new Buffer([6,0]),e&&(t=new Buffer([0,0,0,43,0,0]),r=new Buffer([6,2])),a=new _tlvlib.TlvList,a.add(14656006,t),a.add(14656007,r),n=new _tlvlib.TlvList,n.add(_MiuraTags2.default.MiuraCommandData,a.toBytes()),i=new _tlvlib.ApduCommand(210,4,0,1),i.appendBytes(n.toBytes()),u.next=12,regeneratorRuntime.awrap(this.writer.sendAndReceiveP("tipPrompt",i));case 12:if(s=u.sent,s.tlvs){u.next=15;break}throw _retailPaymentDevice.deviceError.tipEntryFailed;case 15:return o=s.tlvs.find(_MiuraTags2.default.MiuraNumericData),u.abrupt("return",o.parse());case 17:case"end":return u.stop()}},null,this)},t.prototype.promptForOnDevicePayment=function(){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(this._onDevicePaymentPrompt());case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}},null,this)},t.prototype._onDevicePaymentPrompt=function(){var e,t,r,a,n,i,s;return regeneratorRuntime.async(function(o){for(;;)switch(o.prev=o.next){case 0:return e=new Buffer([0,0,0,28,0,0]),t=new Buffer([6,2]),r=new _tlvlib.TlvList,r.add(14656006,e),r.add(14656007,t),a=new _tlvlib.TlvList,a.add(_MiuraTags2.default.MiuraCommandData,r.toBytes()),n=new _tlvlib.ApduCommand(210,4,0,1),n.appendBytes(a.toBytes()),o.next=11,regeneratorRuntime.awrap(this.writer.sendAndReceiveP("onDevicePaymentPrompt",n));case 11:if(i=o.sent,i.tlvs){o.next=14;break}throw _retailPaymentDevice.deviceError.generic;case 14:return s=i.tlvs.find(_MiuraTags2.default.MiuraNumericData),o.abrupt("return",s.parse());case 16:case"end":return o.stop()}},null,this)},t.prototype.startICCTransaction=function(e,r,a,n,i){var s=startTxCommon(e,r,a,n),o=new _tlvlib.TlvList;o.add(_MiuraTags2.default.MiuraCommandData,s);var u=new _tlvlib.ApduCommand(222,209);u.appendBytes(o.toBytes()),this.writer.sendAndReceive("startChipTx",u,function(e,r){var a=e||t.parseContactError(r);if(a)return void i(a,r);if(226===r.apdu.template&&r.tlvs.find(_tlvlib.Tags.TerminalApplicationIdentifier)){var n=new _retailPaymentDevice.AvailableApplications(r);buildApps(n,r),n.apdu=r.apdu,i(null,n)}else i(null,r)})},t.parseContactError=function(e){if(!e||!e.apdu)return _retailPaymentDevice.deviceError.badEmvData;var t=e.apdu;if(229===t.template)return _retailPaymentDevice.deviceError.contactIssuer;var r={65:_retailPaymentDevice.deviceError.paymentCancelled,35:_retailPaymentDevice.deviceError.smartCardNotInSlot,37:_retailPaymentDevice.deviceError.cardBlocked,40:_retailPaymentDevice.deviceError.mustSwipeCard};return 159===t.sw1&&r[t.sw2]?r[t.sw2]:null},t.prototype.startContactlessTransaction=function(e,r,a,n,i){var s=startTxCommon(e,r,a,n),o=new _tlvlib.TlvList;o.add(_MiuraTags2.default.MiuraCommandData,s);var u=new _tlvlib.ApduCommand(222,193,4,0);u.appendBytes(o.toBytes());var d=function(e){var r=null,a=!1,n=[227,228,229],i=e&&e.apdu&&e.apdu.template;return e&&e.apdu&&159===e.apdu.sw1&&255===e.apdu.sw2?r=_retailPaymentDevice.deviceError.cannotAcceptMessage:a=-1!==n.indexOf(i)||t.parseContactlessError(e),[r,a]};this.writer.sendAndReceive("startNFCtx",u,{responseCheck:d},function(e,r){var a=e||t.parseContactlessError(r);i(a,r)})},t.parseContactlessError=function(e){if(!e||!e.apdu)return _retailPaymentDevice.deviceError.badEmvData;var t=e.apdu;if(229===t.template)return _retailPaymentDevice.deviceError.nfcNotAllowed;var r={65:_retailPaymentDevice.deviceError.paymentCancelled,66:_retailPaymentDevice.deviceError.nfcTimeout,67:_retailPaymentDevice.deviceError.contactlessPaymentAbortedByCardInsert,68:_retailPaymentDevice.deviceError.contactlessPaymentAbortedByCardSwipe,193:_retailPaymentDevice.deviceError.nfcNotAllowed,194:_retailPaymentDevice.deviceError.tryDifferentCard,195:_retailPaymentDevice.deviceError.mustInsertCard,207:_retailPaymentDevice.deviceError.hardwareError};return 159===t.sw1&&r[t.sw2]?r[t.sw2]:t.isSuccess?null:_retailPaymentDevice.deviceError.generic},t.prototype.continueTransaction=function(e,t){var r=new _tlvlib.ApduCommand(222,210);r.expectNoBytes=!0;var a=new _tlvlib.TlvList;a.add(224,new Buffer(e,"hex")),r.appendBytes(a.toBytes()),this.writer.sendAndReceive("continueTx",r,function(e,r){var a=void 0;!r.apdu||229!==r.apdu.template&&r.apdu.data&&159!==r.apdu.sw1||(a=_retailPaymentDevice.deviceError.contactIssuer),t(a||e,r)})},t.prototype.selectApplication=function(e,t){var r=this.getResponseCheck([225],"selectApplication",!0),a=new _tlvlib.ApduCommand(222,210);a.expectNoBytes=!0;var n=new _tlvlib.TlvList;n.add(_tlvlib.Tags.TerminalApplicationIdentifier,e);var i=new _tlvlib.TlvList;i.add(224,n.toBytes()),a.appendBytes(i.toBytes()),this.writer.sendAndReceive("selectApp",a,{responseCheck:r},t)},_createClass(t,[{key:"formFactors",get:function(){return this.Config&&this.Config.formFactors||[_retailPaymentDevice.FormFactor.Chip,_retailPaymentDevice.FormFactor.MagneticCardSwipe]}}]),t}(_events.EventEmitter);

}).call(this,require("buffer").Buffer)
},{"./MiuraTags":217,"./Parser":218,"./TerminalConfig":221,"./TerminalDisplay":222,"./Writer":223,"./messages/BatteryStatus":228,"./messages/CardStatus":229,"./messages/KeyStatus":231,"./messages/TerminalStatus":232,"buffer":96,"events":200,"manticore-log":208,"retail-payment-device":356,"tlvlib":269}],221:[function(require,module,exports){
(function (Buffer){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function numberToBuffer(e,t){var i=new Buffer(t);return i.writeUIntBE(e,0,t),i}exports.__esModule=!0;var _createClass=function(){function e(e,t){for(var i=0;i<t.length;i++){var r=t[i];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,i,r){return i&&e(t.prototype,i),r&&e(t,r),t}}(),_tlvlib=require("tlvlib"),_retailPaymentDevice=require("retail-payment-device"),_manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_MiuraTags=require("./MiuraTags"),_MiuraTags2=_interopRequireDefault(_MiuraTags),_DeviceCaps=require("./messages/DeviceCaps"),_DeviceCaps2=_interopRequireDefault(_DeviceCaps),_Writer=require("./Writer"),Log=(0,_manticoreLog2.default)("miura.terminal.config"),TerminalConfig=function(){function e(t){_classCallCheck(this,e),this.device=t,this.writer=t.writer}return e.prototype.removeLogs=function(e){Log.debug("removeLogs"),this.writer.sendAndReceive("removeLogs",new _tlvlib.ApduCommand(208,225,1),e)},e.prototype.archiveLogs=function(e){Log.debug("archiveLogs"),this.writer.sendAndReceive("archiveLogs",new _tlvlib.ApduCommand(208,225),e)},e.prototype.selectFile=function(e,t,i){var r=new _tlvlib.ApduCommand(0,164,t?1:0);r.appendString(e),Log.debug(function(){return"Miura Sending selectFile ("+e+") ApduCommand: "+r}),this.writer.sendAndReceive("selectFile",r,i)},e.prototype.readBinary=function(e,t,i){var r=void 0;e>32767?(r=new _tlvlib.ApduCommand(0,176,128|e>>16&127,e>>8&255),r.appendBytes(new Buffer([255&e]))):r=new _tlvlib.ApduCommand(0,176,e>>8&127,255&e),r.le=t,this.writer.sendAndReceive("readBinary",r,{rawResponse:!0},i)},e.prototype.getConfiguration=function(e){this.writer.sendAndReceive("getConfig",new _tlvlib.ApduCommand(208,1),function(t,i){i?e(t,new _DeviceCaps2.default(i)):e(t,i)})},e.prototype.getDeviceCapabilities=function(e){var t=this;this.writer.sendAndReceive("getDeviceCapabilities",new _tlvlib.ApduCommand(208,2),function(i,r){var n=null;r&&r.apdu.isSuccess?(n=new _DeviceCaps2.default(r),t._factors=[],n.caps.Smartcard&&t._factors.push(_retailPaymentDevice.FormFactor.Chip),n.caps.Contactless&&t._factors.push(_retailPaymentDevice.FormFactor.EmvCertifiedContactless),n.caps.Mag&&t._factors.push(_retailPaymentDevice.FormFactor.MagneticCardSwipe),n.caps.Keyboard&&t._factors.push(_retailPaymentDevice.FormFactor.SecureManualEntry)):Log.debug("Miura device does not support getDeviceCapabilities - proceeding with default capabilities."),e(i,n)})},e.prototype.getP2PEStatus=function(e){this.writer.sendAndReceive("getP2PEStatus",new _tlvlib.ApduCommand(238,224),e)},e.prototype.initializeP2PE=function(e){this.writer.sendAndReceive("initializeP2PE",new _tlvlib.ApduCommand(238,225),e)},e.prototype.importP2PE=function(e){this.writer.sendAndReceive("importP2PE",new _tlvlib.ApduCommand(238,226),e)},e.prototype.getLogFile=function(e){var t=this;Log.debug("getLogFile"),this.archiveLogs(function(i){if(i)return Log.error("Failed to archive Logs: "+i.message+"\n"+i.stack),void e(i);t.getFile("mpi.log",function(t,i){t&&Log.error("Failed to get mpi.log: "+t.message+"\n"+t.stack),e(t,i)})})},e.prototype.getFile=function(e,t){var i=this;this.selectFile(e,0,function(r,n){if(r||!n.apdu.isSuccess)return void t(r||new Error("Could not select file "+e),null);var a=n.tlvs.find(_MiuraTags2.default.MiuraFileLength);if(!a||!a.bytes)return void t(new Error("Empty or missing file length for "+e));var o=a.parse();Log.debug("Fetching "+o+" bytes of "+e);var u=0,s=[];!function e(){i.readBinary(u,250,function(i,r){return i?void t(i):(o-=r.apdu.data.length,u+=r.apdu.data.length,s.push(r.apdu.data),o>0?void e():void t(null,Buffer.concat(s)))})}()})},e.prototype.streamBinary=function(e,t,i,r,n){var a=new _tlvlib.ApduCommand(0,215,r?1:0),o=new _tlvlib.TlvList,u=Buffer.isBuffer(e),s=new _tlvlib.TlvList,l=u?e.length:(0,_Writer.base64ByteLength)(e);o.add(_MiuraTags2.default.MiuraFileWriteOffset,numberToBuffer(t,3)),o.add(_MiuraTags2.default.MiuraFileWriteLength,numberToBuffer(l,3)),o.add(_MiuraTags2.default.MiuraFileWriteTimeout,numberToBuffer(i,1)),s.add(_MiuraTags2.default.MiuraCommandData,o),a.appendBytes(s.toBytes()),Log.debug(function(){return"Miura sending binary stream of "+l+" bytes with offset "+t}),this.writer.sendAndReceive("streamBinary",a,{additionalData:e},function(e,t){var i=null;if(!e&&r&&t&&t.tlvs){var a=t.tlvs.find(_MiuraTags2.default.MiuraFileMD5);a=a&&a.bytes.toString("hex"),Log.debug(function(){return"Comparing md5s. \nSource: "+r+" \nDestination: "+a}),r!==a&&(i=new Error("Mismatched MD5 after streaming binary!"))}n&&n(e||i,t)})},_createClass(e,[{key:"formFactors",get:function(){return this._factors}}]),e}();exports.default=TerminalConfig;

}).call(this,require("buffer").Buffer)
},{"./MiuraTags":217,"./Writer":223,"./messages/DeviceCaps":230,"buffer":96,"manticore-log":208,"retail-payment-device":356,"tlvlib":269}],222:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function centerLine(e,t){return e.length>=t-1||0===e.length?e:Array(Math.floor((t-e.length)/2)+1).join(" ")+e}exports.__esModule=!0;var _manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_retailPaymentDevice=require("retail-payment-device"),_l10nManticore=require("l10n-manticore"),_l10nManticore2=_interopRequireDefault(_l10nManticore),_en=require("./strings/m010/en"),_en2=_interopRequireDefault(_en),Message=_retailPaymentDevice.PaymentDevice.Message,Log=(0,_manticoreLog2.default)("miura.terminal.displayFormatter"),TerminalDisplay=function(){function e(t){_classCallCheck(this,e),this.model=t,"M010"===t&&(this.lines=4,this.lineWidth=21,this.l10n=(0,_l10nManticore2.default)({en:_en2.default}))}return e.prototype.formatMessage=function(e,t,n){var r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],i=e===Message.SoftwareUpdateProgress&&t?"SwUpdate."+t.stage:e,a=this.l10n(i,t);return a!==i?this.centerString(a.split("\n"),n,r).join("\n"):(Log.error("Could not format message with id: "+e+" values: "+JSON.stringify(t)),"")},e.prototype.centerString=function(e,t,n){var r=e;if("string"==typeof e){if(!this.lines)return[centerLine(e,this.lineWidth)];r=[e]}for(var i=[],a=r,o=Array.isArray(a),l=0,a=o?a:a[Symbol.iterator]();;){var s;if(o){if(l>=a.length)break;s=a[l++]}else{if(l=a.next(),l.done)break;s=l.value}var u=s;i.push(centerLine(u,this.lineWidth))}if(!n)return i;!t&&i.length<this.lines&&i.unshift("");for(var c=this.lines;c&&c>i.length+1;)i.unshift(""),c-=1;return i},e}();exports.default=TerminalDisplay;

},{"./strings/m010/en":233,"l10n-manticore":204,"manticore-log":208,"retail-payment-device":356}],223:[function(require,module,exports){
(function (Buffer){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function buildCommandBytes(e){var t=0,n=new Buffer(3);n.writeUInt8(1,0),t^=1,n.writeUInt8(0,1);var s=e.toBytes();if(s.length>255)throw _retailPaymentDevice.deviceError.dataValidationError.withDevMessage("Miura command is too long, max 255 bytes, got "+s.length);n.writeUInt8(s.length,2),t^=s.length;for(var r=0;r<s.length;r++)t^=s[r];var a=new Buffer(1);return a.writeUInt8(255&t,0),Buffer.concat([n,s,a])}function base64ByteLength(e){var t=.75*e.length;return"="===e[e.length-1]&&(t-=1),"="===e[e.length-2]&&(t-=1),t}exports.__esModule=!0,exports.Writer=exports.CommandStatus=void 0;var _createClass=function(){function e(e,t){for(var n=0;n<t.length;n++){var s=t[n];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(e,s.key,s)}}return function(t,n,s){return n&&e(t.prototype,n),s&&e(t,s),t}}();exports.buildCommandBytes=buildCommandBytes,exports.base64ByteLength=base64ByteLength;var _manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_manticore=require("manticore"),_manticore2=_interopRequireDefault(_manticore),_yaku=require("yaku"),_yaku2=_interopRequireDefault(_yaku),_retailPaymentDevice=require("retail-payment-device"),_Parser=require("./Parser"),Log=(0,_manticoreLog2.default)("miura.writer"),CommandStatus=exports.CommandStatus={Queued:0,AwaitingResponse:1},Writer=exports.Writer=function(){function e(t,n){var s=this;_classCallCheck(this,e),this._terminal=t,this._sendFn=n,this._parser=this._terminal.parser,this._parser.on(_Parser.ParserEvent.response,function(e){s._responseHandler(e)}),this._terminal.reader.on(_retailPaymentDevice.PaymentDevice.Event.disconnected,function(){return s._deviceDisconnected()}),this._requestQueue=[],this._requestCounter=0,this._responseQueue=[]}return e.prototype.sendAndReceiveP=function(e,t,n){var s=this;return new _yaku2.default(function(r,a){s.sendAndReceive(e,t,n,function(e,t){e?a(e):r(t)})})},e.prototype.sendAndReceive=function(e,t,n,s){var r=this;"function"==typeof n&&(s=n,n={}),n=n||{},Log.debug(function(){return"Queueing '"+e+"("+r._requestCounter+")' "+t.toString(!0)});var a=[buildCommandBytes(t)];n.additionalData&&a.push(n.additionalData);var i={name:e,dataParts:a,callback:s,noResponse:n.noResponse,rawResponse:n.rawResponse,responseCheck:n.responseCheck,status:CommandStatus.Queued,ordinal:this._requestCounter};this._requestCounter+=1,this._requestQueue.push(i),this._sendNext()},e.prototype._sendNext=function(){var e=this;if(!this.sending){var t=this._requestQueue.find(function(e){return e.status===CommandStatus.Queued});t?(t.status=CommandStatus.AwaitingResponse,this.sending=!0,this._updateParserExpectations(),this._send(t.dataParts,function(n){if(n||t.noResponse){n&&Log.error("_sendNext failure: "+n+" "+n.message);var s=e._requestQueue.findIndex(function(e){return e.ordinal===t.ordinal});-1!==s&&e._requestQueue.splice(s,1),t.callback&&t.callback(n)}e.sending=!1,e._sendNext()})):Log.debug("No suitable message to send")}},e.prototype._send=function(e,t){var n=this,s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;if(!this._terminal.reader.canPushCommands())return void(t&&t(_retailPaymentDevice.deviceError.cannotAcceptMessage));var r=e[0],a=Buffer.isBuffer(r),i=a?r.length:base64ByteLength(r),o=i-s,u=this.throttleInfo&&this.throttleInfo.pause||0;o=this.throttleInfo&&o>this.throttleInfo.size?this.throttleInfo.size:o,Log.debug(function(){return"Sending data part. Total length: "+i+". Offset: "+s+". Length to send: "+o+". Remaining parts: "+e.length});var l=void 0;l=s||o<i?a?r.slice(s,s+o).toString("base64"):{data:r,offset:s,len:o}:a?r.toString("base64"):r,this._sendFn(l,function(r){if(r)t&&t(r);else{var a=s+o;a>=i&&(e.shift(),a=0),e.length?_manticore2.default.setTimeout(function(){n._send(e,t,a)},u):(Log.debug("Successfully sent message."),t&&t())}})},e.prototype._updateParserExpectations=function(){var e=this._requestQueue.length&&this._requestQueue[0];e&&e.status===CommandStatus.AwaitingResponse?this._parser.expectRawBytes=e.rawResponse:this._parser.expectRawBytes=!1},e.prototype._deviceDisconnected=function(){for(var e=this._requestQueue,t=Array.isArray(e),n=0,e=t?e:e[Symbol.iterator]();;){var s;if(t){if(n>=e.length)break;s=e[n++]}else{if(n=e.next(),n.done)break;s=n.value}var r=s;r.callback&&r.callback(_retailPaymentDevice.deviceError.deviceNotConnected)}this._requestQueue=[],this._responseQueue=[],this._updateParserExpectations()},e.prototype._responseHandler=function(e){this._responseQueue.push(e),this._handleNextResponse()},e.prototype._handleNextResponse=function(){var e=this;if(!this._handlingResponse&&this._responseQueue.length){this._handlingResponse=!0;for(var t=this._responseQueue.shift(),n=t.apdu&&t.apdu.template?t.apdu.template.toString(16):"<empty>",s=t.apdu&&t.apdu.sw1&&t.apdu.sw1.toString(16),r=t.apdu&&t.apdu.sw2&&t.apdu.sw2.toString(16),a=t.raw&&t.raw.toString("hex"),i=0,o=null,u=null,l=!1;;){if(Log.debug(function(){return"Remaining unhandled responses: "+e._responseQueue.length+". Remaining outstanding requests: "+e._requestQueue.length+"."}),this._requestQueue.length<=i||this._requestQueue[i].status!==CommandStatus.AwaitingResponse){this._handlingResponse=!1,Log.warn("Unexpected response. Response template "+n+" SW1: "+s+" SW2: "+r),this._responseQueue=[];break}if(o=this._requestQueue[i],!u&&o.responseCheck){var c=o.responseCheck(t);u=c[0],l=c[1]}else l=!0;if(l){if(this._requestQueue.splice(i,1),o.callback)try{Log.debug("Response will be handled by request '"+o.name+"("+o.ordinal+")'. Response template "+n+" SW1: "+s+" SW2: "+r+" Raw: "+a+". Remaining requests: "+this._requestQueue.length),o.callback(u,t)}catch(e){throw Log.error("Error "+e+" executing callback "+o.callback),e}this._updateParserExpectations(),this._handlingResponse=!1,this._handleNextResponse();break}i+=1}}},_createClass(e,[{key:"throttleInfo",get:function(){return this._terminal&&this._terminal.reader.throttleInfo}}]),e}();

}).call(this,require("buffer").Buffer)
},{"./Parser":218,"buffer":96,"manticore":213,"manticore-log":208,"retail-payment-device":356,"yaku":371}],224:[function(require,module,exports){
(function (Buffer){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function getLastFourFormEMVChipAndEMVContactlessBlob(e){var r=e.tlvs.find(_MiuraTags2.default.MiuraMaskedPan)||e.tlvs.find(_MiuraTags2.default.MiuraMaskedICCTrack2)||e.tlvs.find(_MiuraTags2.default.MiuraMaskedTrack2)||e.tlvs.find(_MiuraTags2.default.MiuraMaskedContactlessTrack2);if(!r)return Log.warn("Unable to find the any TLV corresponding to masked pan"),null;var a=r.bytes.toString("hex");if(!a)return Log.warn("lastFourTLV: "+r),null;for(var t=a.indexOf("ffff"),i=a.substring(t+"ffff".length);i.length>0&&"f"===i.charAt(0);)i=i.substring(1);return i.substring(0,4)}function lastFourDigits(e,r){var a=void 0,t=r.apdu.data.toString("hex");if(e===_retailPaymentDevice.FormFactor.MagneticCardSwipe&&(swipeLastFourRegexMatcher||(swipeLastFourRegexMatcher=/(?:2a){2,}(?!2a)((.){8})(?=3d)/),(a=swipeLastFourRegexMatcher.exec(t))&&a[1])){var i=new Buffer(a[1],"hex").toString("utf8");if(i.length>=4){var n=i.substring(0,4);return Log.debug(function(){return"Got last four digits of card as "+n}),n}}if(e===_retailPaymentDevice.FormFactor.Chip||e===_retailPaymentDevice.FormFactor.EmvCertifiedContactless){var u=getLastFourFormEMVChipAndEMVContactlessBlob(r);if(u)return Log.debug(function(){return"Got last four digits of card as "+u}),u}return Log.warn("Unable to parse last four digits (formFactor: "+e+")"),null}function getCardIssuer(e,r){if(e===_retailPaymentDevice.FormFactor.MagneticCardSwipe){var a=r.apdu.data.toString("hex"),t=a.toString().lastIndexOf("3b"),i=a.lastIndexOf("2a");if(t>i&&(t=a.slice(0,i).lastIndexOf("3b")),i<0||t<0)return null;a=a.substring(t+2,i);var n=new Buffer(a,"hex").toString("utf8");return _retailPaymentDevice.CardDataUtil.getCardIssuerFromCardNumber(n)}if(e===_retailPaymentDevice.FormFactor.Chip||e===_retailPaymentDevice.FormFactor.EmvCertifiedContactless){var u=r.tlvs.find(_tlvlib.Tags.ApplicationLabel),o=u?u.parse():null;return _retailPaymentDevice.CardDataUtil.getCardIssuerFromEmvAppLabel(o)}return null}function isSignatureCvmRequired(e,r){var a=r.tlvs.find(_MiuraTags2.default.MiuraCardholderVerificationStatus);if(Log.debug(function(){return"Signature data from card: "+(a?a.parse():null)+"(cvmStatus)"}),!a)return!0;var t=a.parse();if(!t)return!0;if(t=t[0],e===_retailPaymentDevice.FormFactor.Chip){if(1===t||2===t||4===t||31===t)return!1}else if(0===t||2===t||3===t)return!1;return!0}function getCardHolderName(e,r){if(e===_retailPaymentDevice.FormFactor.MagneticCardSwipe)return null;if(e===_retailPaymentDevice.FormFactor.Chip||e===_retailPaymentDevice.FormFactor.EmvCertifiedContactless){var a=r.tlvs.find(_tlvlib.Tags.CardholderName);return a?a.parse():null}return null}function parseCardMetadata(e,r){var a={};try{a={lastFourDigits:lastFourDigits(e,r),cardIssuer:getCardIssuer(e,r),isSignatureRequired:isSignatureCvmRequired(e,r),cardholderName:getCardHolderName(e,r)},Log.debug(function(){return"Parsed card metadata: "+JSON.stringify(a)}),a.emvData=r}catch(e){Log.error("Unable to parse card metadata: "+e+" from : "+r)}return a}exports.__esModule=!0,exports.default=parseCardMetadata;var _manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_retailPaymentDevice=require("retail-payment-device"),_tlvlib=require("tlvlib"),_MiuraTags=require("./MiuraTags"),_MiuraTags2=_interopRequireDefault(_MiuraTags),Log=(0,_manticoreLog2.default)("paymentDevice.miura.cardMetadataParser"),swipeLastFourRegexMatcher=void 0;

}).call(this,require("buffer").Buffer)
},{"./MiuraTags":217,"buffer":96,"manticore-log":208,"retail-payment-device":356,"tlvlib":269}],225:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==(void 0===t?"undefined":_typeof(t))&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":_typeof(t)));e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};exports.__esModule=!0;var _createClass=function(){function e(e,t){for(var o=0;o<t.length;o++){var r=t[o];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,o,r){return o&&e(t.prototype,o),r&&e(t,r),t}}(),_manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_events=require("events"),FACADE=Symbol("facade"),Log=(0,_manticoreLog2.default)("manticore-log"),FlowFacade=function(e){function t(o){_classCallCheck(this,t);var r=_possibleConstructorReturn(this,e.call(this));return r.active=!0,r.flow=o,r}return _inherits(t,e),t.prototype._prepareForChange=function(e){var o=this.flow;e||o.previousSteps.push(o.stepIndex),o[FACADE]&&(o[FACADE].active=!1),o[FACADE]=new t(o)},t.prototype._check=function(){return!!this.active||(Log.error("Flow step completion function called by inactive step "+this.stepName+"!"),this.flow.emit("flowError",new Error("Flow step completion function called by inactive step!")),!1)},t.prototype._executeStep=function(e){var t=this,o=e<this.flow.stepIndex?"regressing":"advancing";this.flow.stepIndex=e;var r=this.flow.steps[e];Log.debug(function(){return"Flow "+o+" to "+t.stepName});try{r.call(this.flow.owner,this.flow[FACADE])}catch(e){Log.error(this.stepName+" execution returned an error: "+e),this.flow[FACADE].abortFlow(e)}},t.prototype.next=function(){if(!this._check())return void Log.debug("Flow::next called out of turn!");var e=this.flow;if(e.stepIndex+1>=e.steps.length)return void this.completeFlow();e.emit("next",e.stepIndex),this._prepareForChange(),this._executeStep(e.stepIndex+1)},t.prototype.back=function(){if(!this._check())return void Log.debug("Flow::back called out of turn!");var e=this.flow;if(0===e.previousSteps.length)return void this.abortFlow();e.emit("back",e.steps[e.stepIndex],e.steps[e.stepIndex-1]),this._prepareForChange(!0),this._executeStep(e.previousSteps.pop())},t.prototype.completeFlow=function(){var e=this;if(!this._check())return void Log.debug("Flow::complete called out of turn!");Log.debug(function(){return(e.flow.name||"Anonymous")+" Flow completed."});var t=this.flow;this._prepareForChange(),t.stepIndex=null,t[FACADE]=null,t.emit("completed",null,t.data)},t.prototype.abortFlow=function(e){if(!this._check())return void Log.debug("Flow::abortFlow called out of order!");Log.debug((this.flow.name||"Anonymous")+" Flow aborted");var t=this.flow;e&&(t.data.error=e),t[FACADE].emit("aborted"),this._prepareForChange(),t.stepIndex=null,t[FACADE]=null,t.emit("completed",e,t.data)},t.prototype.nextOrAbort=function(e){e?this.abortFlow(e):this.next()},_createClass(t,[{key:"stepName",get:function(){var e=this.flow.steps[this.flow.stepIndex];return e?e.fnName||e.name:void 0}},{key:"data",get:function(){return this.flow.data}},{key:"stepIndex",get:function(){return this.flow.stepIndex}},{key:"previousSteps",get:function(){return this.flow.previousSteps}}]),t}(_events.EventEmitter),Flow=function(e){function t(o,r){_classCallCheck(this,t);var n=_possibleConstructorReturn(this,e.call(this));return n.owner=o,Array.isArray(r)?n.steps=r:n.steps=Array.prototype.slice.call(arguments,1),n.data={},n[FACADE]=null,n.stepIndex=0,n.previousSteps=[],n}return _inherits(t,e),t.prototype.start=function(){return this[FACADE]=new FlowFacade(this),this[FACADE]._executeStep(0),this},t.prototype.abortFlow=function(e){if(!this[FACADE])return void Log.error("Abort called on an inactive flow!");this[FACADE].abortFlow(e)},t}(_events.EventEmitter);exports.default=Flow;

},{"events":200,"manticore-log":208}],226:[function(require,module,exports){
"use strict";exports.__esModule=!0;var deviceState={unknown:0,softwareUpdate:1,hardResetting:2};exports.default=deviceState;

},{}],227:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}exports.__esModule=!0;var _MiuraDevice=require("./MiuraDevice");Object.defineProperty(exports,"default",{enumerable:!0,get:function(){return _interopRequireDefault(_MiuraDevice).default}});

},{"./MiuraDevice":216}],228:[function(require,module,exports){
"use strict";function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _createClass=function(){function t(t,e){for(var a=0;a<e.length;a++){var r=e[a];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,a,r){return a&&t(e.prototype,a),r&&t(e,r),e}}(),_retailPaymentDevice=require("retail-payment-device"),BatteryStatus=function(){function t(e){_classCallCheck(this,t),this.response=e;for(var a=this.response.tlvs.values,r=Array.isArray(a),n=0,a=r?a:a[Symbol.iterator]();;){var s;if(r){if(n>=a.length)break;s=a[n++]}else{if(n=a.next(),n.done)break;s=n.value}var i=s;14656009===i.tagNumber?this._readStatus(i):14656010===i.tagNumber&&(this.batteryPercentage=i.bytes[0])}this.measuredOn=new Date}return t.prototype._readStatus=function(t){switch(t.bytes[0]){case 0:this.status=_retailPaymentDevice.batteryStatus.draining,this.connectedToPower=!1;break;case 1:this.status=_retailPaymentDevice.batteryStatus.charging,this.connectedToPower=!0;break;case 2:this.status=_retailPaymentDevice.batteryStatus.charged,this.connectedToPower=!0;break;case 255:this.status=_retailPaymentDevice.batteryStatus.drained,this.connectedToPower=!1;break;default:this.status=_retailPaymentDevice.batteryStatus.unknown,this.connectedToPower=!1}},t.prototype.toString=function(){return"Battery Status: "+this.status+" ("+this.batteryPercentage+"%), ConnectedToPower? "+this.connectedToPower},_createClass(t,[{key:"batteryInfo",get:function(){return new _retailPaymentDevice.BatteryInfo(this.batteryPercentage,this.connectedToPower,this.measuredOn,this.status)}}]),t}();exports.default=BatteryStatus;

},{"retail-payment-device":356}],229:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _retailPaymentDevice=require("retail-payment-device"),_manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_manticoreUtil=require("manticore-util"),_cardMetadataParser=require("../cardMetadataParser"),_cardMetadataParser2=_interopRequireDefault(_cardMetadataParser),Log=(0,_manticoreLog2.default)("miura.cardStatus"),CardStatus=function(){function e(t){_classCallCheck(this,e),this.response=t;for(var a=this.response.tlvs.values,r=Array.isArray(a),i=0,a=r?a:a[Symbol.iterator]();;){var s;if(r){if(i>=a.length)break;s=a[i++]}else{if(i=a.next(),i.done)break;s=i.value}var n=s;if(72===n.tagNumber)this.chipFlags=n.bytes[0],this.magstripeFlags=n.bytes[1];else if(14659075===n.tagNumber)this.ksn=n.parse();else if(14659074===n.tagNumber)this.sredData=n.parse();else if(14659106===n.tagNumber)this.maskedTrack2=n.parse();else if(24354===n.tagNumber)this.track2=n.parse();else if(57136===n.tagNumber){this.formFactor=_retailPaymentDevice.FormFactor.EmvCertifiedContactless;var o=n.bytes[1];this.emv=!(0===o||2===o)}}this.p2pe=t.apdu.data.slice(1).toString("hex")}return e.prototype.getPresentedCard=function(e){var t=void 0;return 1==(1&this.magstripeFlags)?this._magstripe(e):3==(3&this.chipFlags)?(t=new _retailPaymentDevice.Card,t.formFactor=_retailPaymentDevice.FormFactor.Chip,t.reader=e,Log.debug("EMV Card Inserted"),t):1==(1&this.chipFlags)?(t=new _retailPaymentDevice.Card,t.formFactor=_retailPaymentDevice.FormFactor.Chip,t.reader=e,t.failed=!0,Log.warn("EMV Chip Invalid"),t):this.formFactor===_retailPaymentDevice.FormFactor.EmvCertifiedContactless?(t=new _retailPaymentDevice.Card,t.formFactor=_retailPaymentDevice.FormFactor.EmvCertifiedContactless,t.emvData=this.response,t.reader=e,t.failed=229===this.response.apdu.template,t.isContactlessMSD=!this.emv,(0,_manticoreUtil.extend)(t,(0,_cardMetadataParser2.default)(t.formFactor,this.response),!0),t):null},e.prototype._magstripe=function(e){var t=new _retailPaymentDevice.MagneticCard,a=this.maskedTrack2||this.track2;if(!a||!a.length)return Log.error("Missing card swipe data maskedTrack2:  '"+this.maskedTrack2+"' track2: '"+this.track2+"'"),t.failed=!0,t;var r=a.indexOf("="),i=a.substring(r+5,r+6);return t.formFactor=_retailPaymentDevice.FormFactor.MagneticCardSwipe,t.ksn=this.ksn?this.ksn.toString("hex"):"",t.reader=e,r<6?(Log.error("Missing track2 = sentinel from card swipe data"),t.failed=!0,t):("2"!==i&&"6"!==i||(t.chipCard=!0),t.track2=this.response.apdu.data.toString("hex"),(0,_manticoreUtil.assignExcept)(t,(0,_cardMetadataParser2.default)(t.formFactor,this.response),"isSignatureRequired"),t)},e.prototype.toString=function(){var e=[this.response.toString(),"\nChip flags ",this.chipFlags.toString(16)," Magstripe flags ",this.magstripeFlags.toString(16)];return this.ksn&&(e.push("\nKSN: "),e.push(this.ksn.toString("hex"))),this.track2&&(e.push("\nTrack 2: "),e.push(this.track2.toString("hex"))),this.maskedTrack2&&(e.push("\nMasked Track 2: "),e.push(this.maskedTrack2)),this.sredData&&(e.push("\nSRED: "),e.push(this.sredData.toString("hex"))),e.join("")},e}();exports.default=CardStatus;

},{"../cardMetadataParser":224,"manticore-log":208,"manticore-util":212,"retail-payment-device":356}],230:[function(require,module,exports){
"use strict";function _interopRequireDefault(r){return r&&r.__esModule?r:{default:r}}function _classCallCheck(r,a){if(!(r instanceof a))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _MiuraTags=require("../MiuraTags"),_MiuraTags2=_interopRequireDefault(_MiuraTags),DeviceCaps=function(){function r(a){_classCallCheck(this,r),this.response=a,this.caps={};for(var e=this.response.tlvs.values,i=Array.isArray(e),t=0,e=i?e:e[Symbol.iterator]();;){var s;if(i){if(t>=e.length)break;s=e[t++]}else{if(t=e.next(),t.done)break;s=t.value}var n=s;n.tagNumber===_MiuraTags2.default.MiuraConfigurationInformation.number&&this.readPair(n.parse())}}return r.prototype.readPair=function(r){for(var a=void 0,e=!0,i=r.values,t=Array.isArray(i),s=0,i=t?i:i[Symbol.iterator]();;){var n;if(t){if(s>=i.length)break;n=i[s++]}else{if(s=i.next(),s.done)break;n=s.value}var u=n;u.tagNumber===_MiuraTags2.default.MiuraIdentifier.number?a=u.parse():u.tagNumber===_MiuraTags2.default.MiuraVersionInformation.number&&(e=u.parse())}a&&(this.caps[a]=e)},r.prototype.toString=function(){for(var r=[this.response.toString(),"\nCapabilities: "],a=this.caps,e=Array.isArray(a),i=0,a=e?a:a[Symbol.iterator]();;){var t;if(e){if(i>=a.length)break;t=a[i++]}else{if(i=a.next(),i.done)break;t=i.value}var s=t;r.push("  "),r.push(s),this.caps[s]&&!0!==this.caps[s]&&(r.push(": "),r.push(this.caps[s]))}return r.join("")},r}();exports.default=DeviceCaps;

},{"../MiuraTags":217}],231:[function(require,module,exports){
"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var KeyStatus=function(){function e(t){_classCallCheck(this,e),this.response=t;for(var r=this.response.tlvs.values,s=Array.isArray(r),n=0,r=s?r:r[Symbol.iterator]();;){var o;if(s){if(n>=r.length)break;o=r[n++]}else{if(n=r.next(),n.done)break;o=n.value}var a=o;14656005===a.tagNumber&&(this.keyCode=a.bytes[0])}}return e.prototype.toString=function(){return this.response.toString()+"\nKeyCode 0x"+this.keyCode.toString(16)},e}();exports.default=KeyStatus;

},{}],232:[function(require,module,exports){
"use strict";function _interopRequireDefault(t){return t&&t.__esModule?t:{default:t}}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_MiuraTags=require("../MiuraTags"),_MiuraTags2=_interopRequireDefault(_MiuraTags),Log=(0,_manticoreLog2.default)("device.miura.terminalStatus"),TerminalStatus=function(){function t(e){var n=this;_classCallCheck(this,t),this.response=e,this.response&&this.response.tlvs&&this.response.tlvs.values&&this.response.tlvs.values.forEach(function(e){if(e.tag===_MiuraTags2.default.MiuraStateChangeReason)n.changeType=t._getTerminalStatus(e.bytes[0]);else if(e.tag===_MiuraTags2.default.MiuraStateChangeText)n.description=e.parse();else if(e.tag===_MiuraTags2.default.MiuraDigitsInPinBuffer)n.pinDigits=e.parse();else if(e.tag===_MiuraTags2.default.MiuraPinEntryStatus){var i=e.bytes[0];n._readOutcome(i)}})}return t.prototype.toString=function(){var t=[this.response.toString()+"\nChange Type: "+this.changeType+" ("+this.description+")"];return{}.hasOwnProperty.call(this,"pinDigits")&&(t.push("\nPIN digits: "),t.push(this.pinDigits)),{}.hasOwnProperty.call(this,"pinComplete")&&(t.push("\nPIN entry complete."),{}.hasOwnProperty.call(this,"pinCorrect")&&(t.push("Correct? "+(this.pinCorrect?"yes":"no")),this.pinCorrect||(t.push("\nPIN failure reason: "),t.push(this.pinFailureReason))),this.lastPinAttempt&&t.push("\n*** LAST PIN ATTEMPT ***")),t.join("")},t._getTerminalStatus=function(e){switch(e){case 1:return t.Constants.PoweringOn;case 2:return t.Constants.PinEntryStateChange;case 3:return t.Constants.ApplicationSelection;case 10:return t.Constants.PoweringOff;case 11:return t.Constants.Rebooting;case 12:return t.Constants.MpiRestarting;case 192:return t.Constants.SeePhone;default:return Log.error("Received unknown terminal status tag (0xC3) value "+e),"Unknown"}},t.prototype._readOutcome=function(t){1===t?this.lastPinAttempt=!0:2===t?(this.pinCorrect=!0,this.pinComplete=!0):3===t?(this.pinCorrect=!1,this.pinComplete=!0,this.pinFailureReason="Incorrect PIN"):4===t?(this.pinCorrect=!1,this.pinComplete=!0,this.pinFailureReason="Entry Error"):5===t&&(this.pinComplete=!0)},t}();exports.default=TerminalStatus,TerminalStatus.Constants={PoweringOn:"PoweringOn",PinEntryStateChange:"PinEntryStateChange",ApplicationSelection:"ApplicationSelection",PoweringOff:"PoweringOff",Rebooting:"Rebooting",MpiRestarting:"MpiRestarting",SeePhone:"SeePhone"};

},{"../MiuraTags":217,"manticore-log":208}],233:[function(require,module,exports){
"use strict";module.exports={Connecting:"Connecting to\nApplication",ConnectionFailed:"Connection Failed",NotConnected:"Open the app on your\nphone or tablet.",Ready:"Ready to accept\npayments.",ReadyWithId:"Ready to accept\npayments.\n${id}",NotReady:"Another reader is\nin use.",NfcTimeout:"${amount}\nTransaction timed out",GeneralNfcFallback:"Unable to read card.\nInsert or swipe\ncard now or try\n a different card",TransactionCancelled:"${amount}\nTransaction cancelled",TransactionCancelledRemoveCard:"${amount}\nTransaction cancelled\nPlease remove card",ReadyForInsertAndSwipePayment:"$image(insertswipe.bmp)\n${amount}",ReadyForInsertPayment:"$image(Insert.bmp)\n${amount}",ReadyForSwipePayment:"$image(Swipe.bmp)\n${amount}",ContactIssuer:"Please contact your\ncard issuer.",ContactIssuerRemoveCard:"Please contact your\ncard issuer.\n Please remove card.",InvoiceTotal:"${amount}${footer}",RechargeNow:"Recharge now.",AmountTooLow:"Card minimum is\n${amount}",AmountTooLowRemoveCard:"Card minimum is\n${amount}\n Please remove card.",AmountTooHigh:"Card maximum is\n${amount}",AmountTooHighRemoveCard:"Card maximum is\n${amount}\n Please remove card.",SwUpdate:{Complete:"Software Update\nSuccessful",EncryptInit:"Initializing\nDevice",EncryptGet:"Validating\nSecurity\nKeys",EncryptDone:"Security\nKeys\nInstalled",Required:"Software Update\nRequired",OS:"Updating OS\n${progress}%",MPI:"Updating MPI\n${progress}%",Config:"Updating\nConfiguration\n${progress}%",Failed:"Software update\nfailed.",Downloading:"Downloading updates\n${count}/${total}"},Processing:{Tap:"Processing...",Contact:"${amount}\nDo not remove card.\nProcessing...",ContactPinOk:"Do not remove card.\nProcessing...\nPIN OK",PinOk:"Processing...\nPIN OK",QuickChip:"You can remove card.\nTransaction Still Processing..."},Paid:{RemoveCard:"${amount} paid.\nPlease remove card.",Successful:"${amount} paid.\nThank you!",Failed:"${amount} \nPayment failed"},Refund:{RemoveCard:"${amount} refunded.\nPlease remove card.",Successful:"${amount} refunded.\nThank you!",CardMismatch:"Card mismatch!",CardMismatchRemoveCard:"Card mismatch!\nPlease remove card.",Failed:"${amount}\n Refund failed"},Declined:{BlockedCardInserted:"Declined.\nPlease remove card.",UnableToReadNfcCard:"Unable to read card.\nInsert, swipe, or\npress OK on the app\nand tap another card.",NfcDecline:"Declined.\nRetry with\ninsert or swipe?",IncorrectPin:"Incorrect PIN\nPlease try again."},Signature:{Insert:"Signature Required.\nDo not remove card.",NonEmv:"${amount} paid\nSignature Required.",Tap:"Signature Required.",QuickChip:"Signature Required."},CompletingPayment:"Completing payment...",TransactionCancelling:"Cancelling...",RequestTip:"${amount} due\n\n Add a tip?\nX = No      ✓ = Yes",ConfirmTip:"${amount}\nincludes tip\n\nConfirm amount?\nX = No      ✓ = Yes"};

},{}],234:[function(require,module,exports){
"use strict";var InvoicingFakeServer=null;try{InvoicingFakeServer=require("./lib/InvoicingFakeServer").default}catch(e){}module.exports={setupFakeServer:function(e){if(!InvoicingFakeServer||!InvoicingFakeServer.getFakeResponses)throw new Error("Fake server module is not available.");e.addFakeResponses(InvoicingFakeServer.getFakeResponses())},BaseService:require("./lib/BaseClasses/BaseService").default,InvoicingService:require("./lib/InvoicingService").default,Currency:require("./lib/Currency").default,InvoicePayment:require("./lib/Payment").default,InvoicePaymentTerm:require("./lib/PaymentTerm").default,InvoiceRefund:require("./lib/Refund").default,InvoiceCCInfo:require("./lib/CCInfo").default,InvoiceAddress:require("./lib/Address").default,InvoiceBillingInfo:require("./lib/BillingInfo").default,InvoiceMerchantInfo:require("./lib/MerchantInfo").default,InvoiceShippingInfo:require("./lib/ShippingInfo").default,InvoiceItem:require("./lib/Item").default,InvoiceNotification:require("./lib/Notification").default,InvoicingRequester:require("./lib/Requester").default,InvoiceActions:require("./lib/InvoiceActions").default,InvoiceAttachment:require("./lib/Attachment").default,Invoice:require("./lib/Invoice").default,InvoiceListRequest:require("./lib/InvoiceListRequest").default,InvoiceListResponse:require("./lib/InvoiceListResponse").default,InvoiceSearchRequest:require("./lib/SearchRequest").default,AccountSummary:require("./lib/AccountSummary").default,AccountSummarySection:require("./lib/AccountSummarySection").default,Countries:require("./lib/Countries").default,Country:require("./lib/Country").default,InvoiceEnums:require("./lib/InvoiceEnums").default,InvoiceCustomAmount:require("./lib/CustomAmount").default,$$:require("./lib/InvoiceBigNumber").$$};

},{"./lib/AccountSummary":235,"./lib/AccountSummarySection":236,"./lib/Address":237,"./lib/Attachment":238,"./lib/BaseClasses/BaseService":239,"./lib/BillingInfo":240,"./lib/CCInfo":241,"./lib/Countries":242,"./lib/Country":243,"./lib/Currency":245,"./lib/CustomAmount":246,"./lib/Invoice":247,"./lib/InvoiceActions":248,"./lib/InvoiceBigNumber":249,"./lib/InvoiceEnums":250,"./lib/InvoiceListRequest":251,"./lib/InvoiceListResponse":252,"./lib/InvoicingFakeServer":undefined,"./lib/InvoicingService":255,"./lib/Item":257,"./lib/MerchantInfo":258,"./lib/Notification":259,"./lib/Payment":260,"./lib/PaymentTerm":261,"./lib/Refund":262,"./lib/Requester":263,"./lib/SearchRequest":264,"./lib/ShippingInfo":265}],235:[function(require,module,exports){
"use strict";function _interopRequireDefault(t){return t&&t.__esModule?t:{default:t}}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _InvoiceEnums=require("./InvoiceEnums"),_InvoiceEnums2=_interopRequireDefault(_InvoiceEnums),_InvoiceBigNumber=require("./InvoiceBigNumber"),_AccountSummarySection=require("./AccountSummarySection"),_AccountSummarySection2=_interopRequireDefault(_AccountSummarySection),AccountSummary=function(){function t(e,u){_classCallCheck(this,t),this.pastDueSection=this.sectionFromSummaries(u.summaries),this.awaitingPaymentSection=this.sectionForStatuses([_InvoiceEnums2.default.Status.SENT,_InvoiceEnums2.default.Status.PARTIALLY_PAID,_InvoiceEnums2.default.Status.UNPAID],e),this.draftSection=this.sectionForStatuses([_InvoiceEnums2.default.Status.DRAFT],e),this.paidSection=this.sectionForStatuses([_InvoiceEnums2.default.Status.MARKED_AS_PAID,_InvoiceEnums2.default.Status.PAID],e),this.outstandingAmount=this.awaitingPaymentSection.totalAmount}return t.prototype.sectionForStatuses=function(t,e){return this.sectionFromSummaries(this.summariesForStatuses(t,e))},t.prototype.summariesForStatuses=function(t,e){for(var u=[],n=e.summaries,a=Array.isArray(n),o=0,n=a?n:n[Symbol.iterator]();;){var i;if(a){if(o>=n.length)break;i=n[o++]}else{if(o=n.next(),o.done)break;i=o.value}var r=i;t.indexOf(_InvoiceEnums2.default.Status[r.status])>=0&&u.push(r)}return u},t.prototype.sectionFromSummaries=function(t){for(var e=0,u=(0,_InvoiceBigNumber.$$)("0"),n=(0,_InvoiceBigNumber.$$)("0"),a=(0,_InvoiceBigNumber.$$)("0"),o=t,i=Array.isArray(o),r=0,o=i?o:o[Symbol.iterator]();;){var s;if(i){if(r>=o.length)break;s=o[r++]}else{if(r=o.next(),r.done)break;s=r.value}var m=s;if(e+=m.count,m.amount_summary&&m.amount_summary.length){var c=m.amount_summary[0];c.total_amount&&(u=u.add((0,_InvoiceBigNumber.$$)(c.total_amount.value))),c.paid_amount&&(c.paid_amount.other&&(n=n.add((0,_InvoiceBigNumber.$$)(c.paid_amount.other.value))),c.paid_amount.paypal&&(n=n.add((0,_InvoiceBigNumber.$$)(c.paid_amount.paypal.value)))),c.refunded_amount&&(c.refunded_amount.other&&(a=a.add((0,_InvoiceBigNumber.$$)(c.refunded_amount.other.value))),c.refunded_amount.paypal&&(a=a.add((0,_InvoiceBigNumber.$$)(c.refunded_amount.paypal.value))))}}return new _AccountSummarySection2.default(e,u,n,a)},t.prototype.subtractSection=function(t,e){return new _AccountSummarySection2.default(t.totalCount-e.totalCount,t.totalAmount.minus(e.totalAmount),t.paidAmount.minus(e.paidAmount),t.refundedAmount.minus(e.refundedAmount))},t}();exports.default=AccountSummary;

},{"./AccountSummarySection":236,"./InvoiceBigNumber":249,"./InvoiceEnums":250}],236:[function(require,module,exports){
"use strict";function _classCallCheck(t,n){if(!(t instanceof n))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var AccountSummarySection=function t(n,o,a,s){_classCallCheck(this,t),this.totalCount=n,this.totalAmount=o,this.paidAmount=a,this.refundedAmount=s};exports.default=AccountSummarySection;

},{}],237:[function(require,module,exports){
"use strict";function _classCallCheck(s,t){if(!(s instanceof t))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var InvoiceAddress=function(){function s(){_classCallCheck(this,s)}return s.prototype.readFromJson=function(s){s&&(this.line1=s.line1,!this.line1&&s.addressLine1&&(this.line1=s.addressLine1),this.line2=s.line2,!this.line2&&s.addressLine2&&(this.line2=s.addressLine2),this.city=s.city,this.state=s.state,this.postalCode=s.postal_code,this.country=s.country_code,this.phone=s.phone,this.addressee=s.addressee_name,this.isPrimary=s.isPrimary)},s.prototype.toJSON=function(){var s=void 0;return this.hasAnyValue()&&(s={},s.line1=this.line1,s.line2=this.line2,s.city=this.city,s.state=this.state,s.postal_code=this.postalCode,s.country_code=this.country,s.addressee=this.addressee,s.isPrimary=this.isPrimary,s.phone=this.phone),s},s.prototype.hasAnyValue=function(){return!!(this.line1||this.line2||this.city||this.state||this.postalCode||this.country||this.addressee||this.phone)},s}();exports.default=InvoiceAddress;

},{}],238:[function(require,module,exports){
"use strict";function _classCallCheck(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var InvoiceAttachment=function(){function n(){_classCallCheck(this,n)}return n.readFromJson=function(t){var e=new n;return e.name=t.name,e.url=t.url,e},n.prototype.usableURL=function(){var n=new RegExp("sig.*&"),t=this.url.match(n)[0],e=t.split("/").join(".").split("+").join("-").replace("=&","&");return this.url.replace(t,e)},n}();exports.default=InvoiceAttachment;

},{}],239:[function(require,module,exports){
"use strict";function _classCallCheck(e,s){if(!(e instanceof s))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var BaseService=function e(){_classCallCheck(this,e)};exports.default=BaseService;

},{}],240:[function(require,module,exports){
"use strict";function _interopRequireDefault(n){return n&&n.__esModule?n:{default:n}}function _classCallCheck(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _Address=require("./Address"),_Address2=_interopRequireDefault(_Address),InvoiceBillingInfo=function(){function n(){_classCallCheck(this,n),this.address=new _Address2.default}return n.prototype.readFromJson=function(n){n&&(this.address.readFromJson(n.address),this.firstName=n.first_name,this.lastName=n.last_name,this.businessName=n.business_name,this.email=n.email,this.language=n.language,this.additionalInfo=n.additional_info,this.notificationChannel=n.notification_channel,n.phone&&(this.countryCode=n.phone.country_code,this.nationalNumber=n.phone.national_number))},n.prototype.toJSON=function(){var n={};return Object.keys(this.address).length&&(n.address=this.address),n.first_name=this.firstName,n.last_name=this.lastName,n.email=this.email,n.business_name=this.businessName,n.language=this.language,n.additional_info=this.additionalInfo,n.notification_channel=this.notificationChannel,this.nationalNumber&&(n.phone={},n.phone.country_code=this.countryCode,n.phone.national_number=this.nationalNumber),n},n.prototype.hasAnyValue=function(){return!!(this.email||this.firstName||this.lastName||this.businessName||this.address.hasAnyValue()||this.language||this.additionalInfo||this.notificationChannel||this.countryCode||this.nationalNumber)},n}();exports.default=InvoiceBillingInfo;

},{"./Address":237}],241:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,s){if(!(e instanceof s))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _Address=require("./Address"),_Address2=_interopRequireDefault(_Address),InvoiceCCInfo=function(){function e(){_classCallCheck(this,e),this.address=new _Address2.default}return e.fromJson=function(s){var a=new e;return s&&(a.address.readFromJson(s.address),a.firstName=s.first_name,a.lastName=s.last_name,a.businessName=s.business_name,a.email=s.email,a.phone=s.phone,a.fax=s.fax,a.website=s.website,a.additionalInfo=s.additional_info),a},e.prototype.toJSON=function(){var e={};return e.email=this.email,e.first_name=this.firstName,e.last_name=this.lastName,e.business_name=this.businessName,e.phone=this.phone,e.fax=this.fax,e.website=this.website,e.additional_info=this.additionalInfo,e.address=this.address,e},e}();exports.default=InvoiceCCInfo;

},{"./Address":237}],242:[function(require,module,exports){
"use strict";function _interopRequireDefault(r){return r&&r.__esModule?r:{default:r}}function _classCallCheck(r,e){if(!(r instanceof e))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _Country=require("./Country"),_Country2=_interopRequireDefault(_Country),_CountryMap=require("./CountryMap"),_CountryMap2=_interopRequireDefault(_CountryMap),Countries=function(){function r(){_classCallCheck(this,r)}return r.countries=function(){if(!r._countries){r._countries=[];for(var e=Object.keys(_CountryMap2.default),t=Array.isArray(e),n=0,e=t?e:e[Symbol.iterator]();;){var o;if(t){if(n>=e.length)break;o=e[n++]}else{if(n=e.next(),n.done)break;o=n.value}var u=o;r._countries.push(new _Country2.default(u,_CountryMap2.default[u]))}}return r._countries},r.countryForCountryCode=function(r){if(r)for(var e=r.toUpperCase(),t=this.countries(),n=Array.isArray(t),o=0,t=n?t:t[Symbol.iterator]();;){var u;if(n){if(o>=t.length)break;u=t[o++]}else{if(o=t.next(),o.done)break;u=o.value}var a=u;if(a.code===e&&a.name)return a.name}},r}();exports.default=Countries;

},{"./Country":243,"./CountryMap":244}],243:[function(require,module,exports){
"use strict";function _classCallCheck(s,t){if(!(s instanceof t))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var Country=function s(t,a){_classCallCheck(this,s),this.code=t,this.name=a};exports.default=Country;

},{}],244:[function(require,module,exports){
"use strict";exports.__esModule=!0,exports.default={AL:"Albania",DZ:"Algeria",AD:"Andorra",AO:"Angola",AI:"Anguilla",AG:"Antigua & Barbuda",AR:"Argentina",AM:"Armenia",AW:"Aruba",AU:"Australia",AT:"Austria",AZ:"Azerbaijan",BS:"Bahamas",BH:"Bahrain",BB:"Barbados",BY:"Belarus",BE:"Belgium",BZ:"Belize",BJ:"Benin",BM:"Bermuda",BT:"Bhutan",BO:"Bolivia",BA:"Bosnia & Herzegovina",BW:"Botswana",BR:"Brazil",VG:"British Virgin Islands",BN:"Brunei",BG:"Bulgaria",BF:"Burkina Faso",BI:"Burundi",KH:"Cambodia",CM:"Cameroon",CA:"Canada",CV:"Cape Verde",KY:"Cayman Islands",TD:"Chad",CL:"Chile",CN:"China",C2:"China World Wide",CO:"Colombia",KM:"Comoros",CG:"Congo - Brazzaville",CD:"Congo - Kinshasa",CK:"Cook Islands",CR:"Costa Rica",CI:"Côte d’Ivoire",HR:"Croatia",CY:"Cyprus",CZ:"Czech Republic",DK:"Denmark",DJ:"Djibouti",DM:"Dominica",DO:"Dominican Republic",EC:"Ecuador",EG:"Egypt",SV:"El Salvador",ER:"Eritrea",EE:"Estonia",ET:"Ethiopia",FK:"Falkland Islands",FO:"Faroe Islands",FJ:"Fiji",FI:"Finland",FR:"France",GF:"French Guiana",PF:"French Polynesia",GA:"Gabon",GM:"Gambia",GE:"Georgia",DE:"Germany",GI:"Gibraltar",GR:"Greece",GL:"Greenland",GD:"Grenada",GP:"Guadeloupe",GT:"Guatemala",GN:"Guinea",GW:"Guinea - Bissau",GY:"Guyana",HN:"Honduras",HK:"Hong Kong SAR China",HU:"Hungary",IS:"Iceland",IN:"India",ID:"Indonesia",IE:"Ireland",IL:"Israel",IT:"Italy",JM:"Jamaica",JP:"Japan",JO:"Jordan",KZ:"Kazakhstan",KE:"Kenya",KI:"Kiribati",KW:"Kuwait",KG:"Kyrgyzstan",LA:"Laos",LV:"Latvia",LS:"Lesotho",LI:"Liechtenstein",LT:"Lithuania",LU:"Luxembourg",MK:"Macedonia",MG:"Madagascar",MW:"Malawi",MY:"Malaysia",MV:"Maldives",ML:"Mali",MT:"Malta",MH:"Marshall Islands",MQ:"Martinique",MR:"Mauritania",MU:"Mauritius",YT:"Mayotte",MX:"Mexico",FM:"Micronesia",MD:"Moldova",MC:"Monaco",MN:"Mongolia",ME:"Montenegro",MS:"Montserrat",MA:"Morocco",MZ:"Mozambique",NA:"Namibia",NR:"Nauru",NP:"Nepal",NL:"Netherlands",AN:"Netherlands Antilles",NC:"New Caledonia",NZ:"New Zealand",NI:"Nicaragua",NE:"Niger",NG:"Nigeria",NU:"Niue",NF:"Norfolk Island",NO:"Norway",OM:"Oman",PW:"Palau",PA:"Panama",PG:"Papua New Guinea",PY:"Paraguay",PE:"Peru",PH:"Philippines",PN:"Pitcairn Islands",PL:"Poland",PT:"Portugal",QA:"Qatar",RE:"Réunion",RO:"Romania",RU:"Russia",RW:"Rwanda",WS:"Samoa",SM:"San Marino",ST:"São Tomé & Príncipe",SA:"Saudi Arabia",SN:"Senegal",RS:"Serbia",SC:"Seychelles",SL:"Sierra Leone",SG:"Singapore",SK:"Slovakia",SI:"Slovenia",SB:"Solomon Islands",SO:"Somalia",ZA:"South Africa",KR:"South Korea",ES:"Spain",LK:"Sri Lanka",SH:"St. Helena",KN:"St. Kitts & Nevis",LC:"St. Lucia",PM:"St. Pierre & Miquelon",VC:"St. Vincent & Grenadines",SR:"Suriname",SJ:"Svalbard & Jan Mayen",SZ:"Swaziland",SE:"Sweden",CH:"Switzerland",TW:"Taiwan",TJ:"Tajikistan",TZ:"Tanzania",TH:"Thailand",TG:"Togo",TO:"Tonga",TT:"Trinidad & Tobago",TN:"Tunisia",TR:"Turkey",TM:"Turkmenistan",TC:"Turks & Caicos Islands",TV:"Tuvalu",UG:"Uganda",UA:"Ukraine",AE:"United Arab Emirates",GB:"United Kingdom",US:"United States",UY:"Uruguay",VU:"Vanuatu",VA:"Vatican City",VE:"Venezuela",VN:"Vietnam",WF:"Wallis & Futuna",YE:"Yemen",ZM:"Zambia",ZW:"Zimbabwe"};

},{}],245:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _InvoiceBigNumber=require("./InvoiceBigNumber"),_InvoiceBigNumber2=_interopRequireDefault(_InvoiceBigNumber),currencies=void 0,Currency=function(){function e(r){_classCallCheck(this,e),this.decimals=r.decimals||2,this.symbol=r.symbol||"$",this.roundMode=r.roundMode||_InvoiceBigNumber2.default.ROUND_HALF_UP,this.iso4217=r.iso4217}return e.getCurrency=function(e){return currencies[e]},e.setCurrency=function(e,r){currencies[e]=r},e.prototype.round=function(e){return(0,_InvoiceBigNumber.$$)(e).round(this.decimals,this.roundMode)},e.prototype.toCents=function(e){return(0,_InvoiceBigNumber.$$)(10).pow(this.decimals).times(e)},e.prototype.format=function(e){return this.symbol+(0,_InvoiceBigNumber.$$)(e).toFormat(this.decimals,this.roundMode)},e.round=function(r,n){return e.getCurrency(r).round(n)},e.toCents=function(r,n){return e.getCurrency(r).toCents(n)},e.format=function(r,n){return e.getCurrency(r).format(n)},e}();exports.default=Currency,currencies={AUD:new Currency({iso4217:36}),GBP:new Currency({symbol:"£",iso4217:826}),USD:new Currency({iso4217:840}),HKD:new Currency({iso4217:344,decimals:1}),EUR:new Currency({symbol:"€",iso4217:978}),CAD:new Currency({iso4217:124})};

},{"./InvoiceBigNumber":249}],246:[function(require,module,exports){
"use strict";function _classCallCheck(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _InvoiceBigNumber=require("./InvoiceBigNumber"),InvoiceCustomAmount=function(){function n(){_classCallCheck(this,n)}return n.fromJSON=function(e){var t=new n;return e.label&&(t.label=e.label),e.amount&&(t.amount=(0,_InvoiceBigNumber.$$)(e.amount.value)),t},n.prototype.toJSON=function(n){var e={};return this.amount&&(e.amount={currency:n,value:this.amount}),e.label=this.label,e},n}();exports.default=InvoiceCustomAmount;

},{"./InvoiceBigNumber":249}],247:[function(require,module,exports){
"use strict";function _interopRequireDefault(t){return t&&t.__esModule?t:{default:t}}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function _inherits(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}function statusFromServer(t){return t?_InvoiceEnums2.default.Status[t]?_InvoiceEnums2.default.Status[t]:(Log.warn("Received unknown server invoice status "+t),_InvoiceEnums2.default.Status.DRAFT):_InvoiceEnums2.default.Status.NEW}exports.__esModule=!0;var _createClass=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),_events=require("events"),_deepEqual=require("deep-equal"),_deepEqual2=_interopRequireDefault(_deepEqual),_manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_InvoiceBigNumber=require("./InvoiceBigNumber"),_InvoiceBigNumber2=_interopRequireDefault(_InvoiceBigNumber),_Currency=require("./Currency"),_Currency2=_interopRequireDefault(_Currency),_CustomAmount=require("./CustomAmount"),_CustomAmount2=_interopRequireDefault(_CustomAmount),_Item=require("./Item"),_Item2=_interopRequireDefault(_Item),_MerchantInfo=require("./MerchantInfo"),_MerchantInfo2=_interopRequireDefault(_MerchantInfo),_BillingInfo=require("./BillingInfo"),_BillingInfo2=_interopRequireDefault(_BillingInfo),_assert=require("assert"),_assert2=_interopRequireDefault(_assert),_manticoreUtil=require("manticore-util"),_InvoicingUtil=require("./InvoicingUtil"),_InvoicingUtil2=_interopRequireDefault(_InvoicingUtil),_Requester=require("./Requester"),_ShippingInfo=require("./ShippingInfo"),_ShippingInfo2=_interopRequireDefault(_ShippingInfo),_totalCalculator=require("./totalCalculator"),_totalCalculator2=_interopRequireDefault(_totalCalculator),_CCInfo=require("./CCInfo"),_CCInfo2=_interopRequireDefault(_CCInfo),_Payment=require("./Payment"),_Payment2=_interopRequireDefault(_Payment),_PaymentTerm=require("./PaymentTerm"),_PaymentTerm2=_interopRequireDefault(_PaymentTerm),_Refund=require("./Refund"),_Refund2=_interopRequireDefault(_Refund),_Attachment=require("./Attachment"),_Attachment2=_interopRequireDefault(_Attachment),_InvoiceEnums=require("./InvoiceEnums"),_InvoiceEnums2=_interopRequireDefault(_InvoiceEnums),_InvoiceMetaData=require("./InvoiceMetaData"),_InvoiceMetaData2=_interopRequireDefault(_InvoiceMetaData),Log=(0,_manticoreLog2.default)("invoicing"),Invoice=function(t){function e(n){_classCallCheck(this,e);var i=_possibleConstructorReturn(this,t.call(this));i.hasDetails=!0;var a=n;if(!n){if(!e.DefaultCurrency)throw new Error("Creating an invoice without a specified currency requires Invoice.DefaultCurrency to be set.");a=e.DefaultCurrency}if(!_Currency2.default.getCurrency(a))throw new Error("Unsupported currency: "+a);return i.currency=a,i.merchantInfo=new _MerchantInfo2.default,i.billingInfo=new _BillingInfo2.default,i.shippingInfo=new _ShippingInfo2.default,i.taxInclusive=!1,i.taxCalculatedAfterDiscount=!1,i.items=[],i.allowPartialPayment=!1,i.CCInfo=[],i.paymentTerms=new _PaymentTerm2.default,i.status=_InvoiceEnums2.default.Status.NEW,e.DefaultMerchant&&(i.merchantInfo.email=e.DefaultMerchant.emailAddress,i.merchantInfo.businessName=e.DefaultMerchant.businessName,i.merchantInfo.address=e.DefaultMerchant.address),i}return _inherits(e,t),e.withInvoice=function(t){(0,_assert2.default)(t.hasDetails,"Can't use an invoice as a template if the details aren't loaded.");var n=new e(t.currency);return n.readJSON((0,_manticoreUtil.deepToJSON)(t),!0),n.status=_InvoiceEnums2.default.Status.NEW,n.reference=void 0,n.number=void 0,n.payPalId=void 0,n.metadata=void 0,n.paymentTerms=new _PaymentTerm2.default,n},e.prototype.copy=function(){var t=new e(this.currency);return t.readJSON((0,_manticoreUtil.deepToJSON)(this.toFullJSON()),!0),t.wasDeleted=this.wasDeleted,t},e.prototype.setCleanFromServer=function(){this._lastKnownServerValue=(0,_manticoreUtil.deepToJSON)(this)},e.prototype.addItem=function(t,e,n,i,a){var r=this.findItem(i,a);if(r)return r.quantity=r.quantity.plus(e),this._totalMayHaveChanged("itemUpdated"),r;var o=new _Item2.default(t,e,n,i,a||null);return this.setupItemListeners(o),this.items.push(o),this._totalMayHaveChanged("itemAdded"),o},e.prototype.setupItemListeners=function(t){var e=this;t.on("amountChanged",function(){return e._totalMayHaveChanged("itemAmountChanged")}),t.on("taxRateChanged",function(){return e._totalMayHaveChanged("itemTaxRateChanged")}),t.on("discountAmountChanged",function(){return e._totalMayHaveChanged("itemDiscountAmountChanged")}),t.on("discountPercentageChanged",function(){return e._totalMayHaveChanged("itemDiscountPercentageChanged")})},e.prototype.removeAllItems=function(){this.items=[],this._totalMayHaveChanged("allItemsRemoved")},e.prototype.removeItem=function(t){if(!t)return!1;var e=this.items.indexOf(t);return!(e<0)&&(this.items.splice(e,1),this._totalMayHaveChanged("itemRemoved"),!0)},e.prototype.findItem=function(t,e){if(!t)return null;var n=e||null,i=t;"string"!=typeof t&&(n=t.detailId,i=t.itemId);for(var a=this.items,r=Array.isArray(a),o=0,a=r?a:a[Symbol.iterator]();;){var s;if(r){if(o>=a.length)break;s=a[o++]}else{if(o=a.next(),o.done)break;s=o.value}var u=s;if(u.itemId===i&&u.detailId===n)return u}return null},e.prototype.getItem=function(t){return this.items[t]},e.prototype.ensureTotals=function(){this._cleanTotals||((0,_totalCalculator2.default)(this),this._cleanTotals=!0)},e.prototype._totalMayHaveChanged=function(t,n){var i=this.listeners(e.Event.TotalChanged);if(i&&i.length)if(this._total){var a=new _InvoiceBigNumber2.default(this._total);(0,_totalCalculator2.default)(this),a.equals(this._total)||this.emit(e.Event.TotalChanged,t,n)}else(0,_totalCalculator2.default)(this),this.emit(e.Event.TotalChanged,t,n);else this._cleanTotals=!1},e.prototype.getDetails=function(t){var e=this;(0,_assert2.default)(this.payPalId,"Can't get details of an invoice without an id."),(0,_assert2.default)(!this.wasDeleted,"Can't get details on an invoice that was deleted."),(0,_Requester.request)({method:"GET",op:"invoices/"+this.payPalId},function(n,i){n||(e.readJSON(i.body,!0),e.setCleanFromServer()),t&&t(n)})},e.prototype.save=function(t){var e=this;if((0,_assert2.default)(this.hasDetails,"Can't save an invoice without details"),(0,_assert2.default)(!this.wasDeleted,"Can't save an invoice that was deleted."),!this.isDirtyFromServer)return void(t&&t());(0,_Requester.request)({method:this.payPalId?"PUT":"POST",op:this.payPalId?"invoices/"+this.payPalId:"invoices",body:JSON.stringify(this)},function(n,i){if(!n&&i.body){var a=i.body;e.payPalId=e.payPalId||a.id,e.number=e.number||a.number,e.invoiceDate=_InvoicingUtil2.default.parseServerDateString(a.invoice_date),e.status=statusFromServer(a.status),e.setCleanFromServer()}t&&t(n)})},e.prototype.send=function(t,e){var n=this;(0,_assert2.default)(this.payPalId,"Can't send an invoice without an id."),(0,_assert2.default)(!this.wasDeleted,"Can't send an invoice that was deleted."),(0,_Requester.request)({method:"POST",op:"invoices/"+this.payPalId+"/send?notify_merchant="+!!t},function(t,i){t||(n.status=_InvoiceEnums2.default.Status.SENT),e&&e(t,i)})},e.prototype.deleteFromServer=function(t){var e=this;(0,_assert2.default)(this.payPalId,"Can't delete an invoice without an id."),(0,_assert2.default)(!this.wasDeleted,"Can't delete an invoice that was deleted."),(0,_Requester.request)({method:"DELETE",op:"invoices/"+this.payPalId},function(n,i){n||(e.status=_InvoiceEnums2.default.Status.NEW,e.wasDeleted=!0),t&&t(n,i)})},e.prototype.remind=function(t,e){(0,_assert2.default)(this.payPalId,"Can't remind an invoice without an id."),(0,_assert2.default)(!1!==t.send_to_payer,"Can't send a reminder that doesn't go to the payer."),(0,_assert2.default)(!this.wasDeleted,"Can't remind an invoice that was deleted."),(0,_Requester.request)({method:"POST",op:"invoices/"+this.payPalId+"/remind",body:JSON.stringify(t)},e)},e.prototype.cancel=function(t,e){var n=this;(0,_assert2.default)(this.payPalId,"Can't cancel an invoice without an id."),(0,_assert2.default)(!this.wasDeleted,"Can't cancel an invoice that was deleted."),(0,_Requester.request)({method:"POST",op:"invoices/"+this.payPalId+"/cancel",body:JSON.stringify(t)},function(t,i){t||(n.status=_InvoiceEnums2.default.Status.CANCELLED),e&&e(t,i)})},e.prototype.recordPayment=function(t,e){var n=this;(0,_assert2.default)(this.payPalId,"Can't record payment on an invoice without an id."),(0,_assert2.default)(t,"Can't record payment on an invoice without paymentInfo."),(0,_assert2.default)(!this.wasDeleted,"Can't record payment on an invoice that was deleted."),t.validate(),(0,_Requester.request)({method:"POST",op:"invoices/"+this.payPalId+"/record-payment",body:JSON.stringify(t)},function(i,a){i||(t.type===_InvoiceEnums2.default.PaymentType.EXTERNAL?n.status=_InvoiceEnums2.default.Status.MARKED_AS_PAID:t.type===_InvoiceEnums2.default.PaymentType.PAYPAL&&(n.status=_InvoiceEnums2.default.Status.PAID)),e&&e(i,a)})},e.prototype.recordRefund=function(t,e){var n=this;(0,_assert2.default)(this.payPalId,"Can't record refund on an invoice without an id."),(0,_assert2.default)(!this.wasDeleted,"Can't record refund on an invoice that was deleted."),(0,_assert2.default)(this.status===_InvoiceEnums2.default.Status.MARKED_AS_PAID||this.status===_InvoiceEnums2.default.Status.PAID||this.status===_InvoiceEnums2.default.Status.PARTIALLY_REFUNDED,"Can't record refund on an invoice that hasn't been paid yet."),(0,_assert2.default)(t,"Can't record refund on an invoice without refundInfo."),(0,_Requester.request)({method:"POST",op:"invoices/"+this.payPalId+"/record-refund",body:JSON.stringify(t)},function(i,a){i||(t.type===_InvoiceEnums2.default.PaymentType.EXTERNAL?n.status=_InvoiceEnums2.default.Status.MARKED_AS_REFUNDED:t.type===_InvoiceEnums2.default.PaymentType.PAYPAL&&(n.status=_InvoiceEnums2.default.Status.REFUNDED)),e&&e(i,a)})},e.prototype.toJSON=function(){var t={};return t.note=this.note,t.number=this.number,t.invoice_date=_InvoicingUtil2.default.toServerDateString(this.invoiceDate,!1),t.merchant_info=this.merchantInfo,t.shipping_info=this.shippingInfo,t.billing_info=[this.billingInfo],t.tax_inclusive=this.taxInclusive,t.tax_calculated_after_discount=this.taxCalculatedAfterDiscount,t.allow_partial_payment=this.allowPartialPayment,t.uri=this.uri,t.logo_url=this.logoURL,t.additional_data=this.additionalData,t.attachments=this.attachments,t.template_id=this.templateID,this._CCInfoToJson(t),this.termsAndConditions&&(t.terms=this.termsAndConditions.substring(0,3999)),this.merchantMemo&&(t.merchant_memo=this.merchantMemo.substring(0,149)),this._shippingToJson(t),this.minimumAmountDue&&(t.minimum_amount_due={currency:this.currency,value:this.minimumAmountDue}),t.id=this.payPalId,this.status&&(t.status=_InvoiceEnums2.default.Status.toString[this.status]),t.reference=this.reference,this.gratuityAmount&&(t.gratuity={currency:this.currency,value:this.gratuityAmount}),(this.discountAmount||this.discountPercentage)&&(t.discount=this.discountObject()),(this.paymentTerms.dueDate||this.paymentTerms.paymentTerms)&&(t.payment_term=this.paymentTerms.toJSONHack(t.invoice_date)),this._itemsToJson(t),this.custom&&(t.custom=this.custom.toJSON(this.currency)),t},e.prototype.toFullJSON=function(){var t=this.toJSON();return t.payments=this.payments,t.refunds=this.refunds,this.paidAmount&&(t.paid_amount={},this.paidAmountIsPayPal?t.paid_amount.paypal={currency:this.currency,value:this.paidAmount}:t.paid_amount.other={currency:this.currency,value:this.paidAmount}),this.refundedAmount&&(t.refunded_amount={},this.refundedAmountIsPayPal?t.refunded_amount.paypal={currency:this.currency,value:this.refundedAmount}:t.refunded_amount.other={currency:this.currency,value:this.refundedAmount}),t.payment_term=this.paymentTerms,t},e.prototype._shippingToJson=function(t){this.shippingAmount&&(t.shipping_cost={},t.shipping_cost.amount={currency:this.currency,value:this.shippingAmount},this.shippingTaxRate&&!this.shippingTaxRate.isZero()&&(t.shipping_cost.tax={name:this.shippingTaxName||"Shipping Tax",percent:this.shippingTaxRate}))},e.prototype._itemsToJson=function(t){if(this.items&&this.items.length){t.items=[];for(var e=this.items,n=Array.isArray(e),i=0,e=n?e:e[Symbol.iterator]();;){var a;if(n){if(i>=e.length)break;a=e[i++]}else{if(i=e.next(),i.done)break;a=i.value}var r=a;t.items.push(r.toJSON(this.currency))}}},e.prototype._CCInfoToJson=function(t){if(this.CCInfo&&this.CCInfo.length){t.cc_info=[];for(var e=this.CCInfo,n=Array.isArray(e),i=0,e=n?e:e[Symbol.iterator]();;){var a;if(n){if(i>=e.length)break;a=e[i++]}else{if(i=e.next(),i.done)break;a=i.value}var r=a;t.cc_info.push(r.toJSON())}}},e.prototype.discountObject=function(){var t={};return this.discountAmount?(t.amount={},t.amount.value=this.discountAmount,t.amount.currency=this.currency):this.discountPercentage&&(t.percent=this.discountPercentage),t},e.prototype.readJSON=function(t,e){if(this.invoiceDate=_InvoicingUtil2.default.parseServerDateString(t.invoice_date),this.status=statusFromServer(t.status),this.reference=t.reference,this.number=t.number,this.payPalId=t.id,this.note=t.note,this.merchantInfo.readFromJson(t.merchant_info),this.allowPartialPayment=t.allow_partial_payment,this.uri=t.uri,this.logoURL=t.logo_url,this.additionalData=t.additional_data,this.templateID=t.template_id,this.hasDetails=e,t.metadata&&(this.metadata=_InvoiceMetaData2.default.fromJSON(t.metadata)),t.custom&&(this.custom=_CustomAmount2.default.fromJSON(t.custom)),t.payments){this.payments=[];for(var n=t.payments,i=Array.isArray(n),a=0,n=i?n:n[Symbol.iterator]();;){var r;if(i){if(a>=n.length)break;r=n[a++]}else{if(a=n.next(),a.done)break;r=a.value}var o=r;this.payments.push(_Payment2.default.readFromJson(o))}}if(t.refunds){this.refunds=[];for(var s=t.refunds,u=Array.isArray(s),l=0,s=u?s:s[Symbol.iterator]();;){var c;if(u){if(l>=s.length)break;c=s[l++]}else{if(l=s.next(),l.done)break;c=l.value}var h=c;this.refunds.push(_Refund2.default.readFromJson(h))}}if(t.attachments){this.attachments=[];for(var d=t.attachments,m=Array.isArray(d),f=0,d=m?d:d[Symbol.iterator]();;){var _;if(m){if(f>=d.length)break;_=d[f++]}else{if(f=d.next(),f.done)break;_=f.value}var p=_;this.attachments.push(_Attachment2.default.readFromJson(p))}}if(t.terms&&(this.termsAndConditions=t.terms),t.merchant_memo&&(this.merchantMemo=t.merchant_memo),t.shipping_cost&&(this.shippingAmount=(0,_InvoiceBigNumber.$$)(t.shipping_cost.amount.value),t.shipping_cost.tax&&(this.shippingTaxRate=(0,_InvoiceBigNumber.$$)(t.shipping_cost.tax.percent),t.shipping_cost.tax.name&&(this.shippingTaxName=t.shipping_cost.tax.name))),t.minimum_amount_due&&(this.minimumAmountDue=(0,_InvoiceBigNumber.$$)(t.minimum_amount_due.value)),t.refunded_amount&&(t.refunded_amount.paypal?(this.refundedAmount=(0,_InvoiceBigNumber.$$)(t.refunded_amount.paypal.value),this.refundedAmountIsPayPal=!0):t.refunded_amount.other&&(this.refundedAmount=(0,_InvoiceBigNumber.$$)(t.refunded_amount.other.value),this.refundedAmountIsPayPal=!1)),t.paid_amount&&(t.paid_amount.paypal?(this.paidAmount=(0,_InvoiceBigNumber.$$)(t.paid_amount.paypal.value),this.paidAmountIsPayPal=!0):t.paid_amount.other&&(this.paidAmount=(0,_InvoiceBigNumber.$$)(t.paid_amount.other.value),this.paidAmountIsPayPal=!1)),t.billing_info&&t.billing_info.length&&this.billingInfo.readFromJson(t.billing_info[0]),t.shipping_info&&this.shippingInfo.readFromJson(t.shipping_info),t.cc_info){this.CCInfo=[];for(var y=t.cc_info,v=Array.isArray(y),g=0,y=v?y:y[Symbol.iterator]();;){var I;if(v){if(g>=y.length)break;I=y[g++]}else{if(g=y.next(),g.done)break;I=g.value}var C=I,A=_CCInfo2.default.fromJson(C);this.CCInfo.push(A)}}if(this.items=[],t.items)for(var b=t.items,D=Array.isArray(b),P=0,b=D?b:b[Symbol.iterator]();;){var S;if(D){if(P>=b.length)break;S=b[P++]}else{if(P=b.next(),P.done)break;S=P.value}var w=S,T=_Item2.default.fromJson(w);this.setupItemListeners(T),this.items.push(T)}else this._total=t.total_amount?(0,_InvoiceBigNumber.$$)(t.total_amount.value):(0,_InvoiceBigNumber.$$)("0");if(t.gratuity&&(this.gratuityAmount=(0,_InvoiceBigNumber.$$)(t.gratuity.value)),this.paymentTerms=_PaymentTerm2.default.fromJson(t.payment_term),t.hasOwnProperty("tax_inclusive")&&(this.taxInclusive=t.tax_inclusive),t.hasOwnProperty("tax_calculated_after_discount")&&(this.taxCalculatedAfterDiscount=t.tax_calculated_after_discount),t.hasOwnProperty("discount")){var q=t.discount;q.hasOwnProperty("percent")?this.discountPercentage=(0,_InvoiceBigNumber.$$)(q.percent):t.discount.hasOwnProperty("amount")&&(this.discountAmount=(0,_InvoiceBigNumber.$$)(t.discount.amount.value))}},e.fromJson=function(t,n){if(!t.total_amount)throw new Error("Invoice JSON has no total_amount.");var i=new e(t.total_amount.currency);return i.readJSON(t,n),i},_createClass(e,[{key:"isDirtyFromServer",get:function(){return!this._lastKnownServerValue||!(0,_deepEqual2.default)(this._lastKnownServerValue,(0,_manticoreUtil.deepToJSON)(this))}},{key:"invoiceDate",set:function(t){this._invoiceDate=t},get:function(){return _InvoicingUtil2.default.getDateValue(this._invoiceDate)}},{key:"itemCount",get:function(){return this.items.length}},{key:"gratuityAmount",get:function(){return this._gratuityAmount},set:function(t){this._gratuityAmount=(0,_InvoiceBigNumber.$$)(t),this._totalMayHaveChanged("field","gratuityAmount")}},{key:"discountAmount",get:function(){return this._discountAmount},set:function(t){this._discountAmount=(0,_InvoiceBigNumber.$$)(t),this._totalMayHaveChanged("field","discountAmount")}},{key:"discountPercentage",get:function(){return this._discountPercentage},set:function(t){this._discountPercentage=(0,_InvoiceBigNumber.$$)(t),this._totalMayHaveChanged("field","discountPercentage")}},{key:"shippingAmount",get:function(){return this._shippingAmount},set:function(t){this._shippingAmount=(0,_InvoiceBigNumber.$$)(t),this._totalMayHaveChanged("field","shippingAmount")}},{key:"shippingTaxRate",get:function(){return this._shippingTaxRate},set:function(t){this._shippingTaxRate=(0,_InvoiceBigNumber.$$)(t),this._totalMayHaveChanged("field","shippingTaxRate")}},{key:"total",get:function(){return this.hasDetails&&this.ensureTotals(),this._total}},{key:"subTotal",get:function(){return(0,_assert2.default)(this.hasDetails,"Can't calculate the subtotal without details"),this.ensureTotals(),this._subTotal}},{key:"itemTax",get:function(){return(0,_assert2.default)(this.hasDetails,"Can't calculate the item tax without details"),this.ensureTotals(),this._itemTax}},{key:"totalDiscount",get:function(){return(0,_assert2.default)(this.hasDetails,"Can't calculate the total discount without details"),this.ensureTotals(),this._totalDiscount}},{key:"taxBreakdown",get:function(){return(0,_assert2.default)(this.hasDetails,"Can't calculate the tax breakdown without details"),this.ensureTotals(),this._taxBreakdown}}]),e}(_events.EventEmitter);exports.default=Invoice,Invoice.Event={TotalChanged:"totalChanged"};

},{"./Attachment":238,"./BillingInfo":240,"./CCInfo":241,"./Currency":245,"./CustomAmount":246,"./InvoiceBigNumber":249,"./InvoiceEnums":250,"./InvoiceMetaData":253,"./InvoicingUtil":256,"./Item":257,"./MerchantInfo":258,"./Payment":260,"./PaymentTerm":261,"./Refund":262,"./Requester":263,"./ShippingInfo":265,"./totalCalculator":268,"assert":91,"deep-equal":197,"events":200,"manticore-log":208,"manticore-util":212}],248:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _InvoiceEnums=require("./InvoiceEnums"),_InvoiceEnums2=_interopRequireDefault(_InvoiceEnums),InvoiceActions=function(){function e(){_classCallCheck(this,e)}return e.availableActions=function(e){var t=_InvoiceEnums2.default.Action;switch(e.status){case _InvoiceEnums2.default.Status.NEW:throw new Error("Actions are undefined for NEW invoices.");case _InvoiceEnums2.default.Status.DRAFT:return[t.Send,t.Edit,t.Delete,t.RecordPayment,t.Copy];case _InvoiceEnums2.default.Status.SENT:case _InvoiceEnums2.default.Status.PARTIALLY_PAID:return[t.Remind,t.RecordPayment,t.Call,t.Edit,t.Cancel,t.Copy];case _InvoiceEnums2.default.Status.PAID:case _InvoiceEnums2.default.Status.MARKED_AS_PAID:case _InvoiceEnums2.default.Status.PARTIALLY_REFUNDED:return 0===e.total?[t.Call,t.Copy]:[t.RecordRefund,t.Call,t.Copy];case _InvoiceEnums2.default.Status.CANCELLED:case _InvoiceEnums2.default.Status.REFUNDED:case _InvoiceEnums2.default.Status.MARKED_AS_REFUNDED:return[t.Call,t.Copy];case _InvoiceEnums2.default.Status.UNPAID:return[t.RecordPayment,t.Edit,t.Cancel,t.Copy];default:throw new Error("Unknown invoice status")}},e}();exports.default=InvoiceActions;

},{"./InvoiceEnums":250}],249:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}function $$(e){return InvoiceBigNumber.$$(e)}exports.__esModule=!0,exports.$$=$$;var _bignumber=require("bignumber.js"),_bignumber2=_interopRequireDefault(_bignumber),InvoiceBigNumber=function(e){function t(){return _classCallCheck(this,t),_possibleConstructorReturn(this,e.apply(this,arguments))}return _inherits(t,e),t.$$=function(e){return e?new t(e):null},t.prototype.toJSON=function(){return this.toFixed(2)},t}(_bignumber2.default);exports.default=InvoiceBigNumber;

},{"bignumber.js":95}],250:[function(require,module,exports){
"use strict";function _classCallCheck(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _manticoreUtil=require("manticore-util"),Invoice=function e(){_classCallCheck(this,e)};exports.default=Invoice,Invoice.Status={NEW:0,DRAFT:1,SENT:2,PAID:3,MARKED_AS_PAID:4,CANCELLED:5,REFUNDED:6,PARTIALLY_REFUNDED:7,MARKED_AS_REFUNDED:8,PARTIALLY_PAID:9,UNPAID:10},Invoice.Status.toString=(0,_manticoreUtil.reverseKeysAndValues)(Invoice.Status),Invoice.PaymentType={NONE:0,EXTERNAL:1,PAYPAL:2},Invoice.PaymentType.toString=(0,_manticoreUtil.reverseKeysAndValues)(Invoice.PaymentType),Invoice.PaymentMethod={NONE:0,BANK_TRANSFER:1,CASH:2,CHECK:3,CREDIT_CARD:4,DEBIT_CARD:5,PAYPAL:6,WIRE_TRANSFER:7,OTHER:8},Invoice.PaymentMethod.toString=(0,_manticoreUtil.reverseKeysAndValues)(Invoice.PaymentMethod),Invoice.Action={None:0,Delete:1,Send:2,Remind:3,RecordPayment:4,RecordRefund:5,Copy:6,Edit:7,Call:8,Cancel:9,More:10};

},{"manticore-util":212}],251:[function(require,module,exports){
"use strict";function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var InvoiceListRequest=function t(){_classCallCheck(this,t),this.startIndex=0,this.pageSize=20,this.totalCountRequired=!0};exports.default=InvoiceListRequest;

},{}],252:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _Invoice=require("./Invoice"),_Invoice2=_interopRequireDefault(_Invoice),InvoiceListResponse=function(){function e(){_classCallCheck(this,e)}return e.fromJSON=function(n){var o=new e;o.invoices=[];for(var t=n.invoices,r=Array.isArray(t),i=0,t=r?t:t[Symbol.iterator]();;){var a;if(r){if(i>=t.length)break;a=t[i++]}else{if(i=t.next(),i.done)break;a=i.value}var s=a,c=_Invoice2.default.fromJson(s,!1);c.setCleanFromServer(),o.invoices.push(c)}return o.totalCount=n.total_count?n.total_count:0,o},e}();exports.default=InvoiceListResponse;

},{"./Invoice":247}],253:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _createClass=function(){function e(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,a,n){return a&&e(t.prototype,a),n&&e(t,n),t}}(),_InvoicingUtil=require("./InvoicingUtil"),_InvoicingUtil2=_interopRequireDefault(_InvoicingUtil),InvoiceMetaData=function(){function e(){_classCallCheck(this,e)}return e.fromJSON=function(t){var a=new e;return a.createdBy=t.created_by,a.cancelledBy=t.cancelled_by,a.lastUpdatedBy=t.last_updated_by,a.lastSentBy=t.last_sent_by,a.payerViewURL=t.payer_view_url,t.created_date&&(a.createdDate=_InvoicingUtil2.default.parseServerDateString(t.created_date)),t.cancelled_date&&(a.cancelledDate=_InvoicingUtil2.default.parseServerDateString(t.cancelled_date)),t.last_updated_date&&(a.lastUpdatedDate=_InvoicingUtil2.default.parseServerDateString(t.last_updated_date)),t.first_sent_date&&(a.firstSentDate=_InvoicingUtil2.default.parseServerDateString(t.first_sent_date)),t.last_sent_date&&(a.lastSentDate=_InvoicingUtil2.default.parseServerDateString(t.last_sent_date)),a},_createClass(e,[{key:"createdDate",set:function(e){this._createdDate=e},get:function(){return _InvoicingUtil2.default.getDateValue(this._createdDate)}},{key:"cancelledDate",set:function(e){this._cancelledDate=e},get:function(){return _InvoicingUtil2.default.getDateValue(this._cancelledDate)}},{key:"firstSentDate",set:function(e){this._firstSentDate=e},get:function(){return _InvoicingUtil2.default.getDateValue(this._firstSentDate)}},{key:"lastSentDate",set:function(e){this._lastSentDate=e},get:function(){return _InvoicingUtil2.default.getDateValue(this._lastSentDate)}}]),e}();exports.default=InvoiceMetaData;

},{"./InvoicingUtil":256}],254:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _Template=require("./Template"),_Template2=_interopRequireDefault(_Template),InvoiceTemplatesResponse=function(){function e(){_classCallCheck(this,e),this.templates=[]}return e.fromJSON=function(t){var a=void 0;if(t.templates){a=new e;for(var r=t.templates,l=Array.isArray(r),n=0,r=l?r:r[Symbol.iterator]();;){var o;if(l){if(n>=r.length)break;o=r[n++]}else{if(n=r.next(),n.done)break;o=n.value}var s=o;void 0===s.template_data.currencyCode&&(s.template_data.currencyCode="USD");var i=_Template2.default.fromJSON(s);void 0!==i&&(a.templates.push(i),!0===i.isDefault&&(a.defaultTemplate=i))}}return a},e}();exports.default=InvoiceTemplatesResponse;

},{"./Template":266}],255:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}exports.__esModule=!0;var _BaseService2=require("./BaseClasses/BaseService"),_BaseService3=_interopRequireDefault(_BaseService2),_Requester=require("./Requester"),_InvoiceListResponse=require("./InvoiceListResponse"),_InvoiceListResponse2=_interopRequireDefault(_InvoiceListResponse),_InvoiceTemplatesResponse=require("./InvoiceTemplatesResponse"),_InvoiceTemplatesResponse2=_interopRequireDefault(_InvoiceTemplatesResponse),_AccountSummary=require("./AccountSummary"),_AccountSummary2=_interopRequireDefault(_AccountSummary),InvoicingService=function(e){function t(){return _classCallCheck(this,t),_possibleConstructorReturn(this,e.apply(this,arguments))}return _inherits(t,e),t.getInvoices=function(e,t){var o=e.startIndex,n=e.pageSize,r=e.totalCountRequired;(0,_Requester.request)({method:"GET",op:"invoices?page="+o+"&page_size="+n+"&total_count_required="+r},function(o,n){if(o)t(o);else{var r=_InvoiceListResponse2.default.fromJSON(n.body);r.hasMore=e.startIndex+e.pageSize<r.totalCount,t(o,r)}})},t.searchInvoices=function(e,t){(0,_Requester.request)({method:"POST",op:"search",body:JSON.stringify(e)},function(o,n){if(o)t(o);else{var r=_InvoiceListResponse2.default.fromJSON(n.body);r.hasMore=e.startIndex+e.pageSize<r.totalCount,t(o,r)}})},t.getNextInvoiceNumber=function(e){(0,_Requester.request)({method:"POST",op:"invoices/next-invoice-number"},function(t,o){if(t)e(t);else{var n=o.body.number;e(t,n)}})},t.getAccountSummary=function(e){var t=this,o=void 0,n=void 0,r=void 0,i=void 0,s=function(){(o||r)&&(n||i)&&t.continueGetAccountSummary(o,r,n,i,e)};(0,_Requester.request)({method:"GET",op:"summaries?overdue=false"},function(e,t){o=e,r=t,s()}),(0,_Requester.request)({method:"GET",op:"summaries?overdue=true"},function(e,t){n=e,i=t,s()})},t.continueGetAccountSummary=function(e,t,o,n,r){var i=e||o;i&&r(i),r(i,new _AccountSummary2.default(t.body,n.body))},t.getTemplates=function(e){(0,_Requester.request)({method:"GET",op:"templates"},function(t,o){t?e(t):e(t,_InvoiceTemplatesResponse2.default.fromJSON(o.body))})},t}(_BaseService3.default);exports.default=InvoicingService;

},{"./AccountSummary":235,"./BaseClasses/BaseService":239,"./InvoiceListResponse":252,"./InvoiceTemplatesResponse":254,"./Requester":263}],256:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _moment=require("moment"),_moment2=_interopRequireDefault(_moment),InvoicingUtils=function(){function e(){_classCallCheck(this,e)}return e.parseServerDateString=function(e){if(!e)return e;var t=e.replace(/(\d{4}-\d{2}-\d{2}) (PST|PDT)/,"$1 23:59:59 $2");return t=t.replace("PST","-0800").replace("PDT","-0700"),_moment2.default.parseZone(t,"YYYY-MM-DD hh:mm:ss Z")},e.toServerDateString=function(e,t){if(!e)return e;var r=(0,_moment2.default)(e);return t?(r.utcOffset(-480),r.format("YYYY-MM-DD HH:mm:ss")+" PST"):(r.utcOffset()>-480&&r.subtract(1,"days"),r.format("YYYY-MM-DD")+" PST")},e.getDateValue=function(e){return e&&e.constructor===(0,_moment2.default)().constructor?e.toDate():e},e}();exports.default=InvoicingUtils;

},{"moment":278}],257:[function(require,module,exports){
"use strict";function _interopRequireDefault(t){return t&&t.__esModule?t:{default:t}}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function _inherits(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}exports.__esModule=!0;var _createClass=function(){function t(t,e){for(var i=0;i<e.length;i++){var n=e[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}return function(e,i,n){return i&&t(e.prototype,i),n&&t(e,n),e}}(),_InvoiceBigNumber=require("./InvoiceBigNumber"),_events=require("events"),_Currency=require("./Currency"),_Currency2=_interopRequireDefault(_Currency),_manticoreUtil=require("manticore-util"),_InvoicingUtil=require("./InvoicingUtil"),_InvoicingUtil2=_interopRequireDefault(_InvoicingUtil),_deepEqual=require("deep-equal"),_deepEqual2=_interopRequireDefault(_deepEqual),staticIdAllocator=1,ZERO=(0,_InvoiceBigNumber.$$)(0),InvoiceItem=function(t){function e(i,n,r,u,o){_classCallCheck(this,e);var a=_possibleConstructorReturn(this,t.call(this));if(a.name=i,!n||!i||!r)throw new Error("You must specify a quantity, name and unitPrice when adding an item.");return a._quantity=(0,_InvoiceBigNumber.$$)(String(n)),a.unitPrice=(0,_InvoiceBigNumber.$$)(r||0),a.itemId=u||staticIdAllocator++,a.detailId=o||null,a}return _inherits(e,t),e.prototype.copy=function(){return e.fromJson((0,_manticoreUtil.deepToJSON)(this.toJSON()))},e.prototype.subtotalForInvoice=function(t){var e=this.quantity.times(this.unitPrice||ZERO);return _Currency2.default.round(t.currency,e)},e.prototype.totalForInvoice=function(t){var e=this.subtotalForInvoice(t);if(this.discountPercentage){var i=_Currency2.default.round(t.currency,e.times(this.discountPercentage/100));e=e.minus(i)}else this.discountAmount&&(e=e.minus(this.discountAmount));return _Currency2.default.round(t.currency,e)},e.fromJson=function(t){var i=new e(t.name,t.quantity,t.unit_price.value,t.itemId||staticIdAllocator++,t.detailId);return t.description&&(i.itemDescription=t.description),t.unit_price&&(i.unitPrice=t.unit_price.value),t.tax&&(i.taxName=t.tax.name,i.taxRate=(0,_InvoiceBigNumber.$$)(t.tax.percent)),t.discount&&(t.discount.amount&&(i.discountAmount=(0,_InvoiceBigNumber.$$)(t.discount.amount.value)),t.discount.percent&&(i.discountPercentage=(0,_InvoiceBigNumber.$$)(t.discount.percent))),t.date&&(i.date=_InvoicingUtil2.default.parseServerDateString(t.date)),i.imageURL=t.image_url,i.unitOfMeasure=t.unit_of_measure,i},e.prototype.toJSON=function(t){var e={name:this.name,description:this.itemDescription,quantity:this.quantity.toNumber(),image_url:this.imageURL,unit_of_measure:this.unitOfMeasure};this.date&&(e.date=_InvoicingUtil2.default.toServerDateString(this.date,!1)),e.unit_price={value:this.unitPrice,currency:t};var i={};return this.discountPercentage>0?i.percent=this.discountPercentage:this.discountAmount>0&&(i.amount={value:this.discountAmount,currency:t}),(i.amount||i.percent)&&(e.discount=i),this.taxRate&&this.taxName&&(e.tax={percent:this.taxRate,name:this.taxName}),e},e.prototype.isEqualToItem=function(t){return(0,_deepEqual2.default)((0,_manticoreUtil.deepToJSON)(this),(0,_manticoreUtil.deepToJSON)(t))},_createClass(e,[{key:"quantity",get:function(){return this._quantity},set:function(t){this._quantity=(0,_InvoiceBigNumber.$$)(t),this.emit("amountChanged","quantity")}},{key:"taxRate",get:function(){return this._taxRate},set:function(t){this._taxRate=(0,_InvoiceBigNumber.$$)(t),this.emit("taxRateChanged"),this.emit("changed")}},{key:"discountAmount",get:function(){return this._discountAmount},set:function(t){this._discountAmount=(0,_InvoiceBigNumber.$$)(t),this.emit("discountAmountChanged"),this.emit("changed")}},{key:"discountPercentage",get:function(){return this._discountPercentage},set:function(t){this._discountPercentage=(0,_InvoiceBigNumber.$$)(t),this.emit("discountPercentageChanged"),this.emit("changed")}},{key:"unitPrice",get:function(){return this._unitPrice},set:function(t){this._unitPrice=(0,_InvoiceBigNumber.$$)(t),this.emit("amountChanged","unitPrice")}},{key:"date",set:function(t){this._date=t},get:function(){return _InvoicingUtil2.default.getDateValue(this._date)}}]),e}(_events.EventEmitter);exports.default=InvoiceItem;

},{"./Currency":245,"./InvoiceBigNumber":249,"./InvoicingUtil":256,"deep-equal":197,"events":200,"manticore-util":212}],258:[function(require,module,exports){
"use strict";function _interopRequireDefault(s){return s&&s.__esModule?s:{default:s}}function _classCallCheck(s,e){if(!(s instanceof e))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _Address=require("./Address"),_Address2=_interopRequireDefault(_Address),InvoiceMerchantInfo=function(){function s(){_classCallCheck(this,s),this.address=new _Address2.default}return s.prototype.readFromJson=function(s){s&&(this.address.readFromJson(s.address),s.address&&(this.address=new _Address2.default,this.address.readFromJson(s.address)),this.email=s.email,this.phone=s.phone,this.fax=s.fax,this.website=s.website,this.firstName=s.first_name,this.lastName=s.last_name,this.businessName=s.business_name,this.taxId=s.tax_id,this.additionalInfo=s.additional_info,this.additionalInfoLabel=s.additional_info_label)},s.prototype.toJSON=function(){var s={};return s.email=this.email,s.phone=this.phone,s.fax=this.fax,s.website=this.website,s.address=this.address,s.first_name=this.firstName,s.last_name=this.lastName,s.business_name=this.businessName,s.tax_id=this.taxId,s.additional_info=this.additionalInfo,s.additional_info_label=this.additionalInfoLabel,s},s}();exports.default=InvoiceMerchantInfo;

},{"./Address":237}],259:[function(require,module,exports){
"use strict";function _classCallCheck(t,s){if(!(t instanceof s))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var InvoiceNotification=function(){function t(s,e,o,n,i){_classCallCheck(this,t),this.subject=s,this.note=e,this.shouldSendToMerchant=o,this.shouldSendToPayer=i,this.ccEmails=n}return t.prototype.toJSON=function(){var t={};return t.subject=this.subject,t.note=this.note,t.send_to_merchant=this.shouldSendToMerchant,t.send_to_payer=this.shouldSendToPayer,t.cc_emails=this.ccEmails,t},t}();exports.default=InvoiceNotification;

},{}],260:[function(require,module,exports){
"use strict";function _interopRequireDefault(t){return t&&t.__esModule?t:{default:t}}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _assert=require("assert"),_assert2=_interopRequireDefault(_assert),_InvoiceEnums=require("./InvoiceEnums"),_InvoiceEnums2=_interopRequireDefault(_InvoiceEnums),_InvoicingUtil=require("./InvoicingUtil"),_InvoicingUtil2=_interopRequireDefault(_InvoicingUtil),_InvoiceBigNumber=require("./InvoiceBigNumber"),InvoicePayment=function(){function t(){_classCallCheck(this,t),this.type=_InvoiceEnums2.default.PaymentType.EXTERNAL,this.transactionId=void 0,this.transactionType=void 0,this.date=void 0,this.note=void 0,this.method=void 0,this.currency=void 0,this.amount=void 0}return t.readFromJson=function(e){var n=new t;return e&&(n.type=e.type,n.transactionID=e.transaction_id,n.transactionType=e.transaction_type,n.date=_InvoicingUtil2.default.parseServerDateString(e.date),n.method=e.method,n.note=e.note),e.amount&&(n.amount=(0,_InvoiceBigNumber.$$)(e.amount.value),n.currency=e.amount.currency),n},t.prototype.toJSON=function(){var t={};return this.amount&&(t.amount={},t.amount={currency:this.currency,value:this.amount}),t.method=_InvoiceEnums2.default.PaymentMethod.toString[this.method],t.date=_InvoicingUtil2.default.toServerDateString(this.date,!0),t.note=this.note,t},t.prototype.validate=function(){switch(this.type||(0,_assert2.default)(!1,"InvoicePaymentInfo must have a payment type."),this.type){case _InvoiceEnums2.default.PaymentType.EXTERNAL:(0,_assert2.default)(this.method,"InvoicePaymentInfo with payment type=EXTERNAL must have a method.");break;case _InvoiceEnums2.default.PaymentType.PAYPAL:throw(0,_assert2.default)(this.transactionId,"InvoicePaymentInfo with payment type=PAYPAL must have a method."),new Error("The invoicing service doesn't currently support setting the payment type to PAYPAL :(.");default:throw new Error("Unknown payment type")}},t}();exports.default=InvoicePayment;

},{"./InvoiceBigNumber":249,"./InvoiceEnums":250,"./InvoicingUtil":256,"assert":91}],261:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _createClass=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),_manticoreUtil=require("manticore-util"),_InvoicingUtil=require("./InvoicingUtil"),_InvoicingUtil2=_interopRequireDefault(_InvoicingUtil),InvoicePaymentTerm=function(){function e(){_classCallCheck(this,e),this.reset()}return e.prototype.reset=function(){this._paymentTerms=e.PaymentTerms.NoPaymentTerms,this._dueDate=void 0},e.fromJson=function(t){var n=new e;return t?(n.dueDate=_InvoicingUtil2.default.parseServerDateString(t.due_date),n.paymentTerms=e.PaymentTerms.fromServer[t.term_type]):n.reset(),n},e.prototype.toJSON=function(){var t={};return this.dueDate?t.due_date=_InvoicingUtil2.default.toServerDateString(this.dueDate,!1):this.paymentTerms&&(t.term_type=e.PaymentTerms.toServer[this.paymentTerms]),t},e.prototype.toJSONHack=function(t){var n=this.toJSON();if(n.due_date===t){n.due_date=void 0;var r=e.PaymentTerms.DueOnReceipt;n.term_type=e.PaymentTerms.toServer[r]}return n},_createClass(e,[{key:"paymentTerms",set:function(e){e&&this.reset(),this._paymentTerms=e},get:function(){return this._paymentTerms}},{key:"dueDate",set:function(e){e&&this.reset(),this._dueDate=e},get:function(){return _InvoicingUtil2.default.getDateValue(this._dueDate)}}]),e}();exports.default=InvoicePaymentTerm,InvoicePaymentTerm.PaymentTerms={NoPaymentTerms:0,DueOnReceipt:1,Net10:2,Net15:3,Net30:4,Net45:5,Net60:6,Net90:7},InvoicePaymentTerm.PaymentTerms.fromServer={DUE_ON_RECEIPT:InvoicePaymentTerm.PaymentTerms.DueOnReceipt,NET_10:InvoicePaymentTerm.PaymentTerms.Net10,NET_15:InvoicePaymentTerm.PaymentTerms.Net15,NET_30:InvoicePaymentTerm.PaymentTerms.Net30,NET_45:InvoicePaymentTerm.PaymentTerms.Net45,NET_60:InvoicePaymentTerm.PaymentTerms.Net60,NET_90:InvoicePaymentTerm.PaymentTerms.Net90},InvoicePaymentTerm.PaymentTerms.toServer=(0,_manticoreUtil.reverseKeysAndValues)(InvoicePaymentTerm.PaymentTerms.fromServer);

},{"./InvoicingUtil":256,"manticore-util":212}],262:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _InvoiceBigNumber=require("./InvoiceBigNumber"),_InvoiceEnums=require("./InvoiceEnums"),_InvoiceEnums2=_interopRequireDefault(_InvoiceEnums),_InvoicingUtil=require("./InvoicingUtil"),_InvoicingUtil2=_interopRequireDefault(_InvoicingUtil),InvoiceRefund=function(){function e(){_classCallCheck(this,e),this.type=_InvoiceEnums2.default.PaymentType.EXTERNAL,this.date=void 0,this.note=void 0,this.currency=void 0,this.amount=void 0}return e.readFromJson=function(n){var t=new e;return n&&(t.type=n.type,t.date=_InvoicingUtil2.default.parseServerDateString(n.date),t.note=n.note),n.amount&&(t.amount=(0,_InvoiceBigNumber.$$)(n.amount.value),t.currency=n.amount.currency),t},e.prototype.toJSON=function(){var e={};return this.amount&&(e.amount={},e.amount={currency:this.currency,value:this.amount}),e.date=_InvoicingUtil2.default.toServerDateString(this.date,!0),e.note=this.note,e},e}();exports.default=InvoiceRefund;

},{"./InvoiceBigNumber":249,"./InvoiceEnums":250,"./InvoicingUtil":256}],263:[function(require,module,exports){
"use strict";function _classCallCheck(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}function request(e,r){return InvoicingRequester.request(e,r)}exports.__esModule=!0,exports.request=request;var _manticoreUtil=require("manticore-util"),InvoicingRequester=function(){function e(){_classCallCheck(this,e)}return e.request=function(r,t){if(!e.api)throw new Error("There is no service interface. Please set the InvoicingRequester.api property.");e.api.request((0,_manticoreUtil.extend)(r,{service:"invoicing",format:"json",headers:{"Content-Type":"application/json"}}),function(r,i){e.decorateError(r),t(r,i)})},e.decorateError=function(e){if(e){var r="",t=/(.*?)\..*/,i=/.*\.(.*)/;e.details&&Array.isArray(e.details)&&e.details.length>0&&e.details.forEach(function(e){r.length&&(r+=" ");var n=e.field.match(t),a=e.field;if(Array.isArray(n)&&n.length){a=n[1],a=a.replace(/(.*?)\[.*/,"$1"),a=a.replace("_"," "),a=a.charAt(0).toUpperCase()+a.slice(1);var s=e.field.match(i);Array.isArray(s)&&s.length&&(a=a+" "+s[1])}else a=a.charAt(0).toUpperCase()+a.slice(1);r=""+r+a+" "+e.issue}),r.length&&(e.message=r)}},e}();exports.default=InvoicingRequester;

},{"manticore-util":212}],264:[function(require,module,exports){
"use strict";function _interopRequireDefault(t){return t&&t.__esModule?t:{default:t}}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _createClass=function(){function t(t,e){for(var i=0;i<e.length;i++){var n=e[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}return function(e,i,n){return i&&t(e.prototype,i),n&&t(e,n),e}}(),_InvoiceEnums=require("./InvoiceEnums"),_InvoiceEnums2=_interopRequireDefault(_InvoiceEnums),_InvoicingUtil=require("./InvoicingUtil"),_InvoicingUtil2=_interopRequireDefault(_InvoicingUtil),_InvoiceBigNumber=require("./InvoiceBigNumber"),InvoiceSearchRequest=function(){function t(){_classCallCheck(this,t),this.startIndex=0,this.pageSize=20,this.totalCountRequired=!1,this._statuses=[]}return t.prototype.toJSON=function(){var t={};this.assignDatesToJSON(t),t.email=this.email,t.recipientFirstName=this.recipientFirstName,t.recipientLastName=this.recipientLastName,t.recipientBusinessName=this.recipientBusinessName,t.number=this.number;for(var e=this._statuses,i=Array.isArray(e),n=0,e=i?e:e[Symbol.iterator]();;){var a;if(i){if(n>=e.length)break;a=e[n++]}else{if(n=e.next(),n.done)break;a=n.value}var r=a;t.status||(t.status=[]),t.status.push(_InvoiceEnums2.default.Status.toString[r])}return t.lower_total_amount=this.lowerTotalAmount,t.upper_total_amount=this.upperTotalAmount,t.page=this.startIndex,t.page_size=this.pageSize,t.total_count_required=this.totalCountRequired,t.archived=this.archived,t},t.prototype.addStatus=function(t){this._statuses.push(t)},t.prototype.assignDatesToJSON=function(t){for(var e=[["startInvoiceDate","endInvoiceDate","start_invoice_date","end_invoice_date"],["startDueDate","endDueDate","start_due_date","end_due_date"],["startPaymentDate","endPaymentDate","start_payment_date","end_payment_date"],["startCreationDate","endCreationDate","start_creation_date","end_creation_date"]],i=e,n=Array.isArray(i),a=0,i=n?i:i[Symbol.iterator]();;){var r;if(n){if(a>=i.length)break;r=i[a++]}else{if(a=i.next(),a.done)break;r=a.value}var o=r;(this[o[0]]||this[o[1]])&&(t[o[2]]=this[o[0]]?_InvoicingUtil2.default.toServerDateString(this[o[0]],!1):"1970-01-01 PST",t[o[3]]=this[o[1]]?_InvoicingUtil2.default.toServerDateString(this[o[1]],!1):"2100-01-01 PST")}},_createClass(t,[{key:"lowerTotalAmount",get:function(){return this._lowerTotalAmount},set:function(t){this._lowerTotalAmount=(0,_InvoiceBigNumber.$$)(t)}},{key:"upperTotalAmount",get:function(){return this._upperTotalAmount},set:function(t){this._upperTotalAmount=(0,_InvoiceBigNumber.$$)(t)}}]),t}();exports.default=InvoiceSearchRequest;

},{"./InvoiceBigNumber":249,"./InvoiceEnums":250,"./InvoicingUtil":256}],265:[function(require,module,exports){
"use strict";function _interopRequireDefault(s){return s&&s.__esModule?s:{default:s}}function _classCallCheck(s,e){if(!(s instanceof e))throw new TypeError("Cannot call a class as a function")}var _Address=require("./Address"),_Address2=_interopRequireDefault(_Address),InvoiceShippingInfo=function(){function s(){_classCallCheck(this,s),this.address=new _Address2.default}return s.prototype.readFromJson=function(s){s&&(this.address.readFromJson(s.address),this.firstName=s.first_name,this.lastName=s.last_name,this.businessName=s.business_name)},s.prototype.toJSON=function(){var s={};return Object.keys(this.address).length&&(s.address=this.address),s.first_name=this.firstName,s.last_name=this.lastName,s.business_name=this.businessName,s},s.prototype.hasAnyValue=function(){return!!(this.email||this.firstName||this.lastName||this.businessName||this.address.hasAnyValue())},s}();module.exports=InvoiceShippingInfo;

},{"./Address":237}],266:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}exports.__esModule=!0;var _Invoice2=require("./Invoice"),_Invoice3=_interopRequireDefault(_Invoice2),_TemplateSettings=require("./TemplateSettings"),_TemplateSettings2=_interopRequireDefault(_TemplateSettings),InvoiceTemplate=function(e){function t(n){return _classCallCheck(this,t),_possibleConstructorReturn(this,e.call(this,n))}return _inherits(t,e),t.fromJSON=function(e){if(e.template_data&&e.template_data.currencyCode){var n=new t(e.template_data.currencyCode);return n.readJSON(e.template_data,!0),n.templateID=e.template_id,n.isDefault=e.default,n.isCustom=e.custom,n.name=e.name,n.unitOfMeasure=e.unit_of_measure,n.settings=_TemplateSettings2.default.fromJSON(e.settings),n.isCustom||(n.merchantInfo=void 0),n}},t.prototype.invoiceFromInvoice=function(e){var t=this.copy();return t.isDefault=void 0,t.isCustom=void 0,t.name=void 0,t.unitOfMeasure=void 0,t.settings=void 0,t.number=e.number,t.payPalId=e.payPalId,t},t}(_Invoice3.default);exports.default=InvoiceTemplate;

},{"./Invoice":247,"./TemplateSettings":267}],267:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,i){if(!(e instanceof i))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _assert=require("assert"),_assert2=_interopRequireDefault(_assert),InvoiceTemplateSettings=function(){function e(){_classCallCheck(this,e),this.shipping=!0,this.discount=!0,this.custom=!0,this.itemsDiscount=!0,this.itemsTax=!0,this.itemsQuantity=!0,this.itemsDescription=!0,this.itemsDate=!0}return e.fromJSON=function(i){for(var t=new e,s=i,n=Array.isArray(s),a=0,s=n?s:s[Symbol.iterator]();;){var r;if(n){if(a>=s.length)break;r=s[a++]}else{if(a=s.next(),a.done)break;r=a.value}var o=r;switch(o.field_name){case"shipping":t.shipping=t.isFieldShown(o);break;case"discount":t.discount=t.isFieldShown(o);break;case"custom":t.custom=t.isFieldShown(o);break;case"items.discount":t.itemsDiscount=t.isFieldShown(o);break;case"items.tax":t.itemsTax=t.isFieldShown(o);break;case"items.quantity":t.itemsQuantity=t.isFieldShown(o);break;case"items.description":t.itemsDescription=t.isFieldShown(o);break;case"items.date":t.itemsDate=t.isFieldShown(o);break;default:(0,_assert2.default)("unknown field name: "+o.field_name)}}return t},e.prototype.isFieldShown=function(e){return!0!==e.display_preference.hidden},e}();exports.default=InvoiceTemplateSettings;

},{"assert":91}],268:[function(require,module,exports){
"use strict";function _interopRequireDefault(t){return t&&t.__esModule?t:{default:t}}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function nonZero(t){return t&&!ZERO.equals(t)}function valOrZero(t){return t||ZERO}function compare(t,e){return t===e?0:t<e?-1:1}exports.__esModule=!0,exports.default=function(t){new InvoiceTotals(t).calculate()};var _Currency=require("./Currency"),_Currency2=_interopRequireDefault(_Currency),_InvoiceBigNumber=require("./InvoiceBigNumber"),_InvoiceBigNumber2=_interopRequireDefault(_InvoiceBigNumber),ZERO=new _InvoiceBigNumber2.default(0),ONE=new _InvoiceBigNumber2.default(1),InvoiceTotals=function(){function t(e){_classCallCheck(this,t),this.invoice=e}return t.prototype.round=function(t){return _Currency2.default.round(this.invoice.currency,t)},t.prototype.calculate=function(){var t=this.invoice,e=this.sortedInvoiceItems(),i=!(t.taxCalculatedAfterDiscount||t.taxInclusive),o=this.calculateItemSubtotals(e);if(t._subTotal=o[0],t._subTotalWithItemDiscounts=o[1],t._discountTotal=this.calculatePreTaxDiscountForItemSubtotal(t._subTotalWithItemDiscounts),t.taxCalculatedAfterDiscount){var a=t._subTotalWithItemDiscounts,n=t._discountTotal;t._taxBreakdown=this.calculateTaxesForItemsWithPreTaxDiscountTotal(e,n,a)}else t._taxBreakdown=this.calculateTaxesForItemsWithDiscountAfterTax(e);t._shippingTaxTotal=this.calculateShippingTax(t._taxBreakdown),t._itemTax=this.calculateTotalTaxFromTaxes(t._taxBreakdown),t._itemTax=(0,_InvoiceBigNumber.$$)(t._itemTax.minus(t._shippingTaxTotal)),t._taxBreakdown=this.generateRoundedTaxDetailsFromTaxes(t._taxBreakdown),i&&(t._discountTotal=this.calculateDiscountWithItemSubTotal(t._subTotal,t._itemTax)),this.invoice.custom&&(t._customAmountTotal=this.invoice.custom.amount),this.setDerivedTotals()},t.prototype.sortedInvoiceItems=function(){var t=this.invoice.items.slice(0);return t.sort(function(t,e){return t.taxRate?e.taxRate?e.taxRate.equals(t.taxRate)?compare(t.name,e.name):-1*t.taxRate.comparedTo(e.taxRate):-1:e.taxRate?1:compare(t.name,e.name)}),t},t.prototype.generateRoundedTaxDetailsFromTaxes=function(t){var e={};for(var i in t)t.hasOwnProperty(i)&&(e[i]=this.round(t[i]));return e},t.prototype.calculateTotalTaxFromTaxes=function(t){var e=ZERO;for(var i in t)t.hasOwnProperty(i)&&(e=e.plus(t[i]));return e},t.prototype.calculateTaxesForItemsWithPreTaxDiscountTotal=function(t,e,i){for(var o={},a=t,n=Array.isArray(a),r=0,a=n?a:a[Symbol.iterator]();;){var u;if(n){if(r>=a.length)break;u=a[r++]}else{if(r=a.next(),r.done)break;u=r.value}var s=u,c=this.calculateItemDiscount(s,this.invoice),l=s.totalForInvoice(this.invoice);if(nonZero(s.taxRate)){var v=[s.taxName," (",s.taxRate.toString(),"%)"].join(""),m=void 0;if(this.invoice.taxInclusive){var d=l.plus(c);m=this.round(d.dividedBy(ONE.plus(s.taxRate.dividedBy(100)))).times(s.taxRate.dividedBy(100))}else{var p=nonZero(e)?l.minus(l.dividedBy(i).times(e)):l;m=this.round(p.times(s.taxRate.dividedBy(100)))}m&&!ZERO.equals(m)&&(o[v]=(o[v]||ZERO).plus(m))}}return o},t.prototype.calculateItemDiscount=function(t,e){return(0,_InvoiceBigNumber.$$)(t.subtotalForInvoice(e)).minus((0,_InvoiceBigNumber.$$)(t.totalForInvoice(e)))},t.prototype.calculateTaxesForItemsWithDiscountAfterTax=function(t){for(var e={},i=t,o=Array.isArray(i),a=0,i=o?i:i[Symbol.iterator]();;){var n;if(o){if(a>=i.length)break;n=i[a++]}else{if(a=i.next(),a.done)break;n=a.value}var r=n,u=ZERO;if(nonZero(r.unitPrice)&&(u=this.round(r.quantity.times(r.unitPrice))),nonZero(r.taxRate)){var s=[r.taxName," (",r.taxRate.toString(),"%)"].join(""),c=void 0;if(this.invoice.taxInclusive){var l=u.dividedBy(ONE.plus(r.taxRate.dividedBy(100)));c=this.round(u.minus(l))}else c=this.round(u.times(r.taxRate.dividedBy(100)));c&&!ZERO.equals(c)&&(e[s]=(e[s]||ZERO).plus(c))}}return e},t.prototype.calculateShippingTax=function(t){var e=this.invoice;if(nonZero(e.shippingTaxRate)&&nonZero(e.shippingAmount)){var i=[e.shippingTaxName||"Shipping Tax"," (",e.shippingTaxRate.toString(),"%)"].join(""),o=e.shippingAmount.times(e.shippingTaxRate.dividedBy(100));return nonZero(o)&&(t[i]=valOrZero(t[i]).plus(o)),o}return ZERO},t.prototype.calculateItemSubtotals=function(t){for(var e=ZERO,i=ZERO,o=t,a=Array.isArray(o),n=0,o=a?o:o[Symbol.iterator]();;){var r;if(a){if(n>=o.length)break;r=o[n++]}else{if(n=o.next(),n.done)break;r=n.value}var u=r;e=e.plus(u.subtotalForInvoice(this.invoice)),i=i.plus(u.totalForInvoice(this.invoice))}return[(0,_InvoiceBigNumber.$$)(e),(0,_InvoiceBigNumber.$$)(i)]},t.prototype.calculateDiscountWithItemSubTotal=function(t){return nonZero(this.invoice.discountAmount)?this.invoice.discountAmount:nonZero(this.invoice.discountPercentage)?this.round(t.times(this.invoice.discountPercentage).dividedBy(100)):ZERO},t.prototype.calculatePreTaxDiscountForItemSubtotal=function(t){return nonZero(this.invoice.discountAmount)?(0,_InvoiceBigNumber.$$)(this.invoice.discountAmount):nonZero(this.invoice.discountPercentage)?this.round((0,_InvoiceBigNumber.$$)(this.invoice.discountPercentage).dividedBy(100).times(t)):ZERO},t.prototype.setDerivedTotals=function(){var t=this.invoice;t._total=valOrZero(t._subTotalWithItemDiscounts).plus(valOrZero(t.gratuityAmount)).plus(valOrZero(t.shippingAmount)),t.taxInclusive||(t._total=t._total.plus(valOrZero(t._itemTax)).plus(valOrZero(t._shippingTaxTotal))),nonZero(t._discountTotal)&&(t._total=t._total.minus(t._discountTotal)),nonZero(t._customAmountTotal)&&(t._total=t._total.plus(t._customAmountTotal)),t._total=(0,_InvoiceBigNumber.$$)(t._total)},t}();

},{"./Currency":245,"./InvoiceBigNumber":249}],269:[function(require,module,exports){
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var Tlv=exports.Tlv=require("./lib/Tlv").default,TlvList=exports.TlvList=require("./lib/TlvList").default,Tags=exports.Tags=require("./lib/Tags").default,ValueFormat=exports.ValueFormat=require("./lib/ValueFormat").default,DefinedTag=exports.DefinedTag=require("./lib/DefinedTag").default,ApduCommand=exports.ApduCommand=require("./lib/apdu/Command").default,ApduResponse=exports.ApduResponse=require("./lib/apdu/Response").default;
},{"./lib/DefinedTag":270,"./lib/Tags":271,"./lib/Tlv":272,"./lib/TlvList":273,"./lib/ValueFormat":274,"./lib/apdu/Command":275,"./lib/apdu/Response":276}],270:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function e(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,a,n){return a&&e(t.prototype,a),n&&e(t,n),t}}(),_ValueFormat=require("./ValueFormat"),_ValueFormat2=_interopRequireDefault(_ValueFormat),allTags={},tagsByName={},DefinedTag=function(){function e(t,a,n,r){var l=!(arguments.length>4&&void 0!==arguments[4])||arguments[4];_classCallCheck(this,e),this.name=t,this.number=a,this.format=n,this.length=r,!1!==l&&(allTags[a]?allTags[a].push(this):allTags[a]=[this],tagsByName[t]=this)}return _createClass(e,[{key:"valueFromBytes",value:function(e){return this.format?this.format.fromBytes(e,this.length):e}},{key:"valueToBytes",value:function(e){return this.format.toBytes(e,this.length)}}],[{key:"findTags",value:function(t){return allTags[t]?allTags[t]:[new e("UnknownTag",t,_ValueFormat2.default.Binary,null,!1)]}},{key:"getTagsByName",value:function(){return tagsByName}},{key:"findTag",value:function(t){return e.findTags(t)[0]}}]),e}();exports.default=DefinedTag;

},{"./ValueFormat":274}],271:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(exports,"__esModule",{value:!0}),exports.UnknownTag=exports.UnpredictableNumberAlternate=exports.UnpredictableNumber=exports.TransactionStatusInformation=exports.TransactionSequenceCounter=exports.TransactionType=exports.TransactionTime=exports.TransactionDate=exports.TransactionCurrencyCode=exports.Track2UnpredictableNumberAndAttackCounterPosition=exports.Track2NumberOfATCDigits=exports.Track2Cvc3Position=exports.Track2Cvc3=exports.Track2=exports.Track1UnpredictableNumberAndAttackCounterPosition=exports.Track1NumberOfATCDigits=exports.Track1Cvc3Position=exports.Track1Cvc3=exports.Track1=exports.TerminalVerificationResults=exports.TerminalType=exports.TerminalTransactionQualifiers=exports.TerminalIdentification=exports.TerminalCountryCode=exports.TerminalCapabilities=exports.TerminalApplicationIdentifier=exports.ServiceCode=exports.ProcessingDataObjectList=exports.MsdOffset=exports.MobileSupportIndicator=exports.LanguagePreference=exports.IssuerCountryCode=exports.IssuerCodeTableIndex=exports.IssuerApplicationData=exports.IssuerAuthenticationData=exports.InterfaceDeviceSerialNumber=exports.FciProprietaryData=exports.FciProprietaryTemplate=exports.DfNameRaw=exports.DfNameAscii=exports.CryptogramInformationData=exports.CardTransactionQualifiers=exports.CardholderVerificationMethodResults=exports.CardholderNameExtended=exports.CardholderName=exports.CardCvmLimit=exports.CardAuthenticationRelatedData=exports.AuthorizationResponseCode=exports.ApplicationVersionNumber=exports.ApplicationTransactionCounter=exports.ApplicationTemplate=exports.ApplicationPriorityIndicator=exports.ApplicationPreferredName=exports.ApplicationPanSequenceCode=exports.ApplicationLabel=exports.ApplicationInterchangeProfile=exports.ApplicationIdentifier=exports.ApplicationFileLocator=exports.ApplicationExpirationDate=exports.ApplicationCryptogram=exports.AmountOther=exports.AmountAuthorized=void 0;var _DefinedTag=require("./DefinedTag"),_DefinedTag2=_interopRequireDefault(_DefinedTag),_ValueFormat=require("./ValueFormat"),_ValueFormat2=_interopRequireDefault(_ValueFormat),AmountAuthorized=exports.AmountAuthorized=new _DefinedTag2.default("AmountAuthorized",40706,_ValueFormat2.default.CompressedNumeric),AmountOther=exports.AmountOther=new _DefinedTag2.default("AmountOther",40707,_ValueFormat2.default.CompressedNumeric),ApplicationCryptogram=exports.ApplicationCryptogram=new _DefinedTag2.default("ApplicationCryptogram",40742,_ValueFormat2.default.Binary),ApplicationExpirationDate=exports.ApplicationExpirationDate=new _DefinedTag2.default("ApplicationExpirationDate",24356,_ValueFormat2.default.Date),ApplicationFileLocator=exports.ApplicationFileLocator=new _DefinedTag2.default("ApplicationFileLocator",148,_ValueFormat2.default.Binary),ApplicationIdentifier=exports.ApplicationIdentifier=new _DefinedTag2.default("ApplicationIdentifier",79,_ValueFormat2.default.Binary),ApplicationInterchangeProfile=exports.ApplicationInterchangeProfile=new _DefinedTag2.default("ApplicationInterchangeProfile",130,_ValueFormat2.default.Binary,2),ApplicationLabel=exports.ApplicationLabel=new _DefinedTag2.default("ApplicationLabel",80,_ValueFormat2.default.AlphaWithSpace),ApplicationPanSequenceCode=exports.ApplicationPanSequenceCode=new _DefinedTag2.default("ApplicationPanSequenceCode",24372,_ValueFormat2.default.Numeric,2),ApplicationPreferredName=exports.ApplicationPreferredName=new _DefinedTag2.default("ApplicationPreferredName",40722,_ValueFormat2.default.AlphaWithSpace),ApplicationPriorityIndicator=exports.ApplicationPriorityIndicator=new _DefinedTag2.default("ApplicationPriorityIndicator",135,_ValueFormat2.default.Binary,1),ApplicationTemplate=exports.ApplicationTemplate=new _DefinedTag2.default("ApplicationTemplate",97,_ValueFormat2.default.Tlv),ApplicationTransactionCounter=exports.ApplicationTransactionCounter=new _DefinedTag2.default("ApplicationTransactionCounter",40758,_ValueFormat2.default.Binary,2),ApplicationVersionNumber=exports.ApplicationVersionNumber=new _DefinedTag2.default("ApplicationVersionNumber",40713,_ValueFormat2.default.Binary,2),AuthorizationResponseCode=exports.AuthorizationResponseCode=new _DefinedTag2.default("AuthorizationResponseCode",138,_ValueFormat2.default.AlphaNumeric,2),CardAuthenticationRelatedData=exports.CardAuthenticationRelatedData=new _DefinedTag2.default("CardAuthenticationRelatedData",40809,_ValueFormat2.default.Dol),CardCvmLimit=exports.CardCvmLimit=new _DefinedTag2.default("CardCvmLimit",40811,_ValueFormat2.default.Binary),CardholderName=exports.CardholderName=new _DefinedTag2.default("CardholderName",24352,_ValueFormat2.default.AlphaWithSpace),CardholderNameExtended=exports.CardholderNameExtended=new _DefinedTag2.default("CardholderNameExtended",40715,_ValueFormat2.default.AlphaWithSpace),CardholderVerificationMethodResults=exports.CardholderVerificationMethodResults=new _DefinedTag2.default("CardholderVerificationMethodResults",40756,_ValueFormat2.default.Binary),CardTransactionQualifiers=exports.CardTransactionQualifiers=new _DefinedTag2.default("CardTransactionQualifiers",40812,_ValueFormat2.default.Binary,2),CryptogramInformationData=exports.CryptogramInformationData=new _DefinedTag2.default("CryptogramInformationData",40743,_ValueFormat2.default.Binary,1),DfNameAscii=exports.DfNameAscii=new _DefinedTag2.default("DfNameAscii",132,_ValueFormat2.default.Alpha),DfNameRaw=exports.DfNameRaw=new _DefinedTag2.default("DfNameRaw",132,_ValueFormat2.default.Binary),FciProprietaryTemplate=exports.FciProprietaryTemplate=new _DefinedTag2.default("FciProprietaryTemplate",165,_ValueFormat2.default.Tlv),FciProprietaryData=exports.FciProprietaryData=new _DefinedTag2.default("FciProprietaryData",48908,_ValueFormat2.default.Tlv),InterfaceDeviceSerialNumber=exports.InterfaceDeviceSerialNumber=new _DefinedTag2.default("InterfaceDeviceSerialNumber",40734,_ValueFormat2.default.AlphaNumeric),IssuerAuthenticationData=exports.IssuerAuthenticationData=new _DefinedTag2.default("IssuerAuthenticationData",145,_ValueFormat2.default.Binary),IssuerApplicationData=exports.IssuerApplicationData=new _DefinedTag2.default("IssuerApplicationData",40720,_ValueFormat2.default.Binary),IssuerCodeTableIndex=exports.IssuerCodeTableIndex=new _DefinedTag2.default("IssuerCodeTableIndex",40721,_ValueFormat2.default.Numeric),IssuerCountryCode=exports.IssuerCountryCode=new _DefinedTag2.default("IssuerCountryCode",24360,_ValueFormat2.default.Numeric),LanguagePreference=exports.LanguagePreference=new _DefinedTag2.default("LanguagePreference",24365,_ValueFormat2.default.Alpha),MobileSupportIndicator=exports.MobileSupportIndicator=new _DefinedTag2.default("MobileSupportIndicator",40830,_ValueFormat2.default.Binary,1),MsdOffset=exports.MsdOffset=new _DefinedTag2.default("MsdOffset",40807,_ValueFormat2.default.Binary),ProcessingDataObjectList=exports.ProcessingDataObjectList=new _DefinedTag2.default("ProcessingDataObjectList",40760,_ValueFormat2.default.Dol),ServiceCode=exports.ServiceCode=new _DefinedTag2.default("ServiceCode",24368,_ValueFormat2.default.Numeric),TerminalApplicationIdentifier=exports.TerminalApplicationIdentifier=new _DefinedTag2.default("TerminalApplicationIdentifier",40710,_ValueFormat2.default.Binary),TerminalCapabilities=exports.TerminalCapabilities=new _DefinedTag2.default("TerminalCapabilities",40755,_ValueFormat2.default.Binary),TerminalCountryCode=exports.TerminalCountryCode=new _DefinedTag2.default("TerminalCountryCode",40730,_ValueFormat2.default.Numeric),TerminalIdentification=exports.TerminalIdentification=new _DefinedTag2.default("TerminalIdentification",40732,_ValueFormat2.default.Alpha),TerminalTransactionQualifiers=exports.TerminalTransactionQualifiers=new _DefinedTag2.default("TerminalTransactionQualifiers",40806,_ValueFormat2.default.Binary),TerminalType=exports.TerminalType=new _DefinedTag2.default("TerminalType",40757,_ValueFormat2.default.Numeric),TerminalVerificationResults=exports.TerminalVerificationResults=new _DefinedTag2.default("TerminalVerificationResults",149,_ValueFormat2.default.Binary),Track1=exports.Track1=new _DefinedTag2.default("Track1",86,_ValueFormat2.default.Alpha),Track1Cvc3=exports.Track1Cvc3=new _DefinedTag2.default("Track1Cvc3",40800,_ValueFormat2.default.Binary,2),Track1Cvc3Position=exports.Track1Cvc3Position=new _DefinedTag2.default("Track1Cvc3Position",40802,_ValueFormat2.default.Binary),Track1NumberOfATCDigits=exports.Track1NumberOfATCDigits=new _DefinedTag2.default("Track1NumberOfATCDigits",40804,_ValueFormat2.default.Binary,1),Track1UnpredictableNumberAndAttackCounterPosition=exports.Track1UnpredictableNumberAndAttackCounterPosition=new _DefinedTag2.default("Track1UnpredictableNumberAndAttackCounterPosition",40803,_ValueFormat2.default.Binary),Track2=exports.Track2=new _DefinedTag2.default("Track2",40811,_ValueFormat2.default.Numeric),Track2Cvc3=exports.Track2Cvc3=new _DefinedTag2.default("Track2Cvc3",40801,_ValueFormat2.default.Binary,2),Track2Cvc3Position=exports.Track2Cvc3Position=new _DefinedTag2.default("Track2Cvc3Position",40805,_ValueFormat2.default.Binary),Track2NumberOfATCDigits=exports.Track2NumberOfATCDigits=new _DefinedTag2.default("Track2NumberOfATCDigits",40807,_ValueFormat2.default.Binary,1),Track2UnpredictableNumberAndAttackCounterPosition=exports.Track2UnpredictableNumberAndAttackCounterPosition=new _DefinedTag2.default("Track2UnpredictableNumberAndAttackCounterPosition",40806,_ValueFormat2.default.Binary),TransactionCurrencyCode=exports.TransactionCurrencyCode=new _DefinedTag2.default("TransactionCurrencyCode",24362,_ValueFormat2.default.CompressedNumeric,2),TransactionDate=exports.TransactionDate=new _DefinedTag2.default("TransactionDate",154,_ValueFormat2.default.Date),TransactionTime=exports.TransactionTime=new _DefinedTag2.default("TransactionTime",40737,_ValueFormat2.default.Time),TransactionType=exports.TransactionType=new _DefinedTag2.default("TransactionType",156,_ValueFormat2.default.CompressedNumeric),TransactionSequenceCounter=exports.TransactionSequenceCounter=new _DefinedTag2.default("TransactionSequenceCounter",40769,_ValueFormat2.default.Numeric,4),TransactionStatusInformation=exports.TransactionStatusInformation=new _DefinedTag2.default("TransactionStatusInformation",155,_ValueFormat2.default.Binary,2),UnpredictableNumber=exports.UnpredictableNumber=new _DefinedTag2.default("UnpredictableNumber",40759,_ValueFormat2.default.Binary),UnpredictableNumberAlternate=exports.UnpredictableNumberAlternate=new _DefinedTag2.default("UnpredictableNumberAlternate",40810,_ValueFormat2.default.Binary),UnknownTag=exports.UnknownTag=new _DefinedTag2.default("UnknownTag",2147483647,_ValueFormat2.default.Binary);exports.default=_DefinedTag2.default.getTagsByName();

},{"./DefinedTag":270,"./ValueFormat":274}],272:[function(require,module,exports){
(function (Buffer){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function e(e,t){for(var r=0;r<t.length;r++){var a=t[r];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,r,a){return r&&e(t.prototype,r),a&&e(t,a),t}}(),_ber=require("./ber"),_ber2=_interopRequireDefault(_ber),_DefinedTag=require("./DefinedTag"),_DefinedTag2=_interopRequireDefault(_DefinedTag),Tlv=function(){function e(t,r){_classCallCheck(this,e),t instanceof _DefinedTag2.default?(this.tag=t,this.tagNumber=t.number):(this.tagNumber=t,this.tag=_DefinedTag2.default.findTag(t)),Buffer.isBuffer(r)?this.bytes=r:this.bytes=this.tag.valueToBytes(r)}return _createClass(e,[{key:"parse",value:function(){return this.hasOwnProperty("value")||(this.value=this.tag.valueFromBytes(this.bytes)),this.value}},{key:"toBytes",value:function(){var e=[_ber2.default.encodeTag(this.tagNumber),_ber2.default.encodeLength(this.bytes?this.bytes.length:0)];return this.bytes&&e.push(this.bytes),Buffer.concat(e)}},{key:"toString",value:function(e){var t=["  Tag 0x",this.tagNumber.toString(16)];return this.tag&&this.tag.name&&(t.push(" "),t.push(this.tag.name)),t.push(": "),this.value||e?Buffer.isBuffer(this.parse())?(t.push("0x"),t.push(this.value.toString("hex"))):t.push(this.value.toString()):this.bytes?(t.push("0x"),t.push(this.bytes.toString("hex"))):t.push("<empty>"),t.join("")}}],[{key:"readLength",value:function(e,t){return _ber2.default.readLength(e,t)}}]),e}();exports.default=Tlv;

}).call(this,require("buffer").Buffer)
},{"./DefinedTag":270,"./ber":277,"buffer":96}],273:[function(require,module,exports){
(function (Buffer){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function lengthCheck(e,t,r,n){if(e>t+r)throw new Error(n)}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),_Tlv=require("./Tlv"),_Tlv2=_interopRequireDefault(_Tlv),_DefinedTag=require("./DefinedTag"),_DefinedTag2=_interopRequireDefault(_DefinedTag),_ber=require("./ber"),_ber2=_interopRequireDefault(_ber),TlvList=function(){function e(t,r,n){_classCallCheck(this,e),this.values=[],t&&this._parse(t,r,n)}return _createClass(e,[{key:"_parse",value:function(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:e.length-t,n=t;n<t+r;){var a=_ber2.default.readTag(e,n);n+=a.length,lengthCheck(n,t,r,"Invalid TLV - tag ends buffer.");var l=_ber2.default.readLength(e,n);n+=l.lengthOfEncoding,lengthCheck(n,t,r,"Invalid TLV - tag value length ends buffer.");var u=void 0;l.lengthValue&&(lengthCheck(n+l.lengthValue,t,r,"Invalid TLV - value overruns buffer."),u=e.slice(n,n+l.lengthValue),n+=l.lengthValue);var i=_DefinedTag2.default.findTags(a.number),f=!0,o=!1,s=void 0;try{for(var v,h=i[Symbol.iterator]();!(f=(v=h.next()).done);f=!0){var d=v.value;this.values.push(new _Tlv2.default(d,u))}}catch(e){o=!0,s=e}finally{try{!f&&h.return&&h.return()}finally{if(o)throw s}}}}},{key:"add",value:function(e,t){if(e instanceof _DefinedTag2.default)this.values.push(new _Tlv2.default(e,t));else if(e instanceof _Tlv2.default)this.values.push(e);else{if(!Buffer.isBuffer(t))throw new Error("Add must be called with a tag and value, or a tag number and buffer.");this.values.push(new _Tlv2.default(_DefinedTag2.default.findTag(e),t))}}},{key:"find",value:function(e,t){var r=t||0,n=e.number||e,a=!0,l=!1,u=void 0;try{for(var i,f=this.values[Symbol.iterator]();!(a=(i=f.next()).done);a=!0){var o=i.value;if(o.tagNumber===n){if(!(r>0))return o;r--}}}catch(e){l=!0,u=e}finally{try{!a&&f.return&&f.return()}finally{if(l)throw u}}return null}},{key:"toBytes",value:function(){var e=[],t=!0,r=!1,n=void 0;try{for(var a,l=this.values[Symbol.iterator]();!(t=(a=l.next()).done);t=!0){var u=a.value;e.push(u.toBytes())}}catch(e){r=!0,n=e}finally{try{!t&&l.return&&l.return()}finally{if(r)throw n}}return Buffer.concat(e)}},{key:"toString",value:function(e){var t=["TLV:"],r=!0,n=!1,a=void 0;try{for(var l,u=this.values[Symbol.iterator]();!(r=(l=u.next()).done);r=!0){var i=l.value;Buffer.isBuffer(i)?t.push(i.toString("hex")):t.push(i.toString(e))}}catch(e){n=!0,a=e}finally{try{!r&&u.return&&u.return()}finally{if(n)throw a}}return t.join("\n")}},{key:"length",get:function(){return this.values.length}}]),e}();exports.default=TlvList;

}).call(this,require("buffer").Buffer)
},{"./DefinedTag":270,"./Tlv":272,"./ber":277,"buffer":96}],274:[function(require,module,exports){
(function (Buffer){
"use strict";function fromBytes(t,e){if(e&&t&&t.length!==e){var r=new Buffer(e);return t.copy(r),r}return t}function toBytes(t,e){if(e&&(!t||t.length!==e)){var r=new Buffer(e);return t&&t.copy(r),r}return t}function fromUtf8(t){return t.toString("utf8")}function toUtf8(t){return new Buffer(t,"utf8")}function toValidHexBytes(t,e){if(Buffer.isBuffer(t))return t;var r=String(t);for(r.length%2==1&&(r="0"+r);e&&r.length<2*e;)r="00"+r;return new Buffer(r,"hex")}Object.defineProperty(exports,"__esModule",{value:!0});var TlvList=void 0;exports.default={Alpha:{fromBytes:fromUtf8,toBytes:toUtf8},AlphaNumeric:{fromBytes:fromUtf8,toBytes:toUtf8},AlphaWithSpace:{fromBytes:fromUtf8,toBytes:toUtf8},Binary:{fromBytes:fromBytes,toBytes:toBytes},Date:{fromBytes:function(t){if(t.length<3)throw new Error("Invalid date format.");var e=t.toString("hex");return new Date(2e3+parseInt(e.substring(0,2),10),parseInt(e.substring(2,4)-1,10),parseInt(e.substring(4,6),10))},toBytes:function(t){var e=[];return[t.getFullYear()-2e3,t.getMonth()+1,t.getDate()].forEach(function(t){t<10&&e.push("0"),e.push(String(t))}),new Buffer(e.join(""),"hex")}},Time:{fromBytes:function(t){if(t.length<3)throw new Error("Invalid time format.");var e=t.toString("hex");return new Date(2e3,1,1,parseInt(e.substring(0,2),10),parseInt(e.substring(2,4),10),parseInt(e.substring(4,6),10))},toBytes:function(t){var e=[];return[t.getHours(),t.getMinutes(),t.getSeconds()].forEach(function(t){t<10&&e.push("0"),e.push(String(t))}),new Buffer(e.join(""),"hex")}},CompressedNumeric:{fromBytes:function(t){return parseInt(t.toString("hex"),10)},toBytes:toValidHexBytes},CompressedAlpha:{fromBytes:function(t){return t.toString("hex")},toBytes:toValidHexBytes},Numeric:{fromBytes:function(t){for(var e=0,r=0;r<t.length;r++)e<<=8,e+=t[r];return e},toBytes:function(t){for(var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:4,r=new Buffer(e),n=t,o=0;o<e;o++)r[e-o-1]=255&n,n>>=8;return r}},TypeLengthValueList:{fromBytes:function(t){return TlvList||(TlvList=require("./TlvList").default),new TlvList(t)},toBytes:function(t){return t.toBytes()}},DataObjectList:{}};

}).call(this,require("buffer").Buffer)
},{"./TlvList":273,"buffer":96}],275:[function(require,module,exports){
(function (Buffer){
"use strict";function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),ApduCommand=function(){function t(e,n,i,a,s,r,u){_classCallCheck(this,t);var h=this.longLength?5:4;this.preamble=new Buffer(h),this.longLength=u,s?Buffer.isBuffer(s)?this.data=[s]:this.data=s:this.data=null,this.le=0,Buffer.isBuffer(e)||(this.commandClass=e,this.instruction=n,this.p1=i||0,this.p2=a||0,void 0!==r&&(this.le=r))}return _createClass(t,[{key:"expectNoBytes",value:function(){this.le=null}},{key:"appendHex",value:function(t){this.data=this.data||[],this.data.push(new Buffer(t,"hex"))}},{key:"appendBytes",value:function(t){this.data=this.data||[],this.data.push(t)}},{key:"appendString",value:function(t){this.data=this.data||[],this.data.push(new Buffer(t,"utf8"))}},{key:"toBytes",value:function(){var t=[this.preamble],e=0;if(this.data){if(t.push(null),this.data.forEach(function(n){e+=n.length,t.push(n)}),e>65535)throw new Error("ApduCommand buffer is too long");t[1]=e>255?new Buffer([0,e>>8,255&e]):this.longLength?new Buffer([0,e]):new Buffer([e])}if(null!==this.le){if(this.le>65535)throw new Error("Le value must be between 0 and 65535");this.le<=256?t.push(new Buffer([255&this.le])):(1===t.length&&t.push(new Buffer([0])),t.push(new Buffer([this.le>>8,255&this.le])))}return Buffer.concat(t)}},{key:"toString",value:function(){var t=["ApduCommand class 0x",this.commandClass.toString(16),", instruction 0x",this.instruction.toString(16),", P1 0x",this.p1.toString(16),", P2 0x",this.p2.toString(16),"\n"];if(this.data&&this.data.length){var e=Buffer.concat(this.data);t.push(e.length+" bytes: "+e.toString("hex"))}return t.join("")}},{key:"commandClass",get:function(){return this.preamble[0]},set:function(t){this.preamble.writeUInt8(t,0)}},{key:"instruction",get:function(){return this.preamble[1]},set:function(t){this.preamble.writeUInt8(t,1)}},{key:"p1",get:function(){return this.preamble[2]},set:function(t){this.preamble.writeUInt8(t,2)}},{key:"p2",get:function(){return this.preamble[3]},set:function(t){this.preamble.writeUInt8(t,3)}}]),t}();exports.default=ApduCommand;

}).call(this,require("buffer").Buffer)
},{"buffer":96}],276:[function(require,module,exports){
(function (Buffer){
"use strict";function _interopRequireDefault(t){return t&&t.__esModule?t:{default:t}}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function t(t,e){for(var s=0;s<e.length;s++){var i=e[s];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,s,i){return s&&t(e.prototype,s),i&&t(e,i),e}}(),_ber=require("../ber"),_ber2=_interopRequireDefault(_ber),_TlvList=require("../TlvList"),_TlvList2=_interopRequireDefault(_TlvList),ApduResponse=function(){function t(e){var s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:e.length-s,n=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(_classCallCheck(this,t),Buffer.isBuffer(e)){if(this.sw1=e[s+i-2],this.sw2=e[s+i-1],2===i)return;if(n)this.data=e.slice(s,s+i-2);else{this.template=e[s];var r=_ber2.default.readLength(e,s+1);if(r.lengthValue!==i-3-r.lengthOfEncoding){var l=i-3-r.lengthOfEncoding,a="Invalid ApduResponse length "+r.lengthValue+" vs buffer length "+l;throw new Error(a)}this.data=e.slice(s+1+r.lengthOfEncoding,s+i-2)}}else{if(!(e instanceof _TlvList2.default))throw new Error("You must provide a Buffer or TlvList to create an APDU response.");this._tlvs=e,this.data=e.toBytes(),this.sw1=144,this.sw2=0}}return _createClass(t,[{key:"toString",value:function(t){var e=[];return this.template&&e.push("Template: 0x"+this.template.toString(16)),this.data&&e.push("Data ("+this.data.length+" bytes): 0x"+this.data.toString("hex")),(this._tlvs||t&&this.tlvs)&&e.push(this.tlvs.toString(t)),e.push("SW1: 0x"+this.sw1.toString(16)+" SW2: 0x"+this.sw2.toString(16)),e.join("\n")}},{key:"isSuccess",get:function(){return 144===this.sw1&&0===this.sw2}},{key:"tlvs",get:function(){return this._tlvs||(this._tlvs=new _TlvList2.default(this.data)),this._tlvs}}]),t}();exports.default=ApduResponse;

}).call(this,{"isBuffer":require("../../../../../../is-buffer/index.js")})
},{"../../../../../../is-buffer/index.js":202,"../TlvList":273,"../ber":277}],277:[function(require,module,exports){
(function (Buffer){
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default={readTag:function(e,r){for(var n={length:1,number:0},t=r;t<e.length;t++,n.length++){var f=255&e[t];if(n.number=(n.number<<8)+f,t===r&&31!=(31&f))break;if(t!==r&&0==(128&f))break}return n},encodeTag:function(e){for(var r=e.number||e,n=0,t=0;r>0;)t++,n=(n<<8)+(255&r),r>>=8;for(var f=new Buffer(t),l=0;n>0;)f.writeUInt8(255&n,l++),n>>=8;return f},readLength:function(e,r){var n={lengthOfEncoding:1,lengthValue:0},t=r,f=e[t++];if(128==(128&f)){var l=127&f;if(t+l>e.length)throw new Error("Malformed length value - not enough bytes.");n.lengthOfEncoding=l+1;for(var o=0;o<l;o++)n.lengthValue=(n.lengthValue<<8)+e[t++];if(n.lengthValue<0)throw new Error("Overflow in length value.")}else n.lengthValue=f;return n},encodeLength:function(e){if(e>65535)throw new Error("Invalid length for tlv format: "+e);var r=void 0;return e<=127?(r=new Buffer(1),r.writeUInt8(e,0)):e>255?(r=new Buffer(3),r.writeUInt8(130,0),r.writeUInt8(e>>8&255,1),r.writeUInt8(255&e,2)):(r=new Buffer(2),r.writeUInt8(129,0),r.writeUInt8(255&e,1)),r}};

}).call(this,require("buffer").Buffer)
},{"buffer":96}],278:[function(require,module,exports){
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):e.moment=t()}(this,function(){"use strict";function e(){return Os.apply(null,arguments)}function t(e){return e instanceof Array||"[object Array]"===Object.prototype.toString.call(e)}function n(e){return null!=e&&"[object Object]"===Object.prototype.toString.call(e)}function s(e){if(Object.getOwnPropertyNames)return 0===Object.getOwnPropertyNames(e).length;var t;for(t in e)if(e.hasOwnProperty(t))return!1;return!0}function i(e){return void 0===e}function r(e){return"number"==typeof e||"[object Number]"===Object.prototype.toString.call(e)}function a(e){return e instanceof Date||"[object Date]"===Object.prototype.toString.call(e)}function o(e,t){var n,s=[];for(n=0;n<e.length;++n)s.push(t(e[n],n));return s}function u(e,t){return Object.prototype.hasOwnProperty.call(e,t)}function l(e,t){for(var n in t)u(t,n)&&(e[n]=t[n]);return u(t,"toString")&&(e.toString=t.toString),u(t,"valueOf")&&(e.valueOf=t.valueOf),e}function d(e,t,n,s){return Dt(e,t,n,s,!0).utc()}function h(){return{empty:!1,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:!1,invalidMonth:null,invalidFormat:!1,userInvalidated:!1,iso:!1,parsedDateParts:[],meridiem:null,rfc2822:!1,weekdayMismatch:!1}}function c(e){return null==e._pf&&(e._pf=h()),e._pf}function f(e){if(null==e._isValid){var t=c(e),n=Ts.call(t.parsedDateParts,function(e){return null!=e}),s=!isNaN(e._d.getTime())&&t.overflow<0&&!t.empty&&!t.invalidMonth&&!t.invalidWeekday&&!t.weekdayMismatch&&!t.nullInput&&!t.invalidFormat&&!t.userInvalidated&&(!t.meridiem||t.meridiem&&n);if(e._strict&&(s=s&&0===t.charsLeftOver&&0===t.unusedTokens.length&&void 0===t.bigHour),null!=Object.isFrozen&&Object.isFrozen(e))return s;e._isValid=s}return e._isValid}function m(e){var t=d(NaN);return null!=e?l(c(t),e):c(t).userInvalidated=!0,t}function _(e,t){var n,s,r;if(i(t._isAMomentObject)||(e._isAMomentObject=t._isAMomentObject),i(t._i)||(e._i=t._i),i(t._f)||(e._f=t._f),i(t._l)||(e._l=t._l),i(t._strict)||(e._strict=t._strict),i(t._tzm)||(e._tzm=t._tzm),i(t._isUTC)||(e._isUTC=t._isUTC),i(t._offset)||(e._offset=t._offset),i(t._pf)||(e._pf=c(t)),i(t._locale)||(e._locale=t._locale),xs.length>0)for(n=0;n<xs.length;n++)s=xs[n],r=t[s],i(r)||(e[s]=r);return e}function y(t){_(this,t),this._d=new Date(null!=t._d?t._d.getTime():NaN),this.isValid()||(this._d=new Date(NaN)),!1===bs&&(bs=!0,e.updateOffset(this),bs=!1)}function g(e){return e instanceof y||null!=e&&null!=e._isAMomentObject}function p(e){return e<0?Math.ceil(e)||0:Math.floor(e)}function w(e){var t=+e,n=0;return 0!==t&&isFinite(t)&&(n=p(t)),n}function v(e,t,n){var s,i=Math.min(e.length,t.length),r=Math.abs(e.length-t.length),a=0;for(s=0;s<i;s++)(n&&e[s]!==t[s]||!n&&w(e[s])!==w(t[s]))&&a++;return a+r}function M(t){!1===e.suppressDeprecationWarnings&&"undefined"!=typeof console&&console.warn&&console.warn("Deprecation warning: "+t)}function S(t,n){var s=!0;return l(function(){if(null!=e.deprecationHandler&&e.deprecationHandler(null,t),s){for(var i,r=[],a=0;a<arguments.length;a++){if(i="","object"==typeof arguments[a]){i+="\n["+a+"] ";for(var o in arguments[0])i+=o+": "+arguments[0][o]+", ";i=i.slice(0,-2)}else i=arguments[a];r.push(i)}M(t+"\nArguments: "+Array.prototype.slice.call(r).join("")+"\n"+(new Error).stack),s=!1}return n.apply(this,arguments)},n)}function D(t,n){null!=e.deprecationHandler&&e.deprecationHandler(t,n),Ps[t]||(M(n),Ps[t]=!0)}function k(e){return e instanceof Function||"[object Function]"===Object.prototype.toString.call(e)}function Y(e){var t,n;for(n in e)t=e[n],k(t)?this[n]=t:this["_"+n]=t;this._config=e,this._dayOfMonthOrdinalParseLenient=new RegExp((this._dayOfMonthOrdinalParse.source||this._ordinalParse.source)+"|"+/\d{1,2}/.source)}function O(e,t){var s,i=l({},e);for(s in t)u(t,s)&&(n(e[s])&&n(t[s])?(i[s]={},l(i[s],e[s]),l(i[s],t[s])):null!=t[s]?i[s]=t[s]:delete i[s]);for(s in e)u(e,s)&&!u(t,s)&&n(e[s])&&(i[s]=l({},i[s]));return i}function T(e){null!=e&&this.set(e)}function x(e,t,n){var s=this._calendar[e]||this._calendar.sameElse;return k(s)?s.call(t,n):s}function b(e){var t=this._longDateFormat[e],n=this._longDateFormat[e.toUpperCase()];return t||!n?t:(this._longDateFormat[e]=n.replace(/MMMM|MM|DD|dddd/g,function(e){return e.slice(1)}),this._longDateFormat[e])}function P(){return this._invalidDate}function W(e){return this._ordinal.replace("%d",e)}function H(e,t,n,s){var i=this._relativeTime[n];return k(i)?i(e,t,n,s):i.replace(/%d/i,e)}function R(e,t){var n=this._relativeTime[e>0?"future":"past"];return k(n)?n(t):n.replace(/%s/i,t)}function C(e,t){var n=e.toLowerCase();Us[n]=Us[n+"s"]=Us[t]=e}function F(e){return"string"==typeof e?Us[e]||Us[e.toLowerCase()]:void 0}function U(e){var t,n,s={};for(n in e)u(e,n)&&(t=F(n))&&(s[t]=e[n]);return s}function L(e,t){Ls[e]=t}function N(e){var t=[];for(var n in e)t.push({unit:n,priority:Ls[n]});return t.sort(function(e,t){return e.priority-t.priority}),t}function G(e,t,n){var s=""+Math.abs(e),i=t-s.length;return(e>=0?n?"+":"":"-")+Math.pow(10,Math.max(0,i)).toString().substr(1)+s}function V(e,t,n,s){var i=s;"string"==typeof s&&(i=function(){return this[s]()}),e&&(Es[e]=i),t&&(Es[t[0]]=function(){return G(i.apply(this,arguments),t[1],t[2])}),n&&(Es[n]=function(){return this.localeData().ordinal(i.apply(this,arguments),e)})}function E(e){return e.match(/\[[\s\S]/)?e.replace(/^\[|\]$/g,""):e.replace(/\\/g,"")}function I(e){var t,n,s=e.match(Ns);for(t=0,n=s.length;t<n;t++)Es[s[t]]?s[t]=Es[s[t]]:s[t]=E(s[t]);return function(t){var i,r="";for(i=0;i<n;i++)r+=k(s[i])?s[i].call(t,e):s[i];return r}}function A(e,t){return e.isValid()?(t=j(t,e.localeData()),Vs[t]=Vs[t]||I(t),Vs[t](e)):e.localeData().invalidDate()}function j(e,t){function n(e){return t.longDateFormat(e)||e}var s=5;for(Gs.lastIndex=0;s>=0&&Gs.test(e);)e=e.replace(Gs,n),Gs.lastIndex=0,s-=1;return e}function Z(e,t,n){ri[e]=k(t)?t:function(e,s){return e&&n?n:t}}function z(e,t){return u(ri,e)?ri[e](t._strict,t._locale):new RegExp($(e))}function $(e){return q(e.replace("\\","").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,function(e,t,n,s,i){return t||n||s||i}))}function q(e){return e.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}function J(e,t){var n,s=t;for("string"==typeof e&&(e=[e]),r(t)&&(s=function(e,n){n[t]=w(e)}),n=0;n<e.length;n++)ai[e[n]]=s}function B(e,t){J(e,function(e,n,s,i){s._w=s._w||{},t(e,s._w,s,i)})}function Q(e,t,n){null!=t&&u(ai,e)&&ai[e](t,n._a,n,e)}function X(e){return K(e)?366:365}function K(e){return e%4==0&&e%100!=0||e%400==0}function ee(){return K(this.year())}function te(t,n){return function(s){return null!=s?(se(this,t,s),e.updateOffset(this,n),this):ne(this,t)}}function ne(e,t){return e.isValid()?e._d["get"+(e._isUTC?"UTC":"")+t]():NaN}function se(e,t,n){e.isValid()&&!isNaN(n)&&("FullYear"===t&&K(e.year())&&1===e.month()&&29===e.date()?e._d["set"+(e._isUTC?"UTC":"")+t](n,e.month(),oe(n,e.month())):e._d["set"+(e._isUTC?"UTC":"")+t](n))}function ie(e){return e=F(e),k(this[e])?this[e]():this}function re(e,t){if("object"==typeof e){e=U(e);for(var n=N(e),s=0;s<n.length;s++)this[n[s].unit](e[n[s].unit])}else if(e=F(e),k(this[e]))return this[e](t);return this}function ae(e,t){return(e%t+t)%t}function oe(e,t){if(isNaN(e)||isNaN(t))return NaN;var n=ae(t,12);return e+=(t-n)/12,1===n?K(e)?29:28:31-n%7%2}function ue(e,n){return e?t(this._months)?this._months[e.month()]:this._months[(this._months.isFormat||pi).test(n)?"format":"standalone"][e.month()]:t(this._months)?this._months:this._months.standalone}function le(e,n){return e?t(this._monthsShort)?this._monthsShort[e.month()]:this._monthsShort[pi.test(n)?"format":"standalone"][e.month()]:t(this._monthsShort)?this._monthsShort:this._monthsShort.standalone}function de(e,t,n){var s,i,r,a=e.toLocaleLowerCase();if(!this._monthsParse)for(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[],s=0;s<12;++s)r=d([2e3,s]),this._shortMonthsParse[s]=this.monthsShort(r,"").toLocaleLowerCase(),this._longMonthsParse[s]=this.months(r,"").toLocaleLowerCase();return n?"MMM"===t?(i=yi.call(this._shortMonthsParse,a),-1!==i?i:null):(i=yi.call(this._longMonthsParse,a),-1!==i?i:null):"MMM"===t?-1!==(i=yi.call(this._shortMonthsParse,a))?i:(i=yi.call(this._longMonthsParse,a),-1!==i?i:null):-1!==(i=yi.call(this._longMonthsParse,a))?i:(i=yi.call(this._shortMonthsParse,a),-1!==i?i:null)}function he(e,t,n){var s,i,r;if(this._monthsParseExact)return de.call(this,e,t,n);for(this._monthsParse||(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[]),s=0;s<12;s++){if(i=d([2e3,s]),n&&!this._longMonthsParse[s]&&(this._longMonthsParse[s]=new RegExp("^"+this.months(i,"").replace(".","")+"$","i"),this._shortMonthsParse[s]=new RegExp("^"+this.monthsShort(i,"").replace(".","")+"$","i")),n||this._monthsParse[s]||(r="^"+this.months(i,"")+"|^"+this.monthsShort(i,""),this._monthsParse[s]=new RegExp(r.replace(".",""),"i")),n&&"MMMM"===t&&this._longMonthsParse[s].test(e))return s;if(n&&"MMM"===t&&this._shortMonthsParse[s].test(e))return s;if(!n&&this._monthsParse[s].test(e))return s}}function ce(e,t){var n;if(!e.isValid())return e;if("string"==typeof t)if(/^\d+$/.test(t))t=w(t);else if(t=e.localeData().monthsParse(t),!r(t))return e;return n=Math.min(e.date(),oe(e.year(),t)),e._d["set"+(e._isUTC?"UTC":"")+"Month"](t,n),e}function fe(t){return null!=t?(ce(this,t),e.updateOffset(this,!0),this):ne(this,"Month")}function me(){return oe(this.year(),this.month())}function _e(e){return this._monthsParseExact?(u(this,"_monthsRegex")||ge.call(this),e?this._monthsShortStrictRegex:this._monthsShortRegex):(u(this,"_monthsShortRegex")||(this._monthsShortRegex=Mi),this._monthsShortStrictRegex&&e?this._monthsShortStrictRegex:this._monthsShortRegex)}function ye(e){return this._monthsParseExact?(u(this,"_monthsRegex")||ge.call(this),e?this._monthsStrictRegex:this._monthsRegex):(u(this,"_monthsRegex")||(this._monthsRegex=Si),this._monthsStrictRegex&&e?this._monthsStrictRegex:this._monthsRegex)}function ge(){function e(e,t){return t.length-e.length}var t,n,s=[],i=[],r=[];for(t=0;t<12;t++)n=d([2e3,t]),s.push(this.monthsShort(n,"")),i.push(this.months(n,"")),r.push(this.months(n,"")),r.push(this.monthsShort(n,""));for(s.sort(e),i.sort(e),r.sort(e),t=0;t<12;t++)s[t]=q(s[t]),i[t]=q(i[t]);for(t=0;t<24;t++)r[t]=q(r[t]);this._monthsRegex=new RegExp("^("+r.join("|")+")","i"),this._monthsShortRegex=this._monthsRegex,this._monthsStrictRegex=new RegExp("^("+i.join("|")+")","i"),this._monthsShortStrictRegex=new RegExp("^("+s.join("|")+")","i")}function pe(e,t,n,s,i,r,a){var o=new Date(e,t,n,s,i,r,a);return e<100&&e>=0&&isFinite(o.getFullYear())&&o.setFullYear(e),o}function we(e){var t=new Date(Date.UTC.apply(null,arguments));return e<100&&e>=0&&isFinite(t.getUTCFullYear())&&t.setUTCFullYear(e),t}function ve(e,t,n){var s=7+t-n;return-(7+we(e,0,s).getUTCDay()-t)%7+s-1}function Me(e,t,n,s,i){var r,a,o=(7+n-s)%7,u=ve(e,s,i),l=1+7*(t-1)+o+u;return l<=0?(r=e-1,a=X(r)+l):l>X(e)?(r=e+1,a=l-X(e)):(r=e,a=l),{year:r,dayOfYear:a}}function Se(e,t,n){var s,i,r=ve(e.year(),t,n),a=Math.floor((e.dayOfYear()-r-1)/7)+1;return a<1?(i=e.year()-1,s=a+De(i,t,n)):a>De(e.year(),t,n)?(s=a-De(e.year(),t,n),i=e.year()+1):(i=e.year(),s=a),{week:s,year:i}}function De(e,t,n){var s=ve(e,t,n),i=ve(e+1,t,n);return(X(e)-s+i)/7}function ke(e){return Se(e,this._week.dow,this._week.doy).week}function Ye(){return this._week.dow}function Oe(){return this._week.doy}function Te(e){var t=this.localeData().week(this);return null==e?t:this.add(7*(e-t),"d")}function xe(e){var t=Se(this,1,4).week;return null==e?t:this.add(7*(e-t),"d")}function be(e,t){return"string"!=typeof e?e:isNaN(e)?(e=t.weekdaysParse(e),"number"==typeof e?e:null):parseInt(e,10)}function Pe(e,t){return"string"==typeof e?t.weekdaysParse(e)%7||7:isNaN(e)?null:e}function We(e,n){return e?t(this._weekdays)?this._weekdays[e.day()]:this._weekdays[this._weekdays.isFormat.test(n)?"format":"standalone"][e.day()]:t(this._weekdays)?this._weekdays:this._weekdays.standalone}function He(e){return e?this._weekdaysShort[e.day()]:this._weekdaysShort}function Re(e){return e?this._weekdaysMin[e.day()]:this._weekdaysMin}function Ce(e,t,n){var s,i,r,a=e.toLocaleLowerCase();if(!this._weekdaysParse)for(this._weekdaysParse=[],this._shortWeekdaysParse=[],this._minWeekdaysParse=[],s=0;s<7;++s)r=d([2e3,1]).day(s),this._minWeekdaysParse[s]=this.weekdaysMin(r,"").toLocaleLowerCase(),this._shortWeekdaysParse[s]=this.weekdaysShort(r,"").toLocaleLowerCase(),this._weekdaysParse[s]=this.weekdays(r,"").toLocaleLowerCase();return n?"dddd"===t?(i=yi.call(this._weekdaysParse,a),-1!==i?i:null):"ddd"===t?(i=yi.call(this._shortWeekdaysParse,a),-1!==i?i:null):(i=yi.call(this._minWeekdaysParse,a),-1!==i?i:null):"dddd"===t?-1!==(i=yi.call(this._weekdaysParse,a))?i:-1!==(i=yi.call(this._shortWeekdaysParse,a))?i:(i=yi.call(this._minWeekdaysParse,a),-1!==i?i:null):"ddd"===t?-1!==(i=yi.call(this._shortWeekdaysParse,a))?i:-1!==(i=yi.call(this._weekdaysParse,a))?i:(i=yi.call(this._minWeekdaysParse,a),-1!==i?i:null):-1!==(i=yi.call(this._minWeekdaysParse,a))?i:-1!==(i=yi.call(this._weekdaysParse,a))?i:(i=yi.call(this._shortWeekdaysParse,a),-1!==i?i:null)}function Fe(e,t,n){var s,i,r;if(this._weekdaysParseExact)return Ce.call(this,e,t,n);for(this._weekdaysParse||(this._weekdaysParse=[],this._minWeekdaysParse=[],this._shortWeekdaysParse=[],this._fullWeekdaysParse=[]),s=0;s<7;s++){if(i=d([2e3,1]).day(s),n&&!this._fullWeekdaysParse[s]&&(this._fullWeekdaysParse[s]=new RegExp("^"+this.weekdays(i,"").replace(".",".?")+"$","i"),this._shortWeekdaysParse[s]=new RegExp("^"+this.weekdaysShort(i,"").replace(".",".?")+"$","i"),this._minWeekdaysParse[s]=new RegExp("^"+this.weekdaysMin(i,"").replace(".",".?")+"$","i")),this._weekdaysParse[s]||(r="^"+this.weekdays(i,"")+"|^"+this.weekdaysShort(i,"")+"|^"+this.weekdaysMin(i,""),this._weekdaysParse[s]=new RegExp(r.replace(".",""),"i")),n&&"dddd"===t&&this._fullWeekdaysParse[s].test(e))return s;if(n&&"ddd"===t&&this._shortWeekdaysParse[s].test(e))return s;if(n&&"dd"===t&&this._minWeekdaysParse[s].test(e))return s;if(!n&&this._weekdaysParse[s].test(e))return s}}function Ue(e){if(!this.isValid())return null!=e?this:NaN;var t=this._isUTC?this._d.getUTCDay():this._d.getDay();return null!=e?(e=be(e,this.localeData()),this.add(e-t,"d")):t}function Le(e){if(!this.isValid())return null!=e?this:NaN;var t=(this.day()+7-this.localeData()._week.dow)%7;return null==e?t:this.add(e-t,"d")}function Ne(e){if(!this.isValid())return null!=e?this:NaN;if(null!=e){var t=Pe(e,this.localeData());return this.day(this.day()%7?t:t-7)}return this.day()||7}function Ge(e){return this._weekdaysParseExact?(u(this,"_weekdaysRegex")||Ie.call(this),e?this._weekdaysStrictRegex:this._weekdaysRegex):(u(this,"_weekdaysRegex")||(this._weekdaysRegex=Ti),this._weekdaysStrictRegex&&e?this._weekdaysStrictRegex:this._weekdaysRegex)}function Ve(e){return this._weekdaysParseExact?(u(this,"_weekdaysRegex")||Ie.call(this),e?this._weekdaysShortStrictRegex:this._weekdaysShortRegex):(u(this,"_weekdaysShortRegex")||(this._weekdaysShortRegex=xi),this._weekdaysShortStrictRegex&&e?this._weekdaysShortStrictRegex:this._weekdaysShortRegex)}function Ee(e){return this._weekdaysParseExact?(u(this,"_weekdaysRegex")||Ie.call(this),e?this._weekdaysMinStrictRegex:this._weekdaysMinRegex):(u(this,"_weekdaysMinRegex")||(this._weekdaysMinRegex=bi),this._weekdaysMinStrictRegex&&e?this._weekdaysMinStrictRegex:this._weekdaysMinRegex)}function Ie(){function e(e,t){return t.length-e.length}var t,n,s,i,r,a=[],o=[],u=[],l=[];for(t=0;t<7;t++)n=d([2e3,1]).day(t),s=this.weekdaysMin(n,""),i=this.weekdaysShort(n,""),r=this.weekdays(n,""),a.push(s),o.push(i),u.push(r),l.push(s),l.push(i),l.push(r);for(a.sort(e),o.sort(e),u.sort(e),l.sort(e),t=0;t<7;t++)o[t]=q(o[t]),u[t]=q(u[t]),l[t]=q(l[t]);this._weekdaysRegex=new RegExp("^("+l.join("|")+")","i"),this._weekdaysShortRegex=this._weekdaysRegex,this._weekdaysMinRegex=this._weekdaysRegex,this._weekdaysStrictRegex=new RegExp("^("+u.join("|")+")","i"),this._weekdaysShortStrictRegex=new RegExp("^("+o.join("|")+")","i"),this._weekdaysMinStrictRegex=new RegExp("^("+a.join("|")+")","i")}function Ae(){return this.hours()%12||12}function je(){return this.hours()||24}function Ze(e,t){V(e,0,0,function(){return this.localeData().meridiem(this.hours(),this.minutes(),t)})}function ze(e,t){return t._meridiemParse}function $e(e){return"p"===(e+"").toLowerCase().charAt(0)}function qe(e,t,n){return e>11?n?"pm":"PM":n?"am":"AM"}function Je(e){return e?e.toLowerCase().replace("_","-"):e}function Be(e){for(var t,n,s,i,r=0;r<e.length;){for(i=Je(e[r]).split("-"),t=i.length,n=Je(e[r+1]),n=n?n.split("-"):null;t>0;){if(s=Qe(i.slice(0,t).join("-")))return s;if(n&&n.length>=t&&v(i,n,!0)>=t-1)break;t--}r++}return null}function Qe(e){var t=null;if(!Ci[e]&&"undefined"!=typeof module&&module&&module.exports)try{t=Pi._abbr;require("./locale/"+e),Xe(t)}catch(e){}return Ci[e]}function Xe(e,t){var n;return e&&(n=i(t)?tt(e):Ke(e,t))&&(Pi=n),Pi._abbr}function Ke(e,t){if(null!==t){var n=Ri;if(t.abbr=e,null!=Ci[e])D("defineLocaleOverride","use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info."),n=Ci[e]._config;else if(null!=t.parentLocale){if(null==Ci[t.parentLocale])return Fi[t.parentLocale]||(Fi[t.parentLocale]=[]),Fi[t.parentLocale].push({name:e,config:t}),null;n=Ci[t.parentLocale]._config}return Ci[e]=new T(O(n,t)),Fi[e]&&Fi[e].forEach(function(e){Ke(e.name,e.config)}),Xe(e),Ci[e]}return delete Ci[e],null}function et(e,t){if(null!=t){var n,s,i=Ri;s=Qe(e),null!=s&&(i=s._config),t=O(i,t),n=new T(t),n.parentLocale=Ci[e],Ci[e]=n,Xe(e)}else null!=Ci[e]&&(null!=Ci[e].parentLocale?Ci[e]=Ci[e].parentLocale:null!=Ci[e]&&delete Ci[e]);return Ci[e]}function tt(e){var n;if(e&&e._locale&&e._locale._abbr&&(e=e._locale._abbr),!e)return Pi;if(!t(e)){if(n=Qe(e))return n;e=[e]}return Be(e)}function nt(){return Ws(Ci)}function st(e){var t,n=e._a;return n&&-2===c(e).overflow&&(t=n[ui]<0||n[ui]>11?ui:n[li]<1||n[li]>oe(n[oi],n[ui])?li:n[di]<0||n[di]>24||24===n[di]&&(0!==n[hi]||0!==n[ci]||0!==n[fi])?di:n[hi]<0||n[hi]>59?hi:n[ci]<0||n[ci]>59?ci:n[fi]<0||n[fi]>999?fi:-1,c(e)._overflowDayOfYear&&(t<oi||t>li)&&(t=li),c(e)._overflowWeeks&&-1===t&&(t=mi),c(e)._overflowWeekday&&-1===t&&(t=_i),c(e).overflow=t),e}function it(e,t,n){return null!=e?e:null!=t?t:n}function rt(t){var n=new Date(e.now());return t._useUTC?[n.getUTCFullYear(),n.getUTCMonth(),n.getUTCDate()]:[n.getFullYear(),n.getMonth(),n.getDate()]}function at(e){var t,n,s,i,r,a=[];if(!e._d){for(s=rt(e),e._w&&null==e._a[li]&&null==e._a[ui]&&ot(e),null!=e._dayOfYear&&(r=it(e._a[oi],s[oi]),(e._dayOfYear>X(r)||0===e._dayOfYear)&&(c(e)._overflowDayOfYear=!0),n=we(r,0,e._dayOfYear),e._a[ui]=n.getUTCMonth(),e._a[li]=n.getUTCDate()),t=0;t<3&&null==e._a[t];++t)e._a[t]=a[t]=s[t];for(;t<7;t++)e._a[t]=a[t]=null==e._a[t]?2===t?1:0:e._a[t];24===e._a[di]&&0===e._a[hi]&&0===e._a[ci]&&0===e._a[fi]&&(e._nextDay=!0,e._a[di]=0),e._d=(e._useUTC?we:pe).apply(null,a),i=e._useUTC?e._d.getUTCDay():e._d.getDay(),null!=e._tzm&&e._d.setUTCMinutes(e._d.getUTCMinutes()-e._tzm),e._nextDay&&(e._a[di]=24),e._w&&void 0!==e._w.d&&e._w.d!==i&&(c(e).weekdayMismatch=!0)}}function ot(e){var t,n,s,i,r,a,o,u;if(t=e._w,null!=t.GG||null!=t.W||null!=t.E)r=1,a=4,n=it(t.GG,e._a[oi],Se(kt(),1,4).year),s=it(t.W,1),((i=it(t.E,1))<1||i>7)&&(u=!0);else{r=e._locale._week.dow,a=e._locale._week.doy;var l=Se(kt(),r,a);n=it(t.gg,e._a[oi],l.year),s=it(t.w,l.week),null!=t.d?((i=t.d)<0||i>6)&&(u=!0):null!=t.e?(i=t.e+r,(t.e<0||t.e>6)&&(u=!0)):i=r}s<1||s>De(n,r,a)?c(e)._overflowWeeks=!0:null!=u?c(e)._overflowWeekday=!0:(o=Me(n,s,i,r,a),e._a[oi]=o.year,e._dayOfYear=o.dayOfYear)}function ut(e){var t,n,s,i,r,a,o=e._i,u=Ui.exec(o)||Li.exec(o);if(u){for(c(e).iso=!0,t=0,n=Gi.length;t<n;t++)if(Gi[t][1].exec(u[1])){i=Gi[t][0],s=!1!==Gi[t][2];break}if(null==i)return void(e._isValid=!1);if(u[3]){for(t=0,n=Vi.length;t<n;t++)if(Vi[t][1].exec(u[3])){r=(u[2]||" ")+Vi[t][0];break}if(null==r)return void(e._isValid=!1)}if(!s&&null!=r)return void(e._isValid=!1);if(u[4]){if(!Ni.exec(u[4]))return void(e._isValid=!1);a="Z"}e._f=i+(r||"")+(a||""),yt(e)}else e._isValid=!1}function lt(e,t,n,s,i,r){var a=[dt(e),vi.indexOf(t),parseInt(n,10),parseInt(s,10),parseInt(i,10)];return r&&a.push(parseInt(r,10)),a}function dt(e){var t=parseInt(e,10);return t<=49?2e3+t:t<=999?1900+t:t}function ht(e){return e.replace(/\([^)]*\)|[\n\t]/g," ").replace(/(\s\s+)/g," ").trim()}function ct(e,t,n){if(e){if(Yi.indexOf(e)!==new Date(t[0],t[1],t[2]).getDay())return c(n).weekdayMismatch=!0,n._isValid=!1,!1}return!0}function ft(e,t,n){if(e)return Ai[e];if(t)return 0;var s=parseInt(n,10),i=s%100;return(s-i)/100*60+i}function mt(e){var t=Ii.exec(ht(e._i));if(t){var n=lt(t[4],t[3],t[2],t[5],t[6],t[7]);if(!ct(t[1],n,e))return;e._a=n,e._tzm=ft(t[8],t[9],t[10]),e._d=we.apply(null,e._a),e._d.setUTCMinutes(e._d.getUTCMinutes()-e._tzm),c(e).rfc2822=!0}else e._isValid=!1}function _t(t){var n=Ei.exec(t._i);if(null!==n)return void(t._d=new Date(+n[1]));ut(t),!1===t._isValid&&(delete t._isValid,mt(t),!1===t._isValid&&(delete t._isValid,e.createFromInputFallback(t)))}function yt(t){if(t._f===e.ISO_8601)return void ut(t);if(t._f===e.RFC_2822)return void mt(t);t._a=[],c(t).empty=!0;var n,s,i,r,a,o=""+t._i,u=o.length,l=0;for(i=j(t._f,t._locale).match(Ns)||[],n=0;n<i.length;n++)r=i[n],s=(o.match(z(r,t))||[])[0],s&&(a=o.substr(0,o.indexOf(s)),a.length>0&&c(t).unusedInput.push(a),o=o.slice(o.indexOf(s)+s.length),l+=s.length),Es[r]?(s?c(t).empty=!1:c(t).unusedTokens.push(r),Q(r,s,t)):t._strict&&!s&&c(t).unusedTokens.push(r);c(t).charsLeftOver=u-l,o.length>0&&c(t).unusedInput.push(o),t._a[di]<=12&&!0===c(t).bigHour&&t._a[di]>0&&(c(t).bigHour=void 0),c(t).parsedDateParts=t._a.slice(0),c(t).meridiem=t._meridiem,t._a[di]=gt(t._locale,t._a[di],t._meridiem),at(t),st(t)}function gt(e,t,n){var s;return null==n?t:null!=e.meridiemHour?e.meridiemHour(t,n):null!=e.isPM?(s=e.isPM(n),s&&t<12&&(t+=12),s||12!==t||(t=0),t):t}function pt(e){var t,n,s,i,r;if(0===e._f.length)return c(e).invalidFormat=!0,void(e._d=new Date(NaN));for(i=0;i<e._f.length;i++)r=0,t=_({},e),null!=e._useUTC&&(t._useUTC=e._useUTC),t._f=e._f[i],yt(t),f(t)&&(r+=c(t).charsLeftOver,r+=10*c(t).unusedTokens.length,c(t).score=r,(null==s||r<s)&&(s=r,n=t));l(e,n||t)}function wt(e){if(!e._d){var t=U(e._i);e._a=o([t.year,t.month,t.day||t.date,t.hour,t.minute,t.second,t.millisecond],function(e){return e&&parseInt(e,10)}),at(e)}}function vt(e){var t=new y(st(Mt(e)));return t._nextDay&&(t.add(1,"d"),t._nextDay=void 0),t}function Mt(e){var n=e._i,s=e._f;return e._locale=e._locale||tt(e._l),null===n||void 0===s&&""===n?m({nullInput:!0}):("string"==typeof n&&(e._i=n=e._locale.preparse(n)),g(n)?new y(st(n)):(a(n)?e._d=n:t(s)?pt(e):s?yt(e):St(e),f(e)||(e._d=null),e))}function St(s){var u=s._i;i(u)?s._d=new Date(e.now()):a(u)?s._d=new Date(u.valueOf()):"string"==typeof u?_t(s):t(u)?(s._a=o(u.slice(0),function(e){return parseInt(e,10)}),at(s)):n(u)?wt(s):r(u)?s._d=new Date(u):e.createFromInputFallback(s)}function Dt(e,i,r,a,o){var u={};return!0!==r&&!1!==r||(a=r,r=void 0),(n(e)&&s(e)||t(e)&&0===e.length)&&(e=void 0),u._isAMomentObject=!0,u._useUTC=u._isUTC=o,u._l=r,u._i=e,u._f=i,u._strict=a,vt(u)}function kt(e,t,n,s){return Dt(e,t,n,s,!1)}function Yt(e,n){var s,i;if(1===n.length&&t(n[0])&&(n=n[0]),!n.length)return kt();for(s=n[0],i=1;i<n.length;++i)n[i].isValid()&&!n[i][e](s)||(s=n[i]);return s}function Ot(){return Yt("isBefore",[].slice.call(arguments,0))}function Tt(){return Yt("isAfter",[].slice.call(arguments,0))}function xt(e){for(var t in e)if(-1===yi.call($i,t)||null!=e[t]&&isNaN(e[t]))return!1;for(var n=!1,s=0;s<$i.length;++s)if(e[$i[s]]){if(n)return!1;parseFloat(e[$i[s]])!==w(e[$i[s]])&&(n=!0)}return!0}function bt(){return this._isValid}function Pt(){return Jt(NaN)}function Wt(e){var t=U(e),n=t.year||0,s=t.quarter||0,i=t.month||0,r=t.week||0,a=t.day||0,o=t.hour||0,u=t.minute||0,l=t.second||0,d=t.millisecond||0;this._isValid=xt(t),this._milliseconds=+d+1e3*l+6e4*u+1e3*o*60*60,this._days=+a+7*r,this._months=+i+3*s+12*n,this._data={},this._locale=tt(),this._bubble()}function Ht(e){return e instanceof Wt}function Rt(e){return e<0?-1*Math.round(-1*e):Math.round(e)}function Ct(e,t){V(e,0,0,function(){var e=this.utcOffset(),n="+";return e<0&&(e=-e,n="-"),n+G(~~(e/60),2)+t+G(~~e%60,2)})}function Ft(e,t){var n=(t||"").match(e);if(null===n)return null;var s=n[n.length-1]||[],i=(s+"").match(qi)||["-",0,0],r=60*i[1]+w(i[2]);return 0===r?0:"+"===i[0]?r:-r}function Ut(t,n){var s,i;return n._isUTC?(s=n.clone(),i=(g(t)||a(t)?t.valueOf():kt(t).valueOf())-s.valueOf(),s._d.setTime(s._d.valueOf()+i),e.updateOffset(s,!1),s):kt(t).local()}function Lt(e){return 15*-Math.round(e._d.getTimezoneOffset()/15)}function Nt(t,n,s){var i,r=this._offset||0;if(!this.isValid())return null!=t?this:NaN;if(null!=t){if("string"==typeof t){if(null===(t=Ft(ni,t)))return this}else Math.abs(t)<16&&!s&&(t*=60);return!this._isUTC&&n&&(i=Lt(this)),this._offset=t,this._isUTC=!0,null!=i&&this.add(i,"m"),r!==t&&(!n||this._changeInProgress?en(this,Jt(t-r,"m"),1,!1):this._changeInProgress||(this._changeInProgress=!0,e.updateOffset(this,!0),this._changeInProgress=null)),this}return this._isUTC?r:Lt(this)}function Gt(e,t){return null!=e?("string"!=typeof e&&(e=-e),this.utcOffset(e,t),this):-this.utcOffset()}function Vt(e){return this.utcOffset(0,e)}function Et(e){return this._isUTC&&(this.utcOffset(0,e),this._isUTC=!1,e&&this.subtract(Lt(this),"m")),this}function It(){if(null!=this._tzm)this.utcOffset(this._tzm,!1,!0);else if("string"==typeof this._i){var e=Ft(ti,this._i);null!=e?this.utcOffset(e):this.utcOffset(0,!0)}return this}function At(e){return!!this.isValid()&&(e=e?kt(e).utcOffset():0,(this.utcOffset()-e)%60==0)}function jt(){return this.utcOffset()>this.clone().month(0).utcOffset()||this.utcOffset()>this.clone().month(5).utcOffset()}function Zt(){if(!i(this._isDSTShifted))return this._isDSTShifted;var e={};if(_(e,this),e=Mt(e),e._a){var t=e._isUTC?d(e._a):kt(e._a);this._isDSTShifted=this.isValid()&&v(e._a,t.toArray())>0}else this._isDSTShifted=!1;return this._isDSTShifted}function zt(){return!!this.isValid()&&!this._isUTC}function $t(){return!!this.isValid()&&this._isUTC}function qt(){return!!this.isValid()&&(this._isUTC&&0===this._offset)}function Jt(e,t){var n,s,i,a=e,o=null;return Ht(e)?a={ms:e._milliseconds,d:e._days,M:e._months}:r(e)?(a={},t?a[t]=e:a.milliseconds=e):(o=Ji.exec(e))?(n="-"===o[1]?-1:1,a={y:0,d:w(o[li])*n,h:w(o[di])*n,m:w(o[hi])*n,s:w(o[ci])*n,ms:w(Rt(1e3*o[fi]))*n}):(o=Bi.exec(e))?(n="-"===o[1]?-1:(o[1],1),a={y:Bt(o[2],n),M:Bt(o[3],n),w:Bt(o[4],n),d:Bt(o[5],n),h:Bt(o[6],n),m:Bt(o[7],n),s:Bt(o[8],n)}):null==a?a={}:"object"==typeof a&&("from"in a||"to"in a)&&(i=Xt(kt(a.from),kt(a.to)),a={},a.ms=i.milliseconds,a.M=i.months),s=new Wt(a),Ht(e)&&u(e,"_locale")&&(s._locale=e._locale),s}function Bt(e,t){var n=e&&parseFloat(e.replace(",","."));return(isNaN(n)?0:n)*t}function Qt(e,t){var n={milliseconds:0,months:0};return n.months=t.month()-e.month()+12*(t.year()-e.year()),e.clone().add(n.months,"M").isAfter(t)&&--n.months,n.milliseconds=+t-+e.clone().add(n.months,"M"),n}function Xt(e,t){var n;return e.isValid()&&t.isValid()?(t=Ut(t,e),e.isBefore(t)?n=Qt(e,t):(n=Qt(t,e),n.milliseconds=-n.milliseconds,n.months=-n.months),n):{milliseconds:0,months:0}}function Kt(e,t){return function(n,s){var i,r;return null===s||isNaN(+s)||(D(t,"moment()."+t+"(period, number) is deprecated. Please use moment()."+t+"(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info."),r=n,n=s,s=r),n="string"==typeof n?+n:n,i=Jt(n,s),en(this,i,e),this}}function en(t,n,s,i){var r=n._milliseconds,a=Rt(n._days),o=Rt(n._months);t.isValid()&&(i=null==i||i,o&&ce(t,ne(t,"Month")+o*s),a&&se(t,"Date",ne(t,"Date")+a*s),r&&t._d.setTime(t._d.valueOf()+r*s),i&&e.updateOffset(t,a||o))}function tn(e,t){var n=e.diff(t,"days",!0);return n<-6?"sameElse":n<-1?"lastWeek":n<0?"lastDay":n<1?"sameDay":n<2?"nextDay":n<7?"nextWeek":"sameElse"}function nn(t,n){var s=t||kt(),i=Ut(s,this).startOf("day"),r=e.calendarFormat(this,i)||"sameElse",a=n&&(k(n[r])?n[r].call(this,s):n[r]);return this.format(a||this.localeData().calendar(r,this,kt(s)))}function sn(){return new y(this)}function rn(e,t){var n=g(e)?e:kt(e);return!(!this.isValid()||!n.isValid())&&(t=F(i(t)?"millisecond":t),"millisecond"===t?this.valueOf()>n.valueOf():n.valueOf()<this.clone().startOf(t).valueOf())}function an(e,t){var n=g(e)?e:kt(e);return!(!this.isValid()||!n.isValid())&&(t=F(i(t)?"millisecond":t),"millisecond"===t?this.valueOf()<n.valueOf():this.clone().endOf(t).valueOf()<n.valueOf())}function on(e,t,n,s){return s=s||"()",("("===s[0]?this.isAfter(e,n):!this.isBefore(e,n))&&(")"===s[1]?this.isBefore(t,n):!this.isAfter(t,n))}function un(e,t){var n,s=g(e)?e:kt(e);return!(!this.isValid()||!s.isValid())&&(t=F(t||"millisecond"),"millisecond"===t?this.valueOf()===s.valueOf():(n=s.valueOf(),this.clone().startOf(t).valueOf()<=n&&n<=this.clone().endOf(t).valueOf()))}function ln(e,t){return this.isSame(e,t)||this.isAfter(e,t)}function dn(e,t){return this.isSame(e,t)||this.isBefore(e,t)}function hn(e,t,n){var s,i,r;if(!this.isValid())return NaN;if(s=Ut(e,this),!s.isValid())return NaN;switch(i=6e4*(s.utcOffset()-this.utcOffset()),t=F(t)){case"year":r=cn(this,s)/12;break;case"month":r=cn(this,s);break;case"quarter":r=cn(this,s)/3;break;case"second":r=(this-s)/1e3;break;case"minute":r=(this-s)/6e4;break;case"hour":r=(this-s)/36e5;break;case"day":r=(this-s-i)/864e5;break;case"week":r=(this-s-i)/6048e5;break;default:r=this-s}return n?r:p(r)}function cn(e,t){var n,s,i=12*(t.year()-e.year())+(t.month()-e.month()),r=e.clone().add(i,"months");return t-r<0?(n=e.clone().add(i-1,"months"),s=(t-r)/(r-n)):(n=e.clone().add(i+1,"months"),s=(t-r)/(n-r)),-(i+s)||0}function fn(){return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")}function mn(e){if(!this.isValid())return null;var t=!0!==e,n=t?this.clone().utc():this;return n.year()<0||n.year()>9999?A(n,t?"YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]":"YYYYYY-MM-DD[T]HH:mm:ss.SSSZ"):k(Date.prototype.toISOString)?t?this.toDate().toISOString():new Date(this._d.valueOf()).toISOString().replace("Z",A(n,"Z")):A(n,t?"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]":"YYYY-MM-DD[T]HH:mm:ss.SSSZ")}function _n(){if(!this.isValid())return"moment.invalid(/* "+this._i+" */)";var e="moment",t="";this.isLocal()||(e=0===this.utcOffset()?"moment.utc":"moment.parseZone",t="Z");var n="["+e+'("]',s=0<=this.year()&&this.year()<=9999?"YYYY":"YYYYYY",i=t+'[")]';return this.format(n+s+"-MM-DD[T]HH:mm:ss.SSS"+i)}function yn(t){t||(t=this.isUtc()?e.defaultFormatUtc:e.defaultFormat);var n=A(this,t);return this.localeData().postformat(n)}function gn(e,t){return this.isValid()&&(g(e)&&e.isValid()||kt(e).isValid())?Jt({to:this,from:e}).locale(this.locale()).humanize(!t):this.localeData().invalidDate()}function pn(e){return this.from(kt(),e)}function wn(e,t){return this.isValid()&&(g(e)&&e.isValid()||kt(e).isValid())?Jt({from:this,to:e}).locale(this.locale()).humanize(!t):this.localeData().invalidDate()}function vn(e){return this.to(kt(),e)}function Mn(e){var t;return void 0===e?this._locale._abbr:(t=tt(e),null!=t&&(this._locale=t),this)}function Sn(){return this._locale}function Dn(e){switch(e=F(e)){case"year":this.month(0);case"quarter":case"month":this.date(1);case"week":case"isoWeek":case"day":case"date":this.hours(0);case"hour":this.minutes(0);case"minute":this.seconds(0);case"second":this.milliseconds(0)}return"week"===e&&this.weekday(0),"isoWeek"===e&&this.isoWeekday(1),"quarter"===e&&this.month(3*Math.floor(this.month()/3)),this}function kn(e){return void 0===(e=F(e))||"millisecond"===e?this:("date"===e&&(e="day"),this.startOf(e).add(1,"isoWeek"===e?"week":e).subtract(1,"ms"))}function Yn(){
return this._d.valueOf()-6e4*(this._offset||0)}function On(){return Math.floor(this.valueOf()/1e3)}function Tn(){return new Date(this.valueOf())}function xn(){var e=this;return[e.year(),e.month(),e.date(),e.hour(),e.minute(),e.second(),e.millisecond()]}function bn(){var e=this;return{years:e.year(),months:e.month(),date:e.date(),hours:e.hours(),minutes:e.minutes(),seconds:e.seconds(),milliseconds:e.milliseconds()}}function Pn(){return this.isValid()?this.toISOString():null}function Wn(){return f(this)}function Hn(){return l({},c(this))}function Rn(){return c(this).overflow}function Cn(){return{input:this._i,format:this._f,locale:this._locale,isUTC:this._isUTC,strict:this._strict}}function Fn(e,t){V(0,[e,e.length],0,t)}function Un(e){return Vn.call(this,e,this.week(),this.weekday(),this.localeData()._week.dow,this.localeData()._week.doy)}function Ln(e){return Vn.call(this,e,this.isoWeek(),this.isoWeekday(),1,4)}function Nn(){return De(this.year(),1,4)}function Gn(){var e=this.localeData()._week;return De(this.year(),e.dow,e.doy)}function Vn(e,t,n,s,i){var r;return null==e?Se(this,s,i).year:(r=De(e,s,i),t>r&&(t=r),En.call(this,e,t,n,s,i))}function En(e,t,n,s,i){var r=Me(e,t,n,s,i),a=we(r.year,0,r.dayOfYear);return this.year(a.getUTCFullYear()),this.month(a.getUTCMonth()),this.date(a.getUTCDate()),this}function In(e){return null==e?Math.ceil((this.month()+1)/3):this.month(3*(e-1)+this.month()%3)}function An(e){var t=Math.round((this.clone().startOf("day")-this.clone().startOf("year"))/864e5)+1;return null==e?t:this.add(e-t,"d")}function jn(e,t){t[fi]=w(1e3*("0."+e))}function Zn(){return this._isUTC?"UTC":""}function zn(){return this._isUTC?"Coordinated Universal Time":""}function $n(e){return kt(1e3*e)}function qn(){return kt.apply(null,arguments).parseZone()}function Jn(e){return e}function Bn(e,t,n,s){var i=tt(),r=d().set(s,t);return i[n](r,e)}function Qn(e,t,n){if(r(e)&&(t=e,e=void 0),e=e||"",null!=t)return Bn(e,t,n,"month");var s,i=[];for(s=0;s<12;s++)i[s]=Bn(e,s,n,"month");return i}function Xn(e,t,n,s){"boolean"==typeof e?(r(t)&&(n=t,t=void 0),t=t||""):(t=e,n=t,e=!1,r(t)&&(n=t,t=void 0),t=t||"");var i=tt(),a=e?i._week.dow:0;if(null!=n)return Bn(t,(n+a)%7,s,"day");var o,u=[];for(o=0;o<7;o++)u[o]=Bn(t,(o+a)%7,s,"day");return u}function Kn(e,t){return Qn(e,t,"months")}function es(e,t){return Qn(e,t,"monthsShort")}function ts(e,t,n){return Xn(e,t,n,"weekdays")}function ns(e,t,n){return Xn(e,t,n,"weekdaysShort")}function ss(e,t,n){return Xn(e,t,n,"weekdaysMin")}function is(){var e=this._data;return this._milliseconds=or(this._milliseconds),this._days=or(this._days),this._months=or(this._months),e.milliseconds=or(e.milliseconds),e.seconds=or(e.seconds),e.minutes=or(e.minutes),e.hours=or(e.hours),e.months=or(e.months),e.years=or(e.years),this}function rs(e,t,n,s){var i=Jt(t,n);return e._milliseconds+=s*i._milliseconds,e._days+=s*i._days,e._months+=s*i._months,e._bubble()}function as(e,t){return rs(this,e,t,1)}function os(e,t){return rs(this,e,t,-1)}function us(e){return e<0?Math.floor(e):Math.ceil(e)}function ls(){var e,t,n,s,i,r=this._milliseconds,a=this._days,o=this._months,u=this._data;return r>=0&&a>=0&&o>=0||r<=0&&a<=0&&o<=0||(r+=864e5*us(hs(o)+a),a=0,o=0),u.milliseconds=r%1e3,e=p(r/1e3),u.seconds=e%60,t=p(e/60),u.minutes=t%60,n=p(t/60),u.hours=n%24,a+=p(n/24),i=p(ds(a)),o+=i,a-=us(hs(i)),s=p(o/12),o%=12,u.days=a,u.months=o,u.years=s,this}function ds(e){return 4800*e/146097}function hs(e){return 146097*e/4800}function cs(e){if(!this.isValid())return NaN;var t,n,s=this._milliseconds;if("month"===(e=F(e))||"year"===e)return t=this._days+s/864e5,n=this._months+ds(t),"month"===e?n:n/12;switch(t=this._days+Math.round(hs(this._months)),e){case"week":return t/7+s/6048e5;case"day":return t+s/864e5;case"hour":return 24*t+s/36e5;case"minute":return 1440*t+s/6e4;case"second":return 86400*t+s/1e3;case"millisecond":return Math.floor(864e5*t)+s;default:throw new Error("Unknown unit "+e)}}function fs(){return this.isValid()?this._milliseconds+864e5*this._days+this._months%12*2592e6+31536e6*w(this._months/12):NaN}function ms(e){return function(){return this.as(e)}}function _s(){return Jt(this)}function ys(e){return e=F(e),this.isValid()?this[e+"s"]():NaN}function gs(e){return function(){return this.isValid()?this._data[e]:NaN}}function ps(){return p(this.days()/7)}function ws(e,t,n,s,i){return i.relativeTime(t||1,!!n,e,s)}function vs(e,t,n){var s=Jt(e).abs(),i=Dr(s.as("s")),r=Dr(s.as("m")),a=Dr(s.as("h")),o=Dr(s.as("d")),u=Dr(s.as("M")),l=Dr(s.as("y")),d=i<=kr.ss&&["s",i]||i<kr.s&&["ss",i]||r<=1&&["m"]||r<kr.m&&["mm",r]||a<=1&&["h"]||a<kr.h&&["hh",a]||o<=1&&["d"]||o<kr.d&&["dd",o]||u<=1&&["M"]||u<kr.M&&["MM",u]||l<=1&&["y"]||["yy",l];return d[2]=t,d[3]=+e>0,d[4]=n,ws.apply(null,d)}function Ms(e){return void 0===e?Dr:"function"==typeof e&&(Dr=e,!0)}function Ss(e,t){return void 0!==kr[e]&&(void 0===t?kr[e]:(kr[e]=t,"s"===e&&(kr.ss=t-1),!0))}function Ds(e){if(!this.isValid())return this.localeData().invalidDate();var t=this.localeData(),n=vs(this,!e,t);return e&&(n=t.pastFuture(+this,n)),t.postformat(n)}function ks(e){return(e>0)-(e<0)||+e}function Ys(){if(!this.isValid())return this.localeData().invalidDate();var e,t,n,s=Yr(this._milliseconds)/1e3,i=Yr(this._days),r=Yr(this._months);e=p(s/60),t=p(e/60),s%=60,e%=60,n=p(r/12),r%=12;var a=n,o=r,u=i,l=t,d=e,h=s?s.toFixed(3).replace(/\.?0+$/,""):"",c=this.asSeconds();if(!c)return"P0D";var f=c<0?"-":"",m=ks(this._months)!==ks(c)?"-":"",_=ks(this._days)!==ks(c)?"-":"",y=ks(this._milliseconds)!==ks(c)?"-":"";return f+"P"+(a?m+a+"Y":"")+(o?m+o+"M":"")+(u?_+u+"D":"")+(l||d||h?"T":"")+(l?y+l+"H":"")+(d?y+d+"M":"")+(h?y+h+"S":"")}var Os,Ts;Ts=Array.prototype.some?Array.prototype.some:function(e){for(var t=Object(this),n=t.length>>>0,s=0;s<n;s++)if(s in t&&e.call(this,t[s],s,t))return!0;return!1};var xs=e.momentProperties=[],bs=!1,Ps={};e.suppressDeprecationWarnings=!1,e.deprecationHandler=null;var Ws;Ws=Object.keys?Object.keys:function(e){var t,n=[];for(t in e)u(e,t)&&n.push(t);return n};var Hs={sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"},Rs={LTS:"h:mm:ss A",LT:"h:mm A",L:"MM/DD/YYYY",LL:"MMMM D, YYYY",LLL:"MMMM D, YYYY h:mm A",LLLL:"dddd, MMMM D, YYYY h:mm A"},Cs=/\d{1,2}/,Fs={future:"in %s",past:"%s ago",s:"a few seconds",ss:"%d seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},Us={},Ls={},Ns=/(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,Gs=/(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,Vs={},Es={},Is=/\d/,As=/\d\d/,js=/\d{3}/,Zs=/\d{4}/,zs=/[+-]?\d{6}/,$s=/\d\d?/,qs=/\d\d\d\d?/,Js=/\d\d\d\d\d\d?/,Bs=/\d{1,3}/,Qs=/\d{1,4}/,Xs=/[+-]?\d{1,6}/,Ks=/\d+/,ei=/[+-]?\d+/,ti=/Z|[+-]\d\d:?\d\d/gi,ni=/Z|[+-]\d\d(?::?\d\d)?/gi,si=/[+-]?\d+(\.\d{1,3})?/,ii=/[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i,ri={},ai={},oi=0,ui=1,li=2,di=3,hi=4,ci=5,fi=6,mi=7,_i=8;V("Y",0,0,function(){var e=this.year();return e<=9999?""+e:"+"+e}),V(0,["YY",2],0,function(){return this.year()%100}),V(0,["YYYY",4],0,"year"),V(0,["YYYYY",5],0,"year"),V(0,["YYYYYY",6,!0],0,"year"),C("year","y"),L("year",1),Z("Y",ei),Z("YY",$s,As),Z("YYYY",Qs,Zs),Z("YYYYY",Xs,zs),Z("YYYYYY",Xs,zs),J(["YYYYY","YYYYYY"],oi),J("YYYY",function(t,n){n[oi]=2===t.length?e.parseTwoDigitYear(t):w(t)}),J("YY",function(t,n){n[oi]=e.parseTwoDigitYear(t)}),J("Y",function(e,t){t[oi]=parseInt(e,10)}),e.parseTwoDigitYear=function(e){return w(e)+(w(e)>68?1900:2e3)};var yi,gi=te("FullYear",!0);yi=Array.prototype.indexOf?Array.prototype.indexOf:function(e){var t;for(t=0;t<this.length;++t)if(this[t]===e)return t;return-1},V("M",["MM",2],"Mo",function(){return this.month()+1}),V("MMM",0,0,function(e){return this.localeData().monthsShort(this,e)}),V("MMMM",0,0,function(e){return this.localeData().months(this,e)}),C("month","M"),L("month",8),Z("M",$s),Z("MM",$s,As),Z("MMM",function(e,t){return t.monthsShortRegex(e)}),Z("MMMM",function(e,t){return t.monthsRegex(e)}),J(["M","MM"],function(e,t){t[ui]=w(e)-1}),J(["MMM","MMMM"],function(e,t,n,s){var i=n._locale.monthsParse(e,s,n._strict);null!=i?t[ui]=i:c(n).invalidMonth=e});var pi=/D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,wi="January_February_March_April_May_June_July_August_September_October_November_December".split("_"),vi="Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),Mi=ii,Si=ii;V("w",["ww",2],"wo","week"),V("W",["WW",2],"Wo","isoWeek"),C("week","w"),C("isoWeek","W"),L("week",5),L("isoWeek",5),Z("w",$s),Z("ww",$s,As),Z("W",$s),Z("WW",$s,As),B(["w","ww","W","WW"],function(e,t,n,s){t[s.substr(0,1)]=w(e)});var Di={dow:0,doy:6};V("d",0,"do","day"),V("dd",0,0,function(e){return this.localeData().weekdaysMin(this,e)}),V("ddd",0,0,function(e){return this.localeData().weekdaysShort(this,e)}),V("dddd",0,0,function(e){return this.localeData().weekdays(this,e)}),V("e",0,0,"weekday"),V("E",0,0,"isoWeekday"),C("day","d"),C("weekday","e"),C("isoWeekday","E"),L("day",11),L("weekday",11),L("isoWeekday",11),Z("d",$s),Z("e",$s),Z("E",$s),Z("dd",function(e,t){return t.weekdaysMinRegex(e)}),Z("ddd",function(e,t){return t.weekdaysShortRegex(e)}),Z("dddd",function(e,t){return t.weekdaysRegex(e)}),B(["dd","ddd","dddd"],function(e,t,n,s){var i=n._locale.weekdaysParse(e,s,n._strict);null!=i?t.d=i:c(n).invalidWeekday=e}),B(["d","e","E"],function(e,t,n,s){t[s]=w(e)});var ki="Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),Yi="Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),Oi="Su_Mo_Tu_We_Th_Fr_Sa".split("_"),Ti=ii,xi=ii,bi=ii;V("H",["HH",2],0,"hour"),V("h",["hh",2],0,Ae),V("k",["kk",2],0,je),V("hmm",0,0,function(){return""+Ae.apply(this)+G(this.minutes(),2)}),V("hmmss",0,0,function(){return""+Ae.apply(this)+G(this.minutes(),2)+G(this.seconds(),2)}),V("Hmm",0,0,function(){return""+this.hours()+G(this.minutes(),2)}),V("Hmmss",0,0,function(){return""+this.hours()+G(this.minutes(),2)+G(this.seconds(),2)}),Ze("a",!0),Ze("A",!1),C("hour","h"),L("hour",13),Z("a",ze),Z("A",ze),Z("H",$s),Z("h",$s),Z("k",$s),Z("HH",$s,As),Z("hh",$s,As),Z("kk",$s,As),Z("hmm",qs),Z("hmmss",Js),Z("Hmm",qs),Z("Hmmss",Js),J(["H","HH"],di),J(["k","kk"],function(e,t,n){var s=w(e);t[di]=24===s?0:s}),J(["a","A"],function(e,t,n){n._isPm=n._locale.isPM(e),n._meridiem=e}),J(["h","hh"],function(e,t,n){t[di]=w(e),c(n).bigHour=!0}),J("hmm",function(e,t,n){var s=e.length-2;t[di]=w(e.substr(0,s)),t[hi]=w(e.substr(s)),c(n).bigHour=!0}),J("hmmss",function(e,t,n){var s=e.length-4,i=e.length-2;t[di]=w(e.substr(0,s)),t[hi]=w(e.substr(s,2)),t[ci]=w(e.substr(i)),c(n).bigHour=!0}),J("Hmm",function(e,t,n){var s=e.length-2;t[di]=w(e.substr(0,s)),t[hi]=w(e.substr(s))}),J("Hmmss",function(e,t,n){var s=e.length-4,i=e.length-2;t[di]=w(e.substr(0,s)),t[hi]=w(e.substr(s,2)),t[ci]=w(e.substr(i))});var Pi,Wi=/[ap]\.?m?\.?/i,Hi=te("Hours",!0),Ri={calendar:Hs,longDateFormat:Rs,invalidDate:"Invalid date",ordinal:"%d",dayOfMonthOrdinalParse:Cs,relativeTime:Fs,months:wi,monthsShort:vi,week:Di,weekdays:ki,weekdaysMin:Oi,weekdaysShort:Yi,meridiemParse:Wi},Ci={},Fi={},Ui=/^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,Li=/^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,Ni=/Z|[+-]\d\d(?::?\d\d)?/,Gi=[["YYYYYY-MM-DD",/[+-]\d{6}-\d\d-\d\d/],["YYYY-MM-DD",/\d{4}-\d\d-\d\d/],["GGGG-[W]WW-E",/\d{4}-W\d\d-\d/],["GGGG-[W]WW",/\d{4}-W\d\d/,!1],["YYYY-DDD",/\d{4}-\d{3}/],["YYYY-MM",/\d{4}-\d\d/,!1],["YYYYYYMMDD",/[+-]\d{10}/],["YYYYMMDD",/\d{8}/],["GGGG[W]WWE",/\d{4}W\d{3}/],["GGGG[W]WW",/\d{4}W\d{2}/,!1],["YYYYDDD",/\d{7}/]],Vi=[["HH:mm:ss.SSSS",/\d\d:\d\d:\d\d\.\d+/],["HH:mm:ss,SSSS",/\d\d:\d\d:\d\d,\d+/],["HH:mm:ss",/\d\d:\d\d:\d\d/],["HH:mm",/\d\d:\d\d/],["HHmmss.SSSS",/\d\d\d\d\d\d\.\d+/],["HHmmss,SSSS",/\d\d\d\d\d\d,\d+/],["HHmmss",/\d\d\d\d\d\d/],["HHmm",/\d\d\d\d/],["HH",/\d\d/]],Ei=/^\/?Date\((\-?\d+)/i,Ii=/^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/,Ai={UT:0,GMT:0,EDT:-240,EST:-300,CDT:-300,CST:-360,MDT:-360,MST:-420,PDT:-420,PST:-480};e.createFromInputFallback=S("value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged and will be removed in an upcoming major release. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.",function(e){e._d=new Date(e._i+(e._useUTC?" UTC":""))}),e.ISO_8601=function(){},e.RFC_2822=function(){};var ji=S("moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/",function(){var e=kt.apply(null,arguments);return this.isValid()&&e.isValid()?e<this?this:e:m()}),Zi=S("moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/",function(){var e=kt.apply(null,arguments);return this.isValid()&&e.isValid()?e>this?this:e:m()}),zi=function(){return Date.now?Date.now():+new Date},$i=["year","quarter","month","week","day","hour","minute","second","millisecond"];Ct("Z",":"),Ct("ZZ",""),Z("Z",ni),Z("ZZ",ni),J(["Z","ZZ"],function(e,t,n){n._useUTC=!0,n._tzm=Ft(ni,e)});var qi=/([\+\-]|\d\d)/gi;e.updateOffset=function(){};var Ji=/^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/,Bi=/^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;Jt.fn=Wt.prototype,Jt.invalid=Pt;var Qi=Kt(1,"add"),Xi=Kt(-1,"subtract");e.defaultFormat="YYYY-MM-DDTHH:mm:ssZ",e.defaultFormatUtc="YYYY-MM-DDTHH:mm:ss[Z]";var Ki=S("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.",function(e){return void 0===e?this.localeData():this.locale(e)});V(0,["gg",2],0,function(){return this.weekYear()%100}),V(0,["GG",2],0,function(){return this.isoWeekYear()%100}),Fn("gggg","weekYear"),Fn("ggggg","weekYear"),Fn("GGGG","isoWeekYear"),Fn("GGGGG","isoWeekYear"),C("weekYear","gg"),C("isoWeekYear","GG"),L("weekYear",1),L("isoWeekYear",1),Z("G",ei),Z("g",ei),Z("GG",$s,As),Z("gg",$s,As),Z("GGGG",Qs,Zs),Z("gggg",Qs,Zs),Z("GGGGG",Xs,zs),Z("ggggg",Xs,zs),B(["gggg","ggggg","GGGG","GGGGG"],function(e,t,n,s){t[s.substr(0,2)]=w(e)}),B(["gg","GG"],function(t,n,s,i){n[i]=e.parseTwoDigitYear(t)}),V("Q",0,"Qo","quarter"),C("quarter","Q"),L("quarter",7),Z("Q",Is),J("Q",function(e,t){t[ui]=3*(w(e)-1)}),V("D",["DD",2],"Do","date"),C("date","D"),L("date",9),Z("D",$s),Z("DD",$s,As),Z("Do",function(e,t){return e?t._dayOfMonthOrdinalParse||t._ordinalParse:t._dayOfMonthOrdinalParseLenient}),J(["D","DD"],li),J("Do",function(e,t){t[li]=w(e.match($s)[0])});var er=te("Date",!0);V("DDD",["DDDD",3],"DDDo","dayOfYear"),C("dayOfYear","DDD"),L("dayOfYear",4),Z("DDD",Bs),Z("DDDD",js),J(["DDD","DDDD"],function(e,t,n){n._dayOfYear=w(e)}),V("m",["mm",2],0,"minute"),C("minute","m"),L("minute",14),Z("m",$s),Z("mm",$s,As),J(["m","mm"],hi);var tr=te("Minutes",!1);V("s",["ss",2],0,"second"),C("second","s"),L("second",15),Z("s",$s),Z("ss",$s,As),J(["s","ss"],ci);var nr=te("Seconds",!1);V("S",0,0,function(){return~~(this.millisecond()/100)}),V(0,["SS",2],0,function(){return~~(this.millisecond()/10)}),V(0,["SSS",3],0,"millisecond"),V(0,["SSSS",4],0,function(){return 10*this.millisecond()}),V(0,["SSSSS",5],0,function(){return 100*this.millisecond()}),V(0,["SSSSSS",6],0,function(){return 1e3*this.millisecond()}),V(0,["SSSSSSS",7],0,function(){return 1e4*this.millisecond()}),V(0,["SSSSSSSS",8],0,function(){return 1e5*this.millisecond()}),V(0,["SSSSSSSSS",9],0,function(){return 1e6*this.millisecond()}),C("millisecond","ms"),L("millisecond",16),Z("S",Bs,Is),Z("SS",Bs,As),Z("SSS",Bs,js);var sr;for(sr="SSSS";sr.length<=9;sr+="S")Z(sr,Ks);for(sr="S";sr.length<=9;sr+="S")J(sr,jn);var ir=te("Milliseconds",!1);V("z",0,0,"zoneAbbr"),V("zz",0,0,"zoneName");var rr=y.prototype;rr.add=Qi,rr.calendar=nn,rr.clone=sn,rr.diff=hn,rr.endOf=kn,rr.format=yn,rr.from=gn,rr.fromNow=pn,rr.to=wn,rr.toNow=vn,rr.get=ie,rr.invalidAt=Rn,rr.isAfter=rn,rr.isBefore=an,rr.isBetween=on,rr.isSame=un,rr.isSameOrAfter=ln,rr.isSameOrBefore=dn,rr.isValid=Wn,rr.lang=Ki,rr.locale=Mn,rr.localeData=Sn,rr.max=Zi,rr.min=ji,rr.parsingFlags=Hn,rr.set=re,rr.startOf=Dn,rr.subtract=Xi,rr.toArray=xn,rr.toObject=bn,rr.toDate=Tn,rr.toISOString=mn,rr.inspect=_n,rr.toJSON=Pn,rr.toString=fn,rr.unix=On,rr.valueOf=Yn,rr.creationData=Cn,rr.year=gi,rr.isLeapYear=ee,rr.weekYear=Un,rr.isoWeekYear=Ln,rr.quarter=rr.quarters=In,rr.month=fe,rr.daysInMonth=me,rr.week=rr.weeks=Te,rr.isoWeek=rr.isoWeeks=xe,rr.weeksInYear=Gn,rr.isoWeeksInYear=Nn,rr.date=er,rr.day=rr.days=Ue,rr.weekday=Le,rr.isoWeekday=Ne,rr.dayOfYear=An,rr.hour=rr.hours=Hi,rr.minute=rr.minutes=tr,rr.second=rr.seconds=nr,rr.millisecond=rr.milliseconds=ir,rr.utcOffset=Nt,rr.utc=Vt,rr.local=Et,rr.parseZone=It,rr.hasAlignedHourOffset=At,rr.isDST=jt,rr.isLocal=zt,rr.isUtcOffset=$t,rr.isUtc=qt,rr.isUTC=qt,rr.zoneAbbr=Zn,rr.zoneName=zn,rr.dates=S("dates accessor is deprecated. Use date instead.",er),rr.months=S("months accessor is deprecated. Use month instead",fe),rr.years=S("years accessor is deprecated. Use year instead",gi),rr.zone=S("moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/",Gt),rr.isDSTShifted=S("isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information",Zt);var ar=T.prototype;ar.calendar=x,ar.longDateFormat=b,ar.invalidDate=P,ar.ordinal=W,ar.preparse=Jn,ar.postformat=Jn,ar.relativeTime=H,ar.pastFuture=R,ar.set=Y,ar.months=ue,ar.monthsShort=le,ar.monthsParse=he,ar.monthsRegex=ye,ar.monthsShortRegex=_e,ar.week=ke,ar.firstDayOfYear=Oe,ar.firstDayOfWeek=Ye,ar.weekdays=We,ar.weekdaysMin=Re,ar.weekdaysShort=He,ar.weekdaysParse=Fe,ar.weekdaysRegex=Ge,ar.weekdaysShortRegex=Ve,ar.weekdaysMinRegex=Ee,ar.isPM=$e,ar.meridiem=qe,Xe("en",{dayOfMonthOrdinalParse:/\d{1,2}(th|st|nd|rd)/,ordinal:function(e){var t=e%10;return e+(1===w(e%100/10)?"th":1===t?"st":2===t?"nd":3===t?"rd":"th")}}),e.lang=S("moment.lang is deprecated. Use moment.locale instead.",Xe),e.langData=S("moment.langData is deprecated. Use moment.localeData instead.",tt);var or=Math.abs,ur=ms("ms"),lr=ms("s"),dr=ms("m"),hr=ms("h"),cr=ms("d"),fr=ms("w"),mr=ms("M"),_r=ms("y"),yr=gs("milliseconds"),gr=gs("seconds"),pr=gs("minutes"),wr=gs("hours"),vr=gs("days"),Mr=gs("months"),Sr=gs("years"),Dr=Math.round,kr={ss:44,s:45,m:45,h:22,d:26,M:11},Yr=Math.abs,Or=Wt.prototype;return Or.isValid=bt,Or.abs=is,Or.add=as,Or.subtract=os,Or.as=cs,Or.asMilliseconds=ur,Or.asSeconds=lr,Or.asMinutes=dr,Or.asHours=hr,Or.asDays=cr,Or.asWeeks=fr,Or.asMonths=mr,Or.asYears=_r,Or.valueOf=fs,Or._bubble=ls,Or.clone=_s,Or.get=ys,Or.milliseconds=yr,Or.seconds=gr,Or.minutes=pr,Or.hours=wr,Or.days=vr,Or.weeks=ps,Or.months=Mr,Or.years=Sr,Or.humanize=Ds,Or.toISOString=Ys,Or.toString=Ys,Or.toJSON=Ys,Or.locale=Mn,Or.localeData=Sn,Or.toIsoString=S("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)",Ys),Or.lang=Ki,V("X",0,0,"unix"),V("x",0,0,"valueOf"),Z("x",ei),Z("X",si),J("X",function(e,t,n){n._d=new Date(1e3*parseFloat(e,10))}),J("x",function(e,t,n){n._d=new Date(w(e))}),e.version="2.20.1",function(e){Os=e}(kt),e.fn=rr,e.min=Ot,e.max=Tt,e.now=zi,e.utc=d,e.unix=$n,e.months=Kn,e.isDate=a,e.locale=Xe,e.invalid=m,e.duration=Jt,e.isMoment=g,e.weekdays=ts,e.parseZone=qn,e.localeData=tt,e.isDuration=Ht,e.monthsShort=es,e.weekdaysMin=ss,e.defineLocale=Ke,e.updateLocale=et,e.locales=nt,e.weekdaysShort=ns,e.normalizeUnits=F,e.relativeTimeRounding=Ms,e.relativeTimeThreshold=Ss,e.calendarFormat=tn,e.prototype=rr,e.HTML5_FMT={DATETIME_LOCAL:"YYYY-MM-DDTHH:mm",DATETIME_LOCAL_SECONDS:"YYYY-MM-DDTHH:mm:ss",DATETIME_LOCAL_MS:"YYYY-MM-DDTHH:mm:ss.SSS",DATE:"YYYY-MM-DD",TIME:"HH:mm",TIME_SECONDS:"HH:mm:ss",TIME_MS:"HH:mm:ss.SSS",WEEK:"YYYY-[W]WW",MONTH:"YYYY-MM"},e});
},{}],279:[function(require,module,exports){
"use strict";var InvoicingFakeServer=null;try{InvoicingFakeServer=require("./lib/InvoicingFakeServer").default}catch(e){}module.exports={setupFakeServer:function(e){if(!InvoicingFakeServer||!InvoicingFakeServer.getFakeResponses)throw new Error("Fake server module is not available.");e.addFakeResponses(InvoicingFakeServer.getFakeResponses())},BaseService:require("./lib/BaseClasses/BaseService").default,InvoicingService:require("./lib/InvoicingService").default,Currency:require("./lib/Currency").default,InvoicePayment:require("./lib/Payment").default,InvoicePaymentTerm:require("./lib/PaymentTerm").default,InvoiceRefund:require("./lib/Refund").default,InvoiceCCInfo:require("./lib/CCInfo").default,InvoiceAddress:require("./lib/Address").default,InvoiceBillingInfo:require("./lib/BillingInfo").default,InvoiceMerchantInfo:require("./lib/MerchantInfo").default,InvoiceShippingInfo:require("./lib/ShippingInfo").default,InvoiceItem:require("./lib/Item").default,InvoiceNotification:require("./lib/Notification").default,InvoicingRequester:require("./lib/Requester").default,InvoiceActions:require("./lib/InvoiceActions").default,InvoiceAttachment:require("./lib/Attachment").default,Invoice:require("./lib/Invoice").default,InvoiceListRequest:require("./lib/InvoiceListRequest").default,InvoiceListResponse:require("./lib/InvoiceListResponse").default,InvoiceSearchRequest:require("./lib/SearchRequest").default,AccountSummary:require("./lib/AccountSummary").default,AccountSummarySection:require("./lib/AccountSummarySection").default,Countries:require("./lib/Countries").default,Country:require("./lib/Country").default,InvoiceEnums:require("./lib/InvoiceEnums").default,InvoiceCustomAmount:require("./lib/CustomAmount").default,InvoiceConstants:require("./lib/InvoiceConstants").default,InvoiceTemplate:require("./lib/Template").default,$$:require("./lib/InvoiceBigNumber").$$};

},{"./lib/AccountSummary":280,"./lib/AccountSummarySection":281,"./lib/Address":282,"./lib/Attachment":283,"./lib/BaseClasses/BaseService":284,"./lib/BillingInfo":285,"./lib/CCInfo":286,"./lib/Countries":287,"./lib/Country":288,"./lib/Currency":290,"./lib/CustomAmount":291,"./lib/Invoice":292,"./lib/InvoiceActions":293,"./lib/InvoiceBigNumber":294,"./lib/InvoiceConstants":296,"./lib/InvoiceEnums":297,"./lib/InvoiceListRequest":298,"./lib/InvoiceListResponse":299,"./lib/InvoicingFakeServer":undefined,"./lib/InvoicingService":302,"./lib/Item":304,"./lib/MerchantInfo":305,"./lib/Notification":306,"./lib/Payment":307,"./lib/PaymentTerm":308,"./lib/Refund":309,"./lib/Requester":310,"./lib/SearchRequest":312,"./lib/ShippingInfo":313,"./lib/Template":314}],280:[function(require,module,exports){
"use strict";function _interopRequireDefault(t){return t&&t.__esModule?t:{default:t}}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _InvoiceEnums=require("./InvoiceEnums"),_InvoiceEnums2=_interopRequireDefault(_InvoiceEnums),_InvoiceBigNumber=require("./InvoiceBigNumber"),_AccountSummarySection=require("./AccountSummarySection"),_AccountSummarySection2=_interopRequireDefault(_AccountSummarySection),AccountSummary=function(){function t(e,u){_classCallCheck(this,t),this.pastDueSection=this.sectionFromSummaries(u.summaries),this.awaitingPaymentSection=this.sectionForStatuses([_InvoiceEnums2.default.Status.SENT,_InvoiceEnums2.default.Status.PARTIALLY_PAID,_InvoiceEnums2.default.Status.UNPAID,_InvoiceEnums2.default.Status.SCHEDULED],e),this.draftSection=this.sectionForStatuses([_InvoiceEnums2.default.Status.DRAFT],e),this.paidSection=this.sectionForStatuses([_InvoiceEnums2.default.Status.MARKED_AS_PAID,_InvoiceEnums2.default.Status.PAID],e),this.outstandingAmount=this.awaitingPaymentSection.totalAmount}return t.prototype.sectionForStatuses=function(t,e){return this.sectionFromSummaries(this.summariesForStatuses(t,e))},t.prototype.summariesForStatuses=function(t,e){for(var u=[],n=e.summaries,a=Array.isArray(n),o=0,n=a?n:n[Symbol.iterator]();;){var i;if(a){if(o>=n.length)break;i=n[o++]}else{if(o=n.next(),o.done)break;i=o.value}var r=i;t.indexOf(_InvoiceEnums2.default.Status[r.status])>=0&&u.push(r)}return u},t.prototype.sectionFromSummaries=function(t){for(var e=0,u=(0,_InvoiceBigNumber.$$)("0"),n=(0,_InvoiceBigNumber.$$)("0"),a=(0,_InvoiceBigNumber.$$)("0"),o=t,i=Array.isArray(o),r=0,o=i?o:o[Symbol.iterator]();;){var s;if(i){if(r>=o.length)break;s=o[r++]}else{if(r=o.next(),r.done)break;s=r.value}var m=s;if(e+=m.count,m.amount_summary&&m.amount_summary.length){var c=m.amount_summary[0];c.total_amount&&(u=u.add((0,_InvoiceBigNumber.$$)(c.total_amount.value))),c.paid_amount&&(c.paid_amount.other&&(n=n.add((0,_InvoiceBigNumber.$$)(c.paid_amount.other.value))),c.paid_amount.paypal&&(n=n.add((0,_InvoiceBigNumber.$$)(c.paid_amount.paypal.value)))),c.refunded_amount&&(c.refunded_amount.other&&(a=a.add((0,_InvoiceBigNumber.$$)(c.refunded_amount.other.value))),c.refunded_amount.paypal&&(a=a.add((0,_InvoiceBigNumber.$$)(c.refunded_amount.paypal.value))))}}return new _AccountSummarySection2.default(e,u,n,a)},t.prototype.subtractSection=function(t,e){return new _AccountSummarySection2.default(t.totalCount-e.totalCount,t.totalAmount.minus(e.totalAmount),t.paidAmount.minus(e.paidAmount),t.refundedAmount.minus(e.refundedAmount))},t}();exports.default=AccountSummary;

},{"./AccountSummarySection":281,"./InvoiceBigNumber":294,"./InvoiceEnums":297}],281:[function(require,module,exports){
"use strict";function _classCallCheck(t,n){if(!(t instanceof n))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var AccountSummarySection=function t(n,o,a,s){_classCallCheck(this,t),this.totalCount=n,this.totalAmount=o,this.paidAmount=a,this.refundedAmount=s};exports.default=AccountSummarySection;

},{}],282:[function(require,module,exports){
"use strict";function _classCallCheck(s,t){if(!(s instanceof t))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var InvoiceAddress=function(){function s(){_classCallCheck(this,s)}return s.prototype.readFromJson=function(s){s&&(this.line1=s.line1,!this.line1&&s.addressLine1&&(this.line1=s.addressLine1),this.line2=s.line2,!this.line2&&s.addressLine2&&(this.line2=s.addressLine2),this.city=s.city,this.state=s.state,this.postalCode=s.postal_code,this.country=s.country_code,this.phone=s.phone,this.addressee=s.addressee_name,this.isPrimary=s.isPrimary)},s.prototype.toJSON=function(){var s=void 0;return this.hasAnyValue()&&(s={},s.line1=this.line1,s.line2=this.line2,s.city=this.city,s.state=this.state,s.postal_code=this.postalCode,s.country_code=this.country,s.addressee=this.addressee,s.isPrimary=this.isPrimary,s.phone=this.phone),s},s.prototype.hasAnyValue=function(){return!!(this.line1||this.line2||this.city||this.state||this.postalCode||this.country||this.addressee||this.phone)},s}();exports.default=InvoiceAddress;

},{}],283:[function(require,module,exports){
"use strict";function _classCallCheck(t,n){if(!(t instanceof n))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var InvoiceAttachment=function(){function t(){_classCallCheck(this,t)}return t.readFromJson=function(n){var e=new t;return e.name=n.name,e.url=n.url,e},t.prototype.toJSON=function(){var t={};return t.name=this.name,t.url=this.url,t},t.prototype.usableURL=function(){var t=new RegExp("sig.*&"),n=this.url.match(t)[0],e=n.split("/").join(".").split("+").join("-").replace("=&","&");return this.url.replace(n,e)},t}();exports.default=InvoiceAttachment;

},{}],284:[function(require,module,exports){
"use strict";function _classCallCheck(e,s){if(!(e instanceof s))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var BaseService=function e(){_classCallCheck(this,e)};exports.default=BaseService;

},{}],285:[function(require,module,exports){
"use strict";function _interopRequireDefault(n){return n&&n.__esModule?n:{default:n}}function _classCallCheck(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _Address=require("./Address"),_Address2=_interopRequireDefault(_Address),InvoiceBillingInfo=function(){function n(){_classCallCheck(this,n),this.address=new _Address2.default}return n.prototype.readFromJson=function(n){n&&(this.address.readFromJson(n.address),this.firstName=n.first_name,this.lastName=n.last_name,this.businessName=n.business_name,this.email=n.email,this.language=n.language,this.additionalInfo=n.additional_info,this.notificationChannel=n.notification_channel,n.phone&&(this.countryCode=n.phone.country_code,this.nationalNumber=n.phone.national_number))},n.prototype.toJSON=function(){var n={};return Object.keys(this.address).length&&(n.address=this.address),n.first_name=this.firstName,n.last_name=this.lastName,n.email=this.email,n.business_name=this.businessName,n.language=this.language,n.additional_info=this.additionalInfo,n.notification_channel=this.notificationChannel,this.nationalNumber&&(n.phone={},n.phone.country_code=this.countryCode,n.phone.national_number=this.nationalNumber),n},n.prototype.hasAnyValue=function(){return!!(this.email||this.firstName||this.lastName||this.businessName||this.address.hasAnyValue()||this.language||this.additionalInfo||this.notificationChannel||this.countryCode||this.nationalNumber)},n}();exports.default=InvoiceBillingInfo;

},{"./Address":282}],286:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,s){if(!(e instanceof s))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _Address=require("./Address"),_Address2=_interopRequireDefault(_Address),InvoiceCCInfo=function(){function e(){_classCallCheck(this,e),this.address=new _Address2.default}return e.fromJson=function(s){var a=new e;return s&&(a.address.readFromJson(s.address),a.firstName=s.first_name,a.lastName=s.last_name,a.businessName=s.business_name,a.email=s.email,a.phone=s.phone,a.fax=s.fax,a.website=s.website,a.additionalInfo=s.additional_info),a},e.prototype.toJSON=function(){var e={};return e.email=this.email,e.first_name=this.firstName,e.last_name=this.lastName,e.business_name=this.businessName,e.phone=this.phone,e.fax=this.fax,e.website=this.website,e.additional_info=this.additionalInfo,e.address=this.address,e},e}();exports.default=InvoiceCCInfo;

},{"./Address":282}],287:[function(require,module,exports){
"use strict";function _interopRequireDefault(r){return r&&r.__esModule?r:{default:r}}function _classCallCheck(r,e){if(!(r instanceof e))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _Country=require("./Country"),_Country2=_interopRequireDefault(_Country),_CountryMap=require("./CountryMap"),_CountryMap2=_interopRequireDefault(_CountryMap),Countries=function(){function r(){_classCallCheck(this,r)}return r.countries=function(){if(!r._countries){r._countries=[];for(var e=Object.keys(_CountryMap2.default),t=Array.isArray(e),n=0,e=t?e:e[Symbol.iterator]();;){var o;if(t){if(n>=e.length)break;o=e[n++]}else{if(n=e.next(),n.done)break;o=n.value}var u=o;r._countries.push(new _Country2.default(u,_CountryMap2.default[u]))}}return r._countries},r.countryForCountryCode=function(r){if(r)for(var e=r.toUpperCase(),t=this.countries(),n=Array.isArray(t),o=0,t=n?t:t[Symbol.iterator]();;){var u;if(n){if(o>=t.length)break;u=t[o++]}else{if(o=t.next(),o.done)break;u=o.value}var a=u;if(a.code===e&&a.name)return a.name}},r}();exports.default=Countries;

},{"./Country":288,"./CountryMap":289}],288:[function(require,module,exports){
"use strict";function _classCallCheck(s,t){if(!(s instanceof t))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var Country=function s(t,a){_classCallCheck(this,s),this.code=t,this.name=a};exports.default=Country;

},{}],289:[function(require,module,exports){
arguments[4][244][0].apply(exports,arguments)
},{"dup":244}],290:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,u){if(!(e instanceof u))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _InvoiceBigNumber=require("./InvoiceBigNumber"),_InvoiceBigNumber2=_interopRequireDefault(_InvoiceBigNumber),_RoundingRules=require("./RoundingRules.js"),_RoundingRules2=_interopRequireDefault(_RoundingRules),Currency=function(){function e(){_classCallCheck(this,e)}return e.round=function(e,u){var n=_RoundingRules2.default[e];return(0,_InvoiceBigNumber.$$)(u).round(n,_InvoiceBigNumber2.default.ROUND_HALF_UP)},e.toCents=function(e,u){var n=_RoundingRules2.default[e];return(0,_InvoiceBigNumber.$$)(10).pow(n).times(u)},e.serverRound=function(e,u){var n=_RoundingRules2.default[e];return(0,_InvoiceBigNumber.IBN)((0,_InvoiceBigNumber.$$)(u).round(n,_InvoiceBigNumber2.default.ROUND_HALF_UP),n,0!==n)},e}();exports.default=Currency;

},{"./InvoiceBigNumber":294,"./RoundingRules.js":311}],291:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _InvoiceBigNumber=require("./InvoiceBigNumber"),_Currency=require("./Currency"),_Currency2=_interopRequireDefault(_Currency),InvoiceCustomAmount=function(){function e(){_classCallCheck(this,e)}return e.fromJSON=function(n){var r=new e;return n.label&&(r.label=n.label),n.amount&&(r.amount=(0,_InvoiceBigNumber.$$)(n.amount.value)),r},e.prototype.toJSON=function(e){var n={};return this.amount&&(n.amount={currency:e,value:_Currency2.default.serverRound(e,this.amount)}),n.label=this.label,n},e}();exports.default=InvoiceCustomAmount;

},{"./Currency":290,"./InvoiceBigNumber":294}],292:[function(require,module,exports){
"use strict";function _interopRequireDefault(t){return t&&t.__esModule?t:{default:t}}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function _inherits(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}function statusFromServer(t){return t?_InvoiceEnums2.default.Status[t]?_InvoiceEnums2.default.Status[t]:(Log.warn("Received unknown server invoice status "+t),_InvoiceEnums2.default.Status.DRAFT):_InvoiceEnums2.default.Status.NEW}exports.__esModule=!0;var _createClass=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),_events=require("events"),_deepEqual2=require("deep-equal"),_deepEqual3=_interopRequireDefault(_deepEqual2),_manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_InvoiceBigNumber=require("./InvoiceBigNumber"),_Currency=require("./Currency"),_Currency2=_interopRequireDefault(_Currency),_CustomAmount=require("./CustomAmount"),_CustomAmount2=_interopRequireDefault(_CustomAmount),_Item=require("./Item"),_Item2=_interopRequireDefault(_Item),_MerchantInfo=require("./MerchantInfo"),_MerchantInfo2=_interopRequireDefault(_MerchantInfo),_BillingInfo=require("./BillingInfo"),_BillingInfo2=_interopRequireDefault(_BillingInfo),_assert=require("assert"),_assert2=_interopRequireDefault(_assert),_manticoreUtil=require("manticore-util"),_InvoicingUtil=require("./InvoicingUtil"),_InvoicingUtil2=_interopRequireDefault(_InvoicingUtil),_Requester=require("./Requester"),_ShippingInfo=require("./ShippingInfo"),_ShippingInfo2=_interopRequireDefault(_ShippingInfo),_InvoiceCalculator=require("./InvoiceCalculator"),_InvoiceCalculator2=_interopRequireDefault(_InvoiceCalculator),_CCInfo=require("./CCInfo"),_CCInfo2=_interopRequireDefault(_CCInfo),_Payment=require("./Payment"),_Payment2=_interopRequireDefault(_Payment),_PaymentTerm=require("./PaymentTerm"),_PaymentTerm2=_interopRequireDefault(_PaymentTerm),_Refund=require("./Refund"),_Refund2=_interopRequireDefault(_Refund),_Attachment=require("./Attachment"),_Attachment2=_interopRequireDefault(_Attachment),_InvoiceEnums=require("./InvoiceEnums"),_InvoiceEnums2=_interopRequireDefault(_InvoiceEnums),_InvoiceMetaData=require("./InvoiceMetaData"),_InvoiceMetaData2=_interopRequireDefault(_InvoiceMetaData),_InvoicingService=require("./InvoicingService"),_InvoicingService2=_interopRequireDefault(_InvoicingService),Log=(0,_manticoreLog2.default)("invoicing"),Invoice=function(t){function e(n){_classCallCheck(this,e);var i=_possibleConstructorReturn(this,t.call(this));i.hasDetails=!0;var a=n;if(!n){if(!e.DefaultCurrency)throw new Error("Creating an invoice without a specified currency requires Invoice.DefaultCurrency to be set.");a=e.DefaultCurrency}if(!a in e.supportedCurrencies())throw new Error("Invalid currency code.");return i.currency=a,i.merchantInfo=new _MerchantInfo2.default,i.billingInfo=new _BillingInfo2.default,i.shippingInfo=new _ShippingInfo2.default,i.taxInclusive=!1,i.taxCalculatedAfterDiscount=!1,i.items=[],i.payments=[],i.allowPartialPayment=!1,i.CCInfo=[],i.paymentTerms=new _PaymentTerm2.default,i.status=_InvoiceEnums2.default.Status.NEW,i._itemHandlers={},i.allowTip=!1,e.DefaultMerchant&&(i.merchantInfo.email=e.DefaultMerchant.emailAddress,i.merchantInfo.businessName=e.DefaultMerchant.businessName,i.merchantInfo.address=e.DefaultMerchant.address),i}return _inherits(e,t),e.withInvoice=function(t){(0,_assert2.default)(t.hasDetails,"Can't use an invoice as a template if the details aren't loaded.");var n=new e(t.currency);return n.readJSON((0,_manticoreUtil.deepToJSON)(t),!0),n.status=_InvoiceEnums2.default.Status.NEW,n.reference=void 0,n.number=void 0,n.payPalId=void 0,n.metadata=void 0,n.paymentTerms=t.paymentTerms||new _PaymentTerm2.default,n.invoiceDate=_InvoicingUtil2.default.toServerDateString(new Date,!1),n},e.prototype.duplicate=function(){var t=new e(this.currency);return t.readJSON((0,_manticoreUtil.deepToJSON)(this.toFullJSON()),!0),t.wasDeleted=this.wasDeleted,t},e.supportedCurrencies=function(){return["USD","AUD","BRL","GBP","CAD","CZK","DKK","EUR","HKD","HUF","ILS","JPY","MXN","TWD","NZD","NOK","PHP","PLN","RUB","SGD","SEK","CHF","THB"]},e.prototype.setCleanFromServer=function(){this._lastKnownServerValue=(0,_manticoreUtil.deepToJSON)(this)},e.prototype.addAttachment=function(t){return this.attachments||(this.attachments=[]),this.attachments.push(t),this.attachments},e.prototype.removeAttachment=function(t){if(!t)return!1;var e=this.attachments.indexOf(t);return!(e<0)&&(this.attachments.splice(e,1),!0)},e.prototype._addItemTotalChangedListener=function(t){var e=this,n=function(t){e._emitTotalUpdated(t)};n.inv=this,t.on(_Item2.default.event.priceMayHaveChanged,n)},e.prototype._removeItemTotalChangedListener=function(t){for(var e=t.listeners(_Item2.default.event.priceMayHaveChanged),n=Array.isArray(e),i=0,e=n?e:e[Symbol.iterator]();;){var a;if(n){if(i>=e.length)break;a=e[i++]}else{if(i=e.next(),i.done)break;a=i.value}var r=a;r.inv===this&&t.removeListener(_Item2.default.event.priceMayHaveChanged,r)}},e.prototype._emitTotalUpdated=function(t){_InvoicingUtil2.default.emitAsync(this,e.event.totalMayHaveChanged,t)},e.prototype.addItem=function(t,e,n,i,a){var r=this.findItem(i,a);if(r)return r.quantity=r.quantity.plus(e),r;var o=new _Item2.default(t,e,n,i,a||null);return this.items.push(o),this._emitTotalUpdated("itemAdded"),this._addItemTotalChangedListener(o),o},e.prototype.addInvoiceItem=function(t){var e=this.findItem(t.itemId,t.detailId);return e?(e.quantity=e.quantity.plus(t.quantity),e):(this.items.push(t),this._emitTotalUpdated("itemAdded"),this._addItemTotalChangedListener(t),t)},e.prototype.deepEqual=function(t){return(0,_deepEqual3.default)((0,_manticoreUtil.deepToJSON)(this.toFullJSON()),(0,_manticoreUtil.deepToJSON)(t.toFullJSON()))},e.prototype.removeAllItems=function(){if(0!==this.items.length){for(var t=this.items,e=Array.isArray(t),n=0,t=e?t:t[Symbol.iterator]();;){var i;if(e){if(n>=t.length)break;i=t[n++]}else{if(n=t.next(),n.done)break;i=n.value}var a=i;this._removeItemTotalChangedListener(a)}this.items=[],this._emitTotalUpdated("itemRemoved")}},e.prototype.removeItem=function(t){if(!t)return!1;var e=this.items.indexOf(t);return!(e<0)&&(this.items.splice(e,1),this._removeItemTotalChangedListener(t),this._emitTotalUpdated("itemRemoved"),!0)},e.prototype.findItem=function(t,e){if(!t)return null;var n=e||null,i=t;"string"!=typeof t&&"number"!=typeof t&&(n=t.detailId,i=t.itemId);for(var a=this.items,r=Array.isArray(a),o=0,a=r?a:a[Symbol.iterator]();;){var s;if(r){if(o>=a.length)break;s=a[o++]}else{if(o=a.next(),o.done)break;s=o.value}var u=s;if(u.itemId===i&&u.detailId===n)return u}return null},e.prototype.getItem=function(t){return this.items[t]},e.prototype.getDetails=function(t){var e=this;(0,_assert2.default)(this.payPalId,"Can't get details of an invoice without an id."),(0,_assert2.default)(!this.wasDeleted,"Can't get details on an invoice that was deleted."),_InvoicingService2.default.getInvoiceDetails(this.payPalId,function(n,i){n||(e.readJSON(i,!0),e.setCleanFromServer()),t&&t(n)})},e.prototype.save=function(t){var e=this;if((0,_assert2.default)(this.hasDetails,"Can't save an invoice without details"),(0,_assert2.default)(!this.wasDeleted,"Can't save an invoice that was deleted."),!this.isDirtyFromServer)return void(t&&t());(0,_Requester.request)({method:this.payPalId?"PUT":"POST",op:this.payPalId?"invoices/"+this.payPalId:"invoices",body:JSON.stringify(this)},function(n,i){!n&&i.body&&(e.readJSON(i.body,!0),e.setCleanFromServer()),t&&t(n)})},e.prototype.send=function(t,e){var n=this;(0,_assert2.default)(this.payPalId,"Can't send an invoice without an id."),(0,_assert2.default)(!this.wasDeleted,"Can't send an invoice that was deleted."),(0,_Requester.request)({method:"POST",op:"invoices/"+this.payPalId+"/send?notify_merchant="+!!t},function(t,i){t||(n.status=_InvoiceEnums2.default.Status.SENT),e&&e(t,i),n.paymentTerms.paymentTerms===_PaymentTerm2.default.PaymentTerms.DueOnReceipt&&(n.paymentTerms.dueDate=_InvoicingUtil2.default.toServerDateString(new Date,!1))})},e.prototype.deleteFromServer=function(t){var e=this;(0,_assert2.default)(this.payPalId,"Can't delete an invoice without an id."),(0,_assert2.default)(!this.wasDeleted,"Can't delete an invoice that was deleted."),(0,_Requester.request)({method:"DELETE",op:"invoices/"+this.payPalId},function(n,i){n||(e.status=_InvoiceEnums2.default.Status.NEW,e.wasDeleted=!0),t&&t(n,i)})},e.prototype.remind=function(t,e){(0,_assert2.default)(this.payPalId,"Can't remind an invoice without an id."),(0,_assert2.default)(!1!==t.send_to_payer,"Can't send a reminder that doesn't go to the payer."),(0,_assert2.default)(!this.wasDeleted,"Can't remind an invoice that was deleted."),(0,_Requester.request)({method:"POST",op:"invoices/"+this.payPalId+"/remind",body:JSON.stringify(t)},e)},e.prototype.cancel=function(t,e){var n=this;(0,_assert2.default)(this.payPalId,"Can't cancel an invoice without an id."),(0,_assert2.default)(!this.wasDeleted,"Can't cancel an invoice that was deleted."),(0,_Requester.request)({method:"POST",op:"invoices/"+this.payPalId+"/cancel",body:JSON.stringify(t)},function(t,i){t||(n.status=_InvoiceEnums2.default.Status.CANCELLED),e&&e(t,i)})},e.prototype.recordPayment=function(t,e){var n=this;(0,_assert2.default)(this.payPalId,"Can't record payment on an invoice without an id."),(0,_assert2.default)(t,"Can't record payment on an invoice without paymentInfo."),(0,_assert2.default)(!this.wasDeleted,"Can't record payment on an invoice that was deleted."),t.validate(),(0,_Requester.request)({method:"POST",op:"invoices/"+this.payPalId+"/record-payment",body:JSON.stringify(t)},function(i,a){i||(t.type===_InvoiceEnums2.default.PaymentType.EXTERNAL?!n.allowPartialPayment||t.amount&&n.equiv(n.remainingAmount,t.amount)?n.status=_InvoiceEnums2.default.Status.MARKED_AS_PAID:n.status=_InvoiceEnums2.default.Status.PARTIALLY_PAID:t.type===_InvoiceEnums2.default.PaymentType.PAYPAL&&(n.status=_InvoiceEnums2.default.Status.PAID)),e&&e(i,a)})},e.prototype.equiv=function(t,e){return _Currency2.default.round(this.currency,t).equals(_Currency2.default.round(this.currency,e))},e.prototype.recordRefund=function(t,e){var n=this;(0,_assert2.default)(this.payPalId,"Can't record refund on an invoice without an id."),(0,_assert2.default)(!this.wasDeleted,"Can't record refund on an invoice that was deleted."),(0,_assert2.default)(this.status===_InvoiceEnums2.default.Status.MARKED_AS_PAID||this.status===_InvoiceEnums2.default.Status.PAID||this.status===_InvoiceEnums2.default.Status.PARTIALLY_REFUNDED||this.status===_InvoiceEnums2.default.Status.PARTIALLY_PAID,"Can't record refund on an invoice that hasn't been paid yet."),(0,_assert2.default)(t,"Can't record refund on an invoice without refundInfo."),(0,_Requester.request)({method:"POST",op:"invoices/"+this.payPalId+"/record-refund",body:JSON.stringify(t)},function(i,a){i||n.updateStatusFromRefund(t.type),e&&e(i,a)})},e.prototype.updateStatusFromRefund=function(t){this.remainingAmount.isZero()?t===_InvoiceEnums2.default.PaymentType.EXTERNAL?this.status=_InvoiceEnums2.default.Status.MARKED_AS_REFUNDED:t===_InvoiceEnums2.default.PaymentType.PAYPAL&&(this.status=_InvoiceEnums2.default.Status.REFUNDED):this.status=_InvoiceEnums2.default.Status.PARTIALLY_PAID},e.prototype.toJSON=function(){var t={};t.note=this.note,t.number=this.number,t.invoice_date=this.invoiceDate,t.merchant_info=this.merchantInfo,t.shipping_info=this.shippingInfo,t.billing_info=[this.billingInfo],t.tax_inclusive=this.taxInclusive,t.tax_calculated_after_discount=this.taxCalculatedAfterDiscount,t.allow_partial_payment=this.allowPartialPayment,t.allow_tip=this.allowTip,t.uri=this.uri,this.logoURL&&0===this.logoURL.toLowerCase().indexOf("https://")&&(t.logo_url=this.logoURL),t.additional_data=this.additionalData,this._attachmentsToJson(t),t.template_id=this.templateID,this._CCInfoToJson(t),this.termsAndConditions&&(t.terms=this.termsAndConditions.substring(0,4e3)),this.merchantMemo&&(t.merchant_memo=this.merchantMemo.substring(0,150)),this._shippingToJson(t),this.minimumAmountDue&&(t.minimum_amount_due={currency:this.currency,value:_Currency2.default.serverRound(this.currency,this.minimumAmountDue)}),t.id=this.payPalId,this.status&&(t.status=_InvoiceEnums2.default.Status.toString[this.status]),t.reference=this.reference,this.gratuityAmount&&(t.gratuity={currency:this.currency,value:_Currency2.default.serverRound(this.currency,this.gratuityAmount)});var e=this.discountObject();return null!=e&&(t.discount=e),(this.paymentTerms.dueDate||this.paymentTerms.paymentTerms)&&(t.payment_term=this.paymentTerms.toJSONHack(t.invoice_date)),this._itemsToJson(t),this._custom&&(t.custom=this._custom.toJSON(this.currency)),t},e.prototype.toFullJSON=function(){var t=this.toJSON();return t.payments=this.payments,t.refunds=this.refunds,this.paidAmount&&!this.paidAmount.isZero()&&(t.paid_amount={},this.paidAmountPayPal.isZero()||(t.paid_amount.paypal={currency:this.currency,value:_Currency2.default.serverRound(this.currency,this.paidAmountPayPal)}),this.paidAmountOther.isZero()||(t.paid_amount.other={currency:this.currency,value:_Currency2.default.serverRound(this.currency,this.paidAmountOther)})),this.refundedAmount&&!this.refundedAmount.isZero()&&(t.refunded_amount={},this.refundedAmountPayPal.isZero()||(t.refunded_amount.paypal={currency:this.currency,value:_Currency2.default.serverRound(this.currency,this.refundedAmountPayPal)}),this.refundedAmountOther.isZero()||(t.refunded_amount.other={currency:this.currency,value:_Currency2.default.serverRound(this.currency,this.refundedAmountOther)})),this.metadata&&(t.metadata=_InvoiceMetaData2.default.toFullJSON(this.metadata)),t.payment_term=this.paymentTerms,t},e.prototype._shippingToJson=function(t){this.shippingAmount&&(t.shipping_cost={},t.shipping_cost.amount={currency:this.currency,value:_Currency2.default.serverRound(this.currency,this.shippingAmount)},this.shippingTaxRate&&!this.shippingTaxRate.isZero()&&(t.shipping_cost.tax={name:this.shippingTaxName||"Shipping Tax",percent:this.shippingTaxRate}))},e.prototype._itemsToJson=function(t){if(this.items&&this.items.length){t.items=[];for(var e=this.items,n=Array.isArray(e),i=0,e=n?e:e[Symbol.iterator]();;){var a;if(n){if(i>=e.length)break;a=e[i++]}else{if(i=e.next(),i.done)break;a=i.value}var r=a;t.items.push(r.toJSON(this.currency))}}},e.prototype._attachmentsToJson=function(t){if(this.attachments&&this.attachments.length){t.attachments=[];for(var e=this.attachments,n=Array.isArray(e),i=0,e=n?e:e[Symbol.iterator]();;){var a;if(n){if(i>=e.length)break;a=e[i++]}else{if(i=e.next(),i.done)break;a=i.value}var r=a;t.attachments.push(r.toJSON())}}},e.prototype._CCInfoToJson=function(t){if(this.CCInfo&&this.CCInfo.length){t.cc_info=[];for(var e=this.CCInfo,n=Array.isArray(e),i=0,e=n?e:e[Symbol.iterator]();;){var a;if(n){if(i>=e.length)break;a=e[i++]}else{if(i=e.next(),i.done)break;a=i.value}var r=a;t.cc_info.push(r.toJSON())}}},e.prototype.discountObject=function(){var t={};if(this.discountAmount>0)t.amount={},t.amount.value=_Currency2.default.serverRound(this.currency,this.discountAmount),t.amount.currency=this.currency;else{if(!(this.discountPercentage>0))return null;t.percent=this.discountPercentage}return t},e.prototype.readJSON=function(t,e){if(this.invoiceDate=t.invoice_date,this.status=statusFromServer(t.status),this.reference=t.reference,this.number=t.number,this.payPalId=t.id,this.note=t.note,this.merchantInfo.readFromJson(t.merchant_info),this.uri=t.uri,this.logoURL=t.logo_url,this.additionalData=t.additional_data,this.templateID=t.template_id,this.hasDetails=e,void 0!==t.allow_partial_payment&&(this.allowPartialPayment=t.allow_partial_payment),void 0!==t.allow_tip&&(this.allowTip=t.allow_tip),t.metadata&&(this.metadata=_InvoiceMetaData2.default.fromJSON(t.metadata)),t.custom&&(this._custom=_CustomAmount2.default.fromJSON(t.custom)),t.payments){this.payments=[];for(var n=t.payments,i=Array.isArray(n),a=0,n=i?n:n[Symbol.iterator]();;){var r;if(i){if(a>=n.length)break;r=n[a++]}else{if(a=n.next(),a.done)break;r=a.value}var o=r;this.payments.push(_Payment2.default.readFromJson(o))}}if(t.refunds){this.refunds=[];for(var s=t.refunds,u=Array.isArray(s),c=0,s=u?s:s[Symbol.iterator]();;){var l;if(u){if(c>=s.length)break;l=s[c++]}else{if(c=s.next(),c.done)break;l=c.value}var d=l;this.refunds.push(_Refund2.default.readFromJson(d))}}if(t.attachments){this.attachments=[];for(var h=t.attachments,m=Array.isArray(h),f=0,h=m?h:h[Symbol.iterator]();;){var _;if(m){if(f>=h.length)break;_=h[f++]}else{if(f=h.next(),f.done)break;_=f.value}var p=_;this.attachments.push(_Attachment2.default.readFromJson(p))}}if(t.terms&&(this.termsAndConditions=t.terms),t.merchant_memo&&(this.merchantMemo=t.merchant_memo),t.shipping_cost&&(this.shippingAmount=(0,_InvoiceBigNumber.$$)(t.shipping_cost.amount.value),t.shipping_cost.tax&&(this.shippingTaxRate=t.shipping_cost.tax.percent,t.shipping_cost.tax.name&&(this.shippingTaxName=t.shipping_cost.tax.name))),t.minimum_amount_due&&(this.minimumAmountDue=(0,_InvoiceBigNumber.$$)(t.minimum_amount_due.value)),t.refunded_amount&&(this.refundedAmountPayPal=t.refunded_amount.paypal?(0,_InvoiceBigNumber.$$)(t.refunded_amount.paypal.value):_InvoiceCalculator.ZERO,this.refundedAmountOther=t.refunded_amount.other?(0,_InvoiceBigNumber.$$)(t.refunded_amount.other.value):_InvoiceCalculator.ZERO,this.refundedAmount=this.refundedAmountPayPal.plus(this.refundedAmountOther)),t.paid_amount&&(this.paidAmountPayPal=t.paid_amount.paypal?(0,_InvoiceBigNumber.$$)(t.paid_amount.paypal.value):_InvoiceCalculator.ZERO,this.paidAmountOther=t.paid_amount.other?(0,_InvoiceBigNumber.$$)(t.paid_amount.other.value):_InvoiceCalculator.ZERO,this.paidAmount=this.paidAmountPayPal.plus(this.paidAmountOther)),t.billing_info&&t.billing_info.length&&this.billingInfo.readFromJson(t.billing_info[0]),t.shipping_info&&this.shippingInfo.readFromJson(t.shipping_info),t.cc_info){this.CCInfo=[];for(var v=t.cc_info,y=Array.isArray(v),I=0,v=y?v:v[Symbol.iterator]();;){var g;if(y){if(I>=v.length)break;g=v[I++]}else{if(I=v.next(),I.done)break;g=I.value}var A=g,C=_CCInfo2.default.fromJson(A);this.CCInfo.push(C)}}if(t.gratuity&&(this.gratuityAmount=(0,_InvoiceBigNumber.$$)(t.gratuity.value)),this.paymentTerms=_PaymentTerm2.default.fromJson(t.payment_term),t.hasOwnProperty("tax_inclusive")&&(this.taxInclusive=t.tax_inclusive),t.hasOwnProperty("tax_calculated_after_discount")&&(this.taxCalculatedAfterDiscount=t.tax_calculated_after_discount),t.hasOwnProperty("discount")){var D=t.discount;D.hasOwnProperty("percent")?this.discountPercentage=D.percent:t.discount.hasOwnProperty("amount")&&(this.discountAmount=(0,_InvoiceBigNumber.$$)(t.discount.amount.value))}if(this.removeAllItems(),t.items)for(var P=t.items,S=Array.isArray(P),b=0,P=S?P:P[Symbol.iterator]();;){var T;if(S){if(b>=P.length)break;T=P[b++]}else{if(b=P.next(),b.done)break;T=b.value}var w=T,R=_Item2.default.fromJson(w);this.items.push(R)}else this._totalFromServer=t.total_amount?(0,_InvoiceBigNumber.$$)(t.total_amount.value):(0,_InvoiceBigNumber.$$)("0")},e.fromJson=function(t,n){if(!t.total_amount)throw new Error("Invoice JSON has no total_amount.");var i=new e(t.total_amount.currency);return i.readJSON(t,n),i},_createClass(e,[{key:"isDirtyFromServer",get:function(){return!this._lastKnownServerValue||!(0,_deepEqual3.default)(this._lastKnownServerValue,(0,_manticoreUtil.deepToJSON)(this))}},{key:"isPastDue",get:function(){return _InvoicingUtil2.default.isInvoicePastDue(this.status,this.paymentTerms,this.invoiceDate)}},{key:"payerViewUrl",get:function(){return this.metadata&&this.metadata.payerViewURL?this.metadata.payerViewURL:this.payPalId?"https://www.paypal.com?cmd=_pay-inv&id="+this.payPalId:nil}},{key:"currencyCode",set:function(t){if(!(t in e.supportedCurrencies()))throw new Error("Invalid currency code.");this._currency=t},get:function(){return this._currency}},{key:"invoiceDate",set:function(t){this._invoiceDate=t},get:function(){return this._invoiceDate}},{key:"itemCount",get:function(){return this.items.length}},{key:"gratuityAmount",get:function(){return this._gratuityAmount},set:function(t){this._gratuityAmount=(0,_InvoiceBigNumber.$$)(t),this._emitTotalUpdated("gratuityAmount")}},{key:"discountAmount",get:function(){return this._discountAmount},set:function(t){this._discountAmount=(0,_InvoiceBigNumber.$$)(t),this._discountPercentage=null,this._emitTotalUpdated("discountAmount")}},{key:"minimumAmountDue",get:function(){return this._minimumAmountDue},set:function(t){this._minimumAmountDue=(0,_InvoiceBigNumber.$$)(t)}},{key:"discountPercentage",get:function(){return this._discountPercentage},set:function(t){this._discountPercentage=(0,_InvoiceBigNumber.IBN)(t,_Item2.default.discountPercentageDecimalPrecision),this._discountAmount=null,this._emitTotalUpdated("discountPercentage")}},{key:"shippingAmount",get:function(){return this._shippingAmount},set:function(t){this._shippingAmount=(0,_InvoiceBigNumber.$$)(t),this._emitTotalUpdated("shippingAmount")}},{key:"shippingTaxRate",get:function(){return this._shippingTaxRate},set:function(t){this._shippingTaxRate=(0,_InvoiceBigNumber.IBN)(t,_Item2.default.taxDecimalPrecision),this._emitTotalUpdated("shippingTaxRate")}},{key:"custom",set:function(t){this._custom=t},get:function(){return this._custom}},{key:"total",get:function(){return this.hasDetails?_InvoiceCalculator2.default.calculateTotal(this):this._totalFromServer}},{key:"subTotal",get:function(){return(0,_assert2.default)(this.hasDetails,"Can't calculate the subtotal without details"),_InvoiceCalculator2.default.calculateSubtotal(this)}},{key:"itemTax",get:function(){return(0,_assert2.default)(this.hasDetails,"Can't calculate the item tax without details"),_InvoiceCalculator2.default.calculateItemTaxTotal(this)}},{key:"itemDiscounts",get:function(){return(0,_assert2.default)(this.hasDetails,"Can't calculate the total discount without details"),_InvoiceCalculator2.default.calculateItemDiscounts(this)}},{key:"discountPrice",get:function(){return(0,_assert2.default)(this.hasDetails,"Can't calculate the discount price without details"),_InvoiceCalculator2.default.calculateDiscountPrice(this)}},{key:"totalDiscount",get:function(){return(0,_assert2.default)(this.hasDetails,"Can't calculate the total discount without details"),_InvoiceCalculator2.default.calculateDiscountTotal(this)}},{key:"taxBreakdown",get:function(){return(0,_assert2.default)(this.hasDetails,"Can't calculate the tax breakdown without details"),_InvoiceCalculator2.default.calculateTaxBreakdown(this)}},{key:"remainingAmount",get:function(){var t=this.paidAmount||_InvoiceCalculator.ZERO;return this.total.minus(t)}},{key:"amountPaidNet",get:function(){var t=this.paidAmount||_InvoiceCalculator.ZERO,e=this.refundedAmount||_InvoiceCalculator.ZERO;return t.minus(e)}},{key:"hasBeenPaid",get:function(){return this.status===_InvoiceEnums2.default.Status.MARKED_AS_PAID||this.status===_InvoiceEnums2.default.Status.PAID}}]),e}(_events.EventEmitter);exports.default=Invoice,Invoice.event={totalMayHaveChanged:"TotalMayHaveChanged"};

},{"./Attachment":283,"./BillingInfo":285,"./CCInfo":286,"./Currency":290,"./CustomAmount":291,"./InvoiceBigNumber":294,"./InvoiceCalculator":295,"./InvoiceEnums":297,"./InvoiceMetaData":300,"./InvoicingService":302,"./InvoicingUtil":303,"./Item":304,"./MerchantInfo":305,"./Payment":307,"./PaymentTerm":308,"./Refund":309,"./Requester":310,"./ShippingInfo":313,"assert":91,"deep-equal":197,"events":200,"manticore-log":208,"manticore-util":212}],293:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,a){if(!(e instanceof a))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _InvoiceEnums=require("./InvoiceEnums"),_InvoiceEnums2=_interopRequireDefault(_InvoiceEnums),_InvoiceCalculator=require("./InvoiceCalculator"),InvoiceActions=function(){function e(){_classCallCheck(this,e)}return e.availableActions=function(e){var a=_InvoiceEnums2.default.Action,n=e.paidAmountOther||_InvoiceCalculator.ZERO,t=e.refundedAmountOther||_InvoiceCalculator.ZERO,o=void 0!==e.billingInfo&&e.billingInfo.email,i=void 0;switch(e.status){case _InvoiceEnums2.default.Status.NEW:throw new Error("Actions are undefined for NEW invoices.");case _InvoiceEnums2.default.Status.DRAFT:i=[a.Send,a.Edit,a.Delete,a.RecordPayment,a.Copy,a.Share];break;case _InvoiceEnums2.default.Status.SENT:i=[a.Remind,a.RecordPayment,a.Edit,a.Cancel,a.Copy,a.Call,a.Share];break;case _InvoiceEnums2.default.Status.PARTIALLY_PAID:i=n.minus(t).isZero()?[a.Remind,a.RecordPayment,a.Edit,a.Call,a.Copy,a.Share]:[a.Remind,a.RecordPayment,a.RecordRefund,a.Edit,a.Call,a.Copy,a.Share];break;case _InvoiceEnums2.default.Status.PAID:case _InvoiceEnums2.default.Status.MARKED_AS_PAID:case _InvoiceEnums2.default.Status.PARTIALLY_REFUNDED:i=0===e.total||n.minus(t).isZero()?[a.Call,a.Copy,a.Share]:[a.RecordRefund,a.Call,a.Copy,a.Share];break;case _InvoiceEnums2.default.Status.CANCELLED:case _InvoiceEnums2.default.Status.REFUNDED:case _InvoiceEnums2.default.Status.MARKED_AS_REFUNDED:i=[a.Call,a.Copy,a.Share];break;case _InvoiceEnums2.default.Status.UNPAID:i=[a.RecordPayment,a.Edit,a.Cancel,a.Copy,a.Share];break;case _InvoiceEnums2.default.Status.PAYMENT_PENDING:i=[a.Call,a.Copy,a.Share];break;case _InvoiceEnums2.default.Status.SCHEDULED:i=[a.RecordPayment,a.Edit,a.Cancel,a.Copy,a.Call,a.Share,a.Delete];break;default:throw new Error("Unknown invoice status")}return o||(-1!=i.indexOf(a.Call)&&i.splice(i.indexOf(a.Call),1),-1!=i.indexOf(a.Remind)&&i.splice(i.indexOf(a.Remind),1)),i},e}();exports.default=InvoiceActions;

},{"./InvoiceCalculator":295,"./InvoiceEnums":297}],294:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}function $$(e){return InvoiceBigNumber.$$(e)}function IBN(e,t,n){return InvoiceBigNumber.IBN(e,t,n)}exports.__esModule=!0,exports.$$=$$,exports.IBN=IBN;var _bignumber=require("bignumber.js"),_bignumber2=_interopRequireDefault(_bignumber),InvoiceBigNumber=function(e){function t(){return _classCallCheck(this,t),_possibleConstructorReturn(this,e.apply(this,arguments))}return _inherits(t,e),t.$$=function(e){var t=IBN(e,2);return t&&(t.includeTrailingZeros=!0),t},t.IBN=function(e,n,r){var i=void 0!=e&&null!=e?new t(e):null;return i&&(i.decimalPrecision=n,i.includeTrailingZeros=r),i},t.prototype.toJSON=function(){return this.includeTrailingZeros?this.toFixed(this.decimalPrecision):new _bignumber2.default(this.toFixed(this.decimalPrecision)).toString()},t.prototype.toNumber=function(){return new _bignumber2.default(this.toJSON()).toNumber()},t}(_bignumber2.default);exports.default=InvoiceBigNumber;

},{"bignumber.js":95}],295:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}function nonZero(e){return e&&!ZERO.equals(e)}function valOrZero(e){return e||ZERO}function amtOrZero(e){return e?e.amount:ZERO}function parseAmtOrZero(e){return e?JSON.parse(e).amount:ZERO}function calculateItemTotalWithInvoiceDiscount(e,r){var t=r.totalForInvoice(e),n=t.dividedBy(calculateItemTotals(e)).times(e.discountAmount);return t=t.minus(n)}function calculateShippingTax(e){var r=e.shippingTaxRate,t=e.shippingAmount,n=e.taxBreakdown;if(nonZero(r)&&nonZero(t)){return parseAmtOrZero(n[e.shippingTaxName])}return ZERO}function calculateItemTotals(e){for(var r=ZERO,t=e.items,n=Array.isArray(t),u=0,t=n?t:t[Symbol.iterator]();;){var o;if(n){if(u>=t.length)break;o=t[u++]}else{if(u=t.next(),u.done)break;o=u.value}var a=o;r=r.plus(a.totalForInvoice(e))}return(0,_InvoiceBigNumber.$$)(r)}exports.__esModule=!0,exports.ONE=exports.ZERO=void 0;var _Currency=require("./Currency"),_Currency2=_interopRequireDefault(_Currency),_InvoiceBigNumber=require("./InvoiceBigNumber"),_InvoiceBigNumber2=_interopRequireDefault(_InvoiceBigNumber),ZERO=exports.ZERO=new _InvoiceBigNumber2.default(0),ONE=exports.ONE=new _InvoiceBigNumber2.default(1),InvoiceCalculator=function(){function e(){_classCallCheck(this,e)}return e.calculateItemDiscounts=function(e){for(var r=ZERO,t=e.items,n=Array.isArray(t),u=0,t=n?t:t[Symbol.iterator]();;){var o;if(n){if(u>=t.length)break;o=t[u++]}else{if(u=t.next(),u.done)break;o=u.value}var a=o;if(a.discountAmount)r=r.plus(a.discountAmount);else if(a.discountPercentage){var i=a.subtotalForInvoice(e),c=_Currency2.default.round(e.currency,i.times(a.discountPercentage.dividedBy(100)));r=r.plus(c)}}return(0,_InvoiceBigNumber.$$)(r)},e.calculateSubtotal=function(e){for(var r=ZERO,t=e.items,n=Array.isArray(t),u=0,t=n?t:t[Symbol.iterator]();;){var o;if(n){if(u>=t.length)break;o=t[u++]}else{if(u=t.next(),u.done)break;o=u.value}var a=o;r=r.plus(a.subtotalForInvoice(e))}return(0,_InvoiceBigNumber.$$)(r)},e.calculateDiscountPrice=function(e){var r=ZERO;return e.discountAmount&&(r=e.discountAmount),e.discountPercentage&&(r=e.subTotal.sub(e.itemDiscounts).mul(e.discountPercentage.div(100))),_Currency2.default.round(e.currency,r)},e.calculateTaxBreakdown=function(e){for(var r={},t=e.items,n=Array.isArray(t),u=0,t=n?t:t[Symbol.iterator]();;){var o;if(n){if(u>=t.length)break;o=t[u++]}else{if(u=t.next(),u.done)break;o=u.value}var a=o,i=void 0;if(i=e.taxCalculatedAfterDiscount?e.discountAmount?calculateItemTotalWithInvoiceDiscount(e,a):e.discountPercentage?a.totalForInvoice(e).times(ONE.minus(e.discountPercentage.dividedBy(100))):a.totalForInvoice(e):a.subtotalForInvoice(e),nonZero(a.taxRate)){var c=a.taxRate.dividedBy(100),l=a.taxName;e.taxInclusive&&(i=_Currency2.default.round(e.currency,i.dividedBy(ONE.plus(c))));var s=i.times(c),v=_Currency2.default.round(e.currency,s);v=nonZero(v)?v:(0,_InvoiceBigNumber.$$)(0),r[l]={amount:_Currency2.default.round(e.currency,amtOrZero(r[l]).plus(v)),rate:a.taxRate.toString()}}}var d=e.shippingTaxRate,m=e.shippingAmount;if(nonZero(d)&&nonZero(m)){var f=e.shippingTaxName,p=m.times(d.dividedBy(100));r[f]={amount:_Currency2.default.round(e.currency,amtOrZero(r[f]).plus(p)),rate:d.toString()}}for(var y in r)r[y]=JSON.stringify(r[y]);return r},e.calculateDiscountTotal=function(e){return nonZero(e.discountAmount)?(0,_InvoiceBigNumber.$$)(e.discountAmount):nonZero(e.discountPercentage)?_Currency2.default.round(e.currency,(0,_InvoiceBigNumber.$$)(e.discountPercentage).dividedBy(100).times(calculateItemTotals(e))):ZERO},e.calculateItemTaxTotal=function(e){var r=e.taxBreakdown,t=ZERO;for(var n in r)t=t.plus(parseAmtOrZero(r[n]));var u=calculateShippingTax(e);return nonZero(t)?t.minus(u):t},e.calculateTotal=function(r){var t=r.taxInclusive?ZERO:valOrZero(r.itemTax).plus(calculateShippingTax(r)),n=r.custom?r.custom.amount:ZERO,u=valOrZero(r.subTotal).plus(valOrZero(r.gratuityAmount)).plus(valOrZero(r.shippingAmount)).plus(t).plus(n).minus(valOrZero(r.totalDiscount)).minus(e.calculateItemDiscounts(r));return _Currency2.default.round(r.currency,u)},e}();exports.default=InvoiceCalculator;

},{"./Currency":290,"./InvoiceBigNumber":294}],296:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _bignumber=require("bignumber.js"),_bignumber2=_interopRequireDefault(_bignumber),InvoiceConstants=function(){function e(){_classCallCheck(this,e)}return e.taxRateDecimalPrecision=function(){return new _bignumber2.default(5)},e.discountPercentageDecimalPrecision=function(){return new _bignumber2.default(2)},e.invoiceNumberMaxLength=function(){return new _bignumber2.default(25)},e.invoiceTermsMaxLength=function(){return new _bignumber2.default(4e3)},e.invoiceNoteMaxLength=function(){return new _bignumber2.default(4e3)},e.invoiceMerchantMemoMaxLength=function(){return new _bignumber2.default(150)},e.invoiceReferenceMaxLength=function(){return new _bignumber2.default(60)},e.itemQuantityDecimalPrecision=function(){return new _bignumber2.default(5)},e.itemQuantityMax=function(){return new _bignumber2.default(1e3)},e.itemQuantityMin=function(){return new _bignumber2.default(-1e3)},e.itemNameMaxLength=function(){return new _bignumber2.default(200)},e.itemDescriptionMaxLength=function(){return new _bignumber2.default(1e3)},e.itemPriceMax=function(){return new _bignumber2.default(999999.99)},e.taxRateMaxValue=function(){return new _bignumber2.default(99.99999)},e}();exports.default=InvoiceConstants;

},{"bignumber.js":95}],297:[function(require,module,exports){
"use strict";function _classCallCheck(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _manticoreUtil=require("manticore-util"),Invoice=function e(){_classCallCheck(this,e)};exports.default=Invoice,Invoice.Status={NEW:0,DRAFT:1,SENT:2,PAID:3,MARKED_AS_PAID:4,CANCELLED:5,REFUNDED:6,PARTIALLY_REFUNDED:7,MARKED_AS_REFUNDED:8,PARTIALLY_PAID:9,UNPAID:10,PAYMENT_PENDING:11,SCHEDULED:12,UNKNOWN:13},Invoice.Status.toString=(0,_manticoreUtil.reverseKeysAndValues)(Invoice.Status),Invoice.PaymentType={NONE:0,EXTERNAL:1,PAYPAL:2},Invoice.PaymentType.toString=(0,_manticoreUtil.reverseKeysAndValues)(Invoice.PaymentType),Invoice.PaymentMethod={NONE:0,BANK_TRANSFER:1,CASH:2,CHECK:3,CREDIT_CARD:4,DEBIT_CARD:5,PAYPAL:6,WIRE_TRANSFER:7,OTHER:8},Invoice.PaymentMethod.toString=(0,_manticoreUtil.reverseKeysAndValues)(Invoice.PaymentMethod),Invoice.Action={None:0,Delete:1,Send:2,Remind:3,RecordPayment:4,RecordRefund:5,Copy:6,Edit:7,Call:8,Cancel:9,More:10,Share:11,ViewHistory:12,ViewInvoice:13};

},{"manticore-util":212}],298:[function(require,module,exports){
"use strict";function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var InvoiceListRequest=function t(){_classCallCheck(this,t),this.startIndex=0,this.pageSize=20,this.totalCountRequired=!0};exports.default=InvoiceListRequest;

},{}],299:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _Invoice=require("./Invoice"),_Invoice2=_interopRequireDefault(_Invoice),InvoiceListResponse=function(){function e(){_classCallCheck(this,e)}return e.fromJSON=function(n){var o=new e;if(o.invoices=[],n&&n.invoices)for(var t=n.invoices,i=Array.isArray(t),r=0,t=i?t:t[Symbol.iterator]();;){var a;if(i){if(r>=t.length)break;a=t[r++]}else{if(r=t.next(),r.done)break;a=r.value}var s=a,c=_Invoice2.default.fromJson(s,!1);c.setCleanFromServer(),o.invoices.push(c)}return o.totalCount=n&&n.total_count?n.total_count:0,o},e}();exports.default=InvoiceListResponse;

},{"./Invoice":292}],300:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _createClass=function(){function e(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,a,n){return a&&e(t.prototype,a),n&&e(t,n),t}}(),_InvoicingUtil=require("./InvoicingUtil"),_InvoicingUtil2=_interopRequireDefault(_InvoicingUtil),InvoiceMetaData=function(){function e(){_classCallCheck(this,e)}return e.fromJSON=function(t){var a=new e;return a.createdBy=t.created_by,a.cancelledBy=t.cancelled_by,a.lastUpdatedBy=t.last_updated_by,a.lastSentBy=t.last_sent_by,a.payerViewURL=t.payer_view_url,t.created_date&&(a.createdDate=_InvoicingUtil2.default.parseServerDateString(t.created_date)),t.cancelled_date&&(a.cancelledDate=_InvoicingUtil2.default.parseServerDateString(t.cancelled_date)),t.last_updated_date&&(a.lastUpdatedDate=_InvoicingUtil2.default.parseServerDateString(t.last_updated_date)),t.first_sent_date&&(a.firstSentDate=_InvoicingUtil2.default.parseServerDateString(t.first_sent_date)),t.last_sent_date&&(a.lastSentDate=_InvoicingUtil2.default.parseServerDateString(t.last_sent_date)),a},e.toFullJSON=function(e){var t={};return t.created_by=e.createdBy,t.cancelled_by=e.cancelledBy,t.last_updated_by=e.lastUpdatedBy,t.last_sent_by=e.lastSentBy,t.payer_view_url=e.payerViewURL,e.createdDate&&(t.created_date=_InvoicingUtil2.default.toServerDateString(e.createdDate,!0)),e.cancelledDate&&(t.cancelled_date=_InvoicingUtil2.default.toServerDateString(e.cancelledDate,!0)),e.lastUpdatedDate&&(t.last_updated_date=_InvoicingUtil2.default.toServerDateString(e.lastUpdatedDate,!0)),e.firstSentDate&&(t.first_sent_date=_InvoicingUtil2.default.toServerDateString(e.firstSentDate,!0)),e.lastSentDate&&(t.last_sent_date=_InvoicingUtil2.default.toServerDateString(e.lastSentDate,!0)),t},_createClass(e,[{key:"createdDate",set:function(e){this._createdDate=e},get:function(){return _InvoicingUtil2.default.getDateValue(this._createdDate)}},{key:"cancelledDate",set:function(e){this._cancelledDate=e},get:function(){return _InvoicingUtil2.default.getDateValue(this._cancelledDate)}},{key:"firstSentDate",set:function(e){this._firstSentDate=e},get:function(){return _InvoicingUtil2.default.getDateValue(this._firstSentDate)}},{key:"lastSentDate",set:function(e){this._lastSentDate=e},get:function(){return _InvoicingUtil2.default.getDateValue(this._lastSentDate)}}]),e}();exports.default=InvoiceMetaData;

},{"./InvoicingUtil":303}],301:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _Template=require("./Template"),_Template2=_interopRequireDefault(_Template),InvoiceTemplatesResponse=function(){function e(){_classCallCheck(this,e),this.templates=[]}return e.fromJSON=function(t){var a=void 0;if(t&&t.templates){a=new e;for(var l=t.templates,r=Array.isArray(l),s=0,l=r?l:l[Symbol.iterator]();;){var n;if(r){if(s>=l.length)break;n=l[s++]}else{if(s=l.next(),s.done)break;n=s.value}var o=n,i=_Template2.default.fromJSON(o);void 0!==i&&(a.templates.push(i),!0===i.isDefault&&(a.defaultTemplate=i))}a.templates=_Template2.default.sortTemplates(a.templates)}return a},e}();exports.default=InvoiceTemplatesResponse;

},{"./Template":314}],302:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}exports.__esModule=!0;var _BaseService2=require("./BaseClasses/BaseService"),_BaseService3=_interopRequireDefault(_BaseService2),_Requester=require("./Requester"),_InvoiceListResponse=require("./InvoiceListResponse"),_InvoiceListResponse2=_interopRequireDefault(_InvoiceListResponse),_InvoiceTemplatesResponse=require("./InvoiceTemplatesResponse"),_InvoiceTemplatesResponse2=_interopRequireDefault(_InvoiceTemplatesResponse),_Attachment=require("./Attachment"),_Attachment2=_interopRequireDefault(_Attachment),_Invoice=require("./Invoice"),_Invoice2=_interopRequireDefault(_Invoice),_AccountSummary=require("./AccountSummary"),_AccountSummary2=_interopRequireDefault(_AccountSummary),_InvoicingUtil=require("./InvoicingUtil"),_InvoicingUtil2=_interopRequireDefault(_InvoicingUtil),InvoicingService=function(e){function t(){return _classCallCheck(this,t),_possibleConstructorReturn(this,e.apply(this,arguments))}return _inherits(t,e),t.getInvoices=function(e,t){var n=e.startIndex,o=e.pageSize,i=e.totalCountRequired;(0,_Requester.request)({method:"GET",op:"invoices?page="+n+"&page_size="+o+"&total_count_required="+i},function(n,o){if(n)t(n);else{var i=_InvoiceListResponse2.default.fromJSON(o.body);i.hasMore=e.startIndex+e.pageSize<i.totalCount,t(n,i)}})},t.searchInvoices=function(e,t){(0,_Requester.request)({method:"POST",op:"search",body:JSON.stringify(e)},function(n,o){if(n)t(n);else{var i=_InvoiceListResponse2.default.fromJSON(o.body);i.hasMore=e.startIndex+e.pageSize<i.totalCount,t(n,i)}})},t.getInvoice=function(e,n){t.getInvoiceDetails(e,function(e,t){if(e)n(e);else{var o=_Invoice2.default.fromJson(t,!0);o.setCleanFromServer(),n(e,o)}})},t.getInvoiceDetails=function(e,t){(0,_Requester.request)({method:"GET",op:"invoices/"+e},function(e,n){e?t(e):t(e,n.body)})},t.getNextInvoiceNumber=function(e){(0,_Requester.request)({method:"POST",op:"invoices/next-invoice-number"},function(t,n){if(t)e(t);else{var o=n.body.number;e(t,o)}})},t.getAccountSummary=function(e){var t=this,n=void 0,o=void 0,i=void 0,r=void 0,u=function(){(n||i)&&(o||r)&&t.continueGetAccountSummary(n,i,o,r,e)};(0,_Requester.request)({method:"GET",op:"summaries?overdue=false"},function(e,t){n=e,i=t,u()}),(0,_Requester.request)({method:"GET",op:"summaries?overdue=true"},function(e,t){o=e,r=t,u()})},t.continueGetAccountSummary=function(e,t,n,o,i){var r=e||n;r&&i(r),i(r,new _AccountSummary2.default(t.body,o.body))},t.getTemplates=function(e){(0,_Requester.request)({method:"GET",op:"templates"},function(t,n){t?e(t):e(t,_InvoiceTemplatesResponse2.default.fromJSON(n.body))})},t.uploadFile=function(e,t,n){var o=this;if(void 0===e||""===e){var i=new Error("file handle must be defined");return n(i,void 0)}if(!_InvoicingUtil2.default.isFileUploadSupported(t)){var r=new Error("Unsupported MIME type");return n(r,void 0)}var u={contentType:t,name:"file",value:e};(0,_Requester.request)({method:"POST",op:"files",headers:{"Content-Type":"multipart/form-data"},multiPartBody:u},function(e,t){if(e)n(e);else{var i=o.adaptUploadAttachmentResponse(t.body);n(e,_Attachment2.default.readFromJson(i))}})},t.adaptUploadAttachmentResponse=function(e){return{name:e.filename?e.filename:void 0,url:e.id?"&id="+e.id:void 0}},t}(_BaseService3.default);exports.default=InvoicingService;

},{"./AccountSummary":280,"./Attachment":283,"./BaseClasses/BaseService":284,"./Invoice":292,"./InvoiceListResponse":299,"./InvoiceTemplatesResponse":301,"./InvoicingUtil":303,"./Requester":310}],303:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _moment=require("moment"),_moment2=_interopRequireDefault(_moment),_manticore=require("manticore"),_manticore2=_interopRequireDefault(_manticore),_InvoiceEnums=require("./InvoiceEnums"),_InvoiceEnums2=_interopRequireDefault(_InvoiceEnums),InvoicingUtils=function(){function e(){_classCallCheck(this,e)}return e.parseInvoicePaymentType=function(e){return e&&void 0!==_InvoiceEnums2.default.PaymentType[e]?_InvoiceEnums2.default.PaymentType[e]:_InvoiceEnums2.default.PaymentType.NONE},e.parseInvoicePaymentMethod=function(e){return e&&void 0!==_InvoiceEnums2.default.PaymentMethod[e]?_InvoiceEnums2.default.PaymentMethod[e]:_InvoiceEnums2.default.PaymentMethod.OTHER},e.isInvoicePastDue=function(e,t,n){if(!this.hasAwaitingPaymentStatus(e))return!1;if(!t)return!1;var a=new Date;if(a.setHours(0,0,0,0),t.paymentTerms){var r=t.daysForTerm,i=this.parseServerDateString(n);return i.date(i.date()+r),i.valueOf()<a.valueOf()}if(t.dueDate){var i=this.parseServerDateString(t.dueDate);return i.valueOf()<a.valueOf()}return!1},e.hasAwaitingPaymentStatus=function(e){return e===_InvoiceEnums2.default.Status.SENT||e===_InvoiceEnums2.default.Status.PARTIALLY_PAID||e===_InvoiceEnums2.default.Status.UNPAID||e===_InvoiceEnums2.default.Status.SCHEDULED},e.parseServerDateString=function(e){if(!e)return e;var t=e.replace(/(\d{4}-\d{2}-\d{2}) (PST|PDT)/,"$1 12:59:59 $2");return t=t.replace("PST","-0800").replace("PDT","-0700"),_moment2.default.parseZone(t,"YYYY-MM-DD hh:mm:ss Z")},e.toServerDateString=function(e,t){if(!e)return e;var n=(0,_moment2.default)(e);return t?(n.utcOffset(-420),n.format("YYYY-MM-DD HH:mm:ss")+" PDT"):n.format("YYYY-MM-DD")+" PDT"},e.getDateValue=function(e){return e&&e.constructor===(0,_moment2.default)().constructor?e.toDate():e},e.isFileUploadSupported=function(e){return-1!==["image/png","image/jpg","image/jpeg","image/gif","application/xml","application/pdf","image/tiff","image/bmp"].indexOf(e)},e.emitAsync=function(e,t){for(var n=arguments.length,a=Array(n>2?n-2:0),r=2;r<n;r++)a[r-2]=arguments[r];e.listenerCount&&e.listenerCount(t)>0&&_manticore2.default.setTimeout(function(){e.emit.apply(e,[t].concat(a))},0)},e}();exports.default=InvoicingUtils;

},{"./InvoiceEnums":297,"manticore":213,"moment":316}],304:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}exports.__esModule=!0;var _createClass=function(){function e(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,i,n){return i&&e(t.prototype,i),n&&e(t,n),t}}(),_events=require("events"),_InvoiceBigNumber=require("./InvoiceBigNumber"),_InvoiceConstants=require("./InvoiceConstants"),_InvoiceConstants2=_interopRequireDefault(_InvoiceConstants),_Currency=require("./Currency"),_Currency2=_interopRequireDefault(_Currency),_manticoreUtil=require("manticore-util"),_InvoicingUtil=require("./InvoicingUtil"),_InvoicingUtil2=_interopRequireDefault(_InvoicingUtil),_deepEqual=require("deep-equal"),_deepEqual2=_interopRequireDefault(_deepEqual),staticIdAllocator=1,ZERO=(0,_InvoiceBigNumber.$$)(0),InvoiceItem=function(e){function t(i,n,r,u,o){_classCallCheck(this,t);var a=_possibleConstructorReturn(this,e.call(this));return a.name=i,n||(n=0),r||(r=0),a._quantity=(0,_InvoiceBigNumber.IBN)(String(n),_InvoiceConstants2.default.itemQuantityDecimalPrecision()),a.unitPrice=(0,_InvoiceBigNumber.$$)(r||0),a.itemId=u&&u>0?u:staticIdAllocator++,a.detailId=o||null,a}return _inherits(t,e),t.prototype.duplicate=function(){return t.fromJson((0,_manticoreUtil.deepToJSON)(this.toJSON()))},t.prototype.discountAmountForDisplay=function(){if(this.discountAmount)return this.discountAmount;if(this.discountPercentage){if(this.quantity&&this.unitPrice){return this.quantity.times(this.unitPrice).times(this.discountPercentage/100)}return new ZERO}return null},t.prototype.subtotalForInvoice=function(e){var t=this.quantity.times(this.unitPrice||ZERO);return _Currency2.default.round(e.currency,t)},t.prototype.totalForInvoice=function(e){var t=this.subtotalForInvoice(e);if(this.discountPercentage){var i=_Currency2.default.round(e.currency,t.times(this.discountPercentage/100));t=t.minus(i)}else this.discountAmount&&(t=t.minus(this.discountAmount));return _Currency2.default.round(e.currency,t)},t.prototype._emitPriceMayHaveChanged=function(e){_InvoicingUtil2.default.emitAsync(this,t.event.priceMayHaveChanged,"item."+e)},t.fromJson=function(e){var i=new t(e.name,e.quantity,e.unit_price.value,e.itemId||staticIdAllocator++,e.detailId);return e.description&&(i.itemDescription=e.description),e.unit_price&&(i.unitPrice=e.unit_price.value),e.tax&&(i.taxName=e.tax.name,i.taxRate=(0,_InvoiceBigNumber.IBN)(e.tax.percent,_InvoiceConstants2.default.taxRateDecimalPrecision())),e.discount&&(e.discount.amount&&(i.discountAmount=(0,_InvoiceBigNumber.$$)(e.discount.amount.value)),e.discount.percent&&(i.discountPercentage=(0,_InvoiceBigNumber.IBN)(e.discount.percent,_InvoiceConstants2.default.discountPercentageDecimalPrecision()))),e.date&&(i.date=_InvoicingUtil2.default.parseServerDateString(e.date)),i.imageURL=e.image_url,i.unitOfMeasure=e.unit_of_measure,i},t.prototype.toJSON=function(e){var t={name:this.name,description:this.itemDescription,quantity:this.quantity.toNumber(),image_url:this.imageURL,unit_of_measure:this.unitOfMeasure};this.date&&(t.date=_InvoicingUtil2.default.toServerDateString(this.date,!1)),t.unit_price={value:_Currency2.default.serverRound(e,this.unitPrice),currency:e};var i={};return this.discountPercentage>0?i.percent=this.discountPercentage:this.discountAmount>0&&(i.amount={value:_Currency2.default.serverRound(e,this.discountAmount),currency:e}),(i.amount||i.percent)&&(t.discount=i),this.taxRate&&this.taxName&&(t.tax={percent:this.taxRate,name:this.taxName}),t},t.prototype.isEqualToItem=function(e){return(0,_deepEqual2.default)((0,_manticoreUtil.deepToJSON)(this),(0,_manticoreUtil.deepToJSON)(e))},_createClass(t,[{key:"quantity",get:function(){return this._quantity},set:function(e){this._quantity=(0,_InvoiceBigNumber.IBN)(e,_InvoiceConstants2.default.itemQuantityDecimalPrecision()),this._emitPriceMayHaveChanged("quantity")}},{key:"taxRate",get:function(){return this._taxRate},set:function(e){this._taxRate=(0,_InvoiceBigNumber.IBN)(e,_InvoiceConstants2.default.taxRateDecimalPrecision()),this._emitPriceMayHaveChanged("taxRate")}},{key:"discountAmount",get:function(){return this._discountAmount},set:function(e){this._discountAmount=(0,_InvoiceBigNumber.$$)(e),this._emitPriceMayHaveChanged("discountAmount")}},{key:"discountPercentage",get:function(){return this._discountPercentage},set:function(e){this._discountPercentage=(0,_InvoiceBigNumber.IBN)(e,_InvoiceConstants2.default.discountPercentageDecimalPrecision()),this._emitPriceMayHaveChanged("discountPercentage")}},{key:"unitPrice",get:function(){return this._unitPrice},set:function(e){this._unitPrice=(0,_InvoiceBigNumber.$$)(e),this._emitPriceMayHaveChanged("unitPrice")}},{key:"date",set:function(e){this._date=e},get:function(){return _InvoicingUtil2.default.getDateValue(this._date)}}]),t}(_events.EventEmitter);exports.default=InvoiceItem,InvoiceItem.event={priceMayHaveChanged:"PriceMayHaveChanged"};

},{"./Currency":290,"./InvoiceBigNumber":294,"./InvoiceConstants":296,"./InvoicingUtil":303,"deep-equal":197,"events":200,"manticore-util":212}],305:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _createClass=function(){function e(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,i,n){return i&&e(t.prototype,i),n&&e(t,n),t}}(),_Address=require("./Address"),_Address2=_interopRequireDefault(_Address),_manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),Log=(0,_manticoreLog2.default)("invoicing"),InvoiceMerchantInfo=function(){function e(){_classCallCheck(this,e),this.address=new _Address2.default}return e.prototype.readFromJson=function(e){e&&(this.address.readFromJson(e.address),e.address&&(this.address=new _Address2.default,this.address.readFromJson(e.address)),this.email=e.email,this.phoneDictionary=e.phone||{},this.fax=e.fax,this.website=e.website,this.firstName=e.first_name,this.lastName=e.last_name,this.businessName=e.business_name,this.taxId=e.tax_id,this.additionalInfo=e.additional_info,this.additionalInfoLabel=e.additional_info_label)},e.prototype.toJSON=function(){var e={};return e.email=this.email,this.phoneDictionary&&this.phoneDictionary.hasOwnProperty("national_number")&&(this.phoneDictionary.hasOwnProperty("country_code")||(this.phoneDictionary.country_code=" "),e.phone=this.phoneDictionary),e.website=this.website,e.address=this.address,e.first_name=this.firstName,e.last_name=this.lastName,e.business_name=this.businessName,e.tax_id=this.taxId,e.additional_info=this.additionalInfo,e.additional_info_label=this.additionalInfoLabel,e},_createClass(e,[{key:"phone",get:function(){return this.phoneDictionary.national_number},set:function(e){this.phoneDictionary.national_number=e}}]),e}();exports.default=InvoiceMerchantInfo;

},{"./Address":282,"manticore-log":208}],306:[function(require,module,exports){
"use strict";function _classCallCheck(t,s){if(!(t instanceof s))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var InvoiceNotification=function(){function t(s,e,o,n,i){_classCallCheck(this,t),this.subject=s,this.note=e,this.shouldSendToMerchant=o,this.shouldSendToPayer=i,this.ccEmails=n}return t.prototype.toJSON=function(){var t={};return t.subject=this.subject,t.note=this.note,t.send_to_merchant=this.shouldSendToMerchant,t.send_to_payer=this.shouldSendToPayer,t.cc_emails=this.ccEmails,t},t}();exports.default=InvoiceNotification;

},{}],307:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _assert=require("assert"),_assert2=_interopRequireDefault(_assert),_InvoiceEnums=require("./InvoiceEnums"),_InvoiceEnums2=_interopRequireDefault(_InvoiceEnums),_InvoicingUtil=require("./InvoicingUtil"),_InvoicingUtil2=_interopRequireDefault(_InvoicingUtil),_InvoiceBigNumber=require("./InvoiceBigNumber"),_Currency=require("./Currency"),_Currency2=_interopRequireDefault(_Currency),InvoicePayment=function(){function e(){_classCallCheck(this,e),this.type=_InvoiceEnums2.default.PaymentType.EXTERNAL,this.transactionId=void 0,this.transactionType=void 0,this.date=void 0,this.formattedDate=void 0,this.note=void 0,this.method=void 0,this.currency=void 0,this.amount=void 0}return e.readFromJson=function(t){var n=new e;return t&&(n.type=_InvoicingUtil2.default.parseInvoicePaymentType(t.type),n.transactionID=t.transaction_id,n.transactionType=t.transaction_type,n.date=_InvoicingUtil2.default.parseServerDateString(t.date),n.formattedDate=n.date?n.date.format("MMM D, YYYY"):void 0,n.method=_InvoicingUtil2.default.parseInvoicePaymentMethod(t.method),n.note=t.note),t.amount&&(n.amount=(0,_InvoiceBigNumber.$$)(t.amount.value),n.currency=t.amount.currency),n},e.prototype.toJSON=function(){var e={};return this.amount&&(e.amount={},e.amount={currency:this.currency,value:_Currency2.default.serverRound(this.currency,this.amount)}),e.method=_InvoiceEnums2.default.PaymentMethod.toString[this.method],e.date=_InvoicingUtil2.default.toServerDateString(this.date,!0),e.formattedDate=this.formattedDate,e.note=this.note,e},e.prototype.validate=function(){switch(this.type||(0,_assert2.default)(!1,"InvoicePaymentInfo must have a payment type."),this.type){case _InvoiceEnums2.default.PaymentType.EXTERNAL:(0,_assert2.default)(this.method,"InvoicePaymentInfo with payment type=EXTERNAL must have a method.");break;case _InvoiceEnums2.default.PaymentType.PAYPAL:throw(0,_assert2.default)(this.transactionId,"InvoicePaymentInfo with payment type=PAYPAL must have a method."),new Error("The invoicing service doesn't currently support setting the payment type to PAYPAL :(.");default:throw new Error("Unknown payment type")}},e}();exports.default=InvoicePayment;

},{"./Currency":290,"./InvoiceBigNumber":294,"./InvoiceEnums":297,"./InvoicingUtil":303,"assert":91}],308:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _createClass=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),_manticoreUtil=require("manticore-util"),_InvoicingUtil=require("./InvoicingUtil"),_InvoicingUtil2=_interopRequireDefault(_InvoicingUtil),InvoicePaymentTerm=function(){function e(){_classCallCheck(this,e),this.reset()}return e.prototype.reset=function(){this._paymentTerms=e.PaymentTerms.NoPaymentTerms,this._dueDate=void 0},e.fromJson=function(t){var r=new e;return t?(r.dueDate=t.due_date,r.paymentTerms=e.PaymentTerms.fromServer[t.term_type]):r.reset(),r},e.prototype.toJSON=function(){var t={};return this.dueDate?t.due_date=this.dueDate:this.paymentTerms&&(t.term_type=e.PaymentTerms.toServer[this.paymentTerms]),t},e.prototype.toJSONHack=function(t){var r=this.toJSON();if(void 0!==r.due_date&&r.due_date===t){r.due_date=void 0;var n=e.PaymentTerms.DueOnReceipt;r.term_type=e.PaymentTerms.toServer[n]}return r},_createClass(e,[{key:"paymentTerms",set:function(t){(t||t===e.PaymentTerms.NoPaymentTerms)&&this.reset(),this._paymentTerms=t},get:function(){return this._paymentTerms}},{key:"dueDate",set:function(e){e&&this.reset(),this._dueDate=e},get:function(){return this._dueDate}},{key:"daysForTerm",get:function(){switch(this._paymentTerms){case e.PaymentTerms.NoPaymentTerms,e.PaymentTerms.DueOnReceipt:return 0;case e.PaymentTerms.Net10:return 10;case e.PaymentTerms.Net15:return 15;case e.PaymentTerms.Net30:return 30;case e.PaymentTerms.Net45:return 45;case e.PaymentTerms.Net60:return 60;case e.PaymentTerms.Net90:return 90}return 0}}]),e}();exports.default=InvoicePaymentTerm,InvoicePaymentTerm.PaymentTerms={NoPaymentTerms:0,DueOnReceipt:1,Net10:2,Net15:3,Net30:4,Net45:5,Net60:6,Net90:7},InvoicePaymentTerm.PaymentTerms.fromServer={DUE_ON_RECEIPT:InvoicePaymentTerm.PaymentTerms.DueOnReceipt,NET_10:InvoicePaymentTerm.PaymentTerms.Net10,NET_15:InvoicePaymentTerm.PaymentTerms.Net15,NET_30:InvoicePaymentTerm.PaymentTerms.Net30,NET_45:InvoicePaymentTerm.PaymentTerms.Net45,NET_60:InvoicePaymentTerm.PaymentTerms.Net60,NET_90:InvoicePaymentTerm.PaymentTerms.Net90},InvoicePaymentTerm.PaymentTerms.toServer=(0,_manticoreUtil.reverseKeysAndValues)(InvoicePaymentTerm.PaymentTerms.fromServer);

},{"./InvoicingUtil":303,"manticore-util":212}],309:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _InvoiceBigNumber=require("./InvoiceBigNumber"),_InvoiceEnums=require("./InvoiceEnums"),_InvoiceEnums2=_interopRequireDefault(_InvoiceEnums),_InvoicingUtil=require("./InvoicingUtil"),_InvoicingUtil2=_interopRequireDefault(_InvoicingUtil),_Currency=require("./Currency"),_Currency2=_interopRequireDefault(_Currency),InvoiceRefund=function(){function e(){_classCallCheck(this,e),this.type=_InvoiceEnums2.default.PaymentType.EXTERNAL,this.date=void 0,this.note=void 0,this.currency=void 0,this.amount=void 0,this.transactionID=void 0}return e.readFromJson=function(n){var t=new e;return n&&(t.type=n.type,t.date=_InvoicingUtil2.default.parseServerDateString(n.date),t.note=n.note,t.transactionID=n.transaction_id),n.amount&&(t.amount=(0,_InvoiceBigNumber.$$)(n.amount.value),t.currency=n.amount.currency),t},e.prototype.toJSON=function(){var e={};return this.amount&&(e.amount={},e.amount={currency:this.currency,value:_Currency2.default.serverRound(this.currency,this.amount)}),e.date=_InvoicingUtil2.default.toServerDateString(this.date,!0),e.note=this.note,e},e}();exports.default=InvoiceRefund;

},{"./Currency":290,"./InvoiceBigNumber":294,"./InvoiceEnums":297,"./InvoicingUtil":303}],310:[function(require,module,exports){
"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function request(e,t){return InvoicingRequester.request(e,t)}exports.__esModule=!0,exports.request=request;var _manticoreUtil=require("manticore-util"),InvoicingRequester=function(){function e(){_classCallCheck(this,e)}return e.request=function(t,n){if(!e.api)throw new Error("There is no service interface. Please set the InvoicingRequester.api property.");e.api.request((0,_manticoreUtil.extend)(t,{service:"invoicing",format:"json",headers:{"Content-Type":"application/json"}}),function(e,t){if(!e||e instanceof Error)n(e,t);else{var r=new Error(e.body.message);r.code=e.body.name,r.debugId=e.body.debug_id||e.debug_id,e.body.details&&(r.details=e.body.details),r.status=e.body.status,n(r,t)}})},e}();exports.default=InvoicingRequester;

},{"manticore-util":212}],311:[function(require,module,exports){
"use strict";exports.__esModule=!0,exports.default={SHP:2,EUR:2,AED:2,AFN:0,XCD:2,ALL:0,AMD:0,AOA:2,ARS:2,USD:2,AUD:2,AWG:2,AZN:2,BAM:2,BBD:2,BDT:2,XOF:0,BGN:2,BHD:3,BIF:0,BMD:2,BND:2,BOB:2,BRL:2,BSD:2,INR:2,BTN:2,NOK:2,BWP:2,BYR:0,BZD:2,CAD:2,CDF:2,XAF:0,CHF:2,NZD:2,CLP:0,CNY:2,COP:0,CRC:0,CUP:2,CUC:2,CVE:2,ANG:2,CZK:0,DJF:0,DKK:2,DOP:2,DZD:2,EGP:2,MAD:2,ERN:2,ETB:2,FJD:2,FKP:2,GBP:2,GEL:2,GHS:2,GIP:2,GMD:2,GNF:0,GTQ:2,GYD:0,HKD:2,HNL:2,HRK:2,HTG:2,HUF:0,IDR:0,ILS:2,IQD:0,IRR:0,ISK:0,JMD:2,JOD:3,JPY:0,KES:2,KGS:2,KHR:2,KMF:0,KPW:0,KRW:0,KWD:3,KYD:2,KZT:2,LAK:0,LBP:0,LKR:2,LRD:2,ZAR:2,LSL:2,LYD:3,MDL:2,MGA:0,MKD:2,MMK:0,MNT:0,MOP:2,MRO:0,MUR:0,MVR:2,MWK:2,MXN:2,MYR:2,MZN:2,NAD:2,XPF:0,NGN:2,NIO:2,NPR:2,OMR:3,PAB:2,PEN:2,PGK:2,PHP:2,PKR:0,PLN:2,PYG:0,QAR:2,RON:2,RSD:0,RUB:2,RWF:0,SAR:2,SBD:2,SCR:2,SDG:2,SEK:2,SGD:2,SLL:0,SOS:0,SRD:2,SSP:2,STD:0,SYP:0,SZL:2,THB:2,TJS:2,TMT:2,TND:3,TOP:2,TRY:2,TTD:2,TWD:0,TZS:0,UAH:2,UGX:0,UYU:2,UZS:0,VEF:2,VND:0,VUV:0,WST:2,YER:0,ZMW:2};

},{}],312:[function(require,module,exports){
"use strict";function _interopRequireDefault(t){return t&&t.__esModule?t:{default:t}}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _createClass=function(){function t(t,e){for(var i=0;i<e.length;i++){var n=e[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}return function(e,i,n){return i&&t(e.prototype,i),n&&t(e,n),e}}(),_InvoiceEnums=require("./InvoiceEnums"),_InvoiceEnums2=_interopRequireDefault(_InvoiceEnums),_InvoicingUtil=require("./InvoicingUtil"),_InvoicingUtil2=_interopRequireDefault(_InvoicingUtil),_InvoiceBigNumber=require("./InvoiceBigNumber"),InvoiceSearchRequest=function(){function t(){_classCallCheck(this,t),this.startIndex=0,this.pageSize=20,this.totalCountRequired=!1,this._statuses=[]}return t.prototype.toJSON=function(){var t={};this.assignDatesToJSON(t),t.email=this.email,t.recipientFirstName=this.recipientFirstName,t.recipientLastName=this.recipientLastName,t.recipientBusinessName=this.recipientBusinessName,t.number=this.number;for(var e=this._statuses,i=Array.isArray(e),n=0,e=i?e:e[Symbol.iterator]();;){var a;if(i){if(n>=e.length)break;a=e[n++]}else{if(n=e.next(),n.done)break;a=n.value}var r=a;t.status||(t.status=[]),t.status.push(_InvoiceEnums2.default.Status.toString[r])}return t.lower_total_amount=this.lowerTotalAmount,t.upper_total_amount=this.upperTotalAmount,t.page=this.startIndex,t.page_size=this.pageSize,t.total_count_required=this.totalCountRequired,t.archived=this.archived,t},t.prototype.addStatus=function(t){this._statuses.push(t)},t.prototype.assignDatesToJSON=function(t){for(var e=[["startInvoiceDate","endInvoiceDate","start_invoice_date","end_invoice_date"],["startDueDate","endDueDate","start_due_date","end_due_date"],["startPaymentDate","endPaymentDate","start_payment_date","end_payment_date"],["startCreationDate","endCreationDate","start_creation_date","end_creation_date"]],i=e,n=Array.isArray(i),a=0,i=n?i:i[Symbol.iterator]();;){var r;if(n){if(a>=i.length)break;r=i[a++]}else{if(a=i.next(),a.done)break;r=a.value}var o=r;(this[o[0]]||this[o[1]])&&(t[o[2]]=this[o[0]]?_InvoicingUtil2.default.toServerDateString(this[o[0]],!1):"1970-01-01 PST",t[o[3]]=this[o[1]]?_InvoicingUtil2.default.toServerDateString(this[o[1]],!1):"2100-01-01 PST")}},_createClass(t,[{key:"lowerTotalAmount",get:function(){return this._lowerTotalAmount},set:function(t){this._lowerTotalAmount=(0,_InvoiceBigNumber.$$)(t)}},{key:"upperTotalAmount",get:function(){return this._upperTotalAmount},set:function(t){this._upperTotalAmount=(0,_InvoiceBigNumber.$$)(t)}}]),t}();exports.default=InvoiceSearchRequest;

},{"./InvoiceBigNumber":294,"./InvoiceEnums":297,"./InvoicingUtil":303}],313:[function(require,module,exports){
"use strict";function _interopRequireDefault(s){return s&&s.__esModule?s:{default:s}}function _classCallCheck(s,e){if(!(s instanceof e))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _Address=require("./Address"),_Address2=_interopRequireDefault(_Address),InvoiceShippingInfo=function(){function s(){_classCallCheck(this,s),this.address=new _Address2.default}return s.prototype.readFromJson=function(s){s&&(this.address.readFromJson(s.address),this.email=s.email,this.firstName=s.first_name,this.lastName=s.last_name,this.businessName=s.business_name)},s.prototype.toJSON=function(){var s={};return Object.keys(this.address).length&&(s.address=this.address),s.email=this.email,s.first_name=this.firstName,s.last_name=this.lastName,s.business_name=this.businessName,s},s.prototype.hasAnyValue=function(){return!!(this.email||this.firstName||this.lastName||this.businessName||this.address.hasAnyValue())},s}();exports.default=InvoiceShippingInfo;

},{"./Address":282}],314:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}exports.__esModule=!0;var _Invoice2=require("./Invoice"),_Invoice3=_interopRequireDefault(_Invoice2),_TemplateSettings=require("./TemplateSettings"),_TemplateSettings2=_interopRequireDefault(_TemplateSettings),_PaymentTerm=require("./PaymentTerm.js"),_PaymentTerm2=_interopRequireDefault(_PaymentTerm),InvoiceTemplate=function(e){function t(n){return _classCallCheck(this,t),_possibleConstructorReturn(this,e.call(this,n))}return _inherits(t,e),t.fromJSON=function(e){if(e.template_data&&e.template_data.currencyCode){var n=new t(e.template_data.currencyCode);return n.readJSON(e.template_data,!0),n.templateID=e.template_id,n.isDefault=e.default,n.isCustom=e.custom,n.name=e.name,n.unitOfMeasure=e.unit_of_measure,n.settings=_TemplateSettings2.default.fromJSON(e.settings),n.isCustom||(n.paymentTerms=new _PaymentTerm2.default,n.paymentTerms.paymentTerms=_PaymentTerm2.default.PaymentTerms.DueOnReceipt,n.paymentTerms.dueDate=null),n}},t.prototype.invoiceFromInvoice=function(e){var t=this.duplicate();return t.isDefault=void 0,t.isCustom=void 0,t.name=void 0,t.unitOfMeasure=void 0,t.settings=void 0,t.number=e.number,t.payPalId=e.payPalId,t},t.sortTemplates=function(e){var t=e;return t.sort(function(e,t){return e.name.localeCompare(t.name)}),t},t}(_Invoice3.default);exports.default=InvoiceTemplate;

},{"./Invoice":292,"./PaymentTerm.js":308,"./TemplateSettings":315}],315:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,i){if(!(e instanceof i))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _assert=require("assert"),_assert2=_interopRequireDefault(_assert),InvoiceTemplateSettings=function(){function e(){_classCallCheck(this,e),this.shipping=!0,this.discount=!0,this.custom=!0,this.itemsDiscount=!0,this.itemsTax=!0,this.itemsQuantity=!0,this.itemsDescription=!0,this.itemsDate=!0}return e.fromJSON=function(i){for(var t=new e,s=i,n=Array.isArray(s),a=0,s=n?s:s[Symbol.iterator]();;){var r;if(n){if(a>=s.length)break;r=s[a++]}else{if(a=s.next(),a.done)break;r=a.value}var o=r;switch(o.field_name){case"shipping":t.shipping=t.isFieldShown(o);break;case"discount":t.discount=t.isFieldShown(o);break;case"custom":t.custom=t.isFieldShown(o);break;case"items.discount":t.itemsDiscount=t.isFieldShown(o);break;case"items.tax":t.itemsTax=t.isFieldShown(o);break;case"items.quantity":t.itemsQuantity=t.isFieldShown(o);break;case"items.description":t.itemsDescription=t.isFieldShown(o);break;case"items.date":t.itemsDate=t.isFieldShown(o);break;default:(0,_assert2.default)("unknown field name: "+o.field_name)}}return t},e.prototype.isFieldShown=function(e){return!0!==e.display_preference.hidden},e}();exports.default=InvoiceTemplateSettings;

},{"assert":91}],316:[function(require,module,exports){
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):e.moment=t()}(this,function(){"use strict";function e(){return cs.apply(null,arguments)}function t(e){return e instanceof Array||"[object Array]"===Object.prototype.toString.call(e)}function n(e){return null!=e&&"[object Object]"===Object.prototype.toString.call(e)}function s(e){var t;for(t in e)return!1;return!0}function i(e){return e instanceof Date||"[object Date]"===Object.prototype.toString.call(e)}function r(e,t){var n,s=[];for(n=0;n<e.length;++n)s.push(t(e[n],n));return s}function a(e,t){return Object.prototype.hasOwnProperty.call(e,t)}function o(e,t){for(var n in t)a(t,n)&&(e[n]=t[n]);return a(t,"toString")&&(e.toString=t.toString),a(t,"valueOf")&&(e.valueOf=t.valueOf),e}function u(e,t,n,s){return _t(e,t,n,s,!0).utc()}function d(){return{empty:!1,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:!1,invalidMonth:null,invalidFormat:!1,userInvalidated:!1,iso:!1,parsedDateParts:[],meridiem:null}}function l(e){return null==e._pf&&(e._pf=d()),e._pf}function h(e){if(null==e._isValid){var t=l(e),n=fs.call(t.parsedDateParts,function(e){return null!=e}),s=!isNaN(e._d.getTime())&&t.overflow<0&&!t.empty&&!t.invalidMonth&&!t.invalidWeekday&&!t.nullInput&&!t.invalidFormat&&!t.userInvalidated&&(!t.meridiem||t.meridiem&&n);if(e._strict&&(s=s&&0===t.charsLeftOver&&0===t.unusedTokens.length&&void 0===t.bigHour),null!=Object.isFrozen&&Object.isFrozen(e))return s;e._isValid=s}return e._isValid}function c(e){var t=u(NaN);return null!=e?o(l(t),e):l(t).userInvalidated=!0,t}function f(e){return void 0===e}function m(e,t){var n,s,i;if(f(t._isAMomentObject)||(e._isAMomentObject=t._isAMomentObject),f(t._i)||(e._i=t._i),f(t._f)||(e._f=t._f),f(t._l)||(e._l=t._l),f(t._strict)||(e._strict=t._strict),f(t._tzm)||(e._tzm=t._tzm),f(t._isUTC)||(e._isUTC=t._isUTC),f(t._offset)||(e._offset=t._offset),f(t._pf)||(e._pf=l(t)),f(t._locale)||(e._locale=t._locale),ms.length>0)for(n in ms)s=ms[n],i=t[s],f(i)||(e[s]=i);return e}function _(t){m(this,t),this._d=new Date(null!=t._d?t._d.getTime():NaN),!1===_s&&(_s=!0,e.updateOffset(this),_s=!1)}function y(e){return e instanceof _||null!=e&&null!=e._isAMomentObject}function g(e){return e<0?Math.ceil(e)||0:Math.floor(e)}function p(e){var t=+e,n=0;return 0!==t&&isFinite(t)&&(n=g(t)),n}function w(e,t,n){var s,i=Math.min(e.length,t.length),r=Math.abs(e.length-t.length),a=0;for(s=0;s<i;s++)(n&&e[s]!==t[s]||!n&&p(e[s])!==p(t[s]))&&a++;return a+r}function v(t){!1===e.suppressDeprecationWarnings&&"undefined"!=typeof console&&console.warn&&console.warn("Deprecation warning: "+t)}function S(t,n){var s=!0;return o(function(){if(null!=e.deprecationHandler&&e.deprecationHandler(null,t),s){for(var i,r=[],a=0;a<arguments.length;a++){if(i="","object"==typeof arguments[a]){i+="\n["+a+"] ";for(var o in arguments[0])i+=o+": "+arguments[0][o]+", ";i=i.slice(0,-2)}else i=arguments[a];r.push(i)}v(t+"\nArguments: "+Array.prototype.slice.call(r).join("")+"\n"+(new Error).stack),s=!1}return n.apply(this,arguments)},n)}function M(t,n){null!=e.deprecationHandler&&e.deprecationHandler(t,n),ys[t]||(v(n),ys[t]=!0)}function k(e){return e instanceof Function||"[object Function]"===Object.prototype.toString.call(e)}function D(e){var t,n;for(n in e)t=e[n],k(t)?this[n]=t:this["_"+n]=t;this._config=e,this._ordinalParseLenient=new RegExp(this._ordinalParse.source+"|"+/\d{1,2}/.source)}function Y(e,t){var s,i=o({},e);for(s in t)a(t,s)&&(n(e[s])&&n(t[s])?(i[s]={},o(i[s],e[s]),o(i[s],t[s])):null!=t[s]?i[s]=t[s]:delete i[s]);for(s in e)a(e,s)&&!a(t,s)&&n(e[s])&&(i[s]=o({},i[s]));return i}function O(e){null!=e&&this.set(e)}function x(e,t,n){var s=this._calendar[e]||this._calendar.sameElse;return k(s)?s.call(t,n):s}function b(e){var t=this._longDateFormat[e],n=this._longDateFormat[e.toUpperCase()];return t||!n?t:(this._longDateFormat[e]=n.replace(/MMMM|MM|DD|dddd/g,function(e){return e.slice(1)}),this._longDateFormat[e])}function T(){return this._invalidDate}function P(e){return this._ordinal.replace("%d",e)}function W(e,t,n,s){var i=this._relativeTime[n];return k(i)?i(e,t,n,s):i.replace(/%d/i,e)}function R(e,t){var n=this._relativeTime[e>0?"future":"past"];return k(n)?n(t):n.replace(/%s/i,t)}function U(e,t){var n=e.toLowerCase();ks[n]=ks[n+"s"]=ks[t]=e}function C(e){return"string"==typeof e?ks[e]||ks[e.toLowerCase()]:void 0}function F(e){var t,n,s={};for(n in e)a(e,n)&&(t=C(n))&&(s[t]=e[n]);return s}function H(e,t){Ds[e]=t}function L(e){var t=[];for(var n in e)t.push({unit:n,priority:Ds[n]});return t.sort(function(e,t){return e.priority-t.priority}),t}function G(t,n){return function(s){return null!=s?(j(this,t,s),e.updateOffset(this,n),this):V(this,t)}}function V(e,t){return e.isValid()?e._d["get"+(e._isUTC?"UTC":"")+t]():NaN}function j(e,t,n){e.isValid()&&e._d["set"+(e._isUTC?"UTC":"")+t](n)}function A(e){return e=C(e),k(this[e])?this[e]():this}function N(e,t){if("object"==typeof e){e=F(e);for(var n=L(e),s=0;s<n.length;s++)this[n[s].unit](e[n[s].unit])}else if(e=C(e),k(this[e]))return this[e](t);return this}function E(e,t,n){var s=""+Math.abs(e),i=t-s.length;return(e>=0?n?"+":"":"-")+Math.pow(10,Math.max(0,i)).toString().substr(1)+s}function I(e,t,n,s){var i=s;"string"==typeof s&&(i=function(){return this[s]()}),e&&(bs[e]=i),t&&(bs[t[0]]=function(){return E(i.apply(this,arguments),t[1],t[2])}),n&&(bs[n]=function(){return this.localeData().ordinal(i.apply(this,arguments),e)})}function z(e){return e.match(/\[[\s\S]/)?e.replace(/^\[|\]$/g,""):e.replace(/\\/g,"")}function Z(e){var t,n,s=e.match(Ys);for(t=0,n=s.length;t<n;t++)bs[s[t]]?s[t]=bs[s[t]]:s[t]=z(s[t]);return function(t){var i,r="";for(i=0;i<n;i++)r+=s[i]instanceof Function?s[i].call(t,e):s[i];return r}}function q(e,t){return e.isValid()?(t=$(t,e.localeData()),xs[t]=xs[t]||Z(t),xs[t](e)):e.localeData().invalidDate()}function $(e,t){function n(e){return t.longDateFormat(e)||e}var s=5;for(Os.lastIndex=0;s>=0&&Os.test(e);)e=e.replace(Os,n),Os.lastIndex=0,s-=1;return e}function B(e,t,n){Zs[e]=k(t)?t:function(e,s){return e&&n?n:t}}function J(e,t){return a(Zs,e)?Zs[e](t._strict,t._locale):new RegExp(Q(e))}function Q(e){return X(e.replace("\\","").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,function(e,t,n,s,i){return t||n||s||i}))}function X(e){return e.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}function K(e,t){var n,s=t;for("string"==typeof e&&(e=[e]),"number"==typeof t&&(s=function(e,n){n[t]=p(e)}),n=0;n<e.length;n++)qs[e[n]]=s}function ee(e,t){K(e,function(e,n,s,i){s._w=s._w||{},t(e,s._w,s,i)})}function te(e,t,n){null!=t&&a(qs,e)&&qs[e](t,n._a,n,e)}function ne(e,t){return new Date(Date.UTC(e,t+1,0)).getUTCDate()}function se(e,n){return e?t(this._months)?this._months[e.month()]:this._months[(this._months.isFormat||si).test(n)?"format":"standalone"][e.month()]:this._months}function ie(e,n){return e?t(this._monthsShort)?this._monthsShort[e.month()]:this._monthsShort[si.test(n)?"format":"standalone"][e.month()]:this._monthsShort}function re(e,t,n){var s,i,r,a=e.toLocaleLowerCase();if(!this._monthsParse)for(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[],s=0;s<12;++s)r=u([2e3,s]),this._shortMonthsParse[s]=this.monthsShort(r,"").toLocaleLowerCase(),this._longMonthsParse[s]=this.months(r,"").toLocaleLowerCase();return n?"MMM"===t?(i=ps.call(this._shortMonthsParse,a),-1!==i?i:null):(i=ps.call(this._longMonthsParse,a),-1!==i?i:null):"MMM"===t?-1!==(i=ps.call(this._shortMonthsParse,a))?i:(i=ps.call(this._longMonthsParse,a),-1!==i?i:null):-1!==(i=ps.call(this._longMonthsParse,a))?i:(i=ps.call(this._shortMonthsParse,a),-1!==i?i:null)}function ae(e,t,n){var s,i,r;if(this._monthsParseExact)return re.call(this,e,t,n);for(this._monthsParse||(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[]),s=0;s<12;s++){if(i=u([2e3,s]),n&&!this._longMonthsParse[s]&&(this._longMonthsParse[s]=new RegExp("^"+this.months(i,"").replace(".","")+"$","i"),this._shortMonthsParse[s]=new RegExp("^"+this.monthsShort(i,"").replace(".","")+"$","i")),n||this._monthsParse[s]||(r="^"+this.months(i,"")+"|^"+this.monthsShort(i,""),this._monthsParse[s]=new RegExp(r.replace(".",""),"i")),n&&"MMMM"===t&&this._longMonthsParse[s].test(e))return s;if(n&&"MMM"===t&&this._shortMonthsParse[s].test(e))return s;if(!n&&this._monthsParse[s].test(e))return s}}function oe(e,t){var n;if(!e.isValid())return e;if("string"==typeof t)if(/^\d+$/.test(t))t=p(t);else if("number"!=typeof(t=e.localeData().monthsParse(t)))return e;return n=Math.min(e.date(),ne(e.year(),t)),e._d["set"+(e._isUTC?"UTC":"")+"Month"](t,n),e}function ue(t){return null!=t?(oe(this,t),e.updateOffset(this,!0),this):V(this,"Month")}function de(){return ne(this.year(),this.month())}function le(e){return this._monthsParseExact?(a(this,"_monthsRegex")||ce.call(this),e?this._monthsShortStrictRegex:this._monthsShortRegex):(a(this,"_monthsShortRegex")||(this._monthsShortRegex=ai),this._monthsShortStrictRegex&&e?this._monthsShortStrictRegex:this._monthsShortRegex)}function he(e){return this._monthsParseExact?(a(this,"_monthsRegex")||ce.call(this),e?this._monthsStrictRegex:this._monthsRegex):(a(this,"_monthsRegex")||(this._monthsRegex=oi),this._monthsStrictRegex&&e?this._monthsStrictRegex:this._monthsRegex)}function ce(){function e(e,t){return t.length-e.length}var t,n,s=[],i=[],r=[];for(t=0;t<12;t++)n=u([2e3,t]),s.push(this.monthsShort(n,"")),i.push(this.months(n,"")),r.push(this.months(n,"")),r.push(this.monthsShort(n,""));for(s.sort(e),i.sort(e),r.sort(e),t=0;t<12;t++)s[t]=X(s[t]),i[t]=X(i[t]);for(t=0;t<24;t++)r[t]=X(r[t]);this._monthsRegex=new RegExp("^("+r.join("|")+")","i"),this._monthsShortRegex=this._monthsRegex,this._monthsStrictRegex=new RegExp("^("+i.join("|")+")","i"),this._monthsShortStrictRegex=new RegExp("^("+s.join("|")+")","i")}function fe(e){return me(e)?366:365}function me(e){return e%4==0&&e%100!=0||e%400==0}function _e(){return me(this.year())}function ye(e,t,n,s,i,r,a){var o=new Date(e,t,n,s,i,r,a);return e<100&&e>=0&&isFinite(o.getFullYear())&&o.setFullYear(e),o}function ge(e){var t=new Date(Date.UTC.apply(null,arguments));return e<100&&e>=0&&isFinite(t.getUTCFullYear())&&t.setUTCFullYear(e),t}function pe(e,t,n){var s=7+t-n;return-(7+ge(e,0,s).getUTCDay()-t)%7+s-1}function we(e,t,n,s,i){var r,a,o=(7+n-s)%7,u=pe(e,s,i),d=1+7*(t-1)+o+u;return d<=0?(r=e-1,a=fe(r)+d):d>fe(e)?(r=e+1,a=d-fe(e)):(r=e,a=d),{year:r,dayOfYear:a}}function ve(e,t,n){var s,i,r=pe(e.year(),t,n),a=Math.floor((e.dayOfYear()-r-1)/7)+1;return a<1?(i=e.year()-1,s=a+Se(i,t,n)):a>Se(e.year(),t,n)?(s=a-Se(e.year(),t,n),i=e.year()+1):(i=e.year(),s=a),{week:s,year:i}}function Se(e,t,n){var s=pe(e,t,n),i=pe(e+1,t,n);return(fe(e)-s+i)/7}function Me(e){return ve(e,this._week.dow,this._week.doy).week}function ke(){return this._week.dow}function De(){return this._week.doy}function Ye(e){var t=this.localeData().week(this);return null==e?t:this.add(7*(e-t),"d")}function Oe(e){var t=ve(this,1,4).week;return null==e?t:this.add(7*(e-t),"d")}function xe(e,t){return"string"!=typeof e?e:isNaN(e)?(e=t.weekdaysParse(e),"number"==typeof e?e:null):parseInt(e,10)}function be(e,t){return"string"==typeof e?t.weekdaysParse(e)%7||7:isNaN(e)?null:e}function Te(e,n){return e?t(this._weekdays)?this._weekdays[e.day()]:this._weekdays[this._weekdays.isFormat.test(n)?"format":"standalone"][e.day()]:this._weekdays}function Pe(e){return e?this._weekdaysShort[e.day()]:this._weekdaysShort}function We(e){return e?this._weekdaysMin[e.day()]:this._weekdaysMin}function Re(e,t,n){var s,i,r,a=e.toLocaleLowerCase();if(!this._weekdaysParse)for(this._weekdaysParse=[],this._shortWeekdaysParse=[],this._minWeekdaysParse=[],s=0;s<7;++s)r=u([2e3,1]).day(s),this._minWeekdaysParse[s]=this.weekdaysMin(r,"").toLocaleLowerCase(),this._shortWeekdaysParse[s]=this.weekdaysShort(r,"").toLocaleLowerCase(),this._weekdaysParse[s]=this.weekdays(r,"").toLocaleLowerCase();return n?"dddd"===t?(i=ps.call(this._weekdaysParse,a),-1!==i?i:null):"ddd"===t?(i=ps.call(this._shortWeekdaysParse,a),-1!==i?i:null):(i=ps.call(this._minWeekdaysParse,a),-1!==i?i:null):"dddd"===t?-1!==(i=ps.call(this._weekdaysParse,a))?i:-1!==(i=ps.call(this._shortWeekdaysParse,a))?i:(i=ps.call(this._minWeekdaysParse,a),-1!==i?i:null):"ddd"===t?-1!==(i=ps.call(this._shortWeekdaysParse,a))?i:-1!==(i=ps.call(this._weekdaysParse,a))?i:(i=ps.call(this._minWeekdaysParse,a),-1!==i?i:null):-1!==(i=ps.call(this._minWeekdaysParse,a))?i:-1!==(i=ps.call(this._weekdaysParse,a))?i:(i=ps.call(this._shortWeekdaysParse,a),-1!==i?i:null)}function Ue(e,t,n){var s,i,r;if(this._weekdaysParseExact)return Re.call(this,e,t,n);for(this._weekdaysParse||(this._weekdaysParse=[],this._minWeekdaysParse=[],this._shortWeekdaysParse=[],this._fullWeekdaysParse=[]),s=0;s<7;s++){if(i=u([2e3,1]).day(s),n&&!this._fullWeekdaysParse[s]&&(this._fullWeekdaysParse[s]=new RegExp("^"+this.weekdays(i,"").replace(".",".?")+"$","i"),this._shortWeekdaysParse[s]=new RegExp("^"+this.weekdaysShort(i,"").replace(".",".?")+"$","i"),this._minWeekdaysParse[s]=new RegExp("^"+this.weekdaysMin(i,"").replace(".",".?")+"$","i")),this._weekdaysParse[s]||(r="^"+this.weekdays(i,"")+"|^"+this.weekdaysShort(i,"")+"|^"+this.weekdaysMin(i,""),this._weekdaysParse[s]=new RegExp(r.replace(".",""),"i")),n&&"dddd"===t&&this._fullWeekdaysParse[s].test(e))return s;if(n&&"ddd"===t&&this._shortWeekdaysParse[s].test(e))return s;if(n&&"dd"===t&&this._minWeekdaysParse[s].test(e))return s;if(!n&&this._weekdaysParse[s].test(e))return s}}function Ce(e){if(!this.isValid())return null!=e?this:NaN;var t=this._isUTC?this._d.getUTCDay():this._d.getDay();return null!=e?(e=xe(e,this.localeData()),this.add(e-t,"d")):t}function Fe(e){if(!this.isValid())return null!=e?this:NaN;var t=(this.day()+7-this.localeData()._week.dow)%7;return null==e?t:this.add(e-t,"d")}function He(e){if(!this.isValid())return null!=e?this:NaN;if(null!=e){var t=be(e,this.localeData());return this.day(this.day()%7?t:t-7)}return this.day()||7}function Le(e){return this._weekdaysParseExact?(a(this,"_weekdaysRegex")||je.call(this),e?this._weekdaysStrictRegex:this._weekdaysRegex):(a(this,"_weekdaysRegex")||(this._weekdaysRegex=fi),this._weekdaysStrictRegex&&e?this._weekdaysStrictRegex:this._weekdaysRegex)}function Ge(e){return this._weekdaysParseExact?(a(this,"_weekdaysRegex")||je.call(this),e?this._weekdaysShortStrictRegex:this._weekdaysShortRegex):(a(this,"_weekdaysShortRegex")||(this._weekdaysShortRegex=mi),this._weekdaysShortStrictRegex&&e?this._weekdaysShortStrictRegex:this._weekdaysShortRegex)}function Ve(e){return this._weekdaysParseExact?(a(this,"_weekdaysRegex")||je.call(this),e?this._weekdaysMinStrictRegex:this._weekdaysMinRegex):(a(this,"_weekdaysMinRegex")||(this._weekdaysMinRegex=_i),this._weekdaysMinStrictRegex&&e?this._weekdaysMinStrictRegex:this._weekdaysMinRegex)}function je(){function e(e,t){return t.length-e.length}var t,n,s,i,r,a=[],o=[],d=[],l=[];for(t=0;t<7;t++)n=u([2e3,1]).day(t),s=this.weekdaysMin(n,""),i=this.weekdaysShort(n,""),r=this.weekdays(n,""),a.push(s),o.push(i),d.push(r),l.push(s),l.push(i),l.push(r);for(a.sort(e),o.sort(e),d.sort(e),l.sort(e),t=0;t<7;t++)o[t]=X(o[t]),d[t]=X(d[t]),l[t]=X(l[t]);this._weekdaysRegex=new RegExp("^("+l.join("|")+")","i"),this._weekdaysShortRegex=this._weekdaysRegex,this._weekdaysMinRegex=this._weekdaysRegex,this._weekdaysStrictRegex=new RegExp("^("+d.join("|")+")","i"),this._weekdaysShortStrictRegex=new RegExp("^("+o.join("|")+")","i"),this._weekdaysMinStrictRegex=new RegExp("^("+a.join("|")+")","i")}function Ae(){return this.hours()%12||12}function Ne(){return this.hours()||24}function Ee(e,t){I(e,0,0,function(){return this.localeData().meridiem(this.hours(),this.minutes(),t)})}function Ie(e,t){return t._meridiemParse}function ze(e){return"p"===(e+"").toLowerCase().charAt(0)}function Ze(e,t,n){return e>11?n?"pm":"PM":n?"am":"AM"}function qe(e){return e?e.toLowerCase().replace("_","-"):e}function $e(e){for(var t,n,s,i,r=0;r<e.length;){for(i=qe(e[r]).split("-"),t=i.length,n=qe(e[r+1]),n=n?n.split("-"):null;t>0;){if(s=Be(i.slice(0,t).join("-")))return s;if(n&&n.length>=t&&w(i,n,!0)>=t-1)break;t--}r++}return null}function Be(e){var t=null;if(!vi[e]&&"undefined"!=typeof module&&module&&module.require)try{t=yi._abbr,module.require("./locale/"+e),Je(t)}catch(e){}return vi[e]}function Je(e,t){var n;return e&&(n=f(t)?Ke(e):Qe(e,t))&&(yi=n),yi._abbr}function Qe(e,t){if(null!==t){var n=wi;return t.abbr=e,null!=vi[e]?(M("defineLocaleOverride","use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info."),n=vi[e]._config):null!=t.parentLocale&&(null!=vi[t.parentLocale]?n=vi[t.parentLocale]._config:M("parentLocaleUndefined","specified parentLocale is not defined yet. See http://momentjs.com/guides/#/warnings/parent-locale/")),vi[e]=new O(Y(n,t)),Je(e),vi[e]}return delete vi[e],null}function Xe(e,t){if(null!=t){var n,s=wi;null!=vi[e]&&(s=vi[e]._config),t=Y(s,t),n=new O(t),n.parentLocale=vi[e],vi[e]=n,Je(e)}else null!=vi[e]&&(null!=vi[e].parentLocale?vi[e]=vi[e].parentLocale:null!=vi[e]&&delete vi[e]);return vi[e]}function Ke(e){var n;if(e&&e._locale&&e._locale._abbr&&(e=e._locale._abbr),!e)return yi;if(!t(e)){if(n=Be(e))return n;e=[e]}return $e(e)}function et(){return gs(vi)}function tt(e){var t,n=e._a;return n&&-2===l(e).overflow&&(t=n[Bs]<0||n[Bs]>11?Bs:n[Js]<1||n[Js]>ne(n[$s],n[Bs])?Js:n[Qs]<0||n[Qs]>24||24===n[Qs]&&(0!==n[Xs]||0!==n[Ks]||0!==n[ei])?Qs:n[Xs]<0||n[Xs]>59?Xs:n[Ks]<0||n[Ks]>59?Ks:n[ei]<0||n[ei]>999?ei:-1,l(e)._overflowDayOfYear&&(t<$s||t>Js)&&(t=Js),l(e)._overflowWeeks&&-1===t&&(t=ti),l(e)._overflowWeekday&&-1===t&&(t=ni),l(e).overflow=t),e}function nt(e){var t,n,s,i,r,a,o=e._i,u=Si.exec(o)||Mi.exec(o);if(u){for(l(e).iso=!0,t=0,n=Di.length;t<n;t++)if(Di[t][1].exec(u[1])){i=Di[t][0],s=!1!==Di[t][2];break}if(null==i)return void(e._isValid=!1);if(u[3]){for(t=0,n=Yi.length;t<n;t++)if(Yi[t][1].exec(u[3])){r=(u[2]||" ")+Yi[t][0];break}if(null==r)return void(e._isValid=!1)}if(!s&&null!=r)return void(e._isValid=!1);if(u[4]){if(!ki.exec(u[4]))return void(e._isValid=!1);a="Z"}e._f=i+(r||"")+(a||""),ut(e)}else e._isValid=!1}function st(t){var n=Oi.exec(t._i);if(null!==n)return void(t._d=new Date(+n[1]));nt(t),!1===t._isValid&&(delete t._isValid,e.createFromInputFallback(t))}function it(e,t,n){return null!=e?e:null!=t?t:n}function rt(t){var n=new Date(e.now());return t._useUTC?[n.getUTCFullYear(),n.getUTCMonth(),n.getUTCDate()]:[n.getFullYear(),n.getMonth(),n.getDate()]}function at(e){var t,n,s,i,r=[];if(!e._d){for(s=rt(e),e._w&&null==e._a[Js]&&null==e._a[Bs]&&ot(e),e._dayOfYear&&(i=it(e._a[$s],s[$s]),e._dayOfYear>fe(i)&&(l(e)._overflowDayOfYear=!0),n=ge(i,0,e._dayOfYear),e._a[Bs]=n.getUTCMonth(),e._a[Js]=n.getUTCDate()),t=0;t<3&&null==e._a[t];++t)e._a[t]=r[t]=s[t];for(;t<7;t++)e._a[t]=r[t]=null==e._a[t]?2===t?1:0:e._a[t];24===e._a[Qs]&&0===e._a[Xs]&&0===e._a[Ks]&&0===e._a[ei]&&(e._nextDay=!0,e._a[Qs]=0),e._d=(e._useUTC?ge:ye).apply(null,r),null!=e._tzm&&e._d.setUTCMinutes(e._d.getUTCMinutes()-e._tzm),e._nextDay&&(e._a[Qs]=24)}}function ot(e){var t,n,s,i,r,a,o,u;t=e._w,null!=t.GG||null!=t.W||null!=t.E?(r=1,a=4,n=it(t.GG,e._a[$s],ve(yt(),1,4).year),s=it(t.W,1),((i=it(t.E,1))<1||i>7)&&(u=!0)):(r=e._locale._week.dow,a=e._locale._week.doy,n=it(t.gg,e._a[$s],ve(yt(),r,a).year),s=it(t.w,1),null!=t.d?((i=t.d)<0||i>6)&&(u=!0):null!=t.e?(i=t.e+r,(t.e<0||t.e>6)&&(u=!0)):i=r),s<1||s>Se(n,r,a)?l(e)._overflowWeeks=!0:null!=u?l(e)._overflowWeekday=!0:(o=we(n,s,i,r,a),e._a[$s]=o.year,e._dayOfYear=o.dayOfYear)}function ut(t){if(t._f===e.ISO_8601)return void nt(t);t._a=[],l(t).empty=!0;var n,s,i,r,a,o=""+t._i,u=o.length,d=0;for(i=$(t._f,t._locale).match(Ys)||[],n=0;n<i.length;n++)r=i[n],s=(o.match(J(r,t))||[])[0],s&&(a=o.substr(0,o.indexOf(s)),a.length>0&&l(t).unusedInput.push(a),o=o.slice(o.indexOf(s)+s.length),d+=s.length),bs[r]?(s?l(t).empty=!1:l(t).unusedTokens.push(r),te(r,s,t)):t._strict&&!s&&l(t).unusedTokens.push(r);l(t).charsLeftOver=u-d,o.length>0&&l(t).unusedInput.push(o),t._a[Qs]<=12&&!0===l(t).bigHour&&t._a[Qs]>0&&(l(t).bigHour=void 0),l(t).parsedDateParts=t._a.slice(0),l(t).meridiem=t._meridiem,t._a[Qs]=dt(t._locale,t._a[Qs],t._meridiem),at(t),tt(t)}function dt(e,t,n){var s;return null==n?t:null!=e.meridiemHour?e.meridiemHour(t,n):null!=e.isPM?(s=e.isPM(n),s&&t<12&&(t+=12),s||12!==t||(t=0),t):t}function lt(e){var t,n,s,i,r;if(0===e._f.length)return l(e).invalidFormat=!0,void(e._d=new Date(NaN));for(i=0;i<e._f.length;i++)r=0,t=m({},e),null!=e._useUTC&&(t._useUTC=e._useUTC),t._f=e._f[i],ut(t),h(t)&&(r+=l(t).charsLeftOver,r+=10*l(t).unusedTokens.length,l(t).score=r,(null==s||r<s)&&(s=r,n=t));o(e,n||t)}function ht(e){if(!e._d){var t=F(e._i);e._a=r([t.year,t.month,t.day||t.date,t.hour,t.minute,t.second,t.millisecond],function(e){return e&&parseInt(e,10)}),at(e)}}function ct(e){var t=new _(tt(ft(e)));return t._nextDay&&(t.add(1,"d"),t._nextDay=void 0),t}function ft(e){var n=e._i,s=e._f;return e._locale=e._locale||Ke(e._l),null===n||void 0===s&&""===n?c({nullInput:!0}):("string"==typeof n&&(e._i=n=e._locale.preparse(n)),y(n)?new _(tt(n)):(t(s)?lt(e):i(n)?e._d=n:s?ut(e):mt(e),h(e)||(e._d=null),e))}function mt(n){var s=n._i;void 0===s?n._d=new Date(e.now()):i(s)?n._d=new Date(s.valueOf()):"string"==typeof s?st(n):t(s)?(n._a=r(s.slice(0),function(e){return parseInt(e,10)}),at(n)):"object"==typeof s?ht(n):"number"==typeof s?n._d=new Date(s):e.createFromInputFallback(n)}function _t(e,i,r,a,o){var u={};return"boolean"==typeof r&&(a=r,r=void 0),(n(e)&&s(e)||t(e)&&0===e.length)&&(e=void 0),u._isAMomentObject=!0,u._useUTC=u._isUTC=o,u._l=r,u._i=e,u._f=i,u._strict=a,ct(u)}function yt(e,t,n,s){return _t(e,t,n,s,!1)}function gt(e,n){var s,i;if(1===n.length&&t(n[0])&&(n=n[0]),!n.length)return yt();for(s=n[0],i=1;i<n.length;++i)n[i].isValid()&&!n[i][e](s)||(s=n[i]);return s}function pt(){return gt("isBefore",[].slice.call(arguments,0))}function wt(){return gt("isAfter",[].slice.call(arguments,0))}function vt(e){var t=F(e),n=t.year||0,s=t.quarter||0,i=t.month||0,r=t.week||0,a=t.day||0,o=t.hour||0,u=t.minute||0,d=t.second||0,l=t.millisecond||0;this._milliseconds=+l+1e3*d+6e4*u+1e3*o*60*60,this._days=+a+7*r,this._months=+i+3*s+12*n,this._data={},this._locale=Ke(),this._bubble()}function St(e){return e instanceof vt}function Mt(e){return e<0?-1*Math.round(-1*e):Math.round(e)}function kt(e,t){I(e,0,0,function(){var e=this.utcOffset(),n="+";return e<0&&(e=-e,n="-"),n+E(~~(e/60),2)+t+E(~~e%60,2)})}function Dt(e,t){var n=(t||"").match(e)||[],s=n[n.length-1]||[],i=(s+"").match(Pi)||["-",0,0],r=60*i[1]+p(i[2]);return"+"===i[0]?r:-r}function Yt(t,n){var s,r;return n._isUTC?(s=n.clone(),r=(y(t)||i(t)?t.valueOf():yt(t).valueOf())-s.valueOf(),s._d.setTime(s._d.valueOf()+r),e.updateOffset(s,!1),s):yt(t).local()}function Ot(e){return 15*-Math.round(e._d.getTimezoneOffset()/15)}function xt(t,n){var s,i=this._offset||0;return this.isValid()?null!=t?("string"==typeof t?t=Dt(Es,t):Math.abs(t)<16&&(t*=60),!this._isUTC&&n&&(s=Ot(this)),this._offset=t,this._isUTC=!0,null!=s&&this.add(s,"m"),i!==t&&(!n||this._changeInProgress?Et(this,Gt(t-i,"m"),1,!1):this._changeInProgress||(this._changeInProgress=!0,e.updateOffset(this,!0),this._changeInProgress=null)),this):this._isUTC?i:Ot(this):null!=t?this:NaN}function bt(e,t){return null!=e?("string"!=typeof e&&(e=-e),this.utcOffset(e,t),this):-this.utcOffset()}function Tt(e){return this.utcOffset(0,e)}function Pt(e){return this._isUTC&&(this.utcOffset(0,e),this._isUTC=!1,e&&this.subtract(Ot(this),"m")),this}function Wt(){if(this._tzm)this.utcOffset(this._tzm);else if("string"==typeof this._i){var e=Dt(Ns,this._i);0===e?this.utcOffset(0,!0):this.utcOffset(Dt(Ns,this._i))}return this}function Rt(e){return!!this.isValid()&&(e=e?yt(e).utcOffset():0,(this.utcOffset()-e)%60==0)}function Ut(){return this.utcOffset()>this.clone().month(0).utcOffset()||this.utcOffset()>this.clone().month(5).utcOffset()}function Ct(){if(!f(this._isDSTShifted))return this._isDSTShifted;var e={};if(m(e,this),e=ft(e),e._a){var t=e._isUTC?u(e._a):yt(e._a);this._isDSTShifted=this.isValid()&&w(e._a,t.toArray())>0}else this._isDSTShifted=!1;return this._isDSTShifted}function Ft(){return!!this.isValid()&&!this._isUTC}function Ht(){return!!this.isValid()&&this._isUTC}function Lt(){return!!this.isValid()&&(this._isUTC&&0===this._offset)}function Gt(e,t){var n,s,i,r=e,o=null;return St(e)?r={ms:e._milliseconds,d:e._days,M:e._months}:"number"==typeof e?(r={},t?r[t]=e:r.milliseconds=e):(o=Wi.exec(e))?(n="-"===o[1]?-1:1,r={y:0,d:p(o[Js])*n,h:p(o[Qs])*n,m:p(o[Xs])*n,s:p(o[Ks])*n,ms:p(Mt(1e3*o[ei]))*n}):(o=Ri.exec(e))?(n="-"===o[1]?-1:1,r={y:Vt(o[2],n),M:Vt(o[3],n),w:Vt(o[4],n),d:Vt(o[5],n),h:Vt(o[6],n),m:Vt(o[7],n),s:Vt(o[8],n)}):null==r?r={}:"object"==typeof r&&("from"in r||"to"in r)&&(i=At(yt(r.from),yt(r.to)),r={},r.ms=i.milliseconds,r.M=i.months),s=new vt(r),St(e)&&a(e,"_locale")&&(s._locale=e._locale),s}function Vt(e,t){var n=e&&parseFloat(e.replace(",","."));return(isNaN(n)?0:n)*t}function jt(e,t){var n={milliseconds:0,months:0};return n.months=t.month()-e.month()+12*(t.year()-e.year()),e.clone().add(n.months,"M").isAfter(t)&&--n.months,n.milliseconds=+t-+e.clone().add(n.months,"M"),n}function At(e,t){var n;return e.isValid()&&t.isValid()?(t=Yt(t,e),e.isBefore(t)?n=jt(e,t):(n=jt(t,e),n.milliseconds=-n.milliseconds,n.months=-n.months),n):{milliseconds:0,months:0}}function Nt(e,t){return function(n,s){var i,r;return null===s||isNaN(+s)||(M(t,"moment()."+t+"(period, number) is deprecated. Please use moment()."+t+"(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info."),r=n,n=s,s=r),n="string"==typeof n?+n:n,i=Gt(n,s),Et(this,i,e),this}}function Et(t,n,s,i){var r=n._milliseconds,a=Mt(n._days),o=Mt(n._months);t.isValid()&&(i=null==i||i,r&&t._d.setTime(t._d.valueOf()+r*s),a&&j(t,"Date",V(t,"Date")+a*s),o&&oe(t,V(t,"Month")+o*s),i&&e.updateOffset(t,a||o))}function It(e,t){var n=e.diff(t,"days",!0);return n<-6?"sameElse":n<-1?"lastWeek":n<0?"lastDay":n<1?"sameDay":n<2?"nextDay":n<7?"nextWeek":"sameElse"}function zt(t,n){var s=t||yt(),i=Yt(s,this).startOf("day"),r=e.calendarFormat(this,i)||"sameElse",a=n&&(k(n[r])?n[r].call(this,s):n[r]);return this.format(a||this.localeData().calendar(r,this,yt(s)))}function Zt(){return new _(this)}function qt(e,t){var n=y(e)?e:yt(e);return!(!this.isValid()||!n.isValid())&&(t=C(f(t)?"millisecond":t),"millisecond"===t?this.valueOf()>n.valueOf():n.valueOf()<this.clone().startOf(t).valueOf())}function $t(e,t){var n=y(e)?e:yt(e);return!(!this.isValid()||!n.isValid())&&(t=C(f(t)?"millisecond":t),"millisecond"===t?this.valueOf()<n.valueOf():this.clone().endOf(t).valueOf()<n.valueOf())}function Bt(e,t,n,s){return s=s||"()",("("===s[0]?this.isAfter(e,n):!this.isBefore(e,n))&&(")"===s[1]?this.isBefore(t,n):!this.isAfter(t,n))}function Jt(e,t){var n,s=y(e)?e:yt(e);return!(!this.isValid()||!s.isValid())&&(t=C(t||"millisecond"),"millisecond"===t?this.valueOf()===s.valueOf():(n=s.valueOf(),this.clone().startOf(t).valueOf()<=n&&n<=this.clone().endOf(t).valueOf()))}function Qt(e,t){return this.isSame(e,t)||this.isAfter(e,t)}function Xt(e,t){return this.isSame(e,t)||this.isBefore(e,t)}function Kt(e,t,n){var s,i,r,a;return this.isValid()?(s=Yt(e,this),s.isValid()?(i=6e4*(s.utcOffset()-this.utcOffset()),t=C(t),"year"===t||"month"===t||"quarter"===t?(a=en(this,s),"quarter"===t?a/=3:"year"===t&&(a/=12)):(r=this-s,a="second"===t?r/1e3:"minute"===t?r/6e4:"hour"===t?r/36e5:"day"===t?(r-i)/864e5:"week"===t?(r-i)/6048e5:r),n?a:g(a)):NaN):NaN}function en(e,t){var n,s,i=12*(t.year()-e.year())+(t.month()-e.month()),r=e.clone().add(i,"months");return t-r<0?(n=e.clone().add(i-1,"months"),s=(t-r)/(r-n)):(n=e.clone().add(i+1,"months"),s=(t-r)/(n-r)),-(i+s)||0}function tn(){return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")}function nn(){var e=this.clone().utc();return 0<e.year()&&e.year()<=9999?k(Date.prototype.toISOString)?this.toDate().toISOString():q(e,"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]"):q(e,"YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]")}function sn(t){t||(t=this.isUtc()?e.defaultFormatUtc:e.defaultFormat);var n=q(this,t);return this.localeData().postformat(n)}function rn(e,t){return this.isValid()&&(y(e)&&e.isValid()||yt(e).isValid())?Gt({to:this,from:e}).locale(this.locale()).humanize(!t):this.localeData().invalidDate()}function an(e){return this.from(yt(),e)}function on(e,t){return this.isValid()&&(y(e)&&e.isValid()||yt(e).isValid())?Gt({from:this,to:e}).locale(this.locale()).humanize(!t):this.localeData().invalidDate()}function un(e){return this.to(yt(),e)}function dn(e){var t;return void 0===e?this._locale._abbr:(t=Ke(e),null!=t&&(this._locale=t),this)}function ln(){return this._locale}function hn(e){switch(e=C(e)){case"year":this.month(0);case"quarter":case"month":this.date(1);case"week":case"isoWeek":case"day":case"date":this.hours(0);case"hour":this.minutes(0);case"minute":this.seconds(0);case"second":this.milliseconds(0)}return"week"===e&&this.weekday(0),"isoWeek"===e&&this.isoWeekday(1),"quarter"===e&&this.month(3*Math.floor(this.month()/3)),this}function cn(e){return void 0===(e=C(e))||"millisecond"===e?this:("date"===e&&(e="day"),this.startOf(e).add(1,"isoWeek"===e?"week":e).subtract(1,"ms"))}function fn(){return this._d.valueOf()-6e4*(this._offset||0)}function mn(){return Math.floor(this.valueOf()/1e3)}function _n(){return new Date(this.valueOf())}function yn(){var e=this;return[e.year(),e.month(),e.date(),e.hour(),e.minute(),e.second(),e.millisecond()]}function gn(){var e=this;return{years:e.year(),months:e.month(),date:e.date(),hours:e.hours(),minutes:e.minutes(),seconds:e.seconds(),milliseconds:e.milliseconds()}}function pn(){return this.isValid()?this.toISOString():null}function wn(){return h(this)}function vn(){return o({},l(this))}function Sn(){return l(this).overflow}function Mn(){return{input:this._i,format:this._f,locale:this._locale,isUTC:this._isUTC,strict:this._strict}}function kn(e,t){I(0,[e,e.length],0,t)}function Dn(e){return bn.call(this,e,this.week(),this.weekday(),this.localeData()._week.dow,this.localeData()._week.doy)}function Yn(e){return bn.call(this,e,this.isoWeek(),this.isoWeekday(),1,4)}function On(){return Se(this.year(),1,4)}function xn(){var e=this.localeData()._week;return Se(this.year(),e.dow,e.doy)}function bn(e,t,n,s,i){var r;return null==e?ve(this,s,i).year:(r=Se(e,s,i),t>r&&(t=r),Tn.call(this,e,t,n,s,i))}function Tn(e,t,n,s,i){var r=we(e,t,n,s,i),a=ge(r.year,0,r.dayOfYear);return this.year(a.getUTCFullYear()),this.month(a.getUTCMonth()),this.date(a.getUTCDate()),this}function Pn(e){return null==e?Math.ceil((this.month()+1)/3):this.month(3*(e-1)+this.month()%3)}function Wn(e){var t=Math.round((this.clone().startOf("day")-this.clone().startOf("year"))/864e5)+1;return null==e?t:this.add(e-t,"d")}function Rn(e,t){t[ei]=p(1e3*("0."+e))}function Un(){return this._isUTC?"UTC":""}function Cn(){return this._isUTC?"Coordinated Universal Time":""}function Fn(e){return yt(1e3*e)}function Hn(){return yt.apply(null,arguments).parseZone()}function Ln(e){return e}function Gn(e,t,n,s){var i=Ke(),r=u().set(s,t);return i[n](r,e)}function Vn(e,t,n){if("number"==typeof e&&(t=e,e=void 0),e=e||"",null!=t)return Gn(e,t,n,"month");var s,i=[];for(s=0;s<12;s++)i[s]=Gn(e,s,n,"month");return i}function jn(e,t,n,s){"boolean"==typeof e?("number"==typeof t&&(n=t,t=void 0),t=t||""):(t=e,n=t,e=!1,"number"==typeof t&&(n=t,t=void 0),t=t||"");var i=Ke(),r=e?i._week.dow:0;if(null!=n)return Gn(t,(n+r)%7,s,"day");var a,o=[];for(a=0;a<7;a++)o[a]=Gn(t,(a+r)%7,s,"day");return o}function An(e,t){return Vn(e,t,"months")}function Nn(e,t){return Vn(e,t,"monthsShort")}function En(e,t,n){return jn(e,t,n,"weekdays")}function In(e,t,n){return jn(e,t,n,"weekdaysShort")}function zn(e,t,n){return jn(e,t,n,"weekdaysMin")}function Zn(){var e=this._data
;return this._milliseconds=Ii(this._milliseconds),this._days=Ii(this._days),this._months=Ii(this._months),e.milliseconds=Ii(e.milliseconds),e.seconds=Ii(e.seconds),e.minutes=Ii(e.minutes),e.hours=Ii(e.hours),e.months=Ii(e.months),e.years=Ii(e.years),this}function qn(e,t,n,s){var i=Gt(t,n);return e._milliseconds+=s*i._milliseconds,e._days+=s*i._days,e._months+=s*i._months,e._bubble()}function $n(e,t){return qn(this,e,t,1)}function Bn(e,t){return qn(this,e,t,-1)}function Jn(e){return e<0?Math.floor(e):Math.ceil(e)}function Qn(){var e,t,n,s,i,r=this._milliseconds,a=this._days,o=this._months,u=this._data;return r>=0&&a>=0&&o>=0||r<=0&&a<=0&&o<=0||(r+=864e5*Jn(Kn(o)+a),a=0,o=0),u.milliseconds=r%1e3,e=g(r/1e3),u.seconds=e%60,t=g(e/60),u.minutes=t%60,n=g(t/60),u.hours=n%24,a+=g(n/24),i=g(Xn(a)),o+=i,a-=Jn(Kn(i)),s=g(o/12),o%=12,u.days=a,u.months=o,u.years=s,this}function Xn(e){return 4800*e/146097}function Kn(e){return 146097*e/4800}function es(e){var t,n,s=this._milliseconds;if("month"===(e=C(e))||"year"===e)return t=this._days+s/864e5,n=this._months+Xn(t),"month"===e?n:n/12;switch(t=this._days+Math.round(Kn(this._months)),e){case"week":return t/7+s/6048e5;case"day":return t+s/864e5;case"hour":return 24*t+s/36e5;case"minute":return 1440*t+s/6e4;case"second":return 86400*t+s/1e3;case"millisecond":return Math.floor(864e5*t)+s;default:throw new Error("Unknown unit "+e)}}function ts(){return this._milliseconds+864e5*this._days+this._months%12*2592e6+31536e6*p(this._months/12)}function ns(e){return function(){return this.as(e)}}function ss(e){return e=C(e),this[e+"s"]()}function is(e){return function(){return this._data[e]}}function rs(){return g(this.days()/7)}function as(e,t,n,s,i){return i.relativeTime(t||1,!!n,e,s)}function os(e,t,n){var s=Gt(e).abs(),i=ar(s.as("s")),r=ar(s.as("m")),a=ar(s.as("h")),o=ar(s.as("d")),u=ar(s.as("M")),d=ar(s.as("y")),l=i<or.s&&["s",i]||r<=1&&["m"]||r<or.m&&["mm",r]||a<=1&&["h"]||a<or.h&&["hh",a]||o<=1&&["d"]||o<or.d&&["dd",o]||u<=1&&["M"]||u<or.M&&["MM",u]||d<=1&&["y"]||["yy",d];return l[2]=t,l[3]=+e>0,l[4]=n,as.apply(null,l)}function us(e){return void 0===e?ar:"function"==typeof e&&(ar=e,!0)}function ds(e,t){return void 0!==or[e]&&(void 0===t?or[e]:(or[e]=t,!0))}function ls(e){var t=this.localeData(),n=os(this,!e,t);return e&&(n=t.pastFuture(+this,n)),t.postformat(n)}function hs(){var e,t,n,s=ur(this._milliseconds)/1e3,i=ur(this._days),r=ur(this._months);e=g(s/60),t=g(e/60),s%=60,e%=60,n=g(r/12),r%=12;var a=n,o=r,u=i,d=t,l=e,h=s,c=this.asSeconds();return c?(c<0?"-":"")+"P"+(a?a+"Y":"")+(o?o+"M":"")+(u?u+"D":"")+(d||l||h?"T":"")+(d?d+"H":"")+(l?l+"M":"")+(h?h+"S":""):"P0D"}var cs,fs;fs=Array.prototype.some?Array.prototype.some:function(e){for(var t=Object(this),n=t.length>>>0,s=0;s<n;s++)if(s in t&&e.call(this,t[s],s,t))return!0;return!1};var ms=e.momentProperties=[],_s=!1,ys={};e.suppressDeprecationWarnings=!1,e.deprecationHandler=null;var gs;gs=Object.keys?Object.keys:function(e){var t,n=[];for(t in e)a(e,t)&&n.push(t);return n};var ps,ws={sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"},vs={LTS:"h:mm:ss A",LT:"h:mm A",L:"MM/DD/YYYY",LL:"MMMM D, YYYY",LLL:"MMMM D, YYYY h:mm A",LLLL:"dddd, MMMM D, YYYY h:mm A"},Ss=/\d{1,2}/,Ms={future:"in %s",past:"%s ago",s:"a few seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},ks={},Ds={},Ys=/(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,Os=/(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,xs={},bs={},Ts=/\d/,Ps=/\d\d/,Ws=/\d{3}/,Rs=/\d{4}/,Us=/[+-]?\d{6}/,Cs=/\d\d?/,Fs=/\d\d\d\d?/,Hs=/\d\d\d\d\d\d?/,Ls=/\d{1,3}/,Gs=/\d{1,4}/,Vs=/[+-]?\d{1,6}/,js=/\d+/,As=/[+-]?\d+/,Ns=/Z|[+-]\d\d:?\d\d/gi,Es=/Z|[+-]\d\d(?::?\d\d)?/gi,Is=/[+-]?\d+(\.\d{1,3})?/,zs=/[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i,Zs={},qs={},$s=0,Bs=1,Js=2,Qs=3,Xs=4,Ks=5,ei=6,ti=7,ni=8;ps=Array.prototype.indexOf?Array.prototype.indexOf:function(e){var t;for(t=0;t<this.length;++t)if(this[t]===e)return t;return-1},I("M",["MM",2],"Mo",function(){return this.month()+1}),I("MMM",0,0,function(e){return this.localeData().monthsShort(this,e)}),I("MMMM",0,0,function(e){return this.localeData().months(this,e)}),U("month","M"),H("month",8),B("M",Cs),B("MM",Cs,Ps),B("MMM",function(e,t){return t.monthsShortRegex(e)}),B("MMMM",function(e,t){return t.monthsRegex(e)}),K(["M","MM"],function(e,t){t[Bs]=p(e)-1}),K(["MMM","MMMM"],function(e,t,n,s){var i=n._locale.monthsParse(e,s,n._strict);null!=i?t[Bs]=i:l(n).invalidMonth=e});var si=/D[oD]?(\[[^\[\]]*\]|\s+)+MMMM?/,ii="January_February_March_April_May_June_July_August_September_October_November_December".split("_"),ri="Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),ai=zs,oi=zs;I("Y",0,0,function(){var e=this.year();return e<=9999?""+e:"+"+e}),I(0,["YY",2],0,function(){return this.year()%100}),I(0,["YYYY",4],0,"year"),I(0,["YYYYY",5],0,"year"),I(0,["YYYYYY",6,!0],0,"year"),U("year","y"),H("year",1),B("Y",As),B("YY",Cs,Ps),B("YYYY",Gs,Rs),B("YYYYY",Vs,Us),B("YYYYYY",Vs,Us),K(["YYYYY","YYYYYY"],$s),K("YYYY",function(t,n){n[$s]=2===t.length?e.parseTwoDigitYear(t):p(t)}),K("YY",function(t,n){n[$s]=e.parseTwoDigitYear(t)}),K("Y",function(e,t){t[$s]=parseInt(e,10)}),e.parseTwoDigitYear=function(e){return p(e)+(p(e)>68?1900:2e3)};var ui=G("FullYear",!0);I("w",["ww",2],"wo","week"),I("W",["WW",2],"Wo","isoWeek"),U("week","w"),U("isoWeek","W"),H("week",5),H("isoWeek",5),B("w",Cs),B("ww",Cs,Ps),B("W",Cs),B("WW",Cs,Ps),ee(["w","ww","W","WW"],function(e,t,n,s){t[s.substr(0,1)]=p(e)});var di={dow:0,doy:6};I("d",0,"do","day"),I("dd",0,0,function(e){return this.localeData().weekdaysMin(this,e)}),I("ddd",0,0,function(e){return this.localeData().weekdaysShort(this,e)}),I("dddd",0,0,function(e){return this.localeData().weekdays(this,e)}),I("e",0,0,"weekday"),I("E",0,0,"isoWeekday"),U("day","d"),U("weekday","e"),U("isoWeekday","E"),H("day",11),H("weekday",11),H("isoWeekday",11),B("d",Cs),B("e",Cs),B("E",Cs),B("dd",function(e,t){return t.weekdaysMinRegex(e)}),B("ddd",function(e,t){return t.weekdaysShortRegex(e)}),B("dddd",function(e,t){return t.weekdaysRegex(e)}),ee(["dd","ddd","dddd"],function(e,t,n,s){var i=n._locale.weekdaysParse(e,s,n._strict);null!=i?t.d=i:l(n).invalidWeekday=e}),ee(["d","e","E"],function(e,t,n,s){t[s]=p(e)});var li="Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),hi="Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),ci="Su_Mo_Tu_We_Th_Fr_Sa".split("_"),fi=zs,mi=zs,_i=zs;I("H",["HH",2],0,"hour"),I("h",["hh",2],0,Ae),I("k",["kk",2],0,Ne),I("hmm",0,0,function(){return""+Ae.apply(this)+E(this.minutes(),2)}),I("hmmss",0,0,function(){return""+Ae.apply(this)+E(this.minutes(),2)+E(this.seconds(),2)}),I("Hmm",0,0,function(){return""+this.hours()+E(this.minutes(),2)}),I("Hmmss",0,0,function(){return""+this.hours()+E(this.minutes(),2)+E(this.seconds(),2)}),Ee("a",!0),Ee("A",!1),U("hour","h"),H("hour",13),B("a",Ie),B("A",Ie),B("H",Cs),B("h",Cs),B("HH",Cs,Ps),B("hh",Cs,Ps),B("hmm",Fs),B("hmmss",Hs),B("Hmm",Fs),B("Hmmss",Hs),K(["H","HH"],Qs),K(["a","A"],function(e,t,n){n._isPm=n._locale.isPM(e),n._meridiem=e}),K(["h","hh"],function(e,t,n){t[Qs]=p(e),l(n).bigHour=!0}),K("hmm",function(e,t,n){var s=e.length-2;t[Qs]=p(e.substr(0,s)),t[Xs]=p(e.substr(s)),l(n).bigHour=!0}),K("hmmss",function(e,t,n){var s=e.length-4,i=e.length-2;t[Qs]=p(e.substr(0,s)),t[Xs]=p(e.substr(s,2)),t[Ks]=p(e.substr(i)),l(n).bigHour=!0}),K("Hmm",function(e,t,n){var s=e.length-2;t[Qs]=p(e.substr(0,s)),t[Xs]=p(e.substr(s))}),K("Hmmss",function(e,t,n){var s=e.length-4,i=e.length-2;t[Qs]=p(e.substr(0,s)),t[Xs]=p(e.substr(s,2)),t[Ks]=p(e.substr(i))});var yi,gi=/[ap]\.?m?\.?/i,pi=G("Hours",!0),wi={calendar:ws,longDateFormat:vs,invalidDate:"Invalid date",ordinal:"%d",ordinalParse:Ss,relativeTime:Ms,months:ii,monthsShort:ri,week:di,weekdays:li,weekdaysMin:ci,weekdaysShort:hi,meridiemParse:gi},vi={},Si=/^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?/,Mi=/^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?/,ki=/Z|[+-]\d\d(?::?\d\d)?/,Di=[["YYYYYY-MM-DD",/[+-]\d{6}-\d\d-\d\d/],["YYYY-MM-DD",/\d{4}-\d\d-\d\d/],["GGGG-[W]WW-E",/\d{4}-W\d\d-\d/],["GGGG-[W]WW",/\d{4}-W\d\d/,!1],["YYYY-DDD",/\d{4}-\d{3}/],["YYYY-MM",/\d{4}-\d\d/,!1],["YYYYYYMMDD",/[+-]\d{10}/],["YYYYMMDD",/\d{8}/],["GGGG[W]WWE",/\d{4}W\d{3}/],["GGGG[W]WW",/\d{4}W\d{2}/,!1],["YYYYDDD",/\d{7}/]],Yi=[["HH:mm:ss.SSSS",/\d\d:\d\d:\d\d\.\d+/],["HH:mm:ss,SSSS",/\d\d:\d\d:\d\d,\d+/],["HH:mm:ss",/\d\d:\d\d:\d\d/],["HH:mm",/\d\d:\d\d/],["HHmmss.SSSS",/\d\d\d\d\d\d\.\d+/],["HHmmss,SSSS",/\d\d\d\d\d\d,\d+/],["HHmmss",/\d\d\d\d\d\d/],["HHmm",/\d\d\d\d/],["HH",/\d\d/]],Oi=/^\/?Date\((\-?\d+)/i;e.createFromInputFallback=S("value provided is not in a recognized ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non ISO date formats are discouraged and will be removed in an upcoming major release. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.",function(e){e._d=new Date(e._i+(e._useUTC?" UTC":""))}),e.ISO_8601=function(){};var xi=S("moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/",function(){var e=yt.apply(null,arguments);return this.isValid()&&e.isValid()?e<this?this:e:c()}),bi=S("moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/",function(){var e=yt.apply(null,arguments);return this.isValid()&&e.isValid()?e>this?this:e:c()}),Ti=function(){return Date.now?Date.now():+new Date};kt("Z",":"),kt("ZZ",""),B("Z",Es),B("ZZ",Es),K(["Z","ZZ"],function(e,t,n){n._useUTC=!0,n._tzm=Dt(Es,e)});var Pi=/([\+\-]|\d\d)/gi;e.updateOffset=function(){};var Wi=/^(\-)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/,Ri=/^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;Gt.fn=vt.prototype;var Ui=Nt(1,"add"),Ci=Nt(-1,"subtract");e.defaultFormat="YYYY-MM-DDTHH:mm:ssZ",e.defaultFormatUtc="YYYY-MM-DDTHH:mm:ss[Z]";var Fi=S("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.",function(e){return void 0===e?this.localeData():this.locale(e)});I(0,["gg",2],0,function(){return this.weekYear()%100}),I(0,["GG",2],0,function(){return this.isoWeekYear()%100}),kn("gggg","weekYear"),kn("ggggg","weekYear"),kn("GGGG","isoWeekYear"),kn("GGGGG","isoWeekYear"),U("weekYear","gg"),U("isoWeekYear","GG"),H("weekYear",1),H("isoWeekYear",1),B("G",As),B("g",As),B("GG",Cs,Ps),B("gg",Cs,Ps),B("GGGG",Gs,Rs),B("gggg",Gs,Rs),B("GGGGG",Vs,Us),B("ggggg",Vs,Us),ee(["gggg","ggggg","GGGG","GGGGG"],function(e,t,n,s){t[s.substr(0,2)]=p(e)}),ee(["gg","GG"],function(t,n,s,i){n[i]=e.parseTwoDigitYear(t)}),I("Q",0,"Qo","quarter"),U("quarter","Q"),H("quarter",7),B("Q",Ts),K("Q",function(e,t){t[Bs]=3*(p(e)-1)}),I("D",["DD",2],"Do","date"),U("date","D"),H("date",9),B("D",Cs),B("DD",Cs,Ps),B("Do",function(e,t){return e?t._ordinalParse:t._ordinalParseLenient}),K(["D","DD"],Js),K("Do",function(e,t){t[Js]=p(e.match(Cs)[0],10)});var Hi=G("Date",!0);I("DDD",["DDDD",3],"DDDo","dayOfYear"),U("dayOfYear","DDD"),H("dayOfYear",4),B("DDD",Ls),B("DDDD",Ws),K(["DDD","DDDD"],function(e,t,n){n._dayOfYear=p(e)}),I("m",["mm",2],0,"minute"),U("minute","m"),H("minute",14),B("m",Cs),B("mm",Cs,Ps),K(["m","mm"],Xs);var Li=G("Minutes",!1);I("s",["ss",2],0,"second"),U("second","s"),H("second",15),B("s",Cs),B("ss",Cs,Ps),K(["s","ss"],Ks);var Gi=G("Seconds",!1);I("S",0,0,function(){return~~(this.millisecond()/100)}),I(0,["SS",2],0,function(){return~~(this.millisecond()/10)}),I(0,["SSS",3],0,"millisecond"),I(0,["SSSS",4],0,function(){return 10*this.millisecond()}),I(0,["SSSSS",5],0,function(){return 100*this.millisecond()}),I(0,["SSSSSS",6],0,function(){return 1e3*this.millisecond()}),I(0,["SSSSSSS",7],0,function(){return 1e4*this.millisecond()}),I(0,["SSSSSSSS",8],0,function(){return 1e5*this.millisecond()}),I(0,["SSSSSSSSS",9],0,function(){return 1e6*this.millisecond()}),U("millisecond","ms"),H("millisecond",16),B("S",Ls,Ts),B("SS",Ls,Ps),B("SSS",Ls,Ws);var Vi;for(Vi="SSSS";Vi.length<=9;Vi+="S")B(Vi,js);for(Vi="S";Vi.length<=9;Vi+="S")K(Vi,Rn);var ji=G("Milliseconds",!1);I("z",0,0,"zoneAbbr"),I("zz",0,0,"zoneName");var Ai=_.prototype;Ai.add=Ui,Ai.calendar=zt,Ai.clone=Zt,Ai.diff=Kt,Ai.endOf=cn,Ai.format=sn,Ai.from=rn,Ai.fromNow=an,Ai.to=on,Ai.toNow=un,Ai.get=A,Ai.invalidAt=Sn,Ai.isAfter=qt,Ai.isBefore=$t,Ai.isBetween=Bt,Ai.isSame=Jt,Ai.isSameOrAfter=Qt,Ai.isSameOrBefore=Xt,Ai.isValid=wn,Ai.lang=Fi,Ai.locale=dn,Ai.localeData=ln,Ai.max=bi,Ai.min=xi,Ai.parsingFlags=vn,Ai.set=N,Ai.startOf=hn,Ai.subtract=Ci,Ai.toArray=yn,Ai.toObject=gn,Ai.toDate=_n,Ai.toISOString=nn,Ai.toJSON=pn,Ai.toString=tn,Ai.unix=mn,Ai.valueOf=fn,Ai.creationData=Mn,Ai.year=ui,Ai.isLeapYear=_e,Ai.weekYear=Dn,Ai.isoWeekYear=Yn,Ai.quarter=Ai.quarters=Pn,Ai.month=ue,Ai.daysInMonth=de,Ai.week=Ai.weeks=Ye,Ai.isoWeek=Ai.isoWeeks=Oe,Ai.weeksInYear=xn,Ai.isoWeeksInYear=On,Ai.date=Hi,Ai.day=Ai.days=Ce,Ai.weekday=Fe,Ai.isoWeekday=He,Ai.dayOfYear=Wn,Ai.hour=Ai.hours=pi,Ai.minute=Ai.minutes=Li,Ai.second=Ai.seconds=Gi,Ai.millisecond=Ai.milliseconds=ji,Ai.utcOffset=xt,Ai.utc=Tt,Ai.local=Pt,Ai.parseZone=Wt,Ai.hasAlignedHourOffset=Rt,Ai.isDST=Ut,Ai.isLocal=Ft,Ai.isUtcOffset=Ht,Ai.isUtc=Lt,Ai.isUTC=Lt,Ai.zoneAbbr=Un,Ai.zoneName=Cn,Ai.dates=S("dates accessor is deprecated. Use date instead.",Hi),Ai.months=S("months accessor is deprecated. Use month instead",ue),Ai.years=S("years accessor is deprecated. Use year instead",ui),Ai.zone=S("moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/",bt),Ai.isDSTShifted=S("isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information",Ct);var Ni=Ai,Ei=O.prototype;Ei.calendar=x,Ei.longDateFormat=b,Ei.invalidDate=T,Ei.ordinal=P,Ei.preparse=Ln,Ei.postformat=Ln,Ei.relativeTime=W,Ei.pastFuture=R,Ei.set=D,Ei.months=se,Ei.monthsShort=ie,Ei.monthsParse=ae,Ei.monthsRegex=he,Ei.monthsShortRegex=le,Ei.week=Me,Ei.firstDayOfYear=De,Ei.firstDayOfWeek=ke,Ei.weekdays=Te,Ei.weekdaysMin=We,Ei.weekdaysShort=Pe,Ei.weekdaysParse=Ue,Ei.weekdaysRegex=Le,Ei.weekdaysShortRegex=Ge,Ei.weekdaysMinRegex=Ve,Ei.isPM=ze,Ei.meridiem=Ze,Je("en",{ordinalParse:/\d{1,2}(th|st|nd|rd)/,ordinal:function(e){var t=e%10;return e+(1===p(e%100/10)?"th":1===t?"st":2===t?"nd":3===t?"rd":"th")}}),e.lang=S("moment.lang is deprecated. Use moment.locale instead.",Je),e.langData=S("moment.langData is deprecated. Use moment.localeData instead.",Ke);var Ii=Math.abs,zi=ns("ms"),Zi=ns("s"),qi=ns("m"),$i=ns("h"),Bi=ns("d"),Ji=ns("w"),Qi=ns("M"),Xi=ns("y"),Ki=is("milliseconds"),er=is("seconds"),tr=is("minutes"),nr=is("hours"),sr=is("days"),ir=is("months"),rr=is("years"),ar=Math.round,or={s:45,m:45,h:22,d:26,M:11},ur=Math.abs,dr=vt.prototype;return dr.abs=Zn,dr.add=$n,dr.subtract=Bn,dr.as=es,dr.asMilliseconds=zi,dr.asSeconds=Zi,dr.asMinutes=qi,dr.asHours=$i,dr.asDays=Bi,dr.asWeeks=Ji,dr.asMonths=Qi,dr.asYears=Xi,dr.valueOf=ts,dr._bubble=Qn,dr.get=ss,dr.milliseconds=Ki,dr.seconds=er,dr.minutes=tr,dr.hours=nr,dr.days=sr,dr.weeks=rs,dr.months=ir,dr.years=rr,dr.humanize=ls,dr.toISOString=hs,dr.toString=hs,dr.toJSON=hs,dr.locale=dn,dr.localeData=ln,dr.toIsoString=S("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)",hs),dr.lang=Fi,I("X",0,0,"unix"),I("x",0,0,"valueOf"),B("x",As),B("X",Is),K("X",function(e,t,n){n._d=new Date(1e3*parseFloat(e,10))}),K("x",function(e,t,n){n._d=new Date(p(e))}),e.version="2.15.0",function(e){cs=e}(yt),e.fn=Ni,e.min=pt,e.max=wt,e.now=Ti,e.utc=u,e.unix=Fn,e.months=An,e.isDate=i,e.locale=Je,e.invalid=c,e.duration=Gt,e.isMoment=y,e.weekdays=En,e.parseZone=Hn,e.localeData=Ke,e.isDuration=St,e.monthsShort=Nn,e.weekdaysMin=zn,e.defineLocale=Qe,e.updateLocale=Xe,e.locales=et,e.weekdaysShort=In,e.normalizeUnits=C,e.relativeTimeRounding=us,e.relativeTimeThreshold=ds,e.calendarFormat=It,e.prototype=Ni,e});

},{}],317:[function(require,module,exports){
"use strict";function _interopRequireDefault(r){return r&&r.__esModule?r:{default:r}}exports.__esModule=!0;var _PayPalREST=require("./src/PayPalREST");Object.defineProperty(exports,"PayPalREST",{enumerable:!0,get:function(){return _interopRequireDefault(_PayPalREST).default}});var _restError=require("./src/restError");Object.defineProperty(exports,"restError",{enumerable:!0,get:function(){return _restError.restError}}),Object.defineProperty(exports,"paypalRestErrorDomain",{enumerable:!0,get:function(){return _restError.paypalRestErrorDomain}});

},{"./src/PayPalREST":318,"./src/restError":319}],318:[function(require,module,exports){
(function (Buffer){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_manticore=require("manticore"),_manticore2=_interopRequireDefault(_manticore),_manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_restError=require("./restError"),Log=(0,_manticoreLog2.default)("paypalRest"),PayPalREST=function(){function e(r,t,o){var s=this;_classCallCheck(this,e),this.resolvers={token:function(r,t){return s.env===e.Env.LIVE?"https://api.paypal.com/v1/oauth2/"+t.op:s.env===e.Env.SANDBOX?"https://api.sandbox.paypal.com/v1/oauth2/"+t.op:s.env===e.Env.MSMASTER?"https://www.msmaster.qa.paypal.com/v1/oauth2/"+t.op:"https://www."+s.env+".stage.paypal.com:11888/v1/oauth2/"+t.op},invoicing:function(r,t){return s.env===e.Env.LIVE?"https://api.paypal.com/v1/invoicing/"+t.op:s.env===e.Env.SANDBOX?"https://api.sandbox.paypal.com/v1/invoicing/"+t.op:s.env===e.Env.MSMASTER?"https://www.msmaster.qa.paypal.com/v1/invoicing/"+t.op:"https://www."+s.env+".stage.paypal.com:11888/v1/invoicing/"+t.op},contactserv:function(r,t){return s.env===e.Env.LIVE?"https://api.paypal.com/v1/customer/contacts/"+t.op:s.env===e.Env.SANDBOX?"https://api.sandbox.paypal.com/v1/customer/contacts/"+t.op:s.env===e.Env.MSMASTER?"https://www.msmaster.qa.paypal.com/v1/customer/contacts/"+t.op:"https://www."+s.env+".stage.paypal.com:11888/v1/customer/contacts/"+t.op}},this.env=e.Env.LIVE,this.cbs=[],this.at=r,this.refreshUrl=t,this.exp=o}return e.fromToken=function(r){var t=void 0;try{if(r&&"{"===r[0])t=JSON.parse(r);else{var o=(r||"").split(":",2);if(2!==o.length)throw new Error("Invalid token presented (off by "+(o.length-2)+")");var s=new Buffer(o[1],"base64"),n=JSON.parse(s.toString("utf8"));t={env:o[0],access_token:n[0],expires_in:n[1],refresh_url:n[2]},!n[2]&&"live"!==o[0]&&n.length>=5&&(t.app={auth:n[4]},t.rt=n[3])}var a=new e(t.access_token,t.refresh_url,t.expires_in);return a.env=t.env,t.app&&t.rt&&(a.app=t.app,a.rt=t.rt),a}catch(e){throw Log.error("Could not read token: "+e.message+"\n"+e.stack),_restError.restError.invalidToken.withDevMessage(e.message)}},e.prototype.addResolver=function(e,r){this.resolvers[e]=r},e.prototype.injectDeviceInfo=function(e){if(_manticore2.default.deviceInfo&&null!=_manticore2.default.deviceInfo()){var r=_manticore2.default.deviceInfo();if("string"==typeof r)e.headers["X-PAYPAL-REQUEST-SOURCE"]=r;else if(Array.isArray(r))e.headers["X-PAYPAL-REQUEST-SOURCE"]=r.join("_");else if("object"===(void 0===r?"undefined":_typeof(r)))for(var t in r)t in e.headers||(e.headers[t]=r[t])}},e.prototype.request=function(r,t){var o=this;if(!r){var s=_restError.restError.invalidRequest.withDevMessage("Request options was empty");return Log.error("Empty options: "+s.stack),void t(s,null)}if(!r.url){if(!r.service||!this.resolvers[r.service]){var n=_restError.restError.invalidRequest.withDevMessage("Options has no url and no resolvable service.");return Log.error("Bad options: "+n.stack),void t(n,null)}r.url=this.resolvers[r.service](this,r)}if(!this.at&&!this.refreshUrl)return void t(_restError.restError.invalidCompositeToken.withDevMessage("The access token is invalid and does not include an access token or refresh url"),null);if(!this.at)return void this.refresh(function(e){if(e)return void t(e,null);o.request(r,t)});r.headers=r.headers||{},r.headers.Authorization="Bearer "+this.at,this.injectDeviceInfo(r);var a=(new Date).getTime();_manticore2.default.http(r,function(s,n){try{var i=(new Date).getTime(),c=i-a;if(Log.debug(function(){return(r.method||"GET")+" "+r.url+" ("+c+"ms): "+(n?n.statusCode:s)}),s)return Log.error("Authenticated request error: "+s.message+"\n"+s.stack),Log.debug(function(){return"Erred request: "+JSON.stringify(r)+"\nresponse: "+JSON.stringify(n)}),void t(s,null);if(n&&(401===n.statusCode||403===n.statusCode)&&!r._tried){if(Log.debug(function(){return"Authorization error - Request: "+JSON.stringify(r)+"\nresponse: "+JSON.stringify(n)}),o._canRefreshToken())r._tried=!0,o.refresh(function(e){if(e)return void t(e,null);o.request(r,t)});else{Log.warn("Token expired and token refresh information not provided for "+r.url);var u=_restError.restError.unauthorized.withDevMessage('Merchant token had no "refreshUrl" property, cannot refresh access token.');t(u,n)}return}if("json"===r.format&&!r.rawError){if(n&&n.body)if(n.body.errorCode)s=(0,_restError.payPalError)(n.body.errorCode,n.body.message,n.body.correlationId);else if(n.statusCode&&n.statusCode>=300){var l=n.body.message,d=n.body.name||n.statusCode,f=e.getPlatformapiservDebugId(n);s=(0,_restError.payPalError)(d,l,f),n.body.details&&(s.details=n.body.details)}n.statusCode>=400&&!s&&(s=(0,_restError.payPalError)(n.statusCode)),s&&(s.domain=r.service,e.generateDevMessage(s),Log.error("Received error ("+s.developerMessage+")"))}}catch(e){Log.error("Merchant request failure: "+(e.message||e)+"\n"+e.stack),s=e}t&&t(s,n)})},e.prototype._canRefreshToken=function(){return this.refreshUrl||this.rt&&this.app},e.prototype.refresh=function(e){var r=this;if(this.cbs.length)return void this.cbs.push(e);if(this.cbs.push(e),!this.refreshUrl&&this.rt&&this.app){Log.debug("Attempting a direct token refresh");var t="grant_type=refresh_token&response_type=token&refresh_token="+encodeURIComponent(this.rt);return void _manticore2.default.http({url:this.resolvers.token(this,{op:"token"}),headers:{Authorization:"Basic "+this.app.auth,"Content-Type":"application/x-www-form-urlencoded"},method:"POST",format:"json",body:t,timeout:15e3},function(e,t){if(t&&t.body&&t.body.access_token?(r.at=t.body.access_token,Log.debug("Successfully refreshed token.")):e||(Log.error("Invalid response from token refresh"),e=_restError.restError.unauthorized.withDevMessage("Invalid response from token refresh")),e){var o=JSON.stringify(t||{});Log.error("Failed to directly refresh token: "+e.message+": "+o)}for(var s=r.cbs,n=Array.isArray(s),a=0,s=n?s:s[Symbol.iterator]();;){var i;if(n){if(a>=s.length)break;i=s[a++]}else{if(a=s.next(),a.done)break;i=a.value}var c=i;try{c(e)}catch(e){Log.warn("Error executing callback function "+e.message)}}r.cbs=[]})}Log.debug("Attempting a token refresh"),_manticore2.default.http({url:this.refreshUrl,format:"json"},function(e,t){if(t&&t.body&&t.body.access_token?(r.at=t.body.access_token,r.refreshUrl=t.body.refresh_url||r.refreshUrl,Log.debug("Successfully refreshed token.")):e||(e=_restError.restError.unauthorized.withDevMessage("Invalid response from refreshUrl")),e){var o=JSON.stringify(t||{});Log.error("Failed to refresh token: "+e.message+": "+o)}for(var s=r.cbs,n=Array.isArray(s),a=0,s=n?s:s[Symbol.iterator]();;){var i;if(n){if(a>=s.length)break;i=s[a++]}else{if(a=s.next(),a.done)break;i=a.value}var c=i;try{c(e)}catch(e){Log.warn("Error executing callback function "+e.message)}}r.cbs=[]})},e.getPlatformapiservDebugId=function(e){var r=e.headers;return e.body.debug_id?e.body.debug_id:r.debug_id?r.debug_id:r["correlation-id"]||r["CORRELATION-ID"]},e.generateDevMessage=function(e){function r(e,r){t.length&&(t+=", "),t+=e+": ",r&&r.length&&(t+=r)}if(!e)return e;var t="";r("domain",e.domain),r("code",e.code),r("message",e.message),r("debugId",e.debugId);var o="";return e.details&&Array.isArray(e.details)&&e.details.length>0&&e.details.forEach(function(e){o.length&&(o+=" "),o+=e.field+" "+e.issue}),r("details",o),e.developerMessage=t,e},e}();exports.default=PayPalREST,PayPalREST.Env={LIVE:"live",SANDBOX:"sandbox",MSMASTER:"msmaster"};

}).call(this,require("buffer").Buffer)
},{"./restError":319,"buffer":96,"manticore":213,"manticore-log":208}],319:[function(require,module,exports){
"use strict";function payPalError(r,a,o){var e=new _manticorePaypalerror.PayPalErrorInfo;return e.code=r.toString(),e.domain=domain,e.message=a,e.debugId=o,_manticorePaypalerror.PayPalError.makeError(null,e)}exports.__esModule=!0,exports.paypalRestErrorDomain=exports.restError=void 0,exports.payPalError=payPalError;var _manticorePaypalerror=require("manticore-paypalerror"),domain="PayPalRest",restError=exports.restError={invalidToken:payPalError(0,"Invalid token"),invalidRequest:payPalError(1,"Invalid request"),invalidCompositeToken:payPalError(2,"Invalid composite token provided"),unauthorized:payPalError(401,"Request not authorized")};exports.paypalRestErrorDomain=domain;

},{"manticore-paypalerror":209}],320:[function(require,module,exports){
function defaultSetTimout(){throw new Error("setTimeout has not been defined")}function defaultClearTimeout(){throw new Error("clearTimeout has not been defined")}function runTimeout(e){if(cachedSetTimeout===setTimeout)return setTimeout(e,0);if((cachedSetTimeout===defaultSetTimout||!cachedSetTimeout)&&setTimeout)return cachedSetTimeout=setTimeout,setTimeout(e,0);try{return cachedSetTimeout(e,0)}catch(t){try{return cachedSetTimeout.call(null,e,0)}catch(t){return cachedSetTimeout.call(this,e,0)}}}function runClearTimeout(e){if(cachedClearTimeout===clearTimeout)return clearTimeout(e);if((cachedClearTimeout===defaultClearTimeout||!cachedClearTimeout)&&clearTimeout)return cachedClearTimeout=clearTimeout,clearTimeout(e);try{return cachedClearTimeout(e)}catch(t){try{return cachedClearTimeout.call(null,e)}catch(t){return cachedClearTimeout.call(this,e)}}}function cleanUpNextTick(){draining&&currentQueue&&(draining=!1,currentQueue.length?queue=currentQueue.concat(queue):queueIndex=-1,queue.length&&drainQueue())}function drainQueue(){if(!draining){var e=runTimeout(cleanUpNextTick);draining=!0;for(var t=queue.length;t;){for(currentQueue=queue,queue=[];++queueIndex<t;)currentQueue&&currentQueue[queueIndex].run();queueIndex=-1,t=queue.length}currentQueue=null,draining=!1,runClearTimeout(e)}}function Item(e,t){this.fun=e,this.array=t}function noop(){}var process=module.exports={},cachedSetTimeout,cachedClearTimeout;!function(){try{cachedSetTimeout="function"==typeof setTimeout?setTimeout:defaultSetTimout}catch(e){cachedSetTimeout=defaultSetTimout}try{cachedClearTimeout="function"==typeof clearTimeout?clearTimeout:defaultClearTimeout}catch(e){cachedClearTimeout=defaultClearTimeout}}();var queue=[],draining=!1,currentQueue,queueIndex=-1;process.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var r=1;r<arguments.length;r++)t[r-1]=arguments[r];queue.push(new Item(e,t)),1!==queue.length||draining||runTimeout(drainQueue)},Item.prototype.run=function(){this.fun.apply(null,this.array)},process.title="browser",process.browser=!0,process.env={},process.argv=[],process.version="",process.versions={},process.on=noop,process.addListener=noop,process.once=noop,process.off=noop,process.removeListener=noop,process.removeAllListeners=noop,process.emit=noop,process.prependListener=noop,process.prependOnceListener=noop,process.listeners=function(e){return[]},process.binding=function(e){throw new Error("process.binding is not supported")},process.cwd=function(){return"/"},process.chdir=function(e){throw new Error("process.chdir is not supported")},process.umask=function(){return 0};
},{}],321:[function(require,module,exports){
"use strict";var replace=String.prototype.replace,percentTwenties=/%20/g;module.exports={default:"RFC3986",formatters:{RFC1738:function(e){return replace.call(e,percentTwenties,"+")},RFC3986:function(e){return e}},RFC1738:"RFC1738",RFC3986:"RFC3986"};

},{}],322:[function(require,module,exports){
"use strict";var utils=require("./utils"),formats=require("./formats"),arrayPrefixGenerators={brackets:function(e){return e+"[]"},indices:function(e,r){return e+"["+r+"]"},repeat:function(e){return e}},toISO=Date.prototype.toISOString,defaults={delimiter:"&",encode:!0,encoder:utils.encode,encodeValuesOnly:!1,serializeDate:function(e){return toISO.call(e)},skipNulls:!1,strictNullHandling:!1},stringify=function e(r,t,n,o,i,a,l,s,f,u,c,d){var y=r;if("function"==typeof l)y=l(t,y);else if(y instanceof Date)y=u(y);else if(null===y){if(o)return a&&!d?a(t,defaults.encoder):t;y=""}if("string"==typeof y||"number"==typeof y||"boolean"==typeof y||utils.isBuffer(y)){if(a){return[c(d?t:a(t,defaults.encoder))+"="+c(a(y,defaults.encoder))]}return[c(t)+"="+c(String(y))]}var p=[];if(void 0===y)return p;var v;if(Array.isArray(l))v=l;else{var m=Object.keys(y);v=s?m.sort(s):m}for(var g=0;g<v.length;++g){var b=v[g];i&&null===y[b]||(p=Array.isArray(y)?p.concat(e(y[b],n(t,b),n,o,i,a,l,s,f,u,c,d)):p.concat(e(y[b],t+(f?"."+b:"["+b+"]"),n,o,i,a,l,s,f,u,c,d)))}return p};module.exports=function(e,r){var t=e,n=r?utils.assign({},r):{};if(null!==n.encoder&&void 0!==n.encoder&&"function"!=typeof n.encoder)throw new TypeError("Encoder has to be a function.");var o=void 0===n.delimiter?defaults.delimiter:n.delimiter,i="boolean"==typeof n.strictNullHandling?n.strictNullHandling:defaults.strictNullHandling,a="boolean"==typeof n.skipNulls?n.skipNulls:defaults.skipNulls,l="boolean"==typeof n.encode?n.encode:defaults.encode,s="function"==typeof n.encoder?n.encoder:defaults.encoder,f="function"==typeof n.sort?n.sort:null,u=void 0!==n.allowDots&&n.allowDots,c="function"==typeof n.serializeDate?n.serializeDate:defaults.serializeDate,d="boolean"==typeof n.encodeValuesOnly?n.encodeValuesOnly:defaults.encodeValuesOnly;if(void 0===n.format)n.format=formats.default;else if(!Object.prototype.hasOwnProperty.call(formats.formatters,n.format))throw new TypeError("Unknown format option provided.");var y,p,v=formats.formatters[n.format];"function"==typeof n.filter?(p=n.filter,t=p("",t)):Array.isArray(n.filter)&&(p=n.filter,y=p);var m=[];if("object"!=typeof t||null===t)return"";var g;g=n.arrayFormat in arrayPrefixGenerators?n.arrayFormat:"indices"in n?n.indices?"indices":"repeat":"indices";var b=arrayPrefixGenerators[g];y||(y=Object.keys(t)),f&&y.sort(f);for(var O=0;O<y.length;++O){var k=y[O];a&&null===t[k]||(m=m.concat(stringify(t[k],k,b,i,a,l?s:null,p,f,u,c,v,d)))}var w=m.join(o),D=!0===n.addQueryPrefix?"?":"";return w.length>0?D+w:""};

},{"./formats":321,"./utils":323}],323:[function(require,module,exports){
"use strict";var has=Object.prototype.hasOwnProperty,hexTable=function(){for(var r=[],e=0;e<256;++e)r.push("%"+((e<16?"0":"")+e.toString(16)).toUpperCase());return r}(),compactQueue=function(r){for(var e;r.length;){var t=r.pop();if(e=t.obj[t.prop],Array.isArray(e)){for(var o=[],n=0;n<e.length;++n)void 0!==e[n]&&o.push(e[n]);t.obj[t.prop]=o}}return e};exports.arrayToObject=function(r,e){for(var t=e&&e.plainObjects?Object.create(null):{},o=0;o<r.length;++o)void 0!==r[o]&&(t[o]=r[o]);return t},exports.merge=function(r,e,t){if(!e)return r;if("object"!=typeof e){if(Array.isArray(r))r.push(e);else{if("object"!=typeof r)return[r,e];(t.plainObjects||t.allowPrototypes||!has.call(Object.prototype,e))&&(r[e]=!0)}return r}if("object"!=typeof r)return[r].concat(e);var o=r;return Array.isArray(r)&&!Array.isArray(e)&&(o=exports.arrayToObject(r,t)),Array.isArray(r)&&Array.isArray(e)?(e.forEach(function(e,o){has.call(r,o)?r[o]&&"object"==typeof r[o]?r[o]=exports.merge(r[o],e,t):r.push(e):r[o]=e}),r):Object.keys(e).reduce(function(r,o){var n=e[o];return has.call(r,o)?r[o]=exports.merge(r[o],n,t):r[o]=n,r},o)},exports.assign=function(r,e){return Object.keys(e).reduce(function(r,t){return r[t]=e[t],r},r)},exports.decode=function(r){try{return decodeURIComponent(r.replace(/\+/g," "))}catch(e){return r}},exports.encode=function(r){if(0===r.length)return r;for(var e="string"==typeof r?r:String(r),t="",o=0;o<e.length;++o){var n=e.charCodeAt(o);45===n||46===n||95===n||126===n||n>=48&&n<=57||n>=65&&n<=90||n>=97&&n<=122?t+=e.charAt(o):n<128?t+=hexTable[n]:n<2048?t+=hexTable[192|n>>6]+hexTable[128|63&n]:n<55296||n>=57344?t+=hexTable[224|n>>12]+hexTable[128|n>>6&63]+hexTable[128|63&n]:(o+=1,n=65536+((1023&n)<<10|1023&e.charCodeAt(o)),t+=hexTable[240|n>>18]+hexTable[128|n>>12&63]+hexTable[128|n>>6&63]+hexTable[128|63&n])}return t},exports.compact=function(r){for(var e=[{obj:{o:r},prop:"o"}],t=[],o=0;o<e.length;++o)for(var n=e[o],a=n.obj[n.prop],c=Object.keys(a),p=0;p<c.length;++p){var u=c[p],s=a[u];"object"==typeof s&&null!==s&&-1===t.indexOf(s)&&(e.push({obj:a,prop:u}),t.push(s))}return compactQueue(e)},exports.isRegExp=function(r){return"[object RegExp]"===Object.prototype.toString.call(r)},exports.isBuffer=function(r){return null!==r&&void 0!==r&&!!(r.constructor&&r.constructor.isBuffer&&r.constructor.isBuffer(r))};
},{}],324:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}exports.__esModule=!0;var _Tracker=require("./src/Tracker");Object.defineProperty(exports,"Tracker",{enumerable:!0,get:function(){return _interopRequireDefault(_Tracker).default}});var _Page=require("./src/Page");Object.defineProperty(exports,"pageId",{enumerable:!0,get:function(){return _Page.pageId}}),Object.defineProperty(exports,"Page",{enumerable:!0,get:function(){return _Page.Page}}),Object.defineProperty(exports,"pages",{enumerable:!0,get:function(){return _Page.pages}}),Object.defineProperty(exports,"action",{enumerable:!0,get:function(){return _Page.action}});
},{"./src/Page":325,"./src/Tracker":326}],325:[function(require,module,exports){
"use strict";function _classCallCheck(e,a){if(!(e instanceof a))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _createClass=function(){function e(e,a){for(var n=0;n<a.length;n++){var t=a[n];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}}return function(a,n,t){return n&&e(a.prototype,n),t&&e(a,t),a}}(),pageId=exports.pageId={transaction:"Transaction",emv:"EMV",swipe:"Swipe",cashOrCheck:"CashOrCheck",keyIn:"KeyIn",payment:"Payment",refund:"Refund",cancelled:"Cancelled",noThanks:"NoThanks",custom:"Custom",failed:"Failed",complete:"Completed",decline:"Decline",receipt:"Receipt",required:"Required",sms:"SMS",email:"Email",signature:"Signature",settings:"Settings",swUpdate:"SwUpdate",downloading:"Downloading",rki:"RKI",config:"Config",os:"OS",mpi:"MPI",reboot:"Reboot",retry:"Retry"},Page=exports.Page=function(){function e(a,n){_classCallCheck(this,e),this._id=a,this._parent=n}return e.prototype.withAction=function(e){return this._action=e,this},_createClass(e,[{key:"name",get:function(){var e="";return this._parent&&(e=this._parent.name+":"),""+e+this._id}},{key:"parent",get:function(){return this._parent}},{key:"action",get:function(){return this._action},set:function(e){this._action=e}}]),e}(),transaction=new Page(pageId.transaction,null),emv=new Page(pageId.emv,transaction),swipe=new Page(pageId.swipe,transaction),payment=new Page(pageId.payment,null),keyIn=new Page(pageId.keyIn,payment),cashOrCheck=new Page(pageId.cashOrCheck,payment),paymentComplete=new Page(pageId.complete,payment),paymentCancelled=new Page(pageId.cancelled,payment),paymentDecline=new Page(pageId.decline,payment),refund=new Page(pageId.refund,null),refundComplete=new Page(pageId.complete,refund),refundCancelled=new Page(pageId.cancelled,refund),refundDecline=new Page(pageId.decline,refund),paymentReceipt=new Page(pageId.receipt,payment),refundReceipt=new Page(pageId.receipt,refund),paymentReceiptSms=new Page(pageId.sms,paymentReceipt),paymentReceiptEmail=new Page(pageId.email,paymentReceipt),paymentReceiptNoThanks=new Page(pageId.noThanks,paymentReceipt),paymentReceiptCustom=new Page(pageId.custom,paymentReceipt),refundReceiptSms=new Page(pageId.sms,refundReceipt),refundReceiptEmail=new Page(pageId.email,refundReceipt),refundReceiptNoThanks=new Page(pageId.noThanks,refundReceipt),refundReceiptCustom=new Page(pageId.custom,refundReceipt),signature=new Page(pageId.signature,null),settings=new Page(pageId.settings,null),swUpdate=new Page(pageId.swUpdate,settings),swUpdateRetry=new Page(pageId.retry,swUpdate),swUpdateReboot=new Page(pageId.reboot,swUpdate),swUpdateComplete=new Page(pageId.complete,swUpdate),swUpdateFailed=new Page(pageId.failed,swUpdate),rki=new Page(pageId.rki,swUpdate),rkiRequired=new Page(pageId.required,rki),rkiCompleted=new Page(pageId.complete,rki),rkiFailed=new Page(pageId.failed,rki),os=new Page(pageId.os,swUpdate),osRequired=new Page(pageId.required,os),osCompleted=new Page(pageId.complete,os),osFailed=new Page(pageId.failed,os),mpi=new Page(pageId.mpi,swUpdate),mpiRequired=new Page(pageId.required,mpi),mpiCompleted=new Page(pageId.complete,mpi),mpiFailed=new Page(pageId.failed,mpi),config=new Page(pageId.config,swUpdate),configRequired=new Page(pageId.required,config),configCompleted=new Page(pageId.complete,config),configFailed=new Page(pageId.failed,config),pages=exports.pages={transaction:transaction,emv:emv,swipe:swipe,keyIn:keyIn,cashOrCheck:cashOrCheck,payment:payment,paymentComplete:paymentComplete,paymentCancelled:paymentCancelled,paymentDecline:paymentDecline,refund:refund,refundComplete:refundComplete,refundCancelled:refundCancelled,refundDecline:refundDecline,paymentReceipt:paymentReceipt,refundReceipt:refundReceipt,paymentReceiptSms:paymentReceiptSms,paymentReceiptEmail:paymentReceiptEmail,paymentReceiptNoThanks:paymentReceiptNoThanks,paymentReceiptCustom:paymentReceiptCustom,refundReceiptSms:refundReceiptSms,refundReceiptEmail:refundReceiptEmail,refundReceiptNoThanks:refundReceiptNoThanks,refundReceiptCustom:refundReceiptCustom,signature:signature,settings:settings,swUpdate:swUpdate,swUpdateRetry:swUpdateRetry,swUpdateReboot:swUpdateReboot,swUpdateComplete:swUpdateComplete,swUpdateFailed:swUpdateFailed,rkiRequired:rkiRequired,rkiCompleted:rkiCompleted,rkiFailed:rkiFailed,osRequired:osRequired,osCompleted:osCompleted,osFailed:osFailed,mpiRequired:mpiRequired,mpiCompleted:mpiCompleted,mpiFailed:mpiFailed,configRequired:configRequired,configCompleted:configCompleted,configFailed:configFailed},action=exports.action={cancel:"cancel",acquire:"acquire",dismiss:"dismiss"};
},{}],326:[function(require,module,exports){
"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _events=require("events"),Tracker=function(){function e(){_classCallCheck(this,e)}return e.publishPageView=function(t,n){e.events.emit("pageViewed",t,n)},e}();exports.default=Tracker,Tracker.events=new _events.EventEmitter;

},{"events":200}],327:[function(require,module,exports){
"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _createClass=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),BatteryInfo=function(){function e(t,n,r,i){_classCallCheck(this,e),this._percentage=parseInt(t,10),this._isCharging=n,this._measuredOn=r,this._status=i}return e.prototype.toString=function(){return"Battery Info: Percentage: "+this.percentage+", isCharging: "+this.isCharging+", level: "+this.level+", measuredOn: "+this.measuredOn},_createClass(e,[{key:"percentage",get:function(){return this._percentage}},{key:"isCharging",get:function(){return this._isCharging}},{key:"isLevelUpdateCritical",get:function(){return!this.isCharging&&this._percentage<=20}},{key:"isLevelCritical",get:function(){return!this.isCharging&&this._percentage<=15}},{key:"measuredOn",get:function(){return this._measuredOn}},{key:"status",get:function(){return this._status}}]),e}();exports.default=BatteryInfo;

},{}],328:[function(require,module,exports){
"use strict";function _interopRequireDefault(r){return r&&r.__esModule?r:{default:r}}function _classCallCheck(r,e){if(!(r instanceof e))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_CardIssuer=require("./CardIssuer"),_CardIssuer2=_interopRequireDefault(_CardIssuer),digitsOnlyRegexMatcher=null,Log=(0,_manticoreLog2.default)("card-issuer"),CardDataUtil=function(){function r(){_classCallCheck(this,r)}return r.getCardIssuerFromEmvAppLabel=function(r){if(!r)return _CardIssuer2.default.Unknown;var e=r.toUpperCase();return e.includes("VISA")?_CardIssuer2.default.Visa:e.includes("MASTERCARD")?_CardIssuer2.default.MasterCard:e.includes("MAESTRO")?_CardIssuer2.default.Maestro:e.includes("AMERICAN")?_CardIssuer2.default.Amex:e.includes("DISCOVER")?_CardIssuer2.default.Discover:e.includes("PAYPAL")?_CardIssuer2.default.PayPal:(Log.warn("Unable to parse Card issuer from Application Label: "+r),_CardIssuer2.default.Unknown)},r.getCardIssuerFromCardNumber=function(e){digitsOnlyRegexMatcher||(digitsOnlyRegexMatcher=/\D+/);var a=e.replace(digitsOnlyRegexMatcher,"");if(a.length>0&&a[0]===r._controlNumber.Visa)return _CardIssuer2.default.Visa;if(a.length>=2){var s=parseInt(a.substr(0,2),10);if(s>50&&s<56)return _CardIssuer2.default.MasterCard}if(a.length>=2){var t=a.substr(0,2);if(t===r._controlNumber.Maestro1||t===r._controlNumber.Maestro2)return _CardIssuer2.default.Maestro}if(a.length>=2){var u=a.substr(0,2);if(u===r._controlNumber.Amex1||u===r._controlNumber.Amex2)return _CardIssuer2.default.Amex}return a.length>=4&&a.substr(0,4)===r._controlNumber.Discover1?_CardIssuer2.default.Discover:a.length>=2&&a.substr(0,2)===r._controlNumber.Discover2?_CardIssuer2.default.Discover:a.length>=2&&a.substr(0,2)===r._controlNumber.PayPal?_CardIssuer2.default.PayPal:_CardIssuer2.default.Unknown},r.getCardIssuerDisplayName=function(r){for(var e in _CardIssuer2.default)if({}.hasOwnProperty.call(_CardIssuer2.default,e)&&"function"!=typeof _CardIssuer2.default&&_CardIssuer2.default[e]===r)return e;return null},r}();exports.default=CardDataUtil,CardDataUtil._controlNumber={Visa:"4",MasterCard:"5",Amex1:"34",Amex2:"37",Discover1:"6011",Discover2:"65",PayPal:"62",Maestro1:"67",Maestro2:"50"};

},{"./CardIssuer":330,"manticore-log":208}],329:[function(require,module,exports){
"use strict";function _classCallCheck(t,n){if(!(t instanceof n))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var CardInsertedHandler=function(){function t(n){_classCallCheck(this,t),this._cb=n}return t.prototype.continueWithCardDataRead=function(){this._cb()},t.prototype.dismissSDKUIPrompt=function(){},t}();exports.default=CardInsertedHandler;

},{}],330:[function(require,module,exports){
"use strict";exports.__esModule=!0;var CardIssuer={Unknown:0,Visa:1,MasterCard:2,Maestro:3,Amex:4,Discover:5,PayPal:6};exports.default=CardIssuer;

},{}],331:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}exports.__esModule=!0;var _createClass=function(){function e(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(t,r,o){return r&&e(t.prototype,r),o&&e(t,o),t}}(),_events=require("events"),_TransactionType=require("./TransactionType"),_TransactionType2=_interopRequireDefault(_TransactionType),_FormFactor=require("./FormFactor"),_FormFactor2=_interopRequireDefault(_FormFactor),_BatteryInfo=require("./BatteryInfo"),_BatteryInfo2=_interopRequireDefault(_BatteryInfo),_CardIssuer=require("./CardIssuer"),_CardIssuer2=_interopRequireDefault(_CardIssuer),_NumericEntryType=require("./NumericEntryType"),_NumericEntryType2=_interopRequireDefault(_NumericEntryType),_appMessage=require("./appMessage"),_appMessage2=_interopRequireDefault(_appMessage),_SecureEntryOptions=require("./SecureEntryOptions"),_SecureEntryOptions2=_interopRequireDefault(_SecureEntryOptions),_NumericEntryOptions=require("./NumericEntryOptions"),_NumericEntryOptions2=_interopRequireDefault(_NumericEntryOptions),_DeviceUpdate=require("./DeviceUpdate"),_DeviceUpdate2=_interopRequireDefault(_DeviceUpdate),_CardPresentEvent=require("./Messages/CardPresentEvent"),_CardPresentEvent2=_interopRequireDefault(_CardPresentEvent),_PinEvent=require("./Messages/PinEvent"),_PinEvent2=_interopRequireDefault(_PinEvent),_Card=require("./Messages/Card"),_Card2=_interopRequireDefault(_Card),_AvailableApplications=require("./Messages/AvailableApplications"),_AvailableApplications2=_interopRequireDefault(_AvailableApplications),CardReader=function(e){function t(){return _classCallCheck(this,t),_possibleConstructorReturn(this,e.apply(this,arguments))}return _inherits(t,e),t.prototype.beginDeviceRemoved=function(e){throw new Error("Subclass must implement this method")},t.prototype.beginDeviceConnect=function(e){throw new Error("Subclass must implement this method")},t.prototype.beginDeviceDisconnect=function(e){throw new Error("Subclass must implement this method")},t.prototype.received=function(e){throw new Error("Subclass must implement this method")},t.prototype.display=function(e,t){throw new Error("Subclass must implement this method")},t.prototype.getFirmwareVersionInfo=function(e){throw new Error("Subclass must implement this method")},t.prototype.extractReaderLogs=function(e){throw new Error("Subclass must implement this method")},t.prototype.activateForPayment=function(e,t,r){throw new Error("Subclass must implement this method")},t.prototype.selectPaymentApplication=function(e,t){throw new Error("Subclass must implement this method")},t.prototype.completeTransaction=function(e,t){throw new Error("Subclass must implement this method")},t.prototype.abortTransaction=function(e,t){throw new Error("Subclass must implement this method")},t.prototype.deactivateFormFactors=function(e,t){throw new Error("Subclass must implement this method")},t.prototype.listenForCardRemoval=function(e){throw new Error("Subclass must implement this method")},t.prototype.postTransactionCleanup=function(e){throw new Error("Subclass must implement this method")},t.prototype.getBatteryInfo=function(e){throw new Error("Subclass must implement this method")},t.prototype.promptForNumericEntry=function(e,t){throw new Error("Subclass must implement this method")},t.prototype.promptForSecureAccountNumber=function(e,t){throw new Error("Subclass must implement this method")},t.prototype.getVersionInfo=function(){throw new Error("Subclass must implement this method")},_createClass(t,[{key:"formFactors",get:function(){throw new Error("Subclass must implement this method")}}]),t}(_events.EventEmitter);exports.default=CardReader;

},{"./BatteryInfo":327,"./CardIssuer":330,"./DeviceUpdate":333,"./FormFactor":334,"./Messages/AvailableApplications":338,"./Messages/Card":339,"./Messages/CardPresentEvent":340,"./Messages/PinEvent":343,"./NumericEntryOptions":344,"./NumericEntryType":345,"./SecureEntryOptions":348,"./TransactionType":349,"./appMessage":350,"events":200}],332:[function(require,module,exports){
"use strict";exports.__esModule=!0;var CardStatus={None:0,NonEmvCard:1,EmvCard:3};exports.default=CardStatus;

},{}],333:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}exports.__esModule=!0;var _createClass=function(){function e(e,t){for(var a=0;a<t.length;a++){var i=t[a];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,a,i){return a&&e(t.prototype,a),i&&e(t,i),t}}(),_events=require("events"),_manticore=require("manticore"),_manticore2=_interopRequireDefault(_manticore),_manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_appMessage=require("./appMessage"),_appMessage2=_interopRequireDefault(_appMessage),_paymentDeviceError=require("./paymentDeviceError"),_deviceState=require("./deviceState"),_deviceState2=_interopRequireDefault(_deviceState),Log=(0,_manticoreLog2.default)("paymentDevice.deviceUpdate"),DeviceUpdate=function(e){function t(a){_classCallCheck(this,t);var i=_possibleConstructorReturn(this,e.call(this));return i.isRequired=!0,i.wasInstalled=!1,i.device=a,i._firmwareUpdateCallbacks=[],i}return _inherits(t,e),t.prototype.offer=function(e){var t=this;if(this.device.pendingUpdate&&this.device.pendingUpdate!==this)return void this.device.pendingUpdate.offer(e);var a=function(a){a?(Log.error("Device validation for SW Update check failed with error: "+a+". Cannot do SW Update"),e(a,!1)):t.device.app.display({title:t.isRequired?_appMessage2.default.SwUpdateRequired.title:_appMessage2.default.SwUpdateOptional.title,message:t.isRequired?_appMessage2.default.SwUpdateRequired.message:_appMessage2.default.SwUpdateOptional.message,cancel:_appMessage2.default.SwUpdate.buttons.notNow,buttons:[_appMessage2.default.SwUpdate.buttons.updateNow]},function(a,i){if(a.dismiss(),0===i)return void t.begin(e);e(_paymentDeviceError.deviceError.swUpdateFailed,!1)})};this.validateUpdateEligibility(a)},t.prototype._shiftAndInvokeUpdateCallbacks=function(e,t){for(var a=this;this._firmwareUpdateCallbacks.length>0;)!function(){var i=a._firmwareUpdateCallbacks.shift();_manticore2.default.setTimeout(function(){i&&i(e,t)},0)}()},t.prototype.begin=function(e){var t=this;if(e&&this._firmwareUpdateCallbacks.push(e),this.updateInProgress)return void Log.debug(function(){return"Firmware update is already in progress for "+t.device.id+". Will queue the callback"});this.device.stopPollForBattery(),this.device.addState(_deviceState2.default.softwareUpdate),this.beginDeviceUpdate(function(e,a){if(t.device.removeState(_deviceState2.default.softwareUpdate),e)return Log.error("Software update failed with Error: "+e),void t.device.app.display({title:_appMessage2.default.SwUpdateFailed.title,message:_appMessage2.default.SwUpdateFailed.message,buttons:[_appMessage2.default.SwUpdate.buttons.retry,_appMessage2.default.SwUpdate.buttons.notNow]},function(i,r){i.dismiss(),0===r?t.begin(null):t._shiftAndInvokeUpdateCallbacks(e,a)});t.device.app.display({title:_appMessage2.default.SwUpdateSuccessful.title,message:_appMessage2.default.SwUpdateSuccessful.message,buttons:[_appMessage2.default.SwUpdate.buttons.ok]},function(i){var r=require("./PaymentDevice").default;i.dismiss(),t.wasInstalled=!0,Log.info("SW Update successfully completed on "+t.device.id),t.device.startPollForBattery(),t.device.display({id:r.Message.ReadyWithId,substitutions:{id:t.device.id},displaySystemIcons:!0},function(){}),t._shiftAndInvokeUpdateCallbacks(e,a)})})},t.prototype.beginDeviceUpdate=function(e){throw new Error("Subclass must implement this method")},t.prototype.validateUpdateEligibility=function(e){e()},_createClass(t,[{key:"updateInProgress",get:function(){return this.device.hasState(_deviceState2.default.softwareUpdate)}}]),t}(_events.EventEmitter);exports.default=DeviceUpdate;

},{"./PaymentDevice":346,"./appMessage":350,"./deviceState":355,"./paymentDeviceError":357,"events":200,"manticore":213,"manticore-log":208}],334:[function(require,module,exports){
"use strict";exports.__esModule=!0;var FormFactor={None:0,MagneticCardSwipe:1,Chip:2,EmvCertifiedContactless:3,SecureManualEntry:4,ManualCardEntry:5};exports.default=FormFactor;

},{}],335:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}exports.__esModule=!0;var _manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_Card2=require("./Messages/Card"),_Card3=_interopRequireDefault(_Card2),_FormFactor=require("./FormFactor"),_FormFactor2=_interopRequireDefault(_FormFactor),Log=(0,_manticoreLog2.default)("payment"),MagneticCard=function(e){function t(){_classCallCheck(this,t);var r=_possibleConstructorReturn(this,e.call(this));return r.nativeClass="MagneticCard",r.formFactor=_FormFactor2.default.MagneticCardSwipe,r}return _inherits(t,e),t.prototype.parseName=function(e){Log.debug("Not parsing "+e)},t}(_Card3.default);exports.default=MagneticCard;

},{"./FormFactor":334,"./Messages/Card":339,"manticore-log":208}],336:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}exports.__esModule=!0;var _createClass=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),_manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_PaymentDevice2=require("./PaymentDevice"),_PaymentDevice3=_interopRequireDefault(_PaymentDevice2),_FormFactor=require("./FormFactor"),_FormFactor2=_interopRequireDefault(_FormFactor),Log=(0,_manticoreLog2.default)("payment"),MagneticReaderDevice=function(e){function t(n,r){_classCallCheck(this,t);var o=_possibleConstructorReturn(this,e.call(this,n,r));return o.connect(function(){o.isActivated||o.disconnect()}),o}return _inherits(t,e),t.prototype.connect=function(e){var t=this;this.native.isConnected()&&(Log.debug(function(){return"Connect called, but "+t.id+" is already connected."}),e&&e()),Log.debug(function(){return"Connecting to Magnetic Reader "+t.id}),this.native.connect(function(n){Log.debug(function(){return"Connected to Magnetic Reader "+t.id}),e&&e(n)})},t.prototype.disconnect=function(e){this.native.disconnect(e)},t.prototype.received=function(e){e&&"start"===e.type||e&&"fail"===e.type||e.formFactor&&(e.reader||(e.reader=this),this.emit("cardPresented",e))},_createClass(t,[{key:"formFactors",get:function(){return[_FormFactor2.default.MagneticCardSwipe]}}]),t}(_PaymentDevice3.default);exports.default=MagneticReaderDevice;

},{"./FormFactor":334,"./PaymentDevice":346,"manticore-log":208}],337:[function(require,module,exports){
"use strict";function _interopRequireDefault(t){return t&&t.__esModule?t:{default:t}}function _classCallCheck(t,r){if(!(t instanceof r))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(t,r){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!r||"object"!=typeof r&&"function"!=typeof r?t:r}function _inherits(t,r){if("function"!=typeof r&&null!==r)throw new TypeError("Super expression must either be null or a function, not "+typeof r);t.prototype=Object.create(r&&r.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),r&&(Object.setPrototypeOf?Object.setPrototypeOf(t,r):t.__proto__=r)}exports.__esModule=!0;var _manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_Card2=require("./Messages/Card"),_Card3=_interopRequireDefault(_Card2),_FormFactor=require("./FormFactor"),_FormFactor2=_interopRequireDefault(_FormFactor),_cardError=require("./cardError"),regExDate=/^(1[0-2]|0[1-9])([0-9]{4})$/,Log=(0,_manticoreLog2.default)("card.manuallyEnteredCard"),ManuallyEnteredCard=function(t){function r(){_classCallCheck(this,r);var e=_possibleConstructorReturn(this,t.call(this));return e.formFactor=_FormFactor2.default.ManualCardEntry,e}return _inherits(r,t),r.prototype.setCardNumber=function(t){this._cardNumber=t},r.prototype.getCardNumber=function(){return this._cardNumber},r.prototype.setCVV=function(t){this._cvv=t},r.prototype.getCVV=function(){return this._cvv},r.prototype.setPostalCode=function(t){this._postalCode=t},r.prototype.getPostalCode=function(){return this._postalCode},r.prototype.setExpiration=function(t){if(!regExDate.exec(t))throw Log.error("Invalid expiration date "+t+" was provided which is not in format MMYYYY"),_cardError.cardError.invalidExpiryDate;this._expiration=t},r.prototype.getExpiration=function(){return this._expiration},r.prototype.toJSON=function(){var r=t.prototype.toJSON.call(this);return r.cardNumber=this.getCardNumber(),r.expiration=this.getExpiration(),r.postalCode=this.getPostalCode(),r.cvv=!!this.getCVV(),r},r.prototype.toString=function(){return JSON.stringify(this.toJSON())},r}(_Card3.default);exports.default=ManuallyEnteredCard;

},{"./FormFactor":334,"./Messages/Card":339,"./cardError":352,"manticore-log":208}],338:[function(require,module,exports){
"use strict";function _classCallCheck(s,t){if(!(s instanceof t))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var AvailableApplications=function(){function s(t){_classCallCheck(this,s),this.deviceResponse=t,this.apps=[]}return s.prototype.toString=function(){return"AvailableApplications: "+this.apps.length+" apps\nRaw Response: "+this.deviceResponse.toString()},s}();exports.default=AvailableApplications;

},{}],339:[function(require,module,exports){
"use strict";function _interopRequireDefault(t){return t&&t.__esModule?t:{default:t}}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _moment=require("moment"),_moment2=_interopRequireDefault(_moment),_FormFactor=require("../FormFactor"),_FormFactor2=_interopRequireDefault(_FormFactor),Card=function(){function t(){_classCallCheck(this,t),this.timestamp=(0,_moment2.default)().format(),this.isSignatureRequired=!1,this.isContactlessMSD=!1,this.pinPresent=!1,this.failed=!1,this.chipCard=!1,this.isMSRFallbackAllowed=!1}return t.prototype.isEmv=function(){return(this.formFactor===_FormFactor2.default.Chip||this.formFactor===_FormFactor2.default.EmvCertifiedContactless)&&!this.isContactlessMSD},t.prototype.toJSON=function(){return{timestamp:this.timestamp,isSignatureRequired:this.isSignatureRequired,isContactlessMSD:this.isContactlessMSD,pinPresent:this.pinPresent,failed:this.failed,formFactor:this.formFactor,lastFourDigits:this.lastFourDigits,cardIssuer:this.cardIssuer,cardholderName:this.cardholderName,chipCard:this.chipCard,isMSRFallbackAllowed:this.isMSRFallbackAllowed}},t.prototype.toString=function(){return JSON.stringify(this.toJSON())},t}();exports.default=Card;

},{"../FormFactor":334,"moment":278}],340:[function(require,module,exports){
"use strict";exports.__esModule=!0;var CardPresentEvent={cardDataRead:0,pinEvent:1,appSelectionRequired:2,insertDetected:4};exports.default=CardPresentEvent;

},{}],341:[function(require,module,exports){
"use strict";function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _createClass=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),CardReaderResponse=function(){function t(e,n,r){_classCallCheck(this,t),this._raw=e,this._length=n,this._isUnsolicited=r}return t.prototype.toString=function(t){var e=["<----\nCard reader response: ",this.apdu?this.apdu.toString(t):"blank","\n"];return e.push("----\x3e"),e.join("")},_createClass(t,[{key:"raw",get:function(){return this._raw}},{key:"length",get:function(){return this._length}},{key:"apdu",set:function(t){this._apdu=t},get:function(){return this._apdu}},{key:"isUnsolicited",get:function(){return this._isUnsolicited}},{key:"tlvs",get:function(){return this.apdu?this.apdu.tlvs:null}}]),t}();exports.default=CardReaderResponse;

},{}],342:[function(require,module,exports){
"use strict";function _classCallCheck(s,t){if(!(s instanceof t))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var DeviceStatus=function s(){_classCallCheck(this,s)};exports.default=DeviceStatus;

},{}],343:[function(require,module,exports){
"use strict";function _classCallCheck(n,s){if(!(n instanceof s))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var PinEvent=function n(){_classCallCheck(this,n)};exports.default=PinEvent;

},{}],344:[function(require,module,exports){
"use strict";function _classCallCheck(s,t){if(!(s instanceof t))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var NumericEntryOptions=function s(){_classCallCheck(this,s)};exports.default=NumericEntryOptions;

},{}],345:[function(require,module,exports){
"use strict";exports.__esModule=!0;var NumericEntryType={GratuityAmount:1,GratuityPercentage:2,MobileNumber:3,ExpirationDate:4,Cvv:5};exports.default=NumericEntryType;
},{}],346:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _toConsumableArray(e){if(Array.isArray(e)){for(var t=0,r=Array(e.length);t<e.length;t++)r[t]=e[t];return r}return Array.from(e)}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}exports.__esModule=!0;var _createClass=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),_manticoreLog=require("manticore-log"),_manticoreLog2=_interopRequireDefault(_manticoreLog),_events=require("events"),_manticore=require("manticore"),_manticore2=_interopRequireDefault(_manticore),_manticoreUtil=require("manticore-util"),_CardReader2=require("./CardReader"),_CardReader3=_interopRequireDefault(_CardReader2),_FormFactor=require("./FormFactor"),_FormFactor2=_interopRequireDefault(_FormFactor),_DeviceStatus=require("./Messages/DeviceStatus"),_DeviceStatus2=_interopRequireDefault(_DeviceStatus),_readerInformation=require("./readerInformation"),_paymentDeviceError=require("./paymentDeviceError"),_deviceState=require("./deviceState"),_deviceState2=_interopRequireDefault(_deviceState),_ReaderModel=require("./ReaderModel"),_ReaderModel2=_interopRequireDefault(_ReaderModel),Log=(0,_manticoreLog2.default)("paymentDevice"),secureBlobStorage="E",itemKeyMerchantCardReaders="merchant-card-readers",msDefaultMaxConnectionDuration=3e4,PaymentDevice=function(e){function t(r,n,o,i,a){_classCallCheck(this,t);var s=_possibleConstructorReturn(this,e.call(this,r,n));return s.id=r,s.address=a,s.native=n,s.app=o,s.cardPresented=!1,s.isUsb=i,s.type=_readerInformation.readerType.Unknown,s.connectionType=_readerInformation.readerConnectionType.Unknown,s.cardInsertedHandler=null,s._connectionCallbacks=[],s.cardInSlot=!1,s._sEventNames=new Set,s._sActiveFormFactors=new Set,s.setMaxListeners(30),s.model=_ReaderModel2.default.Unknown,Log.debug(function(){return"Create PaymentDevice with id: "+r+", address: "+a+", isUSB: "+i+", native: "+!!n+", app: "+!!o}),s}return _inherits(t,e),t.prototype._getCardReaderId=function(e){return this.model+"-"+e},t.prototype.setCardReaderToMerchant=function(e){var t=this;if(!e)return void Log.warn("Cannot assign card reader '"+this.id+"' with serial number "+e+" to merchant as serial number was not defined");this.serialNumber=e;var r=this.app.getMerchant();if(!r||!r.emailAddress)return void Log.warn("setCardReader> Cannot assign card reader '"+this.id+"' with serial number "+e+" to merchant as merchant or their email Address was not set");Log.debug(function(){return"Assigning '"+t.id+"' with serial number '"+e+"' to merchant with business name '"+r.businessName+"' and email '"+r.emailAddress+"'"}),_manticore2.default.getItem(itemKeyMerchantCardReaders,secureBlobStorage,function(n,o){Log.debug(function(){return"setCardReader> Received saved merchant pref: '"+JSON.stringify(o)+"'. Error: "+JSON.stringify(n)});var i=!1,a=void 0;if(o)if(a=JSON.parse(o),a.emailAddress!==r.emailAddress)i=!0;else{var s=a.readers||[];s.indexOf(t._getCardReaderId(e))<0&&(i=!0)}else i=!0;if(!i)return void Log.debug(function(){return"setCardReader> Skip setting serial number '"+e+"' as it was previously assigned. "+JSON.stringify(a)});var c={asset:{status:"ENABLED",serial:e,batch:t.model,family:t.manufacturer}};r.request({service:"devices",op:"assets",format:"json",method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(c)},function(n,o){if(n)Log.warn("setCardReader> "+t.id+" Failed to assign asset to merchant\nRequest: "+JSON.stringify(c)+"\nError: "+JSON.stringify(n)+"\nResponse:"+JSON.stringify(o));else{Log.info("setCardReader> Assigned '"+t.id+"' with serial number '"+e+"' to merchant with business name '"+r.businessName+"'"),Log.debug(function(){return"setCardReader> Response from assigning '"+t.id+"' with serial # '"+e+"' to '"+r.businessName+"' was "+JSON.stringify(o)});var i=a||{};i.emailAddress=r.emailAddress,i.readers=i.readers||[],i.readers.push(t._getCardReaderId(e)),Log.debug(function(){return"setCardReader> Updating merchant preference from '"+JSON.stringify(a)+"' to '"+JSON.stringify(i)+"'"}),_manticore2.default.setItem(itemKeyMerchantCardReaders,secureBlobStorage,JSON.stringify(i),function(e,r){e&&Log.error(function(){return"setCardReader> Could not save data "+JSON.stringify(i)+" to device due to error "+JSON.stringify(e)}),Log.debug(function(){return"setCardReader> Saved '"+t.id+"' merchant pref to "+r})})}})})},t.prototype.extractReaderLogs=function(e){e(new Error("Not implemented"))},t.prototype.equals=function(e,t){return this.id===e&&this.manufacturer===t},t.discovered=function(e){for(var r=t.devices,n=Array.isArray(r),o=0,r=n?r:r[Symbol.iterator]();;){var i;if(n){if(o>=r.length)break;i=r[o++]}else{if(o=r.next(),o.done)break;i=o.value}if(i.equals(e.id,e.manufacturer))return Log.info(e+" was previously discovered... Will not emit device discovered event"),!1}return t.devices.push(e),Log.info("Discovered device "+e+"... Existing devices: "+JSON.stringify(t.devices)),t.Events.emit("deviceDiscovered",e),!0},t.prototype.removeAllCardReaderListeners=function(){for(var e=this,r=this._sEventNames.values(),n=Array.isArray(r),o=0,r=n?r:r[Symbol.iterator]();;){var i;if("break"===function(){if(n){if(o>=r.length)return"break";i=r[o++]}else{if(o=r.next(),o.done)return"break";i=o.value}var t=i;Log.debug(function(){return e.id+" Removing "+e.listenerCount(t)+" listeners for '"+t+"' event"}),e.removeAllListeners(t)}())break}Log.info(this.id+" Removed device from cache and dropped listeners from "+this._sEventNames.size+" events. Remaining devices: "+t.devices.length),this._sEventNames.clear()},t.prototype.removed=function(){var e=this;Log.info("removed() "+this.id+" was removed"),this.connectionInProgress=!1,this._sActiveFormFactors.clear(),Log.debug(function(){return e.id+" Cleared all active form factors as part of removed()"}),this.isConnected()&&(Log.debug(function(){return"removed() "+e.id+" was connected... Will disconnect it first"}),this.disconnect());var r=t.devices.indexOf(this);r>=0&&(this._isFirmwareUpdateInProgress?Log.info("removed() Will not remove "+this.id+" from cache as Firmware update is in progress"):t.devices.splice(r,1)),this.beginDeviceRemoved(function(r){r?Log.warn(e.id+" remove failed with error "+r):(Log.debug(function(){return e.id+" was successfully removed"}),e._isFirmwareUpdateInProgress||(e.emit(t.Event.deviceRemoved,e),e.removeAllCardReaderListeners()))})},t.prototype.updateRequired=function(e){var r=this;Log.debug(this.id+" needs an update."),this.pendingUpdate=e,this.isReady?this.emit(t.Event.updateRequired,e):(Log.debug("Update "+this.id+" requires an update, but the card reader is not ready. Will emit updateRequired event once device is connected"),this.once(t.Event.connected,function(){return r.emit(t.Event.updateRequired,e)}))},t.prototype.activateForPayment=function(e,t,r){for(var n=this,o=t,i=Array.isArray(o),a=0,o=i?o:o[Symbol.iterator]();;){var s;if(i){if(a>=o.length)break;s=o[a++]}else{if(a=o.next(),a.done)break;s=a.value}var c=s;this._sActiveFormFactors.add(c)}this.context=e,Log.debug(function(){return n.id+" activated for '"+e.id+"' and formFactors '"+(0,_manticoreUtil.getPropertyName)(_FormFactor2.default,t)+"'. All active formFactors: "+(0,_manticoreUtil.getPropertyName)(_FormFactor2.default,[].concat(_toConsumableArray(n._sActiveFormFactors)))})},t.prototype.deactivateFormFactors=function(e,t){for(var r=this,n=e,o=Array.isArray(n),i=0,n=o?n:n[Symbol.iterator]();;){var a;if(o){if(i>=n.length)break;a=n[i++]}else{if(i=n.next(),i.done)break;a=i.value}var s=a;this._sActiveFormFactors.delete(s)}Log.debug(function(){return r.id+" Removed active formFactors '"+(0,_manticoreUtil.getPropertyName)(_FormFactor2.default,e)+"'. Remaining active: "+(0,_manticoreUtil.getPropertyName)(_FormFactor2.default,[].concat(_toConsumableArray(r._sActiveFormFactors)))}),t&&t()},t.prototype.getSetOfActiveFormFactors=function(){return new Set(this._sActiveFormFactors)},t.prototype.isFormFactorActive=function(e){return this._sActiveFormFactors.has(e)},t.prototype.abortTransaction=function(e,t){var r=this;Log.debug(function(){return"Aborted transaction on "+r.id}),this.cardPresented=!1,this._sActiveFormFactors.clear(),Log.debug(function(){return r.id+" Cleared all active form factors as part of abortTransaction()"}),t&&t()},t.prototype.postTransactionCleanup=function(e){e&&e()},t.prototype._checkAndDismissAlerts=function(e,t){e&&t&&e.dismiss()},t.prototype._shiftAndInvokeConnectionCallback=function(e){var t=this;Log.debug(function(){return t.id+" Invoking "+t._connectionCallbacks.length+" connection callback handlers"});for(;this._connectionCallbacks.length>0;)!function(){var r=t._connectionCallbacks.shift();_manticore2.default.setTimeout(function(){r&&r(e)},0)}();this.connectionInProgress=!1},t.prototype.waitForCardRemoval=function(e){var r=this;if(!this.cardInSlot||!this.isConnected())return Log.debug(function(){return"Will not wait for card removal as card is not in slot. cardInSlot: "+r.cardInSlot+" connected: "+r.isConnected()}),void e();var n=function n(o){r.removeListener(t.Event.disconnected,n),r.removeListener(t.Event.cardRemoved,n),e(o)};this.listenForCardRemoval(function(e){e&&(Log.warn("Will not listen for card removal events due to error "+e),n(e))}),this.once(t.Event.disconnected,n),this.once(t.Event.cardRemoved,n)},t.prototype.connect=function(e){var r=this;if(e&&this._connectionCallbacks.push(e),!this._isFirmwareUpdateInProgress&&this.connectionInProgress)return void Log.debug(function(){return"Connection already in progress for "+r.id+". Will not re-connect, but queue the callback"});var n=_manticore2.default.setTimeout(function(){Log.info("Connection to "+r.id+" timed-out after waiting for "+t.ConnectionTimeOut+"ms. Will force a disconnect"),r.forceDisconnect(function(){Log.info("Forced a disconnect on "+r.id+" due to connection timeout");var e=_paymentDeviceError.deviceError.generic.withDevMessage("Connection timed out");r.emit(t.Event.connectionError,e),r._shiftAndInvokeConnectionCallback(e)})},t.ConnectionTimeOut);this.isReady=!1;var o=(new Date).getTime();this.connectionInProgress=!0,this._sActiveFormFactors.clear(),Log.debug(function(){return r.id+" Cleared all active form factors as part of connect()"}),this.beginDeviceConnect(function(e){var i=(new Date).getTime()-o;n.cancel(),e?(Log.error("Connection with "+r.id+" (Duration: "+i+"ms) failed with error "+JSON.stringify(e)),r._isFirmwareUpdateInProgress||r.emit(t.Event.connectionError,e),r.connectionInProgress=!1,r._shiftAndInvokeConnectionCallback(e)):(Log.info("Successfully connected to "+r.id+". Duration: "+i+"ms"),r.onConnected(),r._shiftAndInvokeConnectionCallback())})},t.prototype.onConnected=function(){var e=this;Log.debug(function(){return e.id+" is ready."}),this.isReady=!0,this._isFirmwareUpdateInProgress||this.emit(t.Event.connected),this.startPollForBattery()},t.prototype.retrieveBatteryInfo=function(e){var t=this;this.getBatteryInfo(function(r,n){r?Log.error("Error retrieving battery info: "+r):(t.lastKnownBatteryInfo=n,Log.debug(function(){return"Received battery info for "+t.id+": "+n})),e(r,n)})},t.prototype._continuallyPollForBattery=function(){var e=this;this.isReady&&this.pollForBattery&&this.getBatteryInfo(function(r,n){e.lastKnownBatteryInfo=n,e.lastKnownBatteryInfo&&e.emit(t.Event.batteryStatusUpdate,e.lastKnownBatteryInfo),e.isReady&&e.pollForBattery&&_manticore2.default.setTimeout(function(){return e._continuallyPollForBattery.call(e)},3e4)})},t.prototype.startPollForBattery=function(){Log.debug("startPollForBattery"),this.pollForBattery||(this.pollForBattery=!0,this._continuallyPollForBattery())},t.prototype.stopPollForBattery=function(){this.pollForBattery=!1,Log.debug("stopPollForBattery")},t.prototype.forceDisconnect=function(e){var t=this;this._sActiveFormFactors.clear(),Log.debug(function(){return t.id+" Cleared all active form factors as part of disconnect()"}),this.beginDeviceDisconnect(function(r){r?Log.warn(" "+t.id+" disconnect failed with error "+r):(Log.debug(function(){return t.id+" was successfully disconnected"}),t.connectionInProgress=!1,t.onDisconnected(null)),e&&e(r)})},t.prototype.disconnect=function(e){this.context&&this.context.isPaymentInRetryOrProgress()||this._isFirmwareUpdateInProgress?(Log.debug("Device has an active transaction or firmware update is in progress. Will not attempt to invoke native.disconnect"),e&&e(_paymentDeviceError.deviceError.actionCannotBeCompleted)):this.forceDisconnect(e)},t.prototype.getVersionInfo=function(){return{}},t.prototype.onDisconnected=function(e){var r=this;Log.warn(function(){return"Device "+r.id+" was disconnected with error message="+(e&&e.message)+",code="+(e&&e.code)+","+JSON.stringify(e)}),this.isReady=!1,this.stopPollForBattery(),this._isFirmwareUpdateInProgress||this.emit(t.Event.disconnected,e)},t.prototype.destroy=function(){this.native=null},t.prototype.once=function(t,r){r.id=Math.floor(1e13*Math.random()),e.prototype.once.call(this,t,r)},t.prototype.on=function(t,r){var n=this;r.id=r.id||Math.floor(1e13*Math.random()),e.prototype.on.call(this,t,r),this._sEventNames.add(t),Log.debug(function(){return n.id+" Added listener '"+r.id+"' for '"+t+"'. ListenerCount: "+n.listenerCount(t)})},t.prototype.removeListener=function(t,r){var n=this;e.prototype.removeListener.call(this,t,r),Log.debug(function(){return n.id+" removeListener invoked on listener: '"+(r?r.id:"null")+"' for event:'"+t+"'"})},t.prototype.emit=function(t){for(var r,n=this,o=this.listeners(t),i=Array.isArray(o),a=0,o=i?o:o[Symbol.iterator]();;){var s;if("break"===function(){if(i){if(a>=o.length)return"break";s=o[a++]}else{if(a=o.next(),a.done)return"break";s=a.value}var e=s;Log.debug(function(){return n.id+" Emitting "+t+" to listener '"+e.id+"'"})}())break}for(var c=arguments.length,d=Array(c>1?c-1:0),u=1;u<c;u++)d[u-1]=arguments[u];(r=e.prototype.emit).call.apply(r,[this,t].concat(d))},t.prototype.addState=function(e){Log.debug("Adding state '"+(0,_manticoreUtil.getPropertyName)(_deviceState2.default,e)+"'"),this.state|=e},t.prototype.removeState=function(e){Log.debug("Removing device state '"+(0,_manticoreUtil.getPropertyName)(_deviceState2.default,e)+"'"),this.state&=~e},t.prototype.hasState=function(e){return(this.state&e)===e},t.prototype.isConnected=function(){return this.native.isConnected()},t.prototype.isReadyForTransaction=function(){var e=new _DeviceStatus2.default;return e.isReady=!1,this.isConnected()?this.isReady?this.isUpdateRequired()?e.error=_paymentDeviceError.deviceError.swUpdatePending:this.lastKnownBatteryInfo&&this.lastKnownBatteryInfo.isLevelCritical?e.error=_paymentDeviceError.deviceError.lowOnBattery:(e.isReady=!0,e.error=null):e.error=_paymentDeviceError.deviceError.notFunctional:e.error=_paymentDeviceError.deviceError.deviceNotConnected,e},t.prototype.isUpdateRequired=function(){return this.pendingUpdate&&this.pendingUpdate.isRequired&&!this.pendingUpdate.wasInstalled},t.prototype.doesHaveCapability=function(e){return!1},t.prototype.display=function(e,t){t(null)},t.prototype.promptForNumericEntry=function(e,t){t(null)},t.prototype.promptForSecureAccountNumber=function(e,t){t(null)},t.isSupported=function(e){return e.protocols.indexOf("com.paypal.here.reader")>=0?"MiuraDevice":null},t.prototype.toJSON=function(){return{id:this.id,name:this.name,manufacturer:this.manufacturer,model:this.model,serialNumber:this.serialNumber}},t.prototype.toString=function(){return JSON.stringify(this.toJSON())},_createClass(t,[{key:"isActivated",get:function(){return this._sActiveFormFactors.size>0}},{key:"_isFirmwareUpdateInProgress",get:function(){return this.pendingUpdate&&this.pendingUpdate.updateInProgress}},{key:"invoice",get:function(){return this.context?this.context.invoice:null}}]),t}(_CardReader3.default);exports.default=PaymentDevice,PaymentDevice.devices=[],PaymentDevice.Event={connected:"connected",connectionError:"connectionError",disconnected:"disconnected",updateRequired:"updateRequired",cardRemoved:"cardRemoved",cardPresented:"cardPresented",cancelled:"cancelled",cancelRequested:"cancelRequested",error:"error",batteryStatusUpdate:"batteryStatusUpdate",proceed:"proceed",selected:"selected",contactlessReaderDeactivated:"contactlessReaderDeactivated",deviceRemoved:"deviceRemoved"},PaymentDevice.constant={InvalidChipRetryCount:2},PaymentDevice.authCode={TransactionFailure:"8A023035",TransactionSuccess:"8A023030",NoNetwork:"8A025A33"},PaymentDevice.Events=new _events.EventEmitter,PaymentDevice.Message={Connecting:"Connecting",ConnectionFailed:"ConnectionFailed",RefundFailed:"Refund.Failed",PaymentFailed:"Paid.Failed",NotConnected:"NotConnected",OrderInProgress:"Order.InProgress",WaitForPayment:"Order.Ready",ProcessingContact:"Processing.Contact",PaidRemoveCard:"Paid.RemoveCard",QuickChip:"Processing.QuickChip",Paid:"Paid.Successful",RefundRemoveCard:"Refund.RemoveCard",Refund:"Refund.Successful",RefundCardMismatch:"Refund.CardMismatch",RefundCardMismatchRemoveCard:"Refund.CardMismatchRemoveCard",Processing:"Processing.Tap",ProcessingContactWithPin:"Processing.ContactPinOk",ProcessingWithPin:"Processing.PinOk",Complete:"Complete",SignContact:"Sign.Contact",SignTap:"Sign.Tap",SoftwareUpdateRequired:"SwUpdate.Required",SoftwareUpdateComplete:"SwUpdate.Complete",SoftwareUpdateAvailable:"SwUpdate.Available",SoftwareUpdateProgress:"SwUpdate.Progress",SoftwareUpdateFailed:"SwUpdate.Failed",SoftwareUpdateDownloading:"SwUpdate.Downloading",Ready:"Ready",ReadyWithId:"ReadyWithId",NotReady:"NotReady",NfcTimeOut:"NfcTimeout",GeneralNfcFallback:"GeneralNfcFallback",TransactionCancelled:"TransactionCancelled",TransactionCancelledRemoveCard:"TransactionCancelledRemoveCard",TransactionCancelling:"TransactionCancelling",UnableToReadNfcCard:"Declined.UnableToReadNfcCard",InvalidChipCard:"Declined.InvalidChipCard",BlockedCardInserted:"Declined.BlockedCardInserted",NfcDecline:"Declined.NfcDecline",IncorrectPin:"Declined.IncorrectPin",ContactIssuer:"ContactIssuer",ContactIssuerRemoveCard:"ContactIssuerRemoveCard",RechargeNow:"RechargeNow",ReadyForInsertAndSwipePayment:"ReadyForInsertAndSwipePayment",ReadyForInsertPayment:"ReadyForInsertPayment",ReadyForSwipePayment:"ReadyForSwipePayment",SignatureForInsert:"Signature.Insert",SignatureForInsertQCCR:"Signature.QuickChip",SignatureForTap:"Signature.Tap",SignatureForNonEmv:"Signature.NonEmv",InvoiceTotal:"InvoiceTotal",AmountTooLow:"AmountTooLow",AmountTooLowRemoveCard:"AmountTooLowRemoveCard",AmountTooHigh:"AmountTooHigh",AmountTooHighRemoveCard:"AmountTooHighRemoveCard",CompletingPayment:"CompletingPayment",RequestTip:"RequestTip",ConfirmTip:"ConfirmTip"},PaymentDevice.ConnectionTimeOut=msDefaultMaxConnectionDuration;

},{"./CardReader":331,"./FormFactor":334,"./Messages/DeviceStatus":342,"./ReaderModel":347,"./deviceState":355,"./paymentDeviceError":357,"./readerInformation":358,"events":200,"manticore":213,"manticore-log":208,"manticore-util":212}],347:[function(require,module,exports){
"use strict";exports.__esModule=!0;var ReaderModel={Unknown:0,Swiper:1,M003:2,M010:3,Moby3000:4,RP450:5};exports.default=ReaderModel;

},{}],348:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,a){if(!(e instanceof a))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var _ManuallyEnteredCard=require("./ManuallyEnteredCard"),_ManuallyEnteredCard2=_interopRequireDefault(_ManuallyEnteredCard),SecureEntryOptions=function e(){_classCallCheck(this,e)};exports.default=SecureEntryOptions;

},{"./ManuallyEnteredCard":337}],349:[function(require,module,exports){
"use strict";exports.__esModule=!0;var TransactionType={Sale:0,Auth:1,Refund:2,PartialRefund:3};exports.default=TransactionType;

},{}],350:[function(require,module,exports){
"use strict";exports.__esModule=!0;var appMessage={SwUpdateInitializing:{title:"SwUpgrade.Updating.Title",message:"SwUpgrade.Initializing"},SwUpdateReconnecting:{title:"SwUpgrade.Updating.Title",message:"SwUpgrade.Reconnecting"},SwUpdateRestartInstruction:{title:"SwUpgrade.RestartInstruction.Title",message:"SwUpgrade.RestartInstruction.Msg"},SwUpdateConnected:{title:"SwUpgrade.Updating.Title",message:"SwUpgrade.Connected"},SwUpdate:{buttons:{notNow:"SwUpgrade.Buttons.NotNow",ok:"SwUpgrade.Buttons.Ok",updateNow:"SwUpgrade.Buttons.UpdateNow",retry:"SwUpgrade.Buttons.Retry"}},SwUpdateFailed:{title:"SwUpgrade.Failed.Title",message:"SwUpgrade.Failed.Msg",messageBatteryLow:"SwUpgrade.Failed.BatteryLow"},SwUpdateSuccessful:{title:"SwUpgrade.Success.Title",message:"SwUpgrade.Success.Msg"},SwUpdateRequired:{title:"SwUpgrade.Required.Title",message:"SwUpgrade.Required.Msg"},SwUpdateOptional:{title:"SwUpgrade.Optional.Title",message:"SwUpgrade.Optional.Msg"},SwUpdateInProgress:{title:"SwUpgrade.Updating.Title",message:"SwUpgrade.Updating.Msg"},SwUpdateDownloading:{title:"SwUpgrade.Updating.Title",message:"SwUpgrade.Downloading"},SwUpdateInProgressWithDetails:{title:"SwUpgrade.Updating.Title",message:"SwUpgrade.UpdatingWithDetails"},SwUpdateValidatingSecurityKeys:{title:"SwUpgrade.Updating.Title",message:"SwUpgrade.ValidatingSecurityKeys"},SwUpdateSecurityKeysInstalled:{title:"SwUpgrade.Updating.Title",message:"SwUpgrade.SecurityKeysInstalled"},SwUpdateRestarting:{title:"SwUpgrade.Updating.Title",message:"SwUpgrade.Restarting"},UnsuccessfulInsert:{title:"Tx.Alert.UnsuccessfulInsert.Title",message:"Tx.Alert.UnsuccessfulInsert.Msg"},ReadyForSwipeOnly:{title:"Tx.Alert.ReadyForSwipeOnly.Title",message:"Tx.Alert.ReadyForSwipeOnly.Msg",cancel:"Cancel",imageIcon:"img_emv_swipe"},ConnectingToDevice:{title:"Device.Connecting.Title"},RetryConnectingToDevice:{title:"Device.RetryConnecting.Title",message:"Device.RetryConnecting.Message",buttons:["Device.RetryConnecting.Buttons.Retry"],cancel:"Device.RetryConnecting.Buttons.NotNow"},ConnectingToDeviceFailed:{title:"Device.ConnectingFailed.Title",cancel:"Device.ConnectingFailed.Buttons.Cancel"},LowBattery:{title:"Tx.Alert.LowBattery.Title",message:"Tx.Alert.LowBattery.Msg",cancel:"OK"}};exports.default=appMessage;

},{}],351:[function(require,module,exports){
"use strict";exports.__esModule=!0;var batteryStatus={unknown:0,draining:1,drained:2,charging:3,charged:4};exports.default=batteryStatus;

},{}],352:[function(require,module,exports){
"use strict";exports.__esModule=!0,exports.cardErrorDomain=exports.cardError=void 0;var _paymentDeviceError=require("./paymentDeviceError"),domain="Card",cardError=exports.cardError={invalidExpiryDate:Object.freeze((0,_paymentDeviceError.payPalError)(domain,0,"Expiry date should be in MMYYYY format"))};exports.cardErrorDomain=domain;

},{"./paymentDeviceError":357}],353:[function(require,module,exports){
"use strict";exports.__esModule=!0;var deviceCapabilityType={none:0,display:1,keyboard:2,secureEntry:3,contactless:4};exports.default=deviceCapabilityType;

},{}],354:[function(require,module,exports){
"use strict";exports.__esModule=!0;var deviceManufacturer={miura:"MIURA",ingenico:"INGENICO",bbpos:"BBPOS",roam:"ROAM"};exports.default=deviceManufacturer;

},{}],355:[function(require,module,exports){
arguments[4][226][0].apply(exports,arguments)
},{"dup":226}],356:[function(require,module,exports){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}exports.__esModule=!0;var _CardReader=require("./CardReader");Object.defineProperty(exports,"CardReader",{enumerable:!0,get:function(){return _interopRequireDefault(_CardReader).default}});var _NumericEntryOptions=require("./NumericEntryOptions");Object.defineProperty(exports,"NumericEntryOptions",{enumerable:!0,get:function(){return _interopRequireDefault(_NumericEntryOptions).default}});var _NumericEntryType=require("./NumericEntryType");Object.defineProperty(exports,"NumericEntryType",{enumerable:!0,get:function(){return _interopRequireDefault(_NumericEntryType).default}});var _SecureEntryOptions=require("./SecureEntryOptions");Object.defineProperty(exports,"SecureEntryOptions",{enumerable:!0,get:function(){return _interopRequireDefault(_SecureEntryOptions).default}});var _PaymentDevice=require("./PaymentDevice");Object.defineProperty(exports,"PaymentDevice",{enumerable:!0,get:function(){return _interopRequireDefault(_PaymentDevice).default}});var _BatteryInfo=require("./BatteryInfo");Object.defineProperty(exports,"BatteryInfo",{enumerable:!0,get:function(){return _interopRequireDefault(_BatteryInfo).default}});var _batteryStatus=require("./batteryStatus");Object.defineProperty(exports,"batteryStatus",{enumerable:!0,get:function(){return _interopRequireDefault(_batteryStatus).default}});var _MagneticCard=require("./MagneticCard");Object.defineProperty(exports,"MagneticCard",{enumerable:!0,get:function(){return _interopRequireDefault(_MagneticCard).default}});var _ManuallyEnteredCard=require("./ManuallyEnteredCard");Object.defineProperty(exports,"ManuallyEnteredCard",{enumerable:!0,get:function(){return _interopRequireDefault(_ManuallyEnteredCard).default}});var _CardDataUtil=require("./CardDataUtil");Object.defineProperty(exports,"CardDataUtil",{enumerable:!0,get:function(){return _interopRequireDefault(_CardDataUtil).default}});var _MagneticReaderDevice=require("./MagneticReaderDevice");Object.defineProperty(exports,"MagneticReaderDevice",{enumerable:!0,get:function(){return _interopRequireDefault(_MagneticReaderDevice).default}});var _paymentDeviceError=require("./paymentDeviceError");Object.defineProperty(exports,"deviceError",{enumerable:!0,get:function(){return _paymentDeviceError.deviceError}}),Object.defineProperty(exports,"deviceErrorDomain",{enumerable:!0,get:function(){return _paymentDeviceError.deviceErrorDomain}});var _cardError=require("./cardError");Object.defineProperty(exports,"cardError",{enumerable:!0,get:function(){return _cardError.cardError}}),Object.defineProperty(exports,"cardErrorDomain",{enumerable:!0,get:function(){return _cardError.cardErrorDomain}});var _CardStatus=require("./CardStatus");Object.defineProperty(exports,"CardStatus",{enumerable:!0,get:function(){return _interopRequireDefault(_CardStatus).default}});var _CardIssuer=require("./CardIssuer");Object.defineProperty(exports,"CardIssuer",{enumerable:!0,get:function(){return _interopRequireDefault(_CardIssuer).default}});var _FormFactor=require("./FormFactor");Object.defineProperty(exports,"FormFactor",{enumerable:!0,get:function(){return _interopRequireDefault(_FormFactor).default}});var _TransactionType=require("./TransactionType");Object.defineProperty(exports,"TransactionType",{enumerable:!0,get:function(){return _interopRequireDefault(_TransactionType).default}});var _deviceCapabilityType=require("./deviceCapabilityType");Object.defineProperty(exports,"deviceCapabilityType",{enumerable:!0,get:function(){return _interopRequireDefault(_deviceCapabilityType).default}});var _DeviceUpdate=require("./DeviceUpdate");Object.defineProperty(exports,"DeviceUpdate",{enumerable:!0,get:function(){return _interopRequireDefault(_DeviceUpdate).default}});var _appMessage=require("./appMessage");Object.defineProperty(exports,"appMessage",{enumerable:!0,get:function(){return _interopRequireDefault(_appMessage).default}});var _CardPresentEvent=require("./Messages/CardPresentEvent");Object.defineProperty(exports,"CardPresentEvent",{enumerable:!0,get:function(){return _interopRequireDefault(_CardPresentEvent).default}});var _Card=require("./Messages/Card");Object.defineProperty(exports,"Card",{enumerable:!0,get:function(){return _interopRequireDefault(_Card).default}});var _AvailableApplications=require("./Messages/AvailableApplications");Object.defineProperty(exports,"AvailableApplications",{enumerable:!0,get:function(){return _interopRequireDefault(_AvailableApplications).default}});var _PinEvent=require("./Messages/PinEvent");Object.defineProperty(exports,"PinEvent",{enumerable:!0,get:function(){return _interopRequireDefault(_PinEvent).default}});var _CardReaderResponse=require("./Messages/CardReaderResponse");Object.defineProperty(exports,"CardReaderResponse",{enumerable:!0,get:function(){return _interopRequireDefault(_CardReaderResponse).default}});var _readerInformation=require("./readerInformation");Object.defineProperty(exports,"readerType",{enumerable:!0,get:function(){return _readerInformation.readerType}}),Object.defineProperty(exports,"readerConnectionType",{enumerable:!0,get:function(){return _readerInformation.readerConnectionType}});var _CardInsertedHandler=require("./CardInsertedHandler");Object.defineProperty(exports,"CardInsertedHandler",{enumerable:!0,get:function(){return _interopRequireDefault(_CardInsertedHandler).default}});var _DeviceStatus=require("./Messages/DeviceStatus");Object.defineProperty(exports,"DeviceStatus",{enumerable:!0,get:function(){return _interopRequireDefault(_DeviceStatus).default}});var _deviceManufacturer=require("./deviceManufacturer");Object.defineProperty(exports,"deviceManufacturer",{enumerable:!0,get:function(){return _interopRequireDefault(_deviceManufacturer).default}});var _ReaderModel=require("./ReaderModel");Object.defineProperty(exports,"ReaderModel",{enumerable:!0,get:function(){return _interopRequireDefault(_ReaderModel).default}});

},{"./BatteryInfo":327,"./CardDataUtil":328,"./CardInsertedHandler":329,"./CardIssuer":330,"./CardReader":331,"./CardStatus":332,"./DeviceUpdate":333,"./FormFactor":334,"./MagneticCard":335,"./MagneticReaderDevice":336,"./ManuallyEnteredCard":337,"./Messages/AvailableApplications":338,"./Messages/Card":339,"./Messages/CardPresentEvent":340,"./Messages/CardReaderResponse":341,"./Messages/DeviceStatus":342,"./Messages/PinEvent":343,"./NumericEntryOptions":344,"./NumericEntryType":345,"./PaymentDevice":346,"./ReaderModel":347,"./SecureEntryOptions":348,"./TransactionType":349,"./appMessage":350,"./batteryStatus":351,"./cardError":352,"./deviceCapabilityType":353,"./deviceManufacturer":354,"./paymentDeviceError":357,"./readerInformation":358}],357:[function(require,module,exports){
"use strict";function payPalError(a,r,e){var o=new _manticorePaypalerror.PayPalErrorInfo;return o.code=r.toString(),o.domain=a,o.message=e,_manticorePaypalerror.PayPalError.makeError(null,o)}exports.__esModule=!0,exports.deviceErrorDomain=exports.deviceError=void 0,exports.payPalError=payPalError;var _manticorePaypalerror=require("manticore-paypalerror"),domain="PaymentDevice",deviceError=exports.deviceError={generic:payPalError(domain,0,"Generic error"),nfcTimeout:payPalError(domain,1,"Contactless reader timed out waiting for payment presentation"),nfcNotAllowed:payPalError(domain,2,"Contactless payment not allowed on this card"),tryDifferentCard:payPalError(domain,3,"Try different card"),mustInsertCard:payPalError(domain,4,"Must insert presented card"),mustSwipeCard:payPalError(domain,5,"Must swipe presented card"),hardwareError:payPalError(domain,6,"Hardware error"),cardBlocked:payPalError(domain,7,"Presented card is blocked"),contactIssuer:payPalError(domain,8,"Payment was declined. Contact issuer"),invalidChip:payPalError(domain,9,"Chip is invalid"),cannotSwipeChipCard:payPalError(domain,10,"Cannot swipe a chip card"),smartCardNotInSlot:payPalError(domain,11,"Card not in slot"),paymentCancelled:payPalError(domain,12,"Payment was cancelled"),contactlessPaymentAbortedByCardInsert:payPalError(domain,13,"Contactless payment was aborted by card insert"),contactlessPaymentAbortedByCardSwipe:payPalError(domain,14,"Contactless payment was aborted by card swipe"),badEmvData:payPalError(domain,15,"Bad EMV data"),deviceNotConnected:payPalError(domain,16,"Device not connected"),cannotAcceptMessage:payPalError(domain,17,"Device cannot accept messages in its current state"),actionCancelled:payPalError(domain,18,"Action was cancelled"),secureEntryFailed:payPalError(domain,19,"Secure entry failed"),numericEntryFailed:payPalError(domain,20,"Numeric entry failed"),dataValidationError:payPalError(domain,21,"Data validation error"),unexpectedResponse:payPalError(domain,22,"Received unexpected response"),failureResponse:payPalError(domain,23,"Received failure response"),dataRetrievalFailed:payPalError(domain,24,"Failed to retrieve expected data"),lowOnBattery:payPalError(domain,25,"Battery Low"),fileNotFound:payPalError(domain,26,"Unable to retrieve the file from the device"),fileImportFailed:payPalError(domain,27,"File import failed"),initializationFailed:payPalError(domain,28,"Device initialization failed"),tipEntryFailed:payPalError(domain,29,"Tip entry failed"),swUpdateFailed:payPalError(domain,30,"Software Update Failed"),notFunctional:payPalError(domain,31,"Device not functional at this moment"),swUpdatePending:payPalError(domain,32,"Software update is pending"),cancelReadCardData:payPalError(domain,33,"Cancel reading card data"),cardReaderNotAvailable:payPalError(domain,34,"Card reader not available for connection"),corruptFirmware:payPalError(domain,35,"Downloaded firmware file was corrupt"),unexpectedRequest:payPalError(domain,36,"Received unexpected request"),actionCannotBeCompleted:payPalError(domain,37,"Could not complete requested action"),lastActiveReaderNotFound:payPalError(domain,38,"Received unexpected request")};exports.deviceErrorDomain=domain;

},{"manticore-paypalerror":209}],358:[function(require,module,exports){
"use strict";exports.__esModule=!0;var readerType=exports.readerType={Unknown:0,Magstripe:1,Emv:2},readerConnectionType=exports.readerConnectionType={Unknown:0,AudioJack:1,Bluetooth:2,DockPort:3};

},{}],359:[function(require,module,exports){
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var Tlv=exports.Tlv=require("./lib/Tlv").default,TlvList=exports.TlvList=require("./lib/TlvList").default,Tags=exports.Tags=require("./lib/Tags").default,ValueFormat=exports.ValueFormat=require("./lib/ValueFormat").default,DefinedTag=exports.DefinedTag=require("./lib/DefinedTag").default,ApduCommand=exports.ApduCommand=require("./lib/apdu/Command").default,ApduResponse=exports.ApduResponse=require("./lib/apdu/Response").default,Ber=exports.Ber=require("./lib/ber").default;

},{"./lib/DefinedTag":360,"./lib/Tags":361,"./lib/Tlv":362,"./lib/TlvList":363,"./lib/ValueFormat":364,"./lib/apdu/Command":365,"./lib/apdu/Response":366,"./lib/ber":367}],360:[function(require,module,exports){
arguments[4][270][0].apply(exports,arguments)
},{"./ValueFormat":364,"dup":270}],361:[function(require,module,exports){
arguments[4][271][0].apply(exports,arguments)
},{"./DefinedTag":360,"./ValueFormat":364,"dup":271}],362:[function(require,module,exports){
arguments[4][272][0].apply(exports,arguments)
},{"./DefinedTag":360,"./ber":367,"buffer":96,"dup":272}],363:[function(require,module,exports){
(function (Buffer){
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function lengthCheck(e,t,r,n){if(e>t+r)throw new Error(n)}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),_Tlv=require("./Tlv"),_Tlv2=_interopRequireDefault(_Tlv),_DefinedTag=require("./DefinedTag"),_DefinedTag2=_interopRequireDefault(_DefinedTag),_ber=require("./ber"),_ber2=_interopRequireDefault(_ber),TlvList=function(){function e(t,r,n){_classCallCheck(this,e),this.values=[],t&&this._parse(t,r,n)}return _createClass(e,[{key:"_parse",value:function(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:e.length-t,n=t;n<t+r;){var a=_ber2.default.readTag(e,n),l=n;n+=a.length,lengthCheck(n,t,r,"Invalid TLV - tag ends buffer.");var u=_ber2.default.readLength(e,n);n+=u.lengthOfEncoding,lengthCheck(n,t,r,"Invalid TLV - tag value length ends buffer.");var i=void 0;u.lengthValue&&(lengthCheck(n+u.lengthValue,t,r,"Invalid TLV - value overruns buffer."),i=e.slice(n,n+u.lengthValue),n+=u.lengthValue);var f=n;if(i){var o=_DefinedTag2.default.findTags(a.number),v=!0,s=!1,h=void 0;try{for(var d,c=o[Symbol.iterator]();!(v=(d=c.next()).done);v=!0){var g=d.value,y=new _Tlv2.default(g,i);y.buffStart=l,y.buffEnd=f,this.values.push(y)}}catch(e){s=!0,h=e}finally{try{!v&&c.return&&c.return()}finally{if(s)throw h}}}}}},{key:"add",value:function(e,t){if(e instanceof _DefinedTag2.default)this.values.push(new _Tlv2.default(e,t));else if(e instanceof _Tlv2.default)this.values.push(e);else{if(!Buffer.isBuffer(t))throw new Error("Add must be called with a tag and value, or a tag number and buffer.");this.values.push(new _Tlv2.default(_DefinedTag2.default.findTag(e),t))}}},{key:"find",value:function(e,t){var r=t||0,n=e.number||e,a=!0,l=!1,u=void 0;try{for(var i,f=this.values[Symbol.iterator]();!(a=(i=f.next()).done);a=!0){var o=i.value;if(o.tagNumber===n){if(!(r>0))return o;r--}}}catch(e){l=!0,u=e}finally{try{!a&&f.return&&f.return()}finally{if(l)throw u}}return null}},{key:"toBytes",value:function(){var e=[],t=!0,r=!1,n=void 0;try{for(var a,l=this.values[Symbol.iterator]();!(t=(a=l.next()).done);t=!0){var u=a.value;e.push(u.toBytes())}}catch(e){r=!0,n=e}finally{try{!t&&l.return&&l.return()}finally{if(r)throw n}}return Buffer.concat(e)}},{key:"toString",value:function(e){var t=["TLV:"],r=!0,n=!1,a=void 0;try{for(var l,u=this.values[Symbol.iterator]();!(r=(l=u.next()).done);r=!0){var i=l.value;Buffer.isBuffer(i)?t.push(i.toString("hex")):t.push(i.toString(e))}}catch(e){n=!0,a=e}finally{try{!r&&u.return&&u.return()}finally{if(n)throw a}}return t.join("\n")}},{key:"length",get:function(){return this.values.length}}]),e}();exports.default=TlvList;

}).call(this,require("buffer").Buffer)
},{"./DefinedTag":360,"./Tlv":362,"./ber":367,"buffer":96}],364:[function(require,module,exports){
arguments[4][274][0].apply(exports,arguments)
},{"./TlvList":363,"buffer":96,"dup":274}],365:[function(require,module,exports){
(function (Buffer){
"use strict";function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),ApduCommand=function(){function t(e,n,i,a,s,r,u){_classCallCheck(this,t);var h=this.longLength?5:4;this.preamble=new Buffer(h),this.longLength=u,s?Buffer.isBuffer(s)?this.data=[s]:this.data=s:this.data=null,this.le=0,Buffer.isBuffer(e)||(this.commandClass=e,this.instruction=n,this.p1=i||0,this.p2=a||0,void 0!==r&&(this.le=r))}return _createClass(t,[{key:"expectNoBytes",value:function(){this.le=null}},{key:"appendHex",value:function(t){this.data=this.data||[],this.data.push(new Buffer(t,"hex"))}},{key:"appendBytes",value:function(t){this.data=this.data||[],this.data.push(t)}},{key:"appendString",value:function(t){this.data=this.data||[],this.data.push(new Buffer(t,"utf8"))}},{key:"toBytes",value:function(){var t=[this.preamble],e=0;if(this.data){if(t.push(null),this.data.forEach(function(n){e+=n.length,t.push(n)}),e>65535)throw new Error("ApduCommand buffer is too long");t[1]=e>255?new Buffer([e>>8,255&e]):this.longLength?new Buffer([0,e]):new Buffer([e])}if(null!==this.le){if(this.le>65535)throw new Error("Le value must be between 0 and 65535");this.le<=256?t.push(new Buffer([255&this.le])):(1===t.length&&t.push(new Buffer([0])),t.push(new Buffer([this.le>>8,255&this.le])))}return Buffer.concat(t)}},{key:"toString",value:function(){var t=["ApduCommand class 0x",this.commandClass.toString(16),", instruction 0x",this.instruction.toString(16),", P1 0x",this.p1.toString(16),", P2 0x",this.p2.toString(16),"\n"];if(this.data&&this.data.length){var e=Buffer.concat(this.data);t.push(e.length+" bytes: "+e.toString("hex"))}return t.join("")}},{key:"commandClass",get:function(){return this.preamble[0]},set:function(t){this.preamble.writeUInt8(t,0)}},{key:"instruction",get:function(){return this.preamble[1]},set:function(t){this.preamble.writeUInt8(t,1)}},{key:"p1",get:function(){return this.preamble[2]},set:function(t){this.preamble.writeUInt8(t,2)}},{key:"p2",get:function(){return this.preamble[3]},set:function(t){this.preamble.writeUInt8(t,3)}}]),t}();exports.default=ApduCommand;

}).call(this,require("buffer").Buffer)
},{"buffer":96}],366:[function(require,module,exports){
(function (Buffer){
"use strict";function _interopRequireDefault(t){return t&&t.__esModule?t:{default:t}}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function t(t,e){for(var s=0;s<e.length;s++){var i=e[s];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,s,i){return s&&t(e.prototype,s),i&&t(e,i),e}}(),_ber=require("../ber"),_ber2=_interopRequireDefault(_ber),_TlvList=require("../TlvList"),_TlvList2=_interopRequireDefault(_TlvList),ApduResponse=function(){function t(e){var s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:e.length-s,n=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(_classCallCheck(this,t),Buffer.isBuffer(e)){if(this.sw1=e[s+i-2],this.sw2=e[s+i-1],2===i)return;if(n)this.data=e.slice(s,s+i-2);else{this.template=e[s];var r=_ber2.default.readLength(e,s+1);if(r.lengthValue!==i-3-r.lengthOfEncoding){var l=i-3-r.lengthOfEncoding,a="Invalid ApduResponse length "+r.lengthValue+" vs buffer length "+l;throw new Error(a)}this.data=e.slice(s+1+r.lengthOfEncoding,s+i-2)}}else{if(!(e instanceof _TlvList2.default))throw new Error("You must provide a Buffer or TlvList to create an APDU response.");this._tlvs=e,this.data=e.toBytes(),this.sw1=144,this.sw2=0}}return _createClass(t,[{key:"toString",value:function(t){var e=[];return this.template&&e.push("Template: 0x"+this.template.toString(16)),this.data&&e.push("Data ("+this.data.length+" bytes): 0x"+this.data.toString("hex")),(this._tlvs||t&&this.tlvs)&&e.push(this.tlvs.toString(t)),e.push("SW1: 0x"+this.sw1.toString(16)+" SW2: 0x"+this.sw2.toString(16)),e.join("\n")}},{key:"isSuccess",get:function(){return 144===this.sw1&&0===this.sw2}},{key:"tlvs",get:function(){return this._tlvs||(this._tlvs=new _TlvList2.default(this.data)),this._tlvs}}]),t}();exports.default=ApduResponse;

}).call(this,{"isBuffer":require("../../../../is-buffer/index.js")})
},{"../../../../is-buffer/index.js":202,"../TlvList":363,"../ber":367}],367:[function(require,module,exports){
(function (Buffer){
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default={readTag:function(e,r){for(var n={length:1,number:0},t=r;t<e.length;t++,n.length++){var f=255&e[t];if(n.number=(n.number<<8)+f,t===r&&31!=(31&f))break;if(t!==r&&0==(128&f))break}return n},encodeTag:function(e){for(var r=e.number||e,n=0,t=0;r>0;)t++,n=(n<<8)+(255&r),r>>=8;for(var f=new Buffer(t),l=0;n>0;)f.writeUInt8(255&n,l++),n>>=8;return f},readLength:function(e,r){var n={lengthOfEncoding:1,lengthValue:0},t=r,f=e[t++];if(128==(128&f)){var l=127&f;if(t+l>e.length)throw new Error("Malformed length value - not enough bytes.");n.lengthOfEncoding=l+1;for(var o=0;o<l;o++)n.lengthValue=(n.lengthValue<<8)+e[t++];if(n.lengthValue<0)throw new Error("Overflow in length value.")}else n.lengthValue=f;return n},encodeLength:function(e){if(e>65535)throw new Error("Invalid length for tlv format: "+e);var r=void 0;return e<=127?(r=new Buffer(1),r.writeUInt8(e,0)):e>255?(r=new Buffer(3),r.writeUInt8(130,0),r.writeUInt8(e>>8&255,1),r.writeUInt8(255&e,2)):(r=new Buffer(2),r.writeUInt8(129,0),r.writeUInt8(255&e,1)),r}};
}).call(this,require("buffer").Buffer)
},{"buffer":96}],368:[function(require,module,exports){
"function"==typeof Object.create?module.exports=function(t,e){t.super_=e,t.prototype=Object.create(e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}})}:module.exports=function(t,e){t.super_=e;var o=function(){};o.prototype=e.prototype,t.prototype=new o,t.prototype.constructor=t};

},{}],369:[function(require,module,exports){
module.exports=function(o){return o&&"object"==typeof o&&"function"==typeof o.copy&&"function"==typeof o.fill&&"function"==typeof o.readUInt8};

},{}],370:[function(require,module,exports){
(function (process,global){
function inspect(e,r){var t={seen:[],stylize:stylizeNoColor};return arguments.length>=3&&(t.depth=arguments[2]),arguments.length>=4&&(t.colors=arguments[3]),isBoolean(r)?t.showHidden=r:r&&exports._extend(t,r),isUndefined(t.showHidden)&&(t.showHidden=!1),isUndefined(t.depth)&&(t.depth=2),isUndefined(t.colors)&&(t.colors=!1),isUndefined(t.customInspect)&&(t.customInspect=!0),t.colors&&(t.stylize=stylizeWithColor),formatValue(t,e,t.depth)}function stylizeWithColor(e,r){var t=inspect.styles[r];return t?"["+inspect.colors[t][0]+"m"+e+"["+inspect.colors[t][1]+"m":e}function stylizeNoColor(e,r){return e}function arrayToHash(e){var r={};return e.forEach(function(e,t){r[e]=!0}),r}function formatValue(e,r,t){if(e.customInspect&&r&&isFunction(r.inspect)&&r.inspect!==exports.inspect&&(!r.constructor||r.constructor.prototype!==r)){var n=r.inspect(t,e);return isString(n)||(n=formatValue(e,n,t)),n}var i=formatPrimitive(e,r);if(i)return i;var o=Object.keys(r),s=arrayToHash(o);if(e.showHidden&&(o=Object.getOwnPropertyNames(r)),isError(r)&&(o.indexOf("message")>=0||o.indexOf("description")>=0))return formatError(r);if(0===o.length){if(isFunction(r)){var u=r.name?": "+r.name:"";return e.stylize("[Function"+u+"]","special")}if(isRegExp(r))return e.stylize(RegExp.prototype.toString.call(r),"regexp");if(isDate(r))return e.stylize(Date.prototype.toString.call(r),"date");if(isError(r))return formatError(r)}var c="",a=!1,l=["{","}"];if(isArray(r)&&(a=!0,l=["[","]"]),isFunction(r)){c=" [Function"+(r.name?": "+r.name:"")+"]"}if(isRegExp(r)&&(c=" "+RegExp.prototype.toString.call(r)),isDate(r)&&(c=" "+Date.prototype.toUTCString.call(r)),isError(r)&&(c=" "+formatError(r)),0===o.length&&(!a||0==r.length))return l[0]+c+l[1];if(t<0)return isRegExp(r)?e.stylize(RegExp.prototype.toString.call(r),"regexp"):e.stylize("[Object]","special");e.seen.push(r);var p;return p=a?formatArray(e,r,t,s,o):o.map(function(n){return formatProperty(e,r,t,s,n,a)}),e.seen.pop(),reduceToSingleString(p,c,l)}function formatPrimitive(e,r){if(isUndefined(r))return e.stylize("undefined","undefined");if(isString(r)){var t="'"+JSON.stringify(r).replace(/^"|"$/g,"").replace(/'/g,"\\'").replace(/\\"/g,'"')+"'";return e.stylize(t,"string")}return isNumber(r)?e.stylize(""+r,"number"):isBoolean(r)?e.stylize(""+r,"boolean"):isNull(r)?e.stylize("null","null"):void 0}function formatError(e){return"["+Error.prototype.toString.call(e)+"]"}function formatArray(e,r,t,n,i){for(var o=[],s=0,u=r.length;s<u;++s)hasOwnProperty(r,String(s))?o.push(formatProperty(e,r,t,n,String(s),!0)):o.push("");return i.forEach(function(i){i.match(/^\d+$/)||o.push(formatProperty(e,r,t,n,i,!0))}),o}function formatProperty(e,r,t,n,i,o){var s,u,c;if(c=Object.getOwnPropertyDescriptor(r,i)||{value:r[i]},c.get?u=c.set?e.stylize("[Getter/Setter]","special"):e.stylize("[Getter]","special"):c.set&&(u=e.stylize("[Setter]","special")),hasOwnProperty(n,i)||(s="["+i+"]"),u||(e.seen.indexOf(c.value)<0?(u=isNull(t)?formatValue(e,c.value,null):formatValue(e,c.value,t-1),u.indexOf("\n")>-1&&(u=o?u.split("\n").map(function(e){return"  "+e}).join("\n").substr(2):"\n"+u.split("\n").map(function(e){return"   "+e}).join("\n"))):u=e.stylize("[Circular]","special")),isUndefined(s)){if(o&&i.match(/^\d+$/))return u;s=JSON.stringify(""+i),s.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)?(s=s.substr(1,s.length-2),s=e.stylize(s,"name")):(s=s.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'"),s=e.stylize(s,"string"))}return s+": "+u}function reduceToSingleString(e,r,t){var n=0;return e.reduce(function(e,r){return n++,r.indexOf("\n")>=0&&n++,e+r.replace(/\u001b\[\d\d?m/g,"").length+1},0)>60?t[0]+(""===r?"":r+"\n ")+" "+e.join(",\n  ")+" "+t[1]:t[0]+r+" "+e.join(", ")+" "+t[1]}function isArray(e){return Array.isArray(e)}function isBoolean(e){return"boolean"==typeof e}function isNull(e){return null===e}function isNullOrUndefined(e){return null==e}function isNumber(e){return"number"==typeof e}function isString(e){return"string"==typeof e}function isSymbol(e){return"symbol"==typeof e}function isUndefined(e){return void 0===e}function isRegExp(e){return isObject(e)&&"[object RegExp]"===objectToString(e)}function isObject(e){return"object"==typeof e&&null!==e}function isDate(e){return isObject(e)&&"[object Date]"===objectToString(e)}function isError(e){return isObject(e)&&("[object Error]"===objectToString(e)||e instanceof Error)}function isFunction(e){return"function"==typeof e}function isPrimitive(e){return null===e||"boolean"==typeof e||"number"==typeof e||"string"==typeof e||"symbol"==typeof e||void 0===e}function objectToString(e){return Object.prototype.toString.call(e)}function pad(e){return e<10?"0"+e.toString(10):e.toString(10)}function timestamp(){var e=new Date,r=[pad(e.getHours()),pad(e.getMinutes()),pad(e.getSeconds())].join(":");return[e.getDate(),months[e.getMonth()],r].join(" ")}function hasOwnProperty(e,r){return Object.prototype.hasOwnProperty.call(e,r)}var formatRegExp=/%[sdj%]/g;exports.format=function(e){if(!isString(e)){for(var r=[],t=0;t<arguments.length;t++)r.push(inspect(arguments[t]));return r.join(" ")}for(var t=1,n=arguments,i=n.length,o=String(e).replace(formatRegExp,function(e){if("%%"===e)return"%";if(t>=i)return e;switch(e){case"%s":return String(n[t++]);case"%d":return Number(n[t++]);case"%j":try{return JSON.stringify(n[t++])}catch(e){return"[Circular]"}default:return e}}),s=n[t];t<i;s=n[++t])isNull(s)||!isObject(s)?o+=" "+s:o+=" "+inspect(s);return o},exports.deprecate=function(e,r){function t(){if(!n){if(process.throwDeprecation)throw new Error(r);process.traceDeprecation?console.trace(r):console.error(r),n=!0}return e.apply(this,arguments)}if(isUndefined(global.process))return function(){return exports.deprecate(e,r).apply(this,arguments)};if(!0===process.noDeprecation)return e;var n=!1;return t};var debugs={},debugEnviron;exports.debuglog=function(e){if(isUndefined(debugEnviron)&&(debugEnviron=process.env.NODE_DEBUG||""),e=e.toUpperCase(),!debugs[e])if(new RegExp("\\b"+e+"\\b","i").test(debugEnviron)){var r=process.pid;debugs[e]=function(){var t=exports.format.apply(exports,arguments);console.error("%s %d: %s",e,r,t)}}else debugs[e]=function(){};return debugs[e]},exports.inspect=inspect,inspect.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]},inspect.styles={special:"cyan",number:"yellow",boolean:"yellow",undefined:"grey",null:"bold",string:"green",date:"magenta",regexp:"red"},exports.isArray=isArray,exports.isBoolean=isBoolean,exports.isNull=isNull,exports.isNullOrUndefined=isNullOrUndefined,exports.isNumber=isNumber,exports.isString=isString,exports.isSymbol=isSymbol,exports.isUndefined=isUndefined,exports.isRegExp=isRegExp,exports.isObject=isObject,exports.isDate=isDate,exports.isError=isError,exports.isFunction=isFunction,exports.isPrimitive=isPrimitive,exports.isBuffer=require("./support/isBuffer");var months=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];exports.log=function(){console.log("%s - %s",timestamp(),exports.format.apply(exports,arguments))},exports.inherits=require("inherits"),exports._extend=function(e,r){if(!r||!isObject(r))return e;for(var t=Object.keys(r),n=t.length;n--;)e[t[n]]=r[t[n]];return e};
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./support/isBuffer":369,"_process":320,"inherits":368}],371:[function(require,module,exports){
(function (global){
!function(){"use strict";function n(n){return"object"==typeof n}function t(n){return"function"==typeof n}function e(n,t){return n instanceof t}function r(n){return e(n,E)}function o(n,t,e){if(!t(n))throw a(e)}function u(){try{return C.apply(b,arguments)}catch(n){return N.e=n,N}}function i(n,t){return C=n,b=t,u}function c(n,t){function e(){for(var e=0;e<o;)t(r[e],r[e+1]),r[e++]=x,r[e++]=x;o=0,r.length>n&&(r.length=n)}var r=Y(n),o=0;return function(n,t){r[o++]=n,r[o++]=t,2===o&&P.nextTick(e)}}function f(n,r){var o,u,c,f,s=0;if(!n)throw a(D);var l=n[P[A][U]];if(t(l))u=l.call(n);else{if(!t(n.next)){if(e(n,Y)){for(o=n.length;s<o;)r(n[s],s++);return s}throw a(D)}u=n}for(;!(c=u.next()).done;)if((f=i(r)(c.value,s++))===N)throw t(u[$])&&u[$](),f.e;return s}function a(n){return new TypeError(n)}function s(n){return(n?"":G)+((new E).stack||"")}function l(n,t){var e="on"+n.toLowerCase(),r=R[e];F&&F.listeners(n).length?n===M?F.emit(n,t._v,t):F.emit(n,t):r?r({reason:t._v,promise:t}):P[n](t._v,t)}function _(n){return n&&n._Yaku}function v(n){if(_(n))return new n(O);var e,r,u;return e=new n(function(n,t){if(e)throw a();r=n,u=t}),o(r,t),o(u,t),e}function h(n,t){return function(e){S&&(n[B]=s(!0)),t===I?g(n,e):w(n,t,e)}}function p(n,e,r,o){return t(r)&&(e._onFulfilled=r),t(o)&&(n[q]&&l(K,n),e._onRejected=o),S&&(e._pre=n),n[n._pCount++]=e,n._s!==L&&Q(n,e),e}function d(n){if(n._umark)return!0;n._umark=!0;for(var t,e=0,r=n._pCount;e<r;)if(t=n[e++],t._onRejected||d(t))return!0}function m(n,t){function e(n){return n.replace(/^\s+|\s+$/g,"")}function o(n){return u.push(e(n))}var u=[];return S&&t[z]&&(t[B]&&o(t[B]),function n(t){t&&(n(t._next),o(t[z]),n(t._pre))}(t)),(r(n)?n.stack:n)+("\n"+u.join("\n")).replace(/^.+\/node_modules\/yaku\/.+\n?/gm,"")}function k(n,t){return n(t)}function w(n,t,e){var o,u=0,i=n._pCount;if(n._s===L)for(n._s=t,n._v=e,t===H&&(S&&r(e)&&(e.longStack=m(e,n)),V(n));u<i;)o=n[u++],o._s===L&&Q(n,o);return n}function g(e,r){if(r===e&&r)return w(e,H,a(J)),e;if(r!==T&&(t(r)||n(r))){var o=i(j)(r);if(o===N)return w(e,H,o.e),e;t(o)?(S&&_(r)&&(e._next=r),_(r)?y(e,r,o):P.nextTick(function(){y(e,r,o)})):w(e,I,r)}else w(e,I,r);return e}function j(n){return n.then}function y(n,t,e){var r=i(e,t)(function(e){t&&(t=T,g(n,e))},function(e){t&&(t=T,w(n,H,e))});r===N&&t&&(w(n,H,r.e),t=T)}var x,C,b,T=null,R="object"==typeof global?global:window,S=!1,F=R.process,Y=Array,E=Error,H=0,I=1,L=2,A="Symbol",U="iterator",$="return",q="_uh",z="_pt",B="_st",D="Invalid argument",G="\nFrom previous ",J="Chaining cycle detected for promise",K="rejectionHandled",M="unhandledRejection",N={e:T},O=function(){},P=module.exports=function(e){var r,o=this;if(!n(o)||o._s!==x)throw a("Invalid this");if(o._s=L,S&&(o[z]=s()),e!==O){if(!t(e))throw a(D);r=i(e)(h(o,I),h(o,H)),r===N&&w(o,H,r.e)}};P.default=P,function(n,t){for(var e in t)n.prototype[e]=t[e]}(P,{then:function(n,t){return p(this,v(P.speciesConstructor(this,P)),n,t)},catch:function(n){return this.then(x,n)},_pCount:0,_pre:T,_Yaku:1}),P.resolve=function(n){return _(n)?n:g(v(this),n)},P.reject=function(n){return w(v(this),H,n)},P.race=function(n){var t=this,e=v(t),r=function(n){w(e,I,n)},o=function(n){w(e,H,n)},u=i(f)(n,function(n){t.resolve(n).then(r,o)});return u===N?t.reject(u.e):e},P.all=function(n){function t(n){w(o,H,n)}var e,r=this,o=v(r),u=[];return(e=i(f)(n,function(n,i){r.resolve(n).then(function(n){u[i]=n,--e||w(o,I,u)},t)}))===N?r.reject(e.e):(e||w(o,I,[]),o)},P.Symbol=R[A]||{},P.speciesConstructor=function(n,t){var e=n.constructor;return e?e[P[A].species]||e:t},P.unhandledRejection=function(n,t){var e=R.console;e&&e.error("Uncaught (in promise)",m(n,t))},P.rejectionHandled=O,P.enableLongStackTrace=function(){S=!0},P.nextTick=F?F.nextTick:function(n){setTimeout(n)},P._Yaku=1;var Q=c(999,function(n,t){var e,r;return(r=n._s?t._onFulfilled:t._onRejected)===x?void w(t,n._s,n._v):(e=i(k)(r,n._v))===N?void w(t,H,e.e):void g(t,e)}),V=c(9,function(n){d(n)||(n[q]=1,l(M,n))})}();

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],372:[function(require,module,exports){
module.exports={
  "name": "retail-sdk",
  "version": "3.0.4",
  "description": "A cross platform sdk for applications using PayPal Retail services, such as card acceptance and checkin",
  "main": "index.js",
  "pre-commit": [
    "lint"
  ],
  "pre-push": [
    "test"
  ],
  "scripts": {
    "test": "npm run test2 && npm run test1",
    "test1": "mocha --timeout 10000 --require test/testSetup --recursive ./test/mocha/**",
    "test2": "tape --require ./test/testSetup test/tape/* | tap-diff",
    "ci-test": "JUNIT_REPORT_PATH=report.xml JUNIT_REPORT_STACK=1 mocha --timeout 5000 --require test/testSetup --reporter mocha-jenkins-reporter \"test/**/*.js\"",
    "ci-cover": "istanbul cover _mocha -- --timeout 5000 --require test/testSetup --reporter tap \"test/**/*.js\" > test.tap && istanbul report clover",
    "ci-lint": "eslint js",
    "lint": "eslint js test/tape",
    "code-gen": "gulp develop"
  },
  "repository": {
    "type": "git",
    "url": "git@github.paypal.com:RetailSDK-NewGen/retail-sdk.git"
  },
  "keywords": [
    "retail",
    "paypal_here",
    "emv",
    "sdk"
  ],
  "publishConfig": {
    "registry": "http://npm.paypal.com"
  },
  "author": "PayPal",
  "license": "UNLICENSED",
  "dependencies": {
    "async": "^1.5.0",
    "babel-regenerator-runtime": "^6.5.0",
    "babelify": "^7.2.0",
    "bignumber.js": "2.3.0",
    "browserify": "^13.0.0",
    "commander": "^2.7.1",
    "core-js": "^2.1.0",
    "dustjs-helpers": "^1.6.2",
    "dustjs-linkedin": "^2.6.2",
    "es6-template-strings": "^2.0.0",
    "folderify": "git://github.com/GriffinSchneider/folderify.git#d70cfae87fcafa0de48a370837a73ac5b0e6d9d9",
    "fs-extra": "^0.26.0",
    "glob": "^7.0.0",
    "gulp": "^3.9.0",
    "gulp-concat": "^2.6.0",
    "gulp-jshint": "^1.10.0",
    "gulp-rename": "^1.2.2",
    "gulp-sourcemaps": "^1.5.1",
    "jshint": "2.8.0",
    "l10n-manticore": "^1.0.3",
    "lodash": "^3.6.0",
    "machina": "^2.0.0",
    "manticore": "^1.3.0",
    "manticore-browser": "^1.0.0",
    "manticore-log": "^2.0.0",
    "manticore-paypalerror": "^3.2.0",
    "manticore-util": "^2.4.0",
    "md5": "^2.0.0",
    "miura-emv": "^17.0.0",
    "moment": "^2.9.0",
    "nocycle": "^1.1.0",
    "paypal-invoicing": "^10.0.1",
    "paypalrest-manticore": "^4.3.1",
    "qs": "^6.0.0",
    "readline-sync": "^1.0.0",
    "retail-page-tracker": "^1.4.0",
    "retail-payment-device": "^27.2.0",
    "rimraf": "^2.4.0",
    "tlvlib": "3.5.0",
    "uglifyify": "^3.0.1",
    "vinyl-transform": "^1.0.0",
    "wreck": "^5.4.0",
    "yaku": "^0.13.8"
  },
  "devDependencies": {
    "babel-cli": "^6.3.17",
    "babel-core": "^6.2.1",
    "babel-eslint": "^7.0.0",
    "babel-plugin-syntax-async-functions": "^6.1.18",
    "babel-plugin-transform-es2015-spread": "^6.6.5",
    "babel-plugin-transform-regenerator": "^6.6.0",
    "babel-polyfill": "^6.2.0",
    "babel-preset-es2015": "^6.1.18",
    "babel-preset-es2015-loose": "^7.0.0",
    "babel-register": "^6.7.2",
    "bluebird": "^3.1.1",
    "chai": "^3.1.0",
    "eslint": "3.19.0",
    "eslint-config-airbnb-base": "^9.0.0",
    "eslint-plugin-import": "^2.0.1",
    "eslint-plugin-react": "^4.2.1",
    "estraverse-fb": "^1.3.1",
    "gulp": "^3.9.0",
    "gulp-base64-encode": "^1.0.1",
    "gulp-jshint": "^1.11.1",
    "gulp-run": "^1.7.1",
    "istanbul": "^0.3.15",
    "manticore-gen": "4.1.0",
    "mocha": "^2.2.4",
    "mocha-jenkins-reporter": "^0.1.8",
    "mockery": "^1.4.0",
    "pre-commit": "^1.1.3",
    "pre-push": "^0.1.1",
    "proxyquire": "^1.7.10",
    "sinon": "^1.17.4",
    "sinon-chai": "^2.8.0",
    "stream-browserify": "^2.0.1",
    "tap-diff": "^0.1.1",
    "tape": "^4.2.2"
  }
}

},{}],373:[function(require,module,exports){
module.exports={
  "VERSION":"1.0",
  "US":{
    "MCC_CODES":{
      "4121":"*",
      "5812":"*",
      "5813":"*",
      "5814":"*",
      "7230":"*",
      "7298":"*",
      "4411":"*",
      "7519":"*",
      "7011":"*",
      "7512":"*"
    },
    "CONTACTLESS_LIMIT":"10000"
  },
  "GB":{
    "CONTACTLESS_LIMIT":"20"
  },
  "AU":{
    "CONTACTLESS_LIMIT":"*"
  }
}
},{}]},{},[41]);
