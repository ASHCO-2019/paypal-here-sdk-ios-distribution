/**
 * PPRetailSDK.h
 *
 * DO NOT EDIT THIS FILE! IT IS AUTOMATICALLY GENERATED AND SHOULD NOT BE CHECKED IN.
 * Generated from: js/sdk.js
 *
 * 
 */

#import "PayPalRetailSDKTypeDefs.h"
#import "PPRetailObject.h"

@class PPRetailSDK;
@class PPRetailError;
@class PPRetailAccountSummary;
@class PPRetailAccountSummarySection;
@class PPRetailInvoiceAddress;
@class PPRetailInvoiceAttachment;
@class PPRetailInvoiceBillingInfo;
@class PPRetailInvoiceCCInfo;
@class PPRetailCountries;
@class PPRetailCountry;
@class PPRetailInvoice;
@class PPRetailInvoiceActions;
@class PPRetailInvoiceListRequest;
@class PPRetailInvoiceListResponse;
@class PPRetailInvoiceTemplatesResponse;
@class PPRetailInvoicingService;
@class PPRetailInvoiceItem;
@class PPRetailInvoiceMerchantInfo;
@class PPRetailInvoiceNotification;
@class PPRetailInvoicePayment;
@class PPRetailInvoicePaymentInfo;
@class PPRetailInvoicePaymentTerm;
@class PPRetailInvoiceRefund;
@class PPRetailInvoiceRefundInfo;
@class PPRetailInvoiceSearchRequest;
@class PPRetailInvoiceShippingInfo;
@class PPRetailInvoiceTemplate;
@class PPRetailMerchant;
@class PPRetailTransactionContext;
@class PPRetailSignatureReceiver;
@class PPRetailCard;
@class PPRetailBatteryInfo;
@class PPRetailMagneticCard;
@class PPRetailPaymentDevice;
@class PPRetailEmvDevice;
@class PPRetailDeviceUpdate;
@class PPRetailDeviceOperationResultHandler;
@class PPRetailVirtualPaymentDevice;
@class PPRetailPayer;
@class PPRetailTransactionRecord;

/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/
/**
 * The PayPal Here SDK object is the main entry point for all SDK operations. Because we provide
 * native-specific versions of the highest level interface, this class is essentially used
 * as a helper for binding top level events (such as a new card reader) to the native partner objects.
 */
@interface PPRetailSDK : PPRetailObject






    /**
     * Create a transaction context for an invoice
     */
    -(PPRetailTransactionContext*)createTransaction:(PPRetailInvoice*)invoice;

    /**
     * Log a message via the Javascript logging framework (called by native to get all the side benefits of JS logging, like CAL)
     */
    -(void)logViaJs:(NSString*)level component:(NSString*)component message:(NSString*)message extraData:(NSDictionary*)extraData;

    /**
     * Register a PaymentDevice and notify listeners of the new device.
     */
    -(void)discoveredPaymentDevice:(PPRetailPaymentDevice*)pd;




    /**
     * Add a listener for the deviceDiscovered event
     * @returns PPRetailDeviceDiscoveredSignal an object that can be used to remove the listener when
     * you're done with it.
     */
    -(PPRetailDeviceDiscoveredSignal)addDeviceDiscoveredListener:(PPRetailDeviceDiscoveredEvent)listener;

    /**
     * Remove a listener for the deviceDiscovered event given the signal object that was returned from addDeviceDiscoveredListener
     */
    -(void)removeDeviceDiscoveredListener:(PPRetailDeviceDiscoveredSignal)listenerToken;


@end
