/**
 * PPRetailInvoiceItem.h
 *
 * DO NOT EDIT THIS FILE! IT IS AUTOMATICALLY GENERATED AND SHOULD NOT BE CHECKED IN.
 * Generated from: node_modules/paypal-invoicing/lib/Item.js
 *
 * 
 */

#import "PayPalRetailSDKTypeDefs.h"
#import "PPRetailObject.h"

@class PPRetailSDK;
@class PPRetailError;
@class PPRetailAccountSummary;
@class PPRetailAccountSummarySection;
@class PPRetailInvoiceAddress;
@class PPRetailInvoiceAttachment;
@class PPRetailInvoiceBillingInfo;
@class PPRetailInvoiceCCInfo;
@class PPRetailCountries;
@class PPRetailCountry;
@class PPRetailInvoice;
@class PPRetailInvoiceActions;
@class PPRetailInvoiceListRequest;
@class PPRetailInvoiceListResponse;
@class PPRetailInvoiceTemplatesResponse;
@class PPRetailInvoicingService;
@class PPRetailInvoiceItem;
@class PPRetailInvoiceMerchantInfo;
@class PPRetailInvoiceNotification;
@class PPRetailInvoicePayment;
@class PPRetailInvoicePaymentInfo;
@class PPRetailInvoicePaymentTerm;
@class PPRetailInvoiceRefund;
@class PPRetailInvoiceRefundInfo;
@class PPRetailInvoiceSearchRequest;
@class PPRetailInvoiceShippingInfo;
@class PPRetailInvoiceTemplate;
@class PPRetailMerchant;
@class PPRetailTransactionContext;
@class PPRetailSignatureReceiver;
@class PPRetailCard;
@class PPRetailBatteryInfo;
@class PPRetailMagneticCard;
@class PPRetailPaymentDevice;
@class PPRetailEmvDevice;
@class PPRetailDeviceUpdate;
@class PPRetailDeviceOperationResultHandler;
@class PPRetailVirtualPaymentDevice;
@class PPRetailPayer;
@class PPRetailTransactionRecord;

/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/
/**
 * A line item on an invoice. Can be positive, negative, or zero total/unit price.
 * See https://cms.paypal.com/cms_content/US/en_US/files/developer/PP_InvoicingAPIGuide.pdf
 * for details on field length restrictions and formats.
 */
@interface PPRetailInvoiceItem : PPRetailObject

    /**
    * The name of this item
    */
    @property (nonatomic,strong) NSString* name;
    /**
    * A description for this line item
    */
    @property (nonatomic,strong) NSString* itemDescription;
    /**
    * The quantity of this item - up to three decimals
    */
    @property (nonatomic,strong) NSDecimalNumber* quantity;
    /**
    * The price of 1 unit of this item
    */
    @property (nonatomic,strong) NSDecimalNumber* unitPrice;
    /**
    * A unique identifier for this item - not currently saved to the server but used for local
 * uniqueness such that one line item per itemId.detailId pair will be stored on an invoice @readonly
    */
    @property (nonatomic,strong,readonly) NSString* itemId;
    /**
    * A secondary unique identifier (e.g. for item options or sizes, or to create
 * multiple items on the same invoice with a single detailId) @readonly
    */
    @property (nonatomic,strong,readonly) NSString* detailId;
    /**
    * The name for the tax rate applied to this item, if any
    */
    @property (nonatomic,strong) NSString* taxName;
    /**
    * The tax rate to be applied to this item. If non-zero, the taxName must also be set.
    */
    @property (nonatomic,strong) NSDecimalNumber* taxRate;
    /**
    * A percentage discount for this line item
    */
    @property (nonatomic,strong) NSDecimalNumber* discountPercentage;
    /**
    * A flat amount discount for this line item
    */
    @property (nonatomic,strong) NSDecimalNumber* discountAmount;
    /**
    * Date on which the item or service was provided
    */
    @property (nonatomic,strong) NSDate* date;
    /**
    * Image url of the item. 4000 characters max.
    */
    @property (nonatomic,strong) NSString* imageURL;
    /**
    * Unit of measure of the item being invoiced.
    */
    @property (nonatomic,strong) NSString* unitOfMeasure;

    -(instancetype)initWithName:(NSString*)name quantity:(NSDecimalNumber*)quantity unitPrice:(NSDecimalNumber*)unitPrice itemId:(NSString*)itemId detailId:(NSString*)detailId;
    - (instancetype)init NS_UNAVAILABLE;
    + (instancetype)new NS_UNAVAILABLE;







    /**
     * Add a listener for the amountChanged event
     * @returns PPRetailAmountChangedSignal an object that can be used to remove the listener when
     * you're done with it.
     */
    -(PPRetailAmountChangedSignal)addAmountChangedListener:(PPRetailAmountChangedEvent)listener;

    /**
     * Remove a listener for the amountChanged event given the signal object that was returned from addAmountChangedListener
     */
    -(void)removeAmountChangedListener:(PPRetailAmountChangedSignal)listenerToken;


@end
