<Window x:Class="RetailSDKTestApp.Net4.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:retailSdkTestApp="clr-namespace:RetailSDKTestApp"
        Title="PayPal Retail SDK Test App (.Net 4)" Height="Auto" MinWidth="750" Width="750" BorderThickness="0">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <StackPanel Background="#FF009CDE" Grid.Row="0">
            <Grid Margin="10">
                <TextBlock x:Name="MessageTextBlock" TextWrapping="Wrap" Text="SDK Not Initialized" TextAlignment="Center" 
                       VerticalAlignment="Center" HorizontalAlignment="Stretch" Foreground="White" FontSize="12"/>
            </Grid>
        </StackPanel>
        <StackPanel Grid.Row="1" Margin="10" HorizontalAlignment="Center">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="75" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Label
                    Grid.Row="0" Grid.Column="0" VerticalAlignment="Center"
                    Content="Amount" HorizontalContentAlignment="Right" FontSize="18"/>
                <TextBox 
                    Grid.Row="0" Grid.Column="1" x:Name="AmountField" Width="200" Margin="5"
                    TextWrapping="Wrap" VerticalAlignment="Top" FontSize="24" Text="1.00" HorizontalContentAlignment="Right"
                    BorderBrush="LightGray"/>
                <Label 
                    Grid.Row="1" Grid.Column="0" VerticalAlignment="Center"
                    Content="Gratuity" HorizontalContentAlignment="Right" FontSize="18"/>
                <TextBox 
                    Grid.Row="1" Grid.Column="1" x:Name="GratuityField" Width="200" Margin="5"
                    TextWrapping="Wrap" VerticalAlignment="Top" FontSize="24" Text="0.00" HorizontalContentAlignment="Right"
                    BorderBrush="LightGray"/>
            </Grid>
        </StackPanel>
        <Grid Grid.Row="2">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                <Button 
                    x:Name="ChargeButton" Width="200" Margin="5" Padding="5"
                    Content="Charge" HorizontalAlignment="Stretch" VerticalAlignment="Top" FontSize="18" 
                    Click="BeginPayment" BorderBrush="#FF009CDE" Background="#FF009CDE" Foreground="White"/>
                <Button 
                    x:Name="RefundButton" Width="200" Margin="5" Padding="5"
                    Content="Refund" HorizontalAlignment="Stretch" VerticalAlignment="Top" FontSize="18" IsEnabled="False"
                    Click="RefundMostRecentPayment" Background="#FF009CDE" BorderBrush="#FF009CDE" Foreground="White"/>
            </StackPanel>
        </Grid>
        <Border Grid.Row="3" BorderThickness="1" BorderBrush="LightGray" Padding="15" Margin="5">
            <StackPanel Orientation="Vertical" HorizontalAlignment="Center">
                <StackPanel Orientation="Vertical" HorizontalAlignment="Center">
                    <CheckBox x:Name="AllowAutoUpdates" IsChecked="False" Checked="AutoUpdateChecked" Unchecked="AutoUpdateUnChecked" Margin="5">Automatically update connected devices</CheckBox>
                    <CheckBox x:Name="EnableCertificationMode" IsChecked="False" Margin="5">Enable Test Mode</CheckBox>
                </StackPanel>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="0 10 0 0">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="225" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Label Grid.Row="0" Grid.Column="0"
                            VerticalAlignment="Center" Content="Collect signature above (Swipe Only) : " HorizontalContentAlignment="Right" FontSize="12"/>
                        <TextBox Grid.Row="0" Grid.Column="1" Height="25"
                            x:Name="SignatureRequiredAbove" Width="100" Margin="5,5,5,0" 
                            TextWrapping="Wrap" VerticalAlignment="Top" FontSize="14" Text="50.00" HorizontalContentAlignment="Left"
                            BorderBrush="LightGray"/>
                        <Label Grid.Row="1" Grid.Column="0"
                            VerticalAlignment="Center" Content="Access token : " HorizontalContentAlignment="Right" FontSize="12"/>
                        <retailSdkTestApp:SdkTokens x:Name="SdkTokens" 
                            Grid.Row="1" Grid.Column="1"
                            Margin="10" Width="100" />
                    </Grid>
                </StackPanel>
            </StackPanel>
        </Border>
        <Border Grid.Row="4" BorderThickness="0" BorderBrush="LightGray" Padding="0" Margin="0 10 0 0">
            <DataGrid Name="ConnectedDevices" AutoGenerateColumns="False" BorderThickness="0" Background="LightGray" 
                      GridLinesVisibility="None" HeadersVisibility="Column" CanUserAddRows="False">
                <DataGrid.Resources>
                    <Style TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="FontSize" Value="15" />
                        <Setter Property="Background" Value="#E6E7E8" />
                        <Setter Property="Padding" Value="5" />
                    </Style>
                    <Style TargetType="{x:Type DataGridRow}">
                        <Setter Property="FontSize" Value="15" />
                        <Setter Property="Background" Value="White" />
                        <Setter Property="Foreground" Value="DarkGray" />
                        <Setter Property="Height" Value="30" />
                    </Style>
                    <Style TargetType="{x:Type DataGridCell}">
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="Padding" Value="15" />
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="White" />
                                <Setter Property="Foreground" Value="DarkGray" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.Resources>
                <DataGrid.Columns>
                    <DataGridTemplateColumn Width="40">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <RadioButton IsChecked="{Binding ActivePaymentDevice, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" GroupName="ActiveDevice" Margin="5"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="Device Id" IsReadOnly="True" Binding="{Binding Id}" Width="*" />
                    <DataGridTextColumn Header="Serial Number" IsReadOnly="True" Binding="{Binding SerialNumber}" Width="*" />
                    <DataGridTextColumn Width="5">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Background" Value="Yellow"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Status}" Value="Connected">
                                        <Setter Property="Background" Value="LightGreen"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Status}" Value="UpdateSuccessful">
                                        <Setter Property="Background" Value="LightGreen"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Status}" Value="UpdateFailed">
                                        <Setter Property="Background" Value="Red"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Status}" Value="ConnectionFailed">
                                        <Setter Property="Background" Value="Red"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Status}" Value="UnplugAndReplug">
                                        <Setter Property="Background" Value="Blue"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn IsReadOnly="True" Header="Status" Binding="{Binding Status}" Width="*" />
                    <DataGridTemplateColumn Width="225">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Button IsEnabled="{Binding CanToggleConnection}" Click="ToggleConnection"
                                        Width="75" Height="25" VerticalAlignment="Center" FontSize="12"
                                        Background="#FF009CDE" BorderBrush="#FF009CDE" Foreground="White" >
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Content" Value="Connect"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Status}" Value="Connected">
                                                        <Setter Property="Content" Value="Disconnect"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                    <Button IsEnabled="{Binding UpdateAvailable}"
                                        Width="55" Height="25" Content="Update" VerticalAlignment="Center" FontSize="12"
                                        Margin="5 0 0 0" Click="UpdateDevice" Background="#FF009CDE" BorderBrush="#FF009CDE" Foreground="White"/>
                                    <Button IsEnabled="{Binding CanExtractLogs}"
                                        Width="75" Height="25" Content="Device Logs" VerticalAlignment="Center" FontSize="12"
                                        Margin="5 0 0 0" Click="ExtractLogs" Background="#FF009CDE" BorderBrush="#FF009CDE" Foreground="White"/>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Border>
        <StackPanel x:Name="MerchantStatusPanel" Background="#FF009CDE" Grid.Row="5" VerticalAlignment="Bottom">
            <Grid Margin="10">
                <TextBlock x:Name="MerchantStatus" TextWrapping="Wrap" Text="Merchant not initialized" TextAlignment="Center" 
                       VerticalAlignment="Center" HorizontalAlignment="Stretch" Foreground="White" FontSize="12"/>
            </Grid>
        </StackPanel>
    </Grid>
</Window>
