/**
 * PPRetailPaymentDevice.h
 *
 * DO NOT EDIT THIS FILE! IT IS AUTOMATICALLY GENERATED AND SHOULD NOT BE CHECKED IN.
 * Generated from: node_modules/retail-payment-device/src/PaymentDevice.js
 *
 * 
 */

#import "PayPalRetailSDKTypeDefs.h"
#import "PPRetailObject.h"

@class PPRetailSDK;
@class PPRetailError;
@class PPRetailPayPalErrorInfo;
@class PPRetailAccountSummary;
@class PPRetailAccountSummarySection;
@class PPRetailInvoiceAddress;
@class PPRetailInvoiceAttachment;
@class PPRetailInvoiceBillingInfo;
@class PPRetailInvoiceCCInfo;
@class PPRetailCountries;
@class PPRetailCountry;
@class PPRetailInvoiceCustomAmount;
@class PPRetailInvoice;
@class PPRetailInvoiceActions;
@class PPRetailInvoiceListRequest;
@class PPRetailInvoiceListResponse;
@class PPRetailInvoiceMetaData;
@class PPRetailInvoiceTemplatesResponse;
@class PPRetailInvoicingService;
@class PPRetailInvoiceItem;
@class PPRetailInvoiceMerchantInfo;
@class PPRetailInvoiceNotification;
@class PPRetailInvoicePayment;
@class PPRetailInvoicePaymentTerm;
@class PPRetailInvoiceRefund;
@class PPRetailInvoiceSearchRequest;
@class PPRetailInvoiceShippingInfo;
@class PPRetailInvoiceTemplate;
@class PPRetailInvoiceTemplateSettings;
@class PPRetailMerchant;
@class PPRetailTransactionContext;
@class PPRetailSignatureReceiver;
@class PPRetailReceiptOptionsViewContent;
@class PPRetailReceiptEmailEntryViewContent;
@class PPRetailReceiptSMSEntryViewContent;
@class PPRetailReceiptViewContent;
@class PPRetailCard;
@class PPRetailBatteryInfo;
@class PPRetailMagneticCard;
@class PPRetailPaymentDevice;
@class PPRetailEmvDevice;
@class PPRetailSecureEntryOptions;
@class PPRetailNumericEntryOptions;
@class PPRetailManuallyEnteredCard;
@class PPRetailDeviceUpdate;
@class PPRetailDeviceOperationResultHandler;
@class PPRetailVirtualPaymentDevice;
@class PPRetailPayer;
@class PPRetailTransactionRecord;

/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/
/**
 * A payment device represents the abstract concept of something that can read
 * payment information from a customer. This includes card swipe readers, EMV
 * readers, barcode scanners, biometric devices we don't have yet, and DNA
 * sequencers. Ok, not so much that last bit.
 */
@interface PPRetailPaymentDevice : PPRetailObject

    /**
    * A unique identifier for the device
    */
    @property (nonatomic,strong,nullable) NSString* id;
    /**
    * A friendly name for the device
    */
    @property (nonatomic,strong,nullable) NSString* name;
    /**
    * The manufacturer of the card reader
    */
    @property (nonatomic,strong,nullable) NSString* manufacturer;
    /**
    * The serial number of the device, if available
    */
    @property (nonatomic,strong,nullable) NSString* serialNumber;
    /**
    * Status of the device battery @readonly
    */
    @property (nonatomic,strong,nullable,readonly) PPRetailBatteryInfo* batteryInfo;
    /**
    * The payment form factors
 * this device can support @readonly
    */
    @property (nonatomic,strong,nullable,readonly) NSArray* formFactors;
    /**
    * Any pending software update for
 * this device, or null if the device is current
    */
    @property (nonatomic,strong,nullable) PPRetailDeviceUpdate* pendingUpdate;

    - (instancetype _Nullable)initWithUniqueId:(NSString* _Nullable)uniqueId;
    




    /**
     * Extract logs from the device.
     */
    -(void)extractReaderLogs:(PPRetailPaymentDeviceCallbackHandler _Nullable)callback;

    /**
     * Connect to this device.
     */
    -(void)connect:(PPRetailPaymentDeviceCallbackHandler _Nullable)callback;

    /**
     * Disconnect from the device.
     */
    -(void)disconnect:(PPRetailPaymentDeviceCallbackHandler _Nullable)callback;

    /**
     * Return true if this device is connected
     */
    -(BOOL)isConnected;




    /**
     * Add a listener for the connected event
     * @returns PPRetailConnectedSignal an object that can be used to remove the listener when
     * you're done with it.
     */
    -(PPRetailConnectedSignal _Nullable)addConnectedListener:(PPRetailConnectedEvent _Nullable)listener;

    /**
     * Remove a listener for the connected event given the signal object that was returned from addConnectedListener
     */
    -(void)removeConnectedListener:(PPRetailConnectedSignal _Nullable)listenerToken;


    /**
     * Add a listener for the connectionError event
     * @returns PPRetailConnectionErrorSignal an object that can be used to remove the listener when
     * you're done with it.
     */
    -(PPRetailConnectionErrorSignal _Nullable)addConnectionErrorListener:(PPRetailConnectionErrorEvent _Nullable)listener;

    /**
     * Remove a listener for the connectionError event given the signal object that was returned from addConnectionErrorListener
     */
    -(void)removeConnectionErrorListener:(PPRetailConnectionErrorSignal _Nullable)listenerToken;


    /**
     * Add a listener for the disconnected event
     * @returns PPRetailDisconnectedSignal an object that can be used to remove the listener when
     * you're done with it.
     */
    -(PPRetailDisconnectedSignal _Nullable)addDisconnectedListener:(PPRetailDisconnectedEvent _Nullable)listener;

    /**
     * Remove a listener for the disconnected event given the signal object that was returned from addDisconnectedListener
     */
    -(void)removeDisconnectedListener:(PPRetailDisconnectedSignal _Nullable)listenerToken;


    /**
     * Add a listener for the updateRequired event
     * @returns PPRetailUpdateRequiredSignal an object that can be used to remove the listener when
     * you're done with it.
     */
    -(PPRetailUpdateRequiredSignal _Nullable)addUpdateRequiredListener:(PPRetailUpdateRequiredEvent _Nullable)listener;

    /**
     * Remove a listener for the updateRequired event given the signal object that was returned from addUpdateRequiredListener
     */
    -(void)removeUpdateRequiredListener:(PPRetailUpdateRequiredSignal _Nullable)listenerToken;


    /**
     * Add a listener for the cardRemoved event
     * @returns PPRetailCardRemovedSignal an object that can be used to remove the listener when
     * you're done with it.
     */
    -(PPRetailCardRemovedSignal _Nullable)addCardRemovedListener:(PPRetailCardRemovedEvent _Nullable)listener;

    /**
     * Remove a listener for the cardRemoved event given the signal object that was returned from addCardRemovedListener
     */
    -(void)removeCardRemovedListener:(PPRetailCardRemovedSignal _Nullable)listenerToken;


    /**
     * Add a listener for the cardPresented event
     * @returns PPRetailCardPresentedSignal an object that can be used to remove the listener when
     * you're done with it.
     */
    -(PPRetailCardPresentedSignal _Nullable)addCardPresentedListener:(PPRetailCardPresentedEvent _Nullable)listener;

    /**
     * Remove a listener for the cardPresented event given the signal object that was returned from addCardPresentedListener
     */
    -(void)removeCardPresentedListener:(PPRetailCardPresentedSignal _Nullable)listenerToken;


@end
